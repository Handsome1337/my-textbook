import type { ReactElement } from 'react';

function PalindromicSubstrings(): ReactElement {
  return (
    <>
      <p className="mb-2">
        Создадим переменную <code>result</code> со значением <code>0</code>, которую будем
        возвращать из функции. Пройдём циклом по строке.
      </p>
      <p className="mb-2">
        На каждой итерации, для того, чтобы определить, является ли подстрока
        палиндромной, нам потребуются два указателя <code>left</code> и <code>right</code>
        , которые изначально будут указывать на текущий символ.
      </p>
      <p className="mb-2">
        Запустим первый цикл <code>while</code>, который будет искать палиндромные
        подстроки нечётной длины, центром которых является текущий символ. Он будет
        исполняться, пока указатели указывают на одинаковые символы и не вышли за пределы
        строки. На каждой итерации будем увеличивать <code>result</code> и передвигать
        указатели.
      </p>
      <p className="mb-2">
        Для того, чтобы найти палиндромные подстроки чётной длины, центром которых
        являются текущий и следующий символы, переместим указатели <code>left</code> и{' '}
        <code>right</code> на <code>i</code> и <code>i + 1</code> соответственно. После
        этого запустим второй цикл <code>while</code>, который будет исполняться, пока
        указатели указывают на одинаковые символы и не вышли за пределы строки. Логика
        внутри цикла точно такая же, как и в первом цикле <code>while</code>.
      </p>
      <p className="mb-2">
        После прохождения по строке вернём <code>result</code> из функции.
      </p>
    </>
  );
}

export default PalindromicSubstrings;
