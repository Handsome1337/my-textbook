import type { ReactElement } from 'react';

function MaximumTwinSumOfALinkedList(): ReactElement {
  return (
    <>
      <p className="mb-2">
        Создадим три указателя: медленный <code>slow</code>, быстрый <code>fast</code>,
        которые будут указывать на первый узел в списке, и <code>prev</code>, который
        будет указывать на предшествующий <code>slow</code> узел. Также создадим
        переменную <code>result</code>, которую будем возвращать из функции.
      </p>
      <p className="mb-2">
        Пройдём циклом <code>while</code> по списку, передвигая указатели на каждой
        итерации. Быстрый будет двигаться в 2 раза быстрее, чем медленный. Таким образом,
        когда быстрый достигнет конца списка (будет указывать на последний элемент, либо
        выйдет за пределы списка), медленный будет находиться посередине. Однако вместе с
        перемещением будем разворачивать левую половину списка так, чтобы после
        прохождения цикла первый элемент в левой части был последним, а последний —
        первым.
      </p>
      <p className="mb-2">
        После прохождения цикла у нас появляются две половины списка, левая начинается с{' '}
        <code>prev</code>, а правая с <code>slow</code>. Теперь мы можем пройти по ним и
        на каждой итерации рассчитывать сумму, после чего обновлять <code>result</code>,
        если требуется.
      </p>
      <p className="mb-2">
        После того, как мы вышли за пределы половин, вернём из функции <code>result</code>
        .
      </p>
    </>
  );
}

export default MaximumTwinSumOfALinkedList;
