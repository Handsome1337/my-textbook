import type { ReactElement } from 'react';

function DesignLinkedList(): ReactElement {
  return (
    <>
      <p className="mb-2">
        Реализуем двусвязный список. Нам понадобится класс <code>ListNode</code> для
        создания узлов списка. Он будет принимать в себя значение и сохранять его, и иметь
        два указателя <code>prev</code> и <code>next</code>, которые по умолчанию будут
        указывать на <code>null</code>.
      </p>
      <p className="mb-2">
        В конструкторе <code>MyLinkedList</code> создадим два фиктивных узла, на которые
        будут указывать указатели <code>head</code> и <code>tail</code>, свяжем их между
        собой.
      </p>
      <p className="mb-2">
        В методе получения значения <code>get</code> найдём с помощью цикла{' '}
        <code>while</code> нужный узел. Сначала создадим указатель на текущий узел,
        который будет указывать на следующий за фиктивным узлом в <code>this.head</code>,
        и будем перемещать этот указатель, пока не дойдём до переданного индекса, либо не
        выйдем за пределы списка (указатель станет указывать на <code>null</code>). После
        завершения цикла узел, на который указывает <code>currentNode</code>, является
        валидным, если это не фиктивный узел, на который указывает <code>this.tail</code>,
        и <code>index</code> равен нулю. Если узел валидный, возвращаем его значение,
        иначе возвращаем <code>-1</code>.
      </p>
      <p className="mb-2">
        Вставка нового узла в начало или конец списка в методах <code>addAtHead</code> и{' '}
        <code>addAtTail</code> различается только тем, на что ссылаются <code>next</code>{' '}
        и <code>prev</code> для нового узла. Благодаря тому, что у нас всегда есть
        указатели <code>this.head</code> и <code>this.tail</code>, эти операции довольно
        простые.
      </p>
      <p className="mb-2">
        Для добавления узла по индексу в <code>addAtIndex</code> мы ищём узел, который уже
        находится по этому индексу. Делаем это тем же образом, что и в методе{' '}
        <code>get</code>. Если такой узел существует, то создаём новый узел и указатели{' '}
        <code>next</code> и <code>prev</code>, которые указывают на текущий узел по этому
        индексу и узел перед ним. Затем также добавляем новый узел в список, связывая узлы
        аналогичным с <code>addAtHead</code> и <code>addAtTail</code> способом.
      </p>
      <p className="mb-2">
        Наконец для удаления узла в <code>deleteAtIndex</code> знакомым способом ищем узел
        по индексу. Если узел есть, и на него не указывает <code>this.tail</code> (это
        важно, поскольку <code>this.tail</code> - фиктивный узел и нам не надо его
        удалять), то удаляем его из списка, переместив указатели предыдущего и следующего
        узлов.
      </p>
    </>
  );
}

export default DesignLinkedList;
