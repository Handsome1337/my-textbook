import type { ReactElement } from 'react';

function InsertIntoABinarySearchTree(): ReactElement {
  return (
    <>
      <p className="mb-2">
        Воспользуемся рекурсией для решения этой задачи. Базовым случаем будет являться
        ситуация, при которой переданный корень равен <code>null</code> — в таком случае
        создаём узел вставленного значения и возвращаем его.
      </p>
      <p className="mb-2">
        Пройдём по нашему дереву. На каждом уровне рекурсии проверяем, как соотносятся
        вставляемое значение и значение текущего узла. Если вставляемое значение больше
        значения текущего узла, то рекурсивно вставляем это значение в правое поддерево
        текущего узла, иначе — в левое. Когда поддерева не будет существовать, это
        приведёт к базовому случаю.
      </p>
      <p className="mb-2">
        Возвращаем из функции <code>root</code>, чтобы на предыдущем уровне рекурсии мы
        могли сохранить получившееся поддерево.
      </p>
    </>
  );
}

export default InsertIntoABinarySearchTree;
