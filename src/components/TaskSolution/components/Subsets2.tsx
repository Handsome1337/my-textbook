import type { ReactElement } from 'react';

function Subsets2(): ReactElement {
  return (
    <>
      <p className="mb-2">
        Для каждого числа у нас есть два пути развития: либо мы включаем его в
        подмножество, либо не включаем. Однако, поскольку числа в множестве не уникальны,
        во втором пути нам надо будет не включать сразу несколько чисел (чтобы в итоге у
        нас не получились одинаковые подмножества). А так как эти одинаковые числа могут
        находиться в несмежных индексах, перед решением задачи будет удобно отсортировать{' '}
        <code>nums</code>.
      </p>
      <p className="mb-2">
        Наша вспомогательная рекурсивная функция <code>backtracking</code> будет принимать
        в себя индекс. Базовый случай, когда индекс больше либо равен длине массива{' '}
        <code>nums</code>, будет добавлять в <code>result</code> копию текущего
        подмножества.
      </p>
      <p className="mb-2">
        После того, как мы добавили число в подмножество, мы рекурсивно вызываем{' '}
        <code>backtracking</code> для следующего числа. Теперь, чтобы рассмотреть второй
        путь, нам нужно удалить текущее число из подмножества, которое мы добавили при
        рассмотрении первого пути. Однако, прежде чем повторить вызов для следующего
        числа, нам необходимо пропустить все дубликаты текущего числа. Для этого в цикле{' '}
        <code>while</code> будем передвигать указатель <code>i</code>, если следующее
        число равно текущему числу и следующее число существует в массиве.
      </p>
      <p className="mb-2">
        Таким образом, вызовем <code>backtracking</code> для первого элемента, после чего
        мы можем вернуть <code>result</code>.
      </p>
    </>
  );
}

export default Subsets2;
