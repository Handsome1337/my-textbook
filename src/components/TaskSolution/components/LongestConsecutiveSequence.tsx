import type { ReactElement } from 'react';

function LongestConsecutiveSequence(): ReactElement {
  return (
    <>
      <p className="mb-2">
        Для того, чтобы проверка наличия предыдущего или следующего числа
        последовательности для любого числа в массиве занимала <i>O</i>(1) по времени, нам
        необходимо создать <code>Set</code>. Создадим также переменную{' '}
        <code>longest = 0</code>, которая будет хранить значение самой длинной
        последовательности.
      </p>
      <p className="mb-2">
        Пройдём циклом по массиву. На каждой итерации проверяем, является ли число началом
        последовательности. Если в <code>numSet</code> нет числа <code>num - 1</code>, то
        тогда <code>num</code> является началом последовательности.
      </p>
      <p className="mb-2">
        Создадим переменную <code>length</code>, в которой будем хранить длину текущей
        последовательности. Затем запустим вложенный цикл <code>while</code>, который
        будет работать, пока следующее число последовательности существует в{' '}
        <code>numSet</code>. На каждой итерации вложенного цикла увеличиваем{' '}
        <code>length</code>. Когда следующего числа последовательности не существует,
        обновляем <code>longest</code>, если текущая последовательность длинее{' '}
        <code>longest</code>.
      </p>
      <p className="mb-2">
        После прохождения по массиву вернём <code>longest</code> из функции.
      </p>
    </>
  );
}

export default LongestConsecutiveSequence;
