import type { ReactElement } from 'react';

function HouseRobber2(): ReactElement {
  return (
    <>
      <p className="mb-2">
        Создадим вспомогательную функцию <code>helper</code>, которая будет принимать в
        себя два индекса <code>start</code> и <code>end</code>, а внутри неё — переменные{' '}
        <code>rob1</code> и <code>rob2</code>, которые будут указывать на максимальное
        количество денег, которое можно украсть из домов по индексам <i>n</i> - 2 и{' '}
        <i>n</i> - 1 соответственно (можно представить, что дома идут так:{' '}
        <code>rob1</code>, <code>rob2</code>, <i>n</i>, <i>n</i> + 1, ...).
      </p>
      <p className="mb-2">
        Пройдём циклом от <code>start</code> до <code>end</code> по домам. На каждой
        итерации будем обновлять <code>rob1</code> и <code>rob2</code>. В{' '}
        <code>rob1</code> запишем <code>rob2</code>, а в <code>rob2</code> — большее из
        суммы <code>rob1</code> с текущим числом и <code>rob2</code>. После того, как цикл
        пройдёт полностью, в <code>rob2</code> будет лежать максимальное количество денег,
        которое мы можем украсть, вернём <code>rob2</code> из вспомогательной функции.
      </p>
      <p className="mb-2">
        Для того, чтобы рассчитать максимум, нам необходимо вызвать <code>helper</code>{' '}
        два раза: в одном случае мы не будем учитывать последний дом, а в другом — первый
        дом, и вернуть максимальное значение, возвращаемое из этих двух вызовов. Однако
        если существует всего один дом, то <code>helper</code> будет возвращать{' '}
        <code>0</code>, поэтому добавим в <code>Math.max</code> к вызовам{' '}
        <code>helper</code> значение первого дома.
      </p>
    </>
  );
}

export default HouseRobber2;
