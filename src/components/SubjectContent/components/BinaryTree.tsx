import binaryTree1 from 'assets/binary-tree1.png?url';
import binaryTree2 from 'assets/binary-tree2.png?url';
import binaryTree3 from 'assets/binary-tree3.png?url';
import binaryTree4 from 'assets/binary-tree4.png?url';
import { Code } from 'components/Code';
import type { ReactElement } from 'react';

const BINARY_TREE = `class TreeNode {
    left = null;
    right = null;

    constructor(val) {
        this.val = val; 
    }
}`;

function BinaryTree(): ReactElement {
  return (
    <>
      <p className="mb-2">
        Бинарное дерево — это ещё одна структура данных, включающая узлы и указатели. Мы
        говорили об узлах в статьях, посвящённых связным спискам. Мы соединяли эти узлы
        прямой линией с помощью указателей <code>next</code> и <code>prev</code>. Узлы в
        бинарном дереве также имеют не более двух указателей, но мы называем их{' '}
        <strong>левым дочерним</strong> (<strong>left child</strong>) и{' '}
        <strong>правым дочерним</strong> (<strong>right child</strong>) указателями.
        Первый узел бинарного дерева называется <strong>корневым</strong> (
        <strong>root</strong>) узлом. Вместо прямой линии мы рисуем указатели вниз.
      </p>
      <p className="mb-2">
        Значение узла может быть любым типом данных. Класс <code>TreeNode</code> будет
        выглядеть следующим образом. Обратите внимание, насколько реализация похожа на{' '}
        <code>ListNode</code>, обсуждавшийся в статье о связных списках, за исключением
        того, что теперь у нас есть <code>left</code> и <code>right</code>.
      </p>
      <Code value={BINARY_TREE} />
      <p className="mb-2">
        Если у узла нет дочерних узлов, он классифицируется как <strong>листовой</strong>{' '}
        (<strong>leaf</strong>) узел. Если у узла есть хотя бы один дочерний узел, левый
        или правый, он будет классифицироваться как <strong>нелистовой</strong> (
        <strong>non-leaf</strong>) узел.
      </p>
      <p className="mb-2">
        В отличие от связных списков, указатели бинарного дерева могут указывать только в
        одном направлении. Таким образом, в бинарных деревьях не допускаются циклы. С
        математической точки зрения бинарное дерево представляет собой неориентированный
        граф без циклов. Это означает, что листовой узел всегда гарантированно существует.
      </p>
      <p className="mb-2">
        <strong>
          То же самое относится и к деревьям решений, которые используются в рекурсии.
        </strong>
      </p>
      <p className="mb-2">
        В следующем разделе показано, как строятся бинарные деревья, и их терминология,
        которая имеет решающее значение для понимания проблем с бинарными деревьями.
      </p>
      <h2 className="font-bold my-2">Свойства</h2>
      <ul className="mb-2">
        <li className="mb-2">
          <strong>Корневой узел</strong>
          <p>
            Корневой узел является самым высоким узлом в дереве и не имеет родительского
            узла. Ко всем узлам дерева можно получить доступ через корневой узел.
          </p>
        </li>
        <li>
          <strong>Листовые узлы</strong>
          <p className="mb-2">
            Листовые узлы — это узлы без дочерних элементов. Узлы на последнем уровне
            дерева гарантированно являются листовыми узлами, но их также можно найти на
            других уровнях.
          </p>
          <figure className="bg-white mb-2">
            <img
              alt="Корневой и листовые узлы"
              className="mx-auto"
              height="459"
              src={binaryTree1}
              width="660"
            />
          </figure>
        </li>
        <li>
          <strong>Дети</strong>
          <p className="mb-2">Детьми узла являются его левый и правый дочерние узлы.</p>
          <figure className="bg-white mb-2">
            <img
              alt="Родительский и дочерние узлы"
              className="mx-auto"
              height="459"
              src={binaryTree2}
              width="720"
            />
          </figure>
        </li>
        <li className="mb-2">
          <strong>Высота</strong> (<strong>Height</strong>)
          <p className="mb-2">
            Высота бинарного дерева измеряется от корневого узла до самого нижнего
            листового узла, как и высота чего-либо в реальной жизни. Высота дерева из
            одного узла составляет <code>1</code>, если учитывается сам узел, или{' '}
            <code>0</code>, если нет.
          </p>
          <p className="mb-2">
            Иногда высота считается по количеству рёбер, находящихся между узлами, а не по
            самим узлам. Используя этот метод, высота будет равна <code>n - 1</code>, где{' '}
            <code>n</code> — количество узлов на пути от корня до самого нижнего листа.
          </p>
          <p className="mb-2">
            Максимальная высота бинарного дерева, данного на изображении ниже, равна{' '}
            <code>3</code>. Альтернативно, если бы мы считали по рёбрам, а не по узлам,
            высота была бы равна <code>2</code>.
          </p>
          <p>
            <strong>
              Количество рёбер в дереве равно{' '}
              <code>
                <i>n</i> - 1
              </code>
              , где{' '}
              <code>
                <i>n</i>
              </code>{' '}
              — количество узлов.
            </strong>
          </p>
        </li>
        <li>
          <strong>Глубина</strong> (<strong>Depth</strong>)
          <p className="mb-2">
            Глубина узла бинарного дерева измеряется от него самого до корня. Как видно на
            рисунке ниже, глубина в корневом узле равна <code>1</code>, причём по мере
            спуска она увеличивается. Измерить глубину в определённом узле можно
            посмотрев, сколько узлов находится над ним, включая сам узел.
          </p>
          <figure className="bg-white mb-2">
            <img
              alt="Высота и глубина бинарного дерева"
              className="mx-auto"
              height="459"
              src={binaryTree3}
              width="1180"
            />
          </figure>
        </li>
        <li className="mb-2">
          <strong>Предок</strong> (<strong>Ancestor</strong>)
          <p>
            Узел, соединённый со всеми узлами ниже него, считается предком этих узлов.
          </p>
        </li>
        <li>
          <strong>Потомок</strong> (<strong>Descendent</strong>)
          <p className="mb-2">
            Потомком узла является либо дочерний элемент узла, либо дочерний элемент
            какого-либо другого потомка узла.
          </p>
          <figure className="bg-white mb-2">
            <img
              alt="Предок и потомки"
              className="mx-auto"
              height="459"
              src={binaryTree4}
              width="630"
            />
          </figure>
        </li>
      </ul>
      <h2 className="font-bold my-2">Итоги</h2>
      <p className="mb-2">
        Хотя большая часть этой статьи посвящена определениям, эти термины имеют
        основополагающее значение для понимания, когда дело доходит до решения задач о
        бинарных деревьях, и они помогут нам в последующих статьях.
      </p>
    </>
  );
}

export default BinaryTree;
