function c0(t,n){for(var r=0;r<n.length;r++){const s=n[r];if(typeof s!="string"&&!Array.isArray(s)){for(const i in s)if(i!=="default"&&!(i in t)){const a=Object.getOwnPropertyDescriptor(s,i);a&&Object.defineProperty(t,i,a.get?a:{enumerable:!0,get:()=>s[i]})}}}return Object.freeze(Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}))}(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const a of i)if(a.type==="childList")for(const o of a.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function r(i){const a={};return i.integrity&&(a.integrity=i.integrity),i.referrerPolicy&&(a.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?a.credentials="include":i.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function s(i){if(i.ep)return;i.ep=!0;const a=r(i);fetch(i.href,a)}})();function Vs(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}var d0={exports:{}},yl={},u0={exports:{}},de={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Ea=Symbol.for("react.element"),JS=Symbol.for("react.portal"),eN=Symbol.for("react.fragment"),tN=Symbol.for("react.strict_mode"),nN=Symbol.for("react.profiler"),rN=Symbol.for("react.provider"),sN=Symbol.for("react.context"),iN=Symbol.for("react.forward_ref"),aN=Symbol.for("react.suspense"),oN=Symbol.for("react.memo"),lN=Symbol.for("react.lazy"),Kg=Symbol.iterator;function cN(t){return t===null||typeof t!="object"?null:(t=Kg&&t[Kg]||t["@@iterator"],typeof t=="function"?t:null)}var h0={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},p0=Object.assign,m0={};function Ks(t,n,r){this.props=t,this.context=n,this.refs=m0,this.updater=r||h0}Ks.prototype.isReactComponent={};Ks.prototype.setState=function(t,n){if(typeof t!="object"&&typeof t!="function"&&t!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,t,n,"setState")};Ks.prototype.forceUpdate=function(t){this.updater.enqueueForceUpdate(this,t,"forceUpdate")};function f0(){}f0.prototype=Ks.prototype;function ku(t,n,r){this.props=t,this.context=n,this.refs=m0,this.updater=r||h0}var Lu=ku.prototype=new f0;Lu.constructor=ku;p0(Lu,Ks.prototype);Lu.isPureReactComponent=!0;var Yg=Array.isArray,g0=Object.prototype.hasOwnProperty,Du={current:null},b0={key:!0,ref:!0,__self:!0,__source:!0};function x0(t,n,r){var s,i={},a=null,o=null;if(n!=null)for(s in n.ref!==void 0&&(o=n.ref),n.key!==void 0&&(a=""+n.key),n)g0.call(n,s)&&!b0.hasOwnProperty(s)&&(i[s]=n[s]);var l=arguments.length-2;if(l===1)i.children=r;else if(1<l){for(var c=Array(l),d=0;d<l;d++)c[d]=arguments[d+2];i.children=c}if(t&&t.defaultProps)for(s in l=t.defaultProps,l)i[s]===void 0&&(i[s]=l[s]);return{$$typeof:Ea,type:t,key:a,ref:o,props:i,_owner:Du.current}}function dN(t,n){return{$$typeof:Ea,type:t.type,key:n,ref:t.ref,props:t.props,_owner:t._owner}}function Mu(t){return typeof t=="object"&&t!==null&&t.$$typeof===Ea}function uN(t){var n={"=":"=0",":":"=2"};return"$"+t.replace(/[=:]/g,function(r){return n[r]})}var qg=/\/+/g;function yc(t,n){return typeof t=="object"&&t!==null&&t.key!=null?uN(""+t.key):n.toString(36)}function jo(t,n,r,s,i){var a=typeof t;(a==="undefined"||a==="boolean")&&(t=null);var o=!1;if(t===null)o=!0;else switch(a){case"string":case"number":o=!0;break;case"object":switch(t.$$typeof){case Ea:case JS:o=!0}}if(o)return o=t,i=i(o),t=s===""?"."+yc(o,0):s,Yg(i)?(r="",t!=null&&(r=t.replace(qg,"$&/")+"/"),jo(i,n,r,"",function(d){return d})):i!=null&&(Mu(i)&&(i=dN(i,r+(!i.key||o&&o.key===i.key?"":(""+i.key).replace(qg,"$&/")+"/")+t)),n.push(i)),1;if(o=0,s=s===""?".":s+":",Yg(t))for(var l=0;l<t.length;l++){a=t[l];var c=s+yc(a,l);o+=jo(a,n,r,c,i)}else if(c=cN(t),typeof c=="function")for(t=c.call(t),l=0;!(a=t.next()).done;)a=a.value,c=s+yc(a,l++),o+=jo(a,n,r,c,i);else if(a==="object")throw n=String(t),Error("Objects are not valid as a React child (found: "+(n==="[object Object]"?"object with keys {"+Object.keys(t).join(", ")+"}":n)+"). If you meant to render a collection of children, use an array instead.");return o}function Ha(t,n,r){if(t==null)return t;var s=[],i=0;return jo(t,s,"","",function(a){return n.call(r,a,i++)}),s}function hN(t){if(t._status===-1){var n=t._result;n=n(),n.then(function(r){(t._status===0||t._status===-1)&&(t._status=1,t._result=r)},function(r){(t._status===0||t._status===-1)&&(t._status=2,t._result=r)}),t._status===-1&&(t._status=0,t._result=n)}if(t._status===1)return t._result.default;throw t._result}var bt={current:null},Ao={transition:null},pN={ReactCurrentDispatcher:bt,ReactCurrentBatchConfig:Ao,ReactCurrentOwner:Du};de.Children={map:Ha,forEach:function(t,n,r){Ha(t,function(){n.apply(this,arguments)},r)},count:function(t){var n=0;return Ha(t,function(){n++}),n},toArray:function(t){return Ha(t,function(n){return n})||[]},only:function(t){if(!Mu(t))throw Error("React.Children.only expected to receive a single React element child.");return t}};de.Component=Ks;de.Fragment=eN;de.Profiler=nN;de.PureComponent=ku;de.StrictMode=tN;de.Suspense=aN;de.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=pN;de.cloneElement=function(t,n,r){if(t==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+t+".");var s=p0({},t.props),i=t.key,a=t.ref,o=t._owner;if(n!=null){if(n.ref!==void 0&&(a=n.ref,o=Du.current),n.key!==void 0&&(i=""+n.key),t.type&&t.type.defaultProps)var l=t.type.defaultProps;for(c in n)g0.call(n,c)&&!b0.hasOwnProperty(c)&&(s[c]=n[c]===void 0&&l!==void 0?l[c]:n[c])}var c=arguments.length-2;if(c===1)s.children=r;else if(1<c){l=Array(c);for(var d=0;d<c;d++)l[d]=arguments[d+2];s.children=l}return{$$typeof:Ea,type:t.type,key:i,ref:a,props:s,_owner:o}};de.createContext=function(t){return t={$$typeof:sN,_currentValue:t,_currentValue2:t,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},t.Provider={$$typeof:rN,_context:t},t.Consumer=t};de.createElement=x0;de.createFactory=function(t){var n=x0.bind(null,t);return n.type=t,n};de.createRef=function(){return{current:null}};de.forwardRef=function(t){return{$$typeof:iN,render:t}};de.isValidElement=Mu;de.lazy=function(t){return{$$typeof:lN,_payload:{_status:-1,_result:t},_init:hN}};de.memo=function(t,n){return{$$typeof:oN,type:t,compare:n===void 0?null:n}};de.startTransition=function(t){var n=Ao.transition;Ao.transition={};try{t()}finally{Ao.transition=n}};de.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")};de.useCallback=function(t,n){return bt.current.useCallback(t,n)};de.useContext=function(t){return bt.current.useContext(t)};de.useDebugValue=function(){};de.useDeferredValue=function(t){return bt.current.useDeferredValue(t)};de.useEffect=function(t,n){return bt.current.useEffect(t,n)};de.useId=function(){return bt.current.useId()};de.useImperativeHandle=function(t,n,r){return bt.current.useImperativeHandle(t,n,r)};de.useInsertionEffect=function(t,n){return bt.current.useInsertionEffect(t,n)};de.useLayoutEffect=function(t,n){return bt.current.useLayoutEffect(t,n)};de.useMemo=function(t,n){return bt.current.useMemo(t,n)};de.useReducer=function(t,n,r){return bt.current.useReducer(t,n,r)};de.useRef=function(t){return bt.current.useRef(t)};de.useState=function(t){return bt.current.useState(t)};de.useSyncExternalStore=function(t,n,r){return bt.current.useSyncExternalStore(t,n,r)};de.useTransition=function(){return bt.current.useTransition()};de.version="18.2.0";u0.exports=de;var M=u0.exports;const Fu=Vs(M),mN=c0({__proto__:null,default:Fu},[M]);/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var fN=M,gN=Symbol.for("react.element"),bN=Symbol.for("react.fragment"),xN=Object.prototype.hasOwnProperty,EN=fN.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,TN={key:!0,ref:!0,__self:!0,__source:!0};function E0(t,n,r){var s,i={},a=null,o=null;r!==void 0&&(a=""+r),n.key!==void 0&&(a=""+n.key),n.ref!==void 0&&(o=n.ref);for(s in n)xN.call(n,s)&&!TN.hasOwnProperty(s)&&(i[s]=n[s]);if(t&&t.defaultProps)for(s in n=t.defaultProps,n)i[s]===void 0&&(i[s]=n[s]);return{$$typeof:gN,type:t,key:a,ref:o,props:i,_owner:EN.current}}yl.Fragment=bN;yl.jsx=E0;yl.jsxs=E0;d0.exports=yl;var e=d0.exports,jd={},T0={exports:{}},Lt={},y0={exports:{}},S0={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(t){function n($,Y){var q=$.length;$.push(Y);e:for(;0<q;){var he=q-1>>>1,ge=$[he];if(0<i(ge,Y))$[he]=Y,$[q]=ge,q=he;else break e}}function r($){return $.length===0?null:$[0]}function s($){if($.length===0)return null;var Y=$[0],q=$.pop();if(q!==Y){$[0]=q;e:for(var he=0,ge=$.length,Et=ge>>>1;he<Et;){var pt=2*(he+1)-1,Nr=$[pt],Sn=pt+1,ss=$[Sn];if(0>i(Nr,q))Sn<ge&&0>i(ss,Nr)?($[he]=ss,$[Sn]=q,he=Sn):($[he]=Nr,$[pt]=q,he=pt);else if(Sn<ge&&0>i(ss,q))$[he]=ss,$[Sn]=q,he=Sn;else break e}}return Y}function i($,Y){var q=$.sortIndex-Y.sortIndex;return q!==0?q:$.id-Y.id}if(typeof performance=="object"&&typeof performance.now=="function"){var a=performance;t.unstable_now=function(){return a.now()}}else{var o=Date,l=o.now();t.unstable_now=function(){return o.now()-l}}var c=[],d=[],h=1,x=null,g=3,A=!1,S=!1,y=!1,_=typeof setTimeout=="function"?setTimeout:null,f=typeof clearTimeout=="function"?clearTimeout:null,b=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function T($){for(var Y=r(d);Y!==null;){if(Y.callback===null)s(d);else if(Y.startTime<=$)s(d),Y.sortIndex=Y.expirationTime,n(c,Y);else break;Y=r(d)}}function E($){if(y=!1,T($),!S)if(r(c)!==null)S=!0,Qe(R);else{var Y=r(d);Y!==null&&Oe(E,Y.startTime-$)}}function R($,Y){S=!1,y&&(y=!1,f(O),O=-1),A=!0;var q=g;try{for(T(Y),x=r(c);x!==null&&(!(x.expirationTime>Y)||$&&!J());){var he=x.callback;if(typeof he=="function"){x.callback=null,g=x.priorityLevel;var ge=he(x.expirationTime<=Y);Y=t.unstable_now(),typeof ge=="function"?x.callback=ge:x===r(c)&&s(c),T(Y)}else s(c);x=r(c)}if(x!==null)var Et=!0;else{var pt=r(d);pt!==null&&Oe(E,pt.startTime-Y),Et=!1}return Et}finally{x=null,g=q,A=!1}}var I=!1,v=null,O=-1,F=5,H=-1;function J(){return!(t.unstable_now()-H<F)}function X(){if(v!==null){var $=t.unstable_now();H=$;var Y=!0;try{Y=v(!0,$)}finally{Y?ie():(I=!1,v=null)}}else I=!1}var ie;if(typeof b=="function")ie=function(){b(X)};else if(typeof MessageChannel<"u"){var Me=new MessageChannel,ue=Me.port2;Me.port1.onmessage=X,ie=function(){ue.postMessage(null)}}else ie=function(){_(X,0)};function Qe($){v=$,I||(I=!0,ie())}function Oe($,Y){O=_(function(){$(t.unstable_now())},Y)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function($){$.callback=null},t.unstable_continueExecution=function(){S||A||(S=!0,Qe(R))},t.unstable_forceFrameRate=function($){0>$||125<$?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):F=0<$?Math.floor(1e3/$):5},t.unstable_getCurrentPriorityLevel=function(){return g},t.unstable_getFirstCallbackNode=function(){return r(c)},t.unstable_next=function($){switch(g){case 1:case 2:case 3:var Y=3;break;default:Y=g}var q=g;g=Y;try{return $()}finally{g=q}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function($,Y){switch($){case 1:case 2:case 3:case 4:case 5:break;default:$=3}var q=g;g=$;try{return Y()}finally{g=q}},t.unstable_scheduleCallback=function($,Y,q){var he=t.unstable_now();switch(typeof q=="object"&&q!==null?(q=q.delay,q=typeof q=="number"&&0<q?he+q:he):q=he,$){case 1:var ge=-1;break;case 2:ge=250;break;case 5:ge=1073741823;break;case 4:ge=1e4;break;default:ge=5e3}return ge=q+ge,$={id:h++,callback:Y,priorityLevel:$,startTime:q,expirationTime:ge,sortIndex:-1},q>he?($.sortIndex=q,n(d,$),r(c)===null&&$===r(d)&&(y?(f(O),O=-1):y=!0,Oe(E,q-he))):($.sortIndex=ge,n(c,$),S||A||(S=!0,Qe(R))),$},t.unstable_shouldYield=J,t.unstable_wrapCallback=function($){var Y=g;return function(){var q=g;g=Y;try{return $.apply(this,arguments)}finally{g=q}}}})(S0);y0.exports=S0;var yN=y0.exports;/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var N0=M,kt=yN;function P(t){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+t,r=1;r<arguments.length;r++)n+="&args[]="+encodeURIComponent(arguments[r]);return"Minified React error #"+t+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var j0=new Set,Ji={};function Kr(t,n){Ps(t,n),Ps(t+"Capture",n)}function Ps(t,n){for(Ji[t]=n,t=0;t<n.length;t++)j0.add(n[t])}var Dn=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),Ad=Object.prototype.hasOwnProperty,SN=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,Xg={},Zg={};function NN(t){return Ad.call(Zg,t)?!0:Ad.call(Xg,t)?!1:SN.test(t)?Zg[t]=!0:(Xg[t]=!0,!1)}function jN(t,n,r,s){if(r!==null&&r.type===0)return!1;switch(typeof n){case"function":case"symbol":return!0;case"boolean":return s?!1:r!==null?!r.acceptsBooleans:(t=t.toLowerCase().slice(0,5),t!=="data-"&&t!=="aria-");default:return!1}}function AN(t,n,r,s){if(n===null||typeof n>"u"||jN(t,n,r,s))return!0;if(s)return!1;if(r!==null)switch(r.type){case 3:return!n;case 4:return n===!1;case 5:return isNaN(n);case 6:return isNaN(n)||1>n}return!1}function xt(t,n,r,s,i,a,o){this.acceptsBooleans=n===2||n===3||n===4,this.attributeName=s,this.attributeNamespace=i,this.mustUseProperty=r,this.propertyName=t,this.type=n,this.sanitizeURL=a,this.removeEmptyString=o}var st={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(t){st[t]=new xt(t,0,!1,t,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(t){var n=t[0];st[n]=new xt(n,1,!1,t[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(t){st[t]=new xt(t,2,!1,t.toLowerCase(),null,!1,!1)});["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(t){st[t]=new xt(t,2,!1,t,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(t){st[t]=new xt(t,3,!1,t.toLowerCase(),null,!1,!1)});["checked","multiple","muted","selected"].forEach(function(t){st[t]=new xt(t,3,!0,t,null,!1,!1)});["capture","download"].forEach(function(t){st[t]=new xt(t,4,!1,t,null,!1,!1)});["cols","rows","size","span"].forEach(function(t){st[t]=new xt(t,6,!1,t,null,!1,!1)});["rowSpan","start"].forEach(function(t){st[t]=new xt(t,5,!1,t.toLowerCase(),null,!1,!1)});var Pu=/[\-:]([a-z])/g;function Uu(t){return t[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(t){var n=t.replace(Pu,Uu);st[n]=new xt(n,1,!1,t,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(t){var n=t.replace(Pu,Uu);st[n]=new xt(n,1,!1,t,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(t){var n=t.replace(Pu,Uu);st[n]=new xt(n,1,!1,t,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(t){st[t]=new xt(t,1,!1,t.toLowerCase(),null,!1,!1)});st.xlinkHref=new xt("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(t){st[t]=new xt(t,1,!1,t.toLowerCase(),null,!0,!0)});function Bu(t,n,r,s){var i=st.hasOwnProperty(n)?st[n]:null;(i!==null?i.type!==0:s||!(2<n.length)||n[0]!=="o"&&n[0]!=="O"||n[1]!=="n"&&n[1]!=="N")&&(AN(n,r,i,s)&&(r=null),s||i===null?NN(n)&&(r===null?t.removeAttribute(n):t.setAttribute(n,""+r)):i.mustUseProperty?t[i.propertyName]=r===null?i.type===3?!1:"":r:(n=i.attributeName,s=i.attributeNamespace,r===null?t.removeAttribute(n):(i=i.type,r=i===3||i===4&&r===!0?"":""+r,s?t.setAttributeNS(s,n,r):t.setAttribute(n,r))))}var Bn=N0.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,Ga=Symbol.for("react.element"),fs=Symbol.for("react.portal"),gs=Symbol.for("react.fragment"),Hu=Symbol.for("react.strict_mode"),_d=Symbol.for("react.profiler"),A0=Symbol.for("react.provider"),_0=Symbol.for("react.context"),Gu=Symbol.for("react.forward_ref"),vd=Symbol.for("react.suspense"),Rd=Symbol.for("react.suspense_list"),$u=Symbol.for("react.memo"),er=Symbol.for("react.lazy"),v0=Symbol.for("react.offscreen"),Qg=Symbol.iterator;function ci(t){return t===null||typeof t!="object"?null:(t=Qg&&t[Qg]||t["@@iterator"],typeof t=="function"?t:null)}var Ce=Object.assign,Sc;function Ii(t){if(Sc===void 0)try{throw Error()}catch(r){var n=r.stack.trim().match(/\n( *(at )?)/);Sc=n&&n[1]||""}return`
`+Sc+t}var Nc=!1;function jc(t,n){if(!t||Nc)return"";Nc=!0;var r=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(n)if(n=function(){throw Error()},Object.defineProperty(n.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(n,[])}catch(d){var s=d}Reflect.construct(t,[],n)}else{try{n.call()}catch(d){s=d}t.call(n.prototype)}else{try{throw Error()}catch(d){s=d}t()}}catch(d){if(d&&s&&typeof d.stack=="string"){for(var i=d.stack.split(`
`),a=s.stack.split(`
`),o=i.length-1,l=a.length-1;1<=o&&0<=l&&i[o]!==a[l];)l--;for(;1<=o&&0<=l;o--,l--)if(i[o]!==a[l]){if(o!==1||l!==1)do if(o--,l--,0>l||i[o]!==a[l]){var c=`
`+i[o].replace(" at new "," at ");return t.displayName&&c.includes("<anonymous>")&&(c=c.replace("<anonymous>",t.displayName)),c}while(1<=o&&0<=l);break}}}finally{Nc=!1,Error.prepareStackTrace=r}return(t=t?t.displayName||t.name:"")?Ii(t):""}function _N(t){switch(t.tag){case 5:return Ii(t.type);case 16:return Ii("Lazy");case 13:return Ii("Suspense");case 19:return Ii("SuspenseList");case 0:case 2:case 15:return t=jc(t.type,!1),t;case 11:return t=jc(t.type.render,!1),t;case 1:return t=jc(t.type,!0),t;default:return""}}function wd(t){if(t==null)return null;if(typeof t=="function")return t.displayName||t.name||null;if(typeof t=="string")return t;switch(t){case gs:return"Fragment";case fs:return"Portal";case _d:return"Profiler";case Hu:return"StrictMode";case vd:return"Suspense";case Rd:return"SuspenseList"}if(typeof t=="object")switch(t.$$typeof){case _0:return(t.displayName||"Context")+".Consumer";case A0:return(t._context.displayName||"Context")+".Provider";case Gu:var n=t.render;return t=t.displayName,t||(t=n.displayName||n.name||"",t=t!==""?"ForwardRef("+t+")":"ForwardRef"),t;case $u:return n=t.displayName||null,n!==null?n:wd(t.type)||"Memo";case er:n=t._payload,t=t._init;try{return wd(t(n))}catch{}}return null}function vN(t){var n=t.type;switch(t.tag){case 24:return"Cache";case 9:return(n.displayName||"Context")+".Consumer";case 10:return(n._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return t=n.render,t=t.displayName||t.name||"",n.displayName||(t!==""?"ForwardRef("+t+")":"ForwardRef");case 7:return"Fragment";case 5:return n;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return wd(n);case 8:return n===Hu?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof n=="function")return n.displayName||n.name||null;if(typeof n=="string")return n}return null}function fr(t){switch(typeof t){case"boolean":case"number":case"string":case"undefined":return t;case"object":return t;default:return""}}function R0(t){var n=t.type;return(t=t.nodeName)&&t.toLowerCase()==="input"&&(n==="checkbox"||n==="radio")}function RN(t){var n=R0(t)?"checked":"value",r=Object.getOwnPropertyDescriptor(t.constructor.prototype,n),s=""+t[n];if(!t.hasOwnProperty(n)&&typeof r<"u"&&typeof r.get=="function"&&typeof r.set=="function"){var i=r.get,a=r.set;return Object.defineProperty(t,n,{configurable:!0,get:function(){return i.call(this)},set:function(o){s=""+o,a.call(this,o)}}),Object.defineProperty(t,n,{enumerable:r.enumerable}),{getValue:function(){return s},setValue:function(o){s=""+o},stopTracking:function(){t._valueTracker=null,delete t[n]}}}}function $a(t){t._valueTracker||(t._valueTracker=RN(t))}function w0(t){if(!t)return!1;var n=t._valueTracker;if(!n)return!0;var r=n.getValue(),s="";return t&&(s=R0(t)?t.checked?"true":"false":t.value),t=s,t!==r?(n.setValue(t),!0):!1}function Go(t){if(t=t||(typeof document<"u"?document:void 0),typeof t>"u")return null;try{return t.activeElement||t.body}catch{return t.body}}function Id(t,n){var r=n.checked;return Ce({},n,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:r??t._wrapperState.initialChecked})}function Jg(t,n){var r=n.defaultValue==null?"":n.defaultValue,s=n.checked!=null?n.checked:n.defaultChecked;r=fr(n.value!=null?n.value:r),t._wrapperState={initialChecked:s,initialValue:r,controlled:n.type==="checkbox"||n.type==="radio"?n.checked!=null:n.value!=null}}function I0(t,n){n=n.checked,n!=null&&Bu(t,"checked",n,!1)}function Cd(t,n){I0(t,n);var r=fr(n.value),s=n.type;if(r!=null)s==="number"?(r===0&&t.value===""||t.value!=r)&&(t.value=""+r):t.value!==""+r&&(t.value=""+r);else if(s==="submit"||s==="reset"){t.removeAttribute("value");return}n.hasOwnProperty("value")?Od(t,n.type,r):n.hasOwnProperty("defaultValue")&&Od(t,n.type,fr(n.defaultValue)),n.checked==null&&n.defaultChecked!=null&&(t.defaultChecked=!!n.defaultChecked)}function eb(t,n,r){if(n.hasOwnProperty("value")||n.hasOwnProperty("defaultValue")){var s=n.type;if(!(s!=="submit"&&s!=="reset"||n.value!==void 0&&n.value!==null))return;n=""+t._wrapperState.initialValue,r||n===t.value||(t.value=n),t.defaultValue=n}r=t.name,r!==""&&(t.name=""),t.defaultChecked=!!t._wrapperState.initialChecked,r!==""&&(t.name=r)}function Od(t,n,r){(n!=="number"||Go(t.ownerDocument)!==t)&&(r==null?t.defaultValue=""+t._wrapperState.initialValue:t.defaultValue!==""+r&&(t.defaultValue=""+r))}var Ci=Array.isArray;function ws(t,n,r,s){if(t=t.options,n){n={};for(var i=0;i<r.length;i++)n["$"+r[i]]=!0;for(r=0;r<t.length;r++)i=n.hasOwnProperty("$"+t[r].value),t[r].selected!==i&&(t[r].selected=i),i&&s&&(t[r].defaultSelected=!0)}else{for(r=""+fr(r),n=null,i=0;i<t.length;i++){if(t[i].value===r){t[i].selected=!0,s&&(t[i].defaultSelected=!0);return}n!==null||t[i].disabled||(n=t[i])}n!==null&&(n.selected=!0)}}function kd(t,n){if(n.dangerouslySetInnerHTML!=null)throw Error(P(91));return Ce({},n,{value:void 0,defaultValue:void 0,children:""+t._wrapperState.initialValue})}function tb(t,n){var r=n.value;if(r==null){if(r=n.children,n=n.defaultValue,r!=null){if(n!=null)throw Error(P(92));if(Ci(r)){if(1<r.length)throw Error(P(93));r=r[0]}n=r}n==null&&(n=""),r=n}t._wrapperState={initialValue:fr(r)}}function C0(t,n){var r=fr(n.value),s=fr(n.defaultValue);r!=null&&(r=""+r,r!==t.value&&(t.value=r),n.defaultValue==null&&t.defaultValue!==r&&(t.defaultValue=r)),s!=null&&(t.defaultValue=""+s)}function nb(t){var n=t.textContent;n===t._wrapperState.initialValue&&n!==""&&n!==null&&(t.value=n)}function O0(t){switch(t){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Ld(t,n){return t==null||t==="http://www.w3.org/1999/xhtml"?O0(n):t==="http://www.w3.org/2000/svg"&&n==="foreignObject"?"http://www.w3.org/1999/xhtml":t}var za,k0=function(t){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(n,r,s,i){MSApp.execUnsafeLocalFunction(function(){return t(n,r,s,i)})}:t}(function(t,n){if(t.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in t)t.innerHTML=n;else{for(za=za||document.createElement("div"),za.innerHTML="<svg>"+n.valueOf().toString()+"</svg>",n=za.firstChild;t.firstChild;)t.removeChild(t.firstChild);for(;n.firstChild;)t.appendChild(n.firstChild)}});function ea(t,n){if(n){var r=t.firstChild;if(r&&r===t.lastChild&&r.nodeType===3){r.nodeValue=n;return}}t.textContent=n}var Di={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},wN=["Webkit","ms","Moz","O"];Object.keys(Di).forEach(function(t){wN.forEach(function(n){n=n+t.charAt(0).toUpperCase()+t.substring(1),Di[n]=Di[t]})});function L0(t,n,r){return n==null||typeof n=="boolean"||n===""?"":r||typeof n!="number"||n===0||Di.hasOwnProperty(t)&&Di[t]?(""+n).trim():n+"px"}function D0(t,n){t=t.style;for(var r in n)if(n.hasOwnProperty(r)){var s=r.indexOf("--")===0,i=L0(r,n[r],s);r==="float"&&(r="cssFloat"),s?t.setProperty(r,i):t[r]=i}}var IN=Ce({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Dd(t,n){if(n){if(IN[t]&&(n.children!=null||n.dangerouslySetInnerHTML!=null))throw Error(P(137,t));if(n.dangerouslySetInnerHTML!=null){if(n.children!=null)throw Error(P(60));if(typeof n.dangerouslySetInnerHTML!="object"||!("__html"in n.dangerouslySetInnerHTML))throw Error(P(61))}if(n.style!=null&&typeof n.style!="object")throw Error(P(62))}}function Md(t,n){if(t.indexOf("-")===-1)return typeof n.is=="string";switch(t){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Fd=null;function zu(t){return t=t.target||t.srcElement||window,t.correspondingUseElement&&(t=t.correspondingUseElement),t.nodeType===3?t.parentNode:t}var Pd=null,Is=null,Cs=null;function rb(t){if(t=Sa(t)){if(typeof Pd!="function")throw Error(P(280));var n=t.stateNode;n&&(n=_l(n),Pd(t.stateNode,t.type,n))}}function M0(t){Is?Cs?Cs.push(t):Cs=[t]:Is=t}function F0(){if(Is){var t=Is,n=Cs;if(Cs=Is=null,rb(t),n)for(t=0;t<n.length;t++)rb(n[t])}}function P0(t,n){return t(n)}function U0(){}var Ac=!1;function B0(t,n,r){if(Ac)return t(n,r);Ac=!0;try{return P0(t,n,r)}finally{Ac=!1,(Is!==null||Cs!==null)&&(U0(),F0())}}function ta(t,n){var r=t.stateNode;if(r===null)return null;var s=_l(r);if(s===null)return null;r=s[n];e:switch(n){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(s=!s.disabled)||(t=t.type,s=!(t==="button"||t==="input"||t==="select"||t==="textarea")),t=!s;break e;default:t=!1}if(t)return null;if(r&&typeof r!="function")throw Error(P(231,n,typeof r));return r}var Ud=!1;if(Dn)try{var di={};Object.defineProperty(di,"passive",{get:function(){Ud=!0}}),window.addEventListener("test",di,di),window.removeEventListener("test",di,di)}catch{Ud=!1}function CN(t,n,r,s,i,a,o,l,c){var d=Array.prototype.slice.call(arguments,3);try{n.apply(r,d)}catch(h){this.onError(h)}}var Mi=!1,$o=null,zo=!1,Bd=null,ON={onError:function(t){Mi=!0,$o=t}};function kN(t,n,r,s,i,a,o,l,c){Mi=!1,$o=null,CN.apply(ON,arguments)}function LN(t,n,r,s,i,a,o,l,c){if(kN.apply(this,arguments),Mi){if(Mi){var d=$o;Mi=!1,$o=null}else throw Error(P(198));zo||(zo=!0,Bd=d)}}function Yr(t){var n=t,r=t;if(t.alternate)for(;n.return;)n=n.return;else{t=n;do n=t,n.flags&4098&&(r=n.return),t=n.return;while(t)}return n.tag===3?r:null}function H0(t){if(t.tag===13){var n=t.memoizedState;if(n===null&&(t=t.alternate,t!==null&&(n=t.memoizedState)),n!==null)return n.dehydrated}return null}function sb(t){if(Yr(t)!==t)throw Error(P(188))}function DN(t){var n=t.alternate;if(!n){if(n=Yr(t),n===null)throw Error(P(188));return n!==t?null:t}for(var r=t,s=n;;){var i=r.return;if(i===null)break;var a=i.alternate;if(a===null){if(s=i.return,s!==null){r=s;continue}break}if(i.child===a.child){for(a=i.child;a;){if(a===r)return sb(i),t;if(a===s)return sb(i),n;a=a.sibling}throw Error(P(188))}if(r.return!==s.return)r=i,s=a;else{for(var o=!1,l=i.child;l;){if(l===r){o=!0,r=i,s=a;break}if(l===s){o=!0,s=i,r=a;break}l=l.sibling}if(!o){for(l=a.child;l;){if(l===r){o=!0,r=a,s=i;break}if(l===s){o=!0,s=a,r=i;break}l=l.sibling}if(!o)throw Error(P(189))}}if(r.alternate!==s)throw Error(P(190))}if(r.tag!==3)throw Error(P(188));return r.stateNode.current===r?t:n}function G0(t){return t=DN(t),t!==null?$0(t):null}function $0(t){if(t.tag===5||t.tag===6)return t;for(t=t.child;t!==null;){var n=$0(t);if(n!==null)return n;t=t.sibling}return null}var z0=kt.unstable_scheduleCallback,ib=kt.unstable_cancelCallback,MN=kt.unstable_shouldYield,FN=kt.unstable_requestPaint,Ue=kt.unstable_now,PN=kt.unstable_getCurrentPriorityLevel,Wu=kt.unstable_ImmediatePriority,W0=kt.unstable_UserBlockingPriority,Wo=kt.unstable_NormalPriority,UN=kt.unstable_LowPriority,V0=kt.unstable_IdlePriority,Sl=null,En=null;function BN(t){if(En&&typeof En.onCommitFiberRoot=="function")try{En.onCommitFiberRoot(Sl,t,void 0,(t.current.flags&128)===128)}catch{}}var an=Math.clz32?Math.clz32:$N,HN=Math.log,GN=Math.LN2;function $N(t){return t>>>=0,t===0?32:31-(HN(t)/GN|0)|0}var Wa=64,Va=4194304;function Oi(t){switch(t&-t){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return t&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return t}}function Vo(t,n){var r=t.pendingLanes;if(r===0)return 0;var s=0,i=t.suspendedLanes,a=t.pingedLanes,o=r&268435455;if(o!==0){var l=o&~i;l!==0?s=Oi(l):(a&=o,a!==0&&(s=Oi(a)))}else o=r&~i,o!==0?s=Oi(o):a!==0&&(s=Oi(a));if(s===0)return 0;if(n!==0&&n!==s&&!(n&i)&&(i=s&-s,a=n&-n,i>=a||i===16&&(a&4194240)!==0))return n;if(s&4&&(s|=r&16),n=t.entangledLanes,n!==0)for(t=t.entanglements,n&=s;0<n;)r=31-an(n),i=1<<r,s|=t[r],n&=~i;return s}function zN(t,n){switch(t){case 1:case 2:case 4:return n+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return n+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function WN(t,n){for(var r=t.suspendedLanes,s=t.pingedLanes,i=t.expirationTimes,a=t.pendingLanes;0<a;){var o=31-an(a),l=1<<o,c=i[o];c===-1?(!(l&r)||l&s)&&(i[o]=zN(l,n)):c<=n&&(t.expiredLanes|=l),a&=~l}}function Hd(t){return t=t.pendingLanes&-1073741825,t!==0?t:t&1073741824?1073741824:0}function K0(){var t=Wa;return Wa<<=1,!(Wa&4194240)&&(Wa=64),t}function _c(t){for(var n=[],r=0;31>r;r++)n.push(t);return n}function Ta(t,n,r){t.pendingLanes|=n,n!==536870912&&(t.suspendedLanes=0,t.pingedLanes=0),t=t.eventTimes,n=31-an(n),t[n]=r}function VN(t,n){var r=t.pendingLanes&~n;t.pendingLanes=n,t.suspendedLanes=0,t.pingedLanes=0,t.expiredLanes&=n,t.mutableReadLanes&=n,t.entangledLanes&=n,n=t.entanglements;var s=t.eventTimes;for(t=t.expirationTimes;0<r;){var i=31-an(r),a=1<<i;n[i]=0,s[i]=-1,t[i]=-1,r&=~a}}function Vu(t,n){var r=t.entangledLanes|=n;for(t=t.entanglements;r;){var s=31-an(r),i=1<<s;i&n|t[s]&n&&(t[s]|=n),r&=~i}}var be=0;function Y0(t){return t&=-t,1<t?4<t?t&268435455?16:536870912:4:1}var q0,Ku,X0,Z0,Q0,Gd=!1,Ka=[],or=null,lr=null,cr=null,na=new Map,ra=new Map,rr=[],KN="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function ab(t,n){switch(t){case"focusin":case"focusout":or=null;break;case"dragenter":case"dragleave":lr=null;break;case"mouseover":case"mouseout":cr=null;break;case"pointerover":case"pointerout":na.delete(n.pointerId);break;case"gotpointercapture":case"lostpointercapture":ra.delete(n.pointerId)}}function ui(t,n,r,s,i,a){return t===null||t.nativeEvent!==a?(t={blockedOn:n,domEventName:r,eventSystemFlags:s,nativeEvent:a,targetContainers:[i]},n!==null&&(n=Sa(n),n!==null&&Ku(n)),t):(t.eventSystemFlags|=s,n=t.targetContainers,i!==null&&n.indexOf(i)===-1&&n.push(i),t)}function YN(t,n,r,s,i){switch(n){case"focusin":return or=ui(or,t,n,r,s,i),!0;case"dragenter":return lr=ui(lr,t,n,r,s,i),!0;case"mouseover":return cr=ui(cr,t,n,r,s,i),!0;case"pointerover":var a=i.pointerId;return na.set(a,ui(na.get(a)||null,t,n,r,s,i)),!0;case"gotpointercapture":return a=i.pointerId,ra.set(a,ui(ra.get(a)||null,t,n,r,s,i)),!0}return!1}function J0(t){var n=kr(t.target);if(n!==null){var r=Yr(n);if(r!==null){if(n=r.tag,n===13){if(n=H0(r),n!==null){t.blockedOn=n,Q0(t.priority,function(){X0(r)});return}}else if(n===3&&r.stateNode.current.memoizedState.isDehydrated){t.blockedOn=r.tag===3?r.stateNode.containerInfo:null;return}}}t.blockedOn=null}function _o(t){if(t.blockedOn!==null)return!1;for(var n=t.targetContainers;0<n.length;){var r=$d(t.domEventName,t.eventSystemFlags,n[0],t.nativeEvent);if(r===null){r=t.nativeEvent;var s=new r.constructor(r.type,r);Fd=s,r.target.dispatchEvent(s),Fd=null}else return n=Sa(r),n!==null&&Ku(n),t.blockedOn=r,!1;n.shift()}return!0}function ob(t,n,r){_o(t)&&r.delete(n)}function qN(){Gd=!1,or!==null&&_o(or)&&(or=null),lr!==null&&_o(lr)&&(lr=null),cr!==null&&_o(cr)&&(cr=null),na.forEach(ob),ra.forEach(ob)}function hi(t,n){t.blockedOn===n&&(t.blockedOn=null,Gd||(Gd=!0,kt.unstable_scheduleCallback(kt.unstable_NormalPriority,qN)))}function sa(t){function n(i){return hi(i,t)}if(0<Ka.length){hi(Ka[0],t);for(var r=1;r<Ka.length;r++){var s=Ka[r];s.blockedOn===t&&(s.blockedOn=null)}}for(or!==null&&hi(or,t),lr!==null&&hi(lr,t),cr!==null&&hi(cr,t),na.forEach(n),ra.forEach(n),r=0;r<rr.length;r++)s=rr[r],s.blockedOn===t&&(s.blockedOn=null);for(;0<rr.length&&(r=rr[0],r.blockedOn===null);)J0(r),r.blockedOn===null&&rr.shift()}var Os=Bn.ReactCurrentBatchConfig,Ko=!0;function XN(t,n,r,s){var i=be,a=Os.transition;Os.transition=null;try{be=1,Yu(t,n,r,s)}finally{be=i,Os.transition=a}}function ZN(t,n,r,s){var i=be,a=Os.transition;Os.transition=null;try{be=4,Yu(t,n,r,s)}finally{be=i,Os.transition=a}}function Yu(t,n,r,s){if(Ko){var i=$d(t,n,r,s);if(i===null)Mc(t,n,s,Yo,r),ab(t,s);else if(YN(i,t,n,r,s))s.stopPropagation();else if(ab(t,s),n&4&&-1<KN.indexOf(t)){for(;i!==null;){var a=Sa(i);if(a!==null&&q0(a),a=$d(t,n,r,s),a===null&&Mc(t,n,s,Yo,r),a===i)break;i=a}i!==null&&s.stopPropagation()}else Mc(t,n,s,null,r)}}var Yo=null;function $d(t,n,r,s){if(Yo=null,t=zu(s),t=kr(t),t!==null)if(n=Yr(t),n===null)t=null;else if(r=n.tag,r===13){if(t=H0(n),t!==null)return t;t=null}else if(r===3){if(n.stateNode.current.memoizedState.isDehydrated)return n.tag===3?n.stateNode.containerInfo:null;t=null}else n!==t&&(t=null);return Yo=t,null}function eT(t){switch(t){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(PN()){case Wu:return 1;case W0:return 4;case Wo:case UN:return 16;case V0:return 536870912;default:return 16}default:return 16}}var ir=null,qu=null,vo=null;function tT(){if(vo)return vo;var t,n=qu,r=n.length,s,i="value"in ir?ir.value:ir.textContent,a=i.length;for(t=0;t<r&&n[t]===i[t];t++);var o=r-t;for(s=1;s<=o&&n[r-s]===i[a-s];s++);return vo=i.slice(t,1<s?1-s:void 0)}function Ro(t){var n=t.keyCode;return"charCode"in t?(t=t.charCode,t===0&&n===13&&(t=13)):t=n,t===10&&(t=13),32<=t||t===13?t:0}function Ya(){return!0}function lb(){return!1}function Dt(t){function n(r,s,i,a,o){this._reactName=r,this._targetInst=i,this.type=s,this.nativeEvent=a,this.target=o,this.currentTarget=null;for(var l in t)t.hasOwnProperty(l)&&(r=t[l],this[l]=r?r(a):a[l]);return this.isDefaultPrevented=(a.defaultPrevented!=null?a.defaultPrevented:a.returnValue===!1)?Ya:lb,this.isPropagationStopped=lb,this}return Ce(n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var r=this.nativeEvent;r&&(r.preventDefault?r.preventDefault():typeof r.returnValue!="unknown"&&(r.returnValue=!1),this.isDefaultPrevented=Ya)},stopPropagation:function(){var r=this.nativeEvent;r&&(r.stopPropagation?r.stopPropagation():typeof r.cancelBubble!="unknown"&&(r.cancelBubble=!0),this.isPropagationStopped=Ya)},persist:function(){},isPersistent:Ya}),n}var Ys={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(t){return t.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},Xu=Dt(Ys),ya=Ce({},Ys,{view:0,detail:0}),QN=Dt(ya),vc,Rc,pi,Nl=Ce({},ya,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Zu,button:0,buttons:0,relatedTarget:function(t){return t.relatedTarget===void 0?t.fromElement===t.srcElement?t.toElement:t.fromElement:t.relatedTarget},movementX:function(t){return"movementX"in t?t.movementX:(t!==pi&&(pi&&t.type==="mousemove"?(vc=t.screenX-pi.screenX,Rc=t.screenY-pi.screenY):Rc=vc=0,pi=t),vc)},movementY:function(t){return"movementY"in t?t.movementY:Rc}}),cb=Dt(Nl),JN=Ce({},Nl,{dataTransfer:0}),e2=Dt(JN),t2=Ce({},ya,{relatedTarget:0}),wc=Dt(t2),n2=Ce({},Ys,{animationName:0,elapsedTime:0,pseudoElement:0}),r2=Dt(n2),s2=Ce({},Ys,{clipboardData:function(t){return"clipboardData"in t?t.clipboardData:window.clipboardData}}),i2=Dt(s2),a2=Ce({},Ys,{data:0}),db=Dt(a2),o2={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},l2={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},c2={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function d2(t){var n=this.nativeEvent;return n.getModifierState?n.getModifierState(t):(t=c2[t])?!!n[t]:!1}function Zu(){return d2}var u2=Ce({},ya,{key:function(t){if(t.key){var n=o2[t.key]||t.key;if(n!=="Unidentified")return n}return t.type==="keypress"?(t=Ro(t),t===13?"Enter":String.fromCharCode(t)):t.type==="keydown"||t.type==="keyup"?l2[t.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Zu,charCode:function(t){return t.type==="keypress"?Ro(t):0},keyCode:function(t){return t.type==="keydown"||t.type==="keyup"?t.keyCode:0},which:function(t){return t.type==="keypress"?Ro(t):t.type==="keydown"||t.type==="keyup"?t.keyCode:0}}),h2=Dt(u2),p2=Ce({},Nl,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),ub=Dt(p2),m2=Ce({},ya,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Zu}),f2=Dt(m2),g2=Ce({},Ys,{propertyName:0,elapsedTime:0,pseudoElement:0}),b2=Dt(g2),x2=Ce({},Nl,{deltaX:function(t){return"deltaX"in t?t.deltaX:"wheelDeltaX"in t?-t.wheelDeltaX:0},deltaY:function(t){return"deltaY"in t?t.deltaY:"wheelDeltaY"in t?-t.wheelDeltaY:"wheelDelta"in t?-t.wheelDelta:0},deltaZ:0,deltaMode:0}),E2=Dt(x2),T2=[9,13,27,32],Qu=Dn&&"CompositionEvent"in window,Fi=null;Dn&&"documentMode"in document&&(Fi=document.documentMode);var y2=Dn&&"TextEvent"in window&&!Fi,nT=Dn&&(!Qu||Fi&&8<Fi&&11>=Fi),hb=" ",pb=!1;function rT(t,n){switch(t){case"keyup":return T2.indexOf(n.keyCode)!==-1;case"keydown":return n.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function sT(t){return t=t.detail,typeof t=="object"&&"data"in t?t.data:null}var bs=!1;function S2(t,n){switch(t){case"compositionend":return sT(n);case"keypress":return n.which!==32?null:(pb=!0,hb);case"textInput":return t=n.data,t===hb&&pb?null:t;default:return null}}function N2(t,n){if(bs)return t==="compositionend"||!Qu&&rT(t,n)?(t=tT(),vo=qu=ir=null,bs=!1,t):null;switch(t){case"paste":return null;case"keypress":if(!(n.ctrlKey||n.altKey||n.metaKey)||n.ctrlKey&&n.altKey){if(n.char&&1<n.char.length)return n.char;if(n.which)return String.fromCharCode(n.which)}return null;case"compositionend":return nT&&n.locale!=="ko"?null:n.data;default:return null}}var j2={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function mb(t){var n=t&&t.nodeName&&t.nodeName.toLowerCase();return n==="input"?!!j2[t.type]:n==="textarea"}function iT(t,n,r,s){M0(s),n=qo(n,"onChange"),0<n.length&&(r=new Xu("onChange","change",null,r,s),t.push({event:r,listeners:n}))}var Pi=null,ia=null;function A2(t){gT(t,0)}function jl(t){var n=Ts(t);if(w0(n))return t}function _2(t,n){if(t==="change")return n}var aT=!1;if(Dn){var Ic;if(Dn){var Cc="oninput"in document;if(!Cc){var fb=document.createElement("div");fb.setAttribute("oninput","return;"),Cc=typeof fb.oninput=="function"}Ic=Cc}else Ic=!1;aT=Ic&&(!document.documentMode||9<document.documentMode)}function gb(){Pi&&(Pi.detachEvent("onpropertychange",oT),ia=Pi=null)}function oT(t){if(t.propertyName==="value"&&jl(ia)){var n=[];iT(n,ia,t,zu(t)),B0(A2,n)}}function v2(t,n,r){t==="focusin"?(gb(),Pi=n,ia=r,Pi.attachEvent("onpropertychange",oT)):t==="focusout"&&gb()}function R2(t){if(t==="selectionchange"||t==="keyup"||t==="keydown")return jl(ia)}function w2(t,n){if(t==="click")return jl(n)}function I2(t,n){if(t==="input"||t==="change")return jl(n)}function C2(t,n){return t===n&&(t!==0||1/t===1/n)||t!==t&&n!==n}var ln=typeof Object.is=="function"?Object.is:C2;function aa(t,n){if(ln(t,n))return!0;if(typeof t!="object"||t===null||typeof n!="object"||n===null)return!1;var r=Object.keys(t),s=Object.keys(n);if(r.length!==s.length)return!1;for(s=0;s<r.length;s++){var i=r[s];if(!Ad.call(n,i)||!ln(t[i],n[i]))return!1}return!0}function bb(t){for(;t&&t.firstChild;)t=t.firstChild;return t}function xb(t,n){var r=bb(t);t=0;for(var s;r;){if(r.nodeType===3){if(s=t+r.textContent.length,t<=n&&s>=n)return{node:r,offset:n-t};t=s}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=bb(r)}}function lT(t,n){return t&&n?t===n?!0:t&&t.nodeType===3?!1:n&&n.nodeType===3?lT(t,n.parentNode):"contains"in t?t.contains(n):t.compareDocumentPosition?!!(t.compareDocumentPosition(n)&16):!1:!1}function cT(){for(var t=window,n=Go();n instanceof t.HTMLIFrameElement;){try{var r=typeof n.contentWindow.location.href=="string"}catch{r=!1}if(r)t=n.contentWindow;else break;n=Go(t.document)}return n}function Ju(t){var n=t&&t.nodeName&&t.nodeName.toLowerCase();return n&&(n==="input"&&(t.type==="text"||t.type==="search"||t.type==="tel"||t.type==="url"||t.type==="password")||n==="textarea"||t.contentEditable==="true")}function O2(t){var n=cT(),r=t.focusedElem,s=t.selectionRange;if(n!==r&&r&&r.ownerDocument&&lT(r.ownerDocument.documentElement,r)){if(s!==null&&Ju(r)){if(n=s.start,t=s.end,t===void 0&&(t=n),"selectionStart"in r)r.selectionStart=n,r.selectionEnd=Math.min(t,r.value.length);else if(t=(n=r.ownerDocument||document)&&n.defaultView||window,t.getSelection){t=t.getSelection();var i=r.textContent.length,a=Math.min(s.start,i);s=s.end===void 0?a:Math.min(s.end,i),!t.extend&&a>s&&(i=s,s=a,a=i),i=xb(r,a);var o=xb(r,s);i&&o&&(t.rangeCount!==1||t.anchorNode!==i.node||t.anchorOffset!==i.offset||t.focusNode!==o.node||t.focusOffset!==o.offset)&&(n=n.createRange(),n.setStart(i.node,i.offset),t.removeAllRanges(),a>s?(t.addRange(n),t.extend(o.node,o.offset)):(n.setEnd(o.node,o.offset),t.addRange(n)))}}for(n=[],t=r;t=t.parentNode;)t.nodeType===1&&n.push({element:t,left:t.scrollLeft,top:t.scrollTop});for(typeof r.focus=="function"&&r.focus(),r=0;r<n.length;r++)t=n[r],t.element.scrollLeft=t.left,t.element.scrollTop=t.top}}var k2=Dn&&"documentMode"in document&&11>=document.documentMode,xs=null,zd=null,Ui=null,Wd=!1;function Eb(t,n,r){var s=r.window===r?r.document:r.nodeType===9?r:r.ownerDocument;Wd||xs==null||xs!==Go(s)||(s=xs,"selectionStart"in s&&Ju(s)?s={start:s.selectionStart,end:s.selectionEnd}:(s=(s.ownerDocument&&s.ownerDocument.defaultView||window).getSelection(),s={anchorNode:s.anchorNode,anchorOffset:s.anchorOffset,focusNode:s.focusNode,focusOffset:s.focusOffset}),Ui&&aa(Ui,s)||(Ui=s,s=qo(zd,"onSelect"),0<s.length&&(n=new Xu("onSelect","select",null,n,r),t.push({event:n,listeners:s}),n.target=xs)))}function qa(t,n){var r={};return r[t.toLowerCase()]=n.toLowerCase(),r["Webkit"+t]="webkit"+n,r["Moz"+t]="moz"+n,r}var Es={animationend:qa("Animation","AnimationEnd"),animationiteration:qa("Animation","AnimationIteration"),animationstart:qa("Animation","AnimationStart"),transitionend:qa("Transition","TransitionEnd")},Oc={},dT={};Dn&&(dT=document.createElement("div").style,"AnimationEvent"in window||(delete Es.animationend.animation,delete Es.animationiteration.animation,delete Es.animationstart.animation),"TransitionEvent"in window||delete Es.transitionend.transition);function Al(t){if(Oc[t])return Oc[t];if(!Es[t])return t;var n=Es[t],r;for(r in n)if(n.hasOwnProperty(r)&&r in dT)return Oc[t]=n[r];return t}var uT=Al("animationend"),hT=Al("animationiteration"),pT=Al("animationstart"),mT=Al("transitionend"),fT=new Map,Tb="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function xr(t,n){fT.set(t,n),Kr(n,[t])}for(var kc=0;kc<Tb.length;kc++){var Lc=Tb[kc],L2=Lc.toLowerCase(),D2=Lc[0].toUpperCase()+Lc.slice(1);xr(L2,"on"+D2)}xr(uT,"onAnimationEnd");xr(hT,"onAnimationIteration");xr(pT,"onAnimationStart");xr("dblclick","onDoubleClick");xr("focusin","onFocus");xr("focusout","onBlur");xr(mT,"onTransitionEnd");Ps("onMouseEnter",["mouseout","mouseover"]);Ps("onMouseLeave",["mouseout","mouseover"]);Ps("onPointerEnter",["pointerout","pointerover"]);Ps("onPointerLeave",["pointerout","pointerover"]);Kr("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));Kr("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));Kr("onBeforeInput",["compositionend","keypress","textInput","paste"]);Kr("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));Kr("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));Kr("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var ki="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),M2=new Set("cancel close invalid load scroll toggle".split(" ").concat(ki));function yb(t,n,r){var s=t.type||"unknown-event";t.currentTarget=r,LN(s,n,void 0,t),t.currentTarget=null}function gT(t,n){n=(n&4)!==0;for(var r=0;r<t.length;r++){var s=t[r],i=s.event;s=s.listeners;e:{var a=void 0;if(n)for(var o=s.length-1;0<=o;o--){var l=s[o],c=l.instance,d=l.currentTarget;if(l=l.listener,c!==a&&i.isPropagationStopped())break e;yb(i,l,d),a=c}else for(o=0;o<s.length;o++){if(l=s[o],c=l.instance,d=l.currentTarget,l=l.listener,c!==a&&i.isPropagationStopped())break e;yb(i,l,d),a=c}}}if(zo)throw t=Bd,zo=!1,Bd=null,t}function Ae(t,n){var r=n[Xd];r===void 0&&(r=n[Xd]=new Set);var s=t+"__bubble";r.has(s)||(bT(n,t,2,!1),r.add(s))}function Dc(t,n,r){var s=0;n&&(s|=4),bT(r,t,s,n)}var Xa="_reactListening"+Math.random().toString(36).slice(2);function oa(t){if(!t[Xa]){t[Xa]=!0,j0.forEach(function(r){r!=="selectionchange"&&(M2.has(r)||Dc(r,!1,t),Dc(r,!0,t))});var n=t.nodeType===9?t:t.ownerDocument;n===null||n[Xa]||(n[Xa]=!0,Dc("selectionchange",!1,n))}}function bT(t,n,r,s){switch(eT(n)){case 1:var i=XN;break;case 4:i=ZN;break;default:i=Yu}r=i.bind(null,n,r,t),i=void 0,!Ud||n!=="touchstart"&&n!=="touchmove"&&n!=="wheel"||(i=!0),s?i!==void 0?t.addEventListener(n,r,{capture:!0,passive:i}):t.addEventListener(n,r,!0):i!==void 0?t.addEventListener(n,r,{passive:i}):t.addEventListener(n,r,!1)}function Mc(t,n,r,s,i){var a=s;if(!(n&1)&&!(n&2)&&s!==null)e:for(;;){if(s===null)return;var o=s.tag;if(o===3||o===4){var l=s.stateNode.containerInfo;if(l===i||l.nodeType===8&&l.parentNode===i)break;if(o===4)for(o=s.return;o!==null;){var c=o.tag;if((c===3||c===4)&&(c=o.stateNode.containerInfo,c===i||c.nodeType===8&&c.parentNode===i))return;o=o.return}for(;l!==null;){if(o=kr(l),o===null)return;if(c=o.tag,c===5||c===6){s=a=o;continue e}l=l.parentNode}}s=s.return}B0(function(){var d=a,h=zu(r),x=[];e:{var g=fT.get(t);if(g!==void 0){var A=Xu,S=t;switch(t){case"keypress":if(Ro(r)===0)break e;case"keydown":case"keyup":A=h2;break;case"focusin":S="focus",A=wc;break;case"focusout":S="blur",A=wc;break;case"beforeblur":case"afterblur":A=wc;break;case"click":if(r.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":A=cb;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":A=e2;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":A=f2;break;case uT:case hT:case pT:A=r2;break;case mT:A=b2;break;case"scroll":A=QN;break;case"wheel":A=E2;break;case"copy":case"cut":case"paste":A=i2;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":A=ub}var y=(n&4)!==0,_=!y&&t==="scroll",f=y?g!==null?g+"Capture":null:g;y=[];for(var b=d,T;b!==null;){T=b;var E=T.stateNode;if(T.tag===5&&E!==null&&(T=E,f!==null&&(E=ta(b,f),E!=null&&y.push(la(b,E,T)))),_)break;b=b.return}0<y.length&&(g=new A(g,S,null,r,h),x.push({event:g,listeners:y}))}}if(!(n&7)){e:{if(g=t==="mouseover"||t==="pointerover",A=t==="mouseout"||t==="pointerout",g&&r!==Fd&&(S=r.relatedTarget||r.fromElement)&&(kr(S)||S[Mn]))break e;if((A||g)&&(g=h.window===h?h:(g=h.ownerDocument)?g.defaultView||g.parentWindow:window,A?(S=r.relatedTarget||r.toElement,A=d,S=S?kr(S):null,S!==null&&(_=Yr(S),S!==_||S.tag!==5&&S.tag!==6)&&(S=null)):(A=null,S=d),A!==S)){if(y=cb,E="onMouseLeave",f="onMouseEnter",b="mouse",(t==="pointerout"||t==="pointerover")&&(y=ub,E="onPointerLeave",f="onPointerEnter",b="pointer"),_=A==null?g:Ts(A),T=S==null?g:Ts(S),g=new y(E,b+"leave",A,r,h),g.target=_,g.relatedTarget=T,E=null,kr(h)===d&&(y=new y(f,b+"enter",S,r,h),y.target=T,y.relatedTarget=_,E=y),_=E,A&&S)t:{for(y=A,f=S,b=0,T=y;T;T=os(T))b++;for(T=0,E=f;E;E=os(E))T++;for(;0<b-T;)y=os(y),b--;for(;0<T-b;)f=os(f),T--;for(;b--;){if(y===f||f!==null&&y===f.alternate)break t;y=os(y),f=os(f)}y=null}else y=null;A!==null&&Sb(x,g,A,y,!1),S!==null&&_!==null&&Sb(x,_,S,y,!0)}}e:{if(g=d?Ts(d):window,A=g.nodeName&&g.nodeName.toLowerCase(),A==="select"||A==="input"&&g.type==="file")var R=_2;else if(mb(g))if(aT)R=I2;else{R=R2;var I=v2}else(A=g.nodeName)&&A.toLowerCase()==="input"&&(g.type==="checkbox"||g.type==="radio")&&(R=w2);if(R&&(R=R(t,d))){iT(x,R,r,h);break e}I&&I(t,g,d),t==="focusout"&&(I=g._wrapperState)&&I.controlled&&g.type==="number"&&Od(g,"number",g.value)}switch(I=d?Ts(d):window,t){case"focusin":(mb(I)||I.contentEditable==="true")&&(xs=I,zd=d,Ui=null);break;case"focusout":Ui=zd=xs=null;break;case"mousedown":Wd=!0;break;case"contextmenu":case"mouseup":case"dragend":Wd=!1,Eb(x,r,h);break;case"selectionchange":if(k2)break;case"keydown":case"keyup":Eb(x,r,h)}var v;if(Qu)e:{switch(t){case"compositionstart":var O="onCompositionStart";break e;case"compositionend":O="onCompositionEnd";break e;case"compositionupdate":O="onCompositionUpdate";break e}O=void 0}else bs?rT(t,r)&&(O="onCompositionEnd"):t==="keydown"&&r.keyCode===229&&(O="onCompositionStart");O&&(nT&&r.locale!=="ko"&&(bs||O!=="onCompositionStart"?O==="onCompositionEnd"&&bs&&(v=tT()):(ir=h,qu="value"in ir?ir.value:ir.textContent,bs=!0)),I=qo(d,O),0<I.length&&(O=new db(O,t,null,r,h),x.push({event:O,listeners:I}),v?O.data=v:(v=sT(r),v!==null&&(O.data=v)))),(v=y2?S2(t,r):N2(t,r))&&(d=qo(d,"onBeforeInput"),0<d.length&&(h=new db("onBeforeInput","beforeinput",null,r,h),x.push({event:h,listeners:d}),h.data=v))}gT(x,n)})}function la(t,n,r){return{instance:t,listener:n,currentTarget:r}}function qo(t,n){for(var r=n+"Capture",s=[];t!==null;){var i=t,a=i.stateNode;i.tag===5&&a!==null&&(i=a,a=ta(t,r),a!=null&&s.unshift(la(t,a,i)),a=ta(t,n),a!=null&&s.push(la(t,a,i))),t=t.return}return s}function os(t){if(t===null)return null;do t=t.return;while(t&&t.tag!==5);return t||null}function Sb(t,n,r,s,i){for(var a=n._reactName,o=[];r!==null&&r!==s;){var l=r,c=l.alternate,d=l.stateNode;if(c!==null&&c===s)break;l.tag===5&&d!==null&&(l=d,i?(c=ta(r,a),c!=null&&o.unshift(la(r,c,l))):i||(c=ta(r,a),c!=null&&o.push(la(r,c,l)))),r=r.return}o.length!==0&&t.push({event:n,listeners:o})}var F2=/\r\n?/g,P2=/\u0000|\uFFFD/g;function Nb(t){return(typeof t=="string"?t:""+t).replace(F2,`
`).replace(P2,"")}function Za(t,n,r){if(n=Nb(n),Nb(t)!==n&&r)throw Error(P(425))}function Xo(){}var Vd=null,Kd=null;function Yd(t,n){return t==="textarea"||t==="noscript"||typeof n.children=="string"||typeof n.children=="number"||typeof n.dangerouslySetInnerHTML=="object"&&n.dangerouslySetInnerHTML!==null&&n.dangerouslySetInnerHTML.__html!=null}var qd=typeof setTimeout=="function"?setTimeout:void 0,U2=typeof clearTimeout=="function"?clearTimeout:void 0,jb=typeof Promise=="function"?Promise:void 0,B2=typeof queueMicrotask=="function"?queueMicrotask:typeof jb<"u"?function(t){return jb.resolve(null).then(t).catch(H2)}:qd;function H2(t){setTimeout(function(){throw t})}function Fc(t,n){var r=n,s=0;do{var i=r.nextSibling;if(t.removeChild(r),i&&i.nodeType===8)if(r=i.data,r==="/$"){if(s===0){t.removeChild(i),sa(n);return}s--}else r!=="$"&&r!=="$?"&&r!=="$!"||s++;r=i}while(r);sa(n)}function dr(t){for(;t!=null;t=t.nextSibling){var n=t.nodeType;if(n===1||n===3)break;if(n===8){if(n=t.data,n==="$"||n==="$!"||n==="$?")break;if(n==="/$")return null}}return t}function Ab(t){t=t.previousSibling;for(var n=0;t;){if(t.nodeType===8){var r=t.data;if(r==="$"||r==="$!"||r==="$?"){if(n===0)return t;n--}else r==="/$"&&n++}t=t.previousSibling}return null}var qs=Math.random().toString(36).slice(2),bn="__reactFiber$"+qs,ca="__reactProps$"+qs,Mn="__reactContainer$"+qs,Xd="__reactEvents$"+qs,G2="__reactListeners$"+qs,$2="__reactHandles$"+qs;function kr(t){var n=t[bn];if(n)return n;for(var r=t.parentNode;r;){if(n=r[Mn]||r[bn]){if(r=n.alternate,n.child!==null||r!==null&&r.child!==null)for(t=Ab(t);t!==null;){if(r=t[bn])return r;t=Ab(t)}return n}t=r,r=t.parentNode}return null}function Sa(t){return t=t[bn]||t[Mn],!t||t.tag!==5&&t.tag!==6&&t.tag!==13&&t.tag!==3?null:t}function Ts(t){if(t.tag===5||t.tag===6)return t.stateNode;throw Error(P(33))}function _l(t){return t[ca]||null}var Zd=[],ys=-1;function Er(t){return{current:t}}function _e(t){0>ys||(t.current=Zd[ys],Zd[ys]=null,ys--)}function Ne(t,n){ys++,Zd[ys]=t.current,t.current=n}var gr={},ht=Er(gr),jt=Er(!1),Br=gr;function Us(t,n){var r=t.type.contextTypes;if(!r)return gr;var s=t.stateNode;if(s&&s.__reactInternalMemoizedUnmaskedChildContext===n)return s.__reactInternalMemoizedMaskedChildContext;var i={},a;for(a in r)i[a]=n[a];return s&&(t=t.stateNode,t.__reactInternalMemoizedUnmaskedChildContext=n,t.__reactInternalMemoizedMaskedChildContext=i),i}function At(t){return t=t.childContextTypes,t!=null}function Zo(){_e(jt),_e(ht)}function _b(t,n,r){if(ht.current!==gr)throw Error(P(168));Ne(ht,n),Ne(jt,r)}function xT(t,n,r){var s=t.stateNode;if(n=n.childContextTypes,typeof s.getChildContext!="function")return r;s=s.getChildContext();for(var i in s)if(!(i in n))throw Error(P(108,vN(t)||"Unknown",i));return Ce({},r,s)}function Qo(t){return t=(t=t.stateNode)&&t.__reactInternalMemoizedMergedChildContext||gr,Br=ht.current,Ne(ht,t),Ne(jt,jt.current),!0}function vb(t,n,r){var s=t.stateNode;if(!s)throw Error(P(169));r?(t=xT(t,n,Br),s.__reactInternalMemoizedMergedChildContext=t,_e(jt),_e(ht),Ne(ht,t)):_e(jt),Ne(jt,r)}var In=null,vl=!1,Pc=!1;function ET(t){In===null?In=[t]:In.push(t)}function z2(t){vl=!0,ET(t)}function Tr(){if(!Pc&&In!==null){Pc=!0;var t=0,n=be;try{var r=In;for(be=1;t<r.length;t++){var s=r[t];do s=s(!0);while(s!==null)}In=null,vl=!1}catch(i){throw In!==null&&(In=In.slice(t+1)),z0(Wu,Tr),i}finally{be=n,Pc=!1}}return null}var Ss=[],Ns=0,Jo=null,el=0,Bt=[],Ht=0,Hr=null,Cn=1,On="";function wr(t,n){Ss[Ns++]=el,Ss[Ns++]=Jo,Jo=t,el=n}function TT(t,n,r){Bt[Ht++]=Cn,Bt[Ht++]=On,Bt[Ht++]=Hr,Hr=t;var s=Cn;t=On;var i=32-an(s)-1;s&=~(1<<i),r+=1;var a=32-an(n)+i;if(30<a){var o=i-i%5;a=(s&(1<<o)-1).toString(32),s>>=o,i-=o,Cn=1<<32-an(n)+i|r<<i|s,On=a+t}else Cn=1<<a|r<<i|s,On=t}function e1(t){t.return!==null&&(wr(t,1),TT(t,1,0))}function t1(t){for(;t===Jo;)Jo=Ss[--Ns],Ss[Ns]=null,el=Ss[--Ns],Ss[Ns]=null;for(;t===Hr;)Hr=Bt[--Ht],Bt[Ht]=null,On=Bt[--Ht],Bt[Ht]=null,Cn=Bt[--Ht],Bt[Ht]=null}var Ot=null,Ct=null,ve=!1,sn=null;function yT(t,n){var r=Gt(5,null,null,0);r.elementType="DELETED",r.stateNode=n,r.return=t,n=t.deletions,n===null?(t.deletions=[r],t.flags|=16):n.push(r)}function Rb(t,n){switch(t.tag){case 5:var r=t.type;return n=n.nodeType!==1||r.toLowerCase()!==n.nodeName.toLowerCase()?null:n,n!==null?(t.stateNode=n,Ot=t,Ct=dr(n.firstChild),!0):!1;case 6:return n=t.pendingProps===""||n.nodeType!==3?null:n,n!==null?(t.stateNode=n,Ot=t,Ct=null,!0):!1;case 13:return n=n.nodeType!==8?null:n,n!==null?(r=Hr!==null?{id:Cn,overflow:On}:null,t.memoizedState={dehydrated:n,treeContext:r,retryLane:1073741824},r=Gt(18,null,null,0),r.stateNode=n,r.return=t,t.child=r,Ot=t,Ct=null,!0):!1;default:return!1}}function Qd(t){return(t.mode&1)!==0&&(t.flags&128)===0}function Jd(t){if(ve){var n=Ct;if(n){var r=n;if(!Rb(t,n)){if(Qd(t))throw Error(P(418));n=dr(r.nextSibling);var s=Ot;n&&Rb(t,n)?yT(s,r):(t.flags=t.flags&-4097|2,ve=!1,Ot=t)}}else{if(Qd(t))throw Error(P(418));t.flags=t.flags&-4097|2,ve=!1,Ot=t}}}function wb(t){for(t=t.return;t!==null&&t.tag!==5&&t.tag!==3&&t.tag!==13;)t=t.return;Ot=t}function Qa(t){if(t!==Ot)return!1;if(!ve)return wb(t),ve=!0,!1;var n;if((n=t.tag!==3)&&!(n=t.tag!==5)&&(n=t.type,n=n!=="head"&&n!=="body"&&!Yd(t.type,t.memoizedProps)),n&&(n=Ct)){if(Qd(t))throw ST(),Error(P(418));for(;n;)yT(t,n),n=dr(n.nextSibling)}if(wb(t),t.tag===13){if(t=t.memoizedState,t=t!==null?t.dehydrated:null,!t)throw Error(P(317));e:{for(t=t.nextSibling,n=0;t;){if(t.nodeType===8){var r=t.data;if(r==="/$"){if(n===0){Ct=dr(t.nextSibling);break e}n--}else r!=="$"&&r!=="$!"&&r!=="$?"||n++}t=t.nextSibling}Ct=null}}else Ct=Ot?dr(t.stateNode.nextSibling):null;return!0}function ST(){for(var t=Ct;t;)t=dr(t.nextSibling)}function Bs(){Ct=Ot=null,ve=!1}function n1(t){sn===null?sn=[t]:sn.push(t)}var W2=Bn.ReactCurrentBatchConfig;function tn(t,n){if(t&&t.defaultProps){n=Ce({},n),t=t.defaultProps;for(var r in t)n[r]===void 0&&(n[r]=t[r]);return n}return n}var tl=Er(null),nl=null,js=null,r1=null;function s1(){r1=js=nl=null}function i1(t){var n=tl.current;_e(tl),t._currentValue=n}function eu(t,n,r){for(;t!==null;){var s=t.alternate;if((t.childLanes&n)!==n?(t.childLanes|=n,s!==null&&(s.childLanes|=n)):s!==null&&(s.childLanes&n)!==n&&(s.childLanes|=n),t===r)break;t=t.return}}function ks(t,n){nl=t,r1=js=null,t=t.dependencies,t!==null&&t.firstContext!==null&&(t.lanes&n&&(Nt=!0),t.firstContext=null)}function Wt(t){var n=t._currentValue;if(r1!==t)if(t={context:t,memoizedValue:n,next:null},js===null){if(nl===null)throw Error(P(308));js=t,nl.dependencies={lanes:0,firstContext:t}}else js=js.next=t;return n}var Lr=null;function a1(t){Lr===null?Lr=[t]:Lr.push(t)}function NT(t,n,r,s){var i=n.interleaved;return i===null?(r.next=r,a1(n)):(r.next=i.next,i.next=r),n.interleaved=r,Fn(t,s)}function Fn(t,n){t.lanes|=n;var r=t.alternate;for(r!==null&&(r.lanes|=n),r=t,t=t.return;t!==null;)t.childLanes|=n,r=t.alternate,r!==null&&(r.childLanes|=n),r=t,t=t.return;return r.tag===3?r.stateNode:null}var tr=!1;function o1(t){t.updateQueue={baseState:t.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function jT(t,n){t=t.updateQueue,n.updateQueue===t&&(n.updateQueue={baseState:t.baseState,firstBaseUpdate:t.firstBaseUpdate,lastBaseUpdate:t.lastBaseUpdate,shared:t.shared,effects:t.effects})}function kn(t,n){return{eventTime:t,lane:n,tag:0,payload:null,callback:null,next:null}}function ur(t,n,r){var s=t.updateQueue;if(s===null)return null;if(s=s.shared,fe&2){var i=s.pending;return i===null?n.next=n:(n.next=i.next,i.next=n),s.pending=n,Fn(t,r)}return i=s.interleaved,i===null?(n.next=n,a1(s)):(n.next=i.next,i.next=n),s.interleaved=n,Fn(t,r)}function wo(t,n,r){if(n=n.updateQueue,n!==null&&(n=n.shared,(r&4194240)!==0)){var s=n.lanes;s&=t.pendingLanes,r|=s,n.lanes=r,Vu(t,r)}}function Ib(t,n){var r=t.updateQueue,s=t.alternate;if(s!==null&&(s=s.updateQueue,r===s)){var i=null,a=null;if(r=r.firstBaseUpdate,r!==null){do{var o={eventTime:r.eventTime,lane:r.lane,tag:r.tag,payload:r.payload,callback:r.callback,next:null};a===null?i=a=o:a=a.next=o,r=r.next}while(r!==null);a===null?i=a=n:a=a.next=n}else i=a=n;r={baseState:s.baseState,firstBaseUpdate:i,lastBaseUpdate:a,shared:s.shared,effects:s.effects},t.updateQueue=r;return}t=r.lastBaseUpdate,t===null?r.firstBaseUpdate=n:t.next=n,r.lastBaseUpdate=n}function rl(t,n,r,s){var i=t.updateQueue;tr=!1;var a=i.firstBaseUpdate,o=i.lastBaseUpdate,l=i.shared.pending;if(l!==null){i.shared.pending=null;var c=l,d=c.next;c.next=null,o===null?a=d:o.next=d,o=c;var h=t.alternate;h!==null&&(h=h.updateQueue,l=h.lastBaseUpdate,l!==o&&(l===null?h.firstBaseUpdate=d:l.next=d,h.lastBaseUpdate=c))}if(a!==null){var x=i.baseState;o=0,h=d=c=null,l=a;do{var g=l.lane,A=l.eventTime;if((s&g)===g){h!==null&&(h=h.next={eventTime:A,lane:0,tag:l.tag,payload:l.payload,callback:l.callback,next:null});e:{var S=t,y=l;switch(g=n,A=r,y.tag){case 1:if(S=y.payload,typeof S=="function"){x=S.call(A,x,g);break e}x=S;break e;case 3:S.flags=S.flags&-65537|128;case 0:if(S=y.payload,g=typeof S=="function"?S.call(A,x,g):S,g==null)break e;x=Ce({},x,g);break e;case 2:tr=!0}}l.callback!==null&&l.lane!==0&&(t.flags|=64,g=i.effects,g===null?i.effects=[l]:g.push(l))}else A={eventTime:A,lane:g,tag:l.tag,payload:l.payload,callback:l.callback,next:null},h===null?(d=h=A,c=x):h=h.next=A,o|=g;if(l=l.next,l===null){if(l=i.shared.pending,l===null)break;g=l,l=g.next,g.next=null,i.lastBaseUpdate=g,i.shared.pending=null}}while(!0);if(h===null&&(c=x),i.baseState=c,i.firstBaseUpdate=d,i.lastBaseUpdate=h,n=i.shared.interleaved,n!==null){i=n;do o|=i.lane,i=i.next;while(i!==n)}else a===null&&(i.shared.lanes=0);$r|=o,t.lanes=o,t.memoizedState=x}}function Cb(t,n,r){if(t=n.effects,n.effects=null,t!==null)for(n=0;n<t.length;n++){var s=t[n],i=s.callback;if(i!==null){if(s.callback=null,s=r,typeof i!="function")throw Error(P(191,i));i.call(s)}}}var AT=new N0.Component().refs;function tu(t,n,r,s){n=t.memoizedState,r=r(s,n),r=r==null?n:Ce({},n,r),t.memoizedState=r,t.lanes===0&&(t.updateQueue.baseState=r)}var Rl={isMounted:function(t){return(t=t._reactInternals)?Yr(t)===t:!1},enqueueSetState:function(t,n,r){t=t._reactInternals;var s=gt(),i=pr(t),a=kn(s,i);a.payload=n,r!=null&&(a.callback=r),n=ur(t,a,i),n!==null&&(on(n,t,i,s),wo(n,t,i))},enqueueReplaceState:function(t,n,r){t=t._reactInternals;var s=gt(),i=pr(t),a=kn(s,i);a.tag=1,a.payload=n,r!=null&&(a.callback=r),n=ur(t,a,i),n!==null&&(on(n,t,i,s),wo(n,t,i))},enqueueForceUpdate:function(t,n){t=t._reactInternals;var r=gt(),s=pr(t),i=kn(r,s);i.tag=2,n!=null&&(i.callback=n),n=ur(t,i,s),n!==null&&(on(n,t,s,r),wo(n,t,s))}};function Ob(t,n,r,s,i,a,o){return t=t.stateNode,typeof t.shouldComponentUpdate=="function"?t.shouldComponentUpdate(s,a,o):n.prototype&&n.prototype.isPureReactComponent?!aa(r,s)||!aa(i,a):!0}function _T(t,n,r){var s=!1,i=gr,a=n.contextType;return typeof a=="object"&&a!==null?a=Wt(a):(i=At(n)?Br:ht.current,s=n.contextTypes,a=(s=s!=null)?Us(t,i):gr),n=new n(r,a),t.memoizedState=n.state!==null&&n.state!==void 0?n.state:null,n.updater=Rl,t.stateNode=n,n._reactInternals=t,s&&(t=t.stateNode,t.__reactInternalMemoizedUnmaskedChildContext=i,t.__reactInternalMemoizedMaskedChildContext=a),n}function kb(t,n,r,s){t=n.state,typeof n.componentWillReceiveProps=="function"&&n.componentWillReceiveProps(r,s),typeof n.UNSAFE_componentWillReceiveProps=="function"&&n.UNSAFE_componentWillReceiveProps(r,s),n.state!==t&&Rl.enqueueReplaceState(n,n.state,null)}function nu(t,n,r,s){var i=t.stateNode;i.props=r,i.state=t.memoizedState,i.refs=AT,o1(t);var a=n.contextType;typeof a=="object"&&a!==null?i.context=Wt(a):(a=At(n)?Br:ht.current,i.context=Us(t,a)),i.state=t.memoizedState,a=n.getDerivedStateFromProps,typeof a=="function"&&(tu(t,n,a,r),i.state=t.memoizedState),typeof n.getDerivedStateFromProps=="function"||typeof i.getSnapshotBeforeUpdate=="function"||typeof i.UNSAFE_componentWillMount!="function"&&typeof i.componentWillMount!="function"||(n=i.state,typeof i.componentWillMount=="function"&&i.componentWillMount(),typeof i.UNSAFE_componentWillMount=="function"&&i.UNSAFE_componentWillMount(),n!==i.state&&Rl.enqueueReplaceState(i,i.state,null),rl(t,r,i,s),i.state=t.memoizedState),typeof i.componentDidMount=="function"&&(t.flags|=4194308)}function mi(t,n,r){if(t=r.ref,t!==null&&typeof t!="function"&&typeof t!="object"){if(r._owner){if(r=r._owner,r){if(r.tag!==1)throw Error(P(309));var s=r.stateNode}if(!s)throw Error(P(147,t));var i=s,a=""+t;return n!==null&&n.ref!==null&&typeof n.ref=="function"&&n.ref._stringRef===a?n.ref:(n=function(o){var l=i.refs;l===AT&&(l=i.refs={}),o===null?delete l[a]:l[a]=o},n._stringRef=a,n)}if(typeof t!="string")throw Error(P(284));if(!r._owner)throw Error(P(290,t))}return t}function Ja(t,n){throw t=Object.prototype.toString.call(n),Error(P(31,t==="[object Object]"?"object with keys {"+Object.keys(n).join(", ")+"}":t))}function Lb(t){var n=t._init;return n(t._payload)}function vT(t){function n(f,b){if(t){var T=f.deletions;T===null?(f.deletions=[b],f.flags|=16):T.push(b)}}function r(f,b){if(!t)return null;for(;b!==null;)n(f,b),b=b.sibling;return null}function s(f,b){for(f=new Map;b!==null;)b.key!==null?f.set(b.key,b):f.set(b.index,b),b=b.sibling;return f}function i(f,b){return f=mr(f,b),f.index=0,f.sibling=null,f}function a(f,b,T){return f.index=T,t?(T=f.alternate,T!==null?(T=T.index,T<b?(f.flags|=2,b):T):(f.flags|=2,b)):(f.flags|=1048576,b)}function o(f){return t&&f.alternate===null&&(f.flags|=2),f}function l(f,b,T,E){return b===null||b.tag!==6?(b=Wc(T,f.mode,E),b.return=f,b):(b=i(b,T),b.return=f,b)}function c(f,b,T,E){var R=T.type;return R===gs?h(f,b,T.props.children,E,T.key):b!==null&&(b.elementType===R||typeof R=="object"&&R!==null&&R.$$typeof===er&&Lb(R)===b.type)?(E=i(b,T.props),E.ref=mi(f,b,T),E.return=f,E):(E=Do(T.type,T.key,T.props,null,f.mode,E),E.ref=mi(f,b,T),E.return=f,E)}function d(f,b,T,E){return b===null||b.tag!==4||b.stateNode.containerInfo!==T.containerInfo||b.stateNode.implementation!==T.implementation?(b=Vc(T,f.mode,E),b.return=f,b):(b=i(b,T.children||[]),b.return=f,b)}function h(f,b,T,E,R){return b===null||b.tag!==7?(b=Ur(T,f.mode,E,R),b.return=f,b):(b=i(b,T),b.return=f,b)}function x(f,b,T){if(typeof b=="string"&&b!==""||typeof b=="number")return b=Wc(""+b,f.mode,T),b.return=f,b;if(typeof b=="object"&&b!==null){switch(b.$$typeof){case Ga:return T=Do(b.type,b.key,b.props,null,f.mode,T),T.ref=mi(f,null,b),T.return=f,T;case fs:return b=Vc(b,f.mode,T),b.return=f,b;case er:var E=b._init;return x(f,E(b._payload),T)}if(Ci(b)||ci(b))return b=Ur(b,f.mode,T,null),b.return=f,b;Ja(f,b)}return null}function g(f,b,T,E){var R=b!==null?b.key:null;if(typeof T=="string"&&T!==""||typeof T=="number")return R!==null?null:l(f,b,""+T,E);if(typeof T=="object"&&T!==null){switch(T.$$typeof){case Ga:return T.key===R?c(f,b,T,E):null;case fs:return T.key===R?d(f,b,T,E):null;case er:return R=T._init,g(f,b,R(T._payload),E)}if(Ci(T)||ci(T))return R!==null?null:h(f,b,T,E,null);Ja(f,T)}return null}function A(f,b,T,E,R){if(typeof E=="string"&&E!==""||typeof E=="number")return f=f.get(T)||null,l(b,f,""+E,R);if(typeof E=="object"&&E!==null){switch(E.$$typeof){case Ga:return f=f.get(E.key===null?T:E.key)||null,c(b,f,E,R);case fs:return f=f.get(E.key===null?T:E.key)||null,d(b,f,E,R);case er:var I=E._init;return A(f,b,T,I(E._payload),R)}if(Ci(E)||ci(E))return f=f.get(T)||null,h(b,f,E,R,null);Ja(b,E)}return null}function S(f,b,T,E){for(var R=null,I=null,v=b,O=b=0,F=null;v!==null&&O<T.length;O++){v.index>O?(F=v,v=null):F=v.sibling;var H=g(f,v,T[O],E);if(H===null){v===null&&(v=F);break}t&&v&&H.alternate===null&&n(f,v),b=a(H,b,O),I===null?R=H:I.sibling=H,I=H,v=F}if(O===T.length)return r(f,v),ve&&wr(f,O),R;if(v===null){for(;O<T.length;O++)v=x(f,T[O],E),v!==null&&(b=a(v,b,O),I===null?R=v:I.sibling=v,I=v);return ve&&wr(f,O),R}for(v=s(f,v);O<T.length;O++)F=A(v,f,O,T[O],E),F!==null&&(t&&F.alternate!==null&&v.delete(F.key===null?O:F.key),b=a(F,b,O),I===null?R=F:I.sibling=F,I=F);return t&&v.forEach(function(J){return n(f,J)}),ve&&wr(f,O),R}function y(f,b,T,E){var R=ci(T);if(typeof R!="function")throw Error(P(150));if(T=R.call(T),T==null)throw Error(P(151));for(var I=R=null,v=b,O=b=0,F=null,H=T.next();v!==null&&!H.done;O++,H=T.next()){v.index>O?(F=v,v=null):F=v.sibling;var J=g(f,v,H.value,E);if(J===null){v===null&&(v=F);break}t&&v&&J.alternate===null&&n(f,v),b=a(J,b,O),I===null?R=J:I.sibling=J,I=J,v=F}if(H.done)return r(f,v),ve&&wr(f,O),R;if(v===null){for(;!H.done;O++,H=T.next())H=x(f,H.value,E),H!==null&&(b=a(H,b,O),I===null?R=H:I.sibling=H,I=H);return ve&&wr(f,O),R}for(v=s(f,v);!H.done;O++,H=T.next())H=A(v,f,O,H.value,E),H!==null&&(t&&H.alternate!==null&&v.delete(H.key===null?O:H.key),b=a(H,b,O),I===null?R=H:I.sibling=H,I=H);return t&&v.forEach(function(X){return n(f,X)}),ve&&wr(f,O),R}function _(f,b,T,E){if(typeof T=="object"&&T!==null&&T.type===gs&&T.key===null&&(T=T.props.children),typeof T=="object"&&T!==null){switch(T.$$typeof){case Ga:e:{for(var R=T.key,I=b;I!==null;){if(I.key===R){if(R=T.type,R===gs){if(I.tag===7){r(f,I.sibling),b=i(I,T.props.children),b.return=f,f=b;break e}}else if(I.elementType===R||typeof R=="object"&&R!==null&&R.$$typeof===er&&Lb(R)===I.type){r(f,I.sibling),b=i(I,T.props),b.ref=mi(f,I,T),b.return=f,f=b;break e}r(f,I);break}else n(f,I);I=I.sibling}T.type===gs?(b=Ur(T.props.children,f.mode,E,T.key),b.return=f,f=b):(E=Do(T.type,T.key,T.props,null,f.mode,E),E.ref=mi(f,b,T),E.return=f,f=E)}return o(f);case fs:e:{for(I=T.key;b!==null;){if(b.key===I)if(b.tag===4&&b.stateNode.containerInfo===T.containerInfo&&b.stateNode.implementation===T.implementation){r(f,b.sibling),b=i(b,T.children||[]),b.return=f,f=b;break e}else{r(f,b);break}else n(f,b);b=b.sibling}b=Vc(T,f.mode,E),b.return=f,f=b}return o(f);case er:return I=T._init,_(f,b,I(T._payload),E)}if(Ci(T))return S(f,b,T,E);if(ci(T))return y(f,b,T,E);Ja(f,T)}return typeof T=="string"&&T!==""||typeof T=="number"?(T=""+T,b!==null&&b.tag===6?(r(f,b.sibling),b=i(b,T),b.return=f,f=b):(r(f,b),b=Wc(T,f.mode,E),b.return=f,f=b),o(f)):r(f,b)}return _}var Hs=vT(!0),RT=vT(!1),Na={},Tn=Er(Na),da=Er(Na),ua=Er(Na);function Dr(t){if(t===Na)throw Error(P(174));return t}function l1(t,n){switch(Ne(ua,n),Ne(da,t),Ne(Tn,Na),t=n.nodeType,t){case 9:case 11:n=(n=n.documentElement)?n.namespaceURI:Ld(null,"");break;default:t=t===8?n.parentNode:n,n=t.namespaceURI||null,t=t.tagName,n=Ld(n,t)}_e(Tn),Ne(Tn,n)}function Gs(){_e(Tn),_e(da),_e(ua)}function wT(t){Dr(ua.current);var n=Dr(Tn.current),r=Ld(n,t.type);n!==r&&(Ne(da,t),Ne(Tn,r))}function c1(t){da.current===t&&(_e(Tn),_e(da))}var we=Er(0);function sl(t){for(var n=t;n!==null;){if(n.tag===13){var r=n.memoizedState;if(r!==null&&(r=r.dehydrated,r===null||r.data==="$?"||r.data==="$!"))return n}else if(n.tag===19&&n.memoizedProps.revealOrder!==void 0){if(n.flags&128)return n}else if(n.child!==null){n.child.return=n,n=n.child;continue}if(n===t)break;for(;n.sibling===null;){if(n.return===null||n.return===t)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}return null}var Uc=[];function d1(){for(var t=0;t<Uc.length;t++)Uc[t]._workInProgressVersionPrimary=null;Uc.length=0}var Io=Bn.ReactCurrentDispatcher,Bc=Bn.ReactCurrentBatchConfig,Gr=0,Ie=null,We=null,Ye=null,il=!1,Bi=!1,ha=0,V2=0;function lt(){throw Error(P(321))}function u1(t,n){if(n===null)return!1;for(var r=0;r<n.length&&r<t.length;r++)if(!ln(t[r],n[r]))return!1;return!0}function h1(t,n,r,s,i,a){if(Gr=a,Ie=n,n.memoizedState=null,n.updateQueue=null,n.lanes=0,Io.current=t===null||t.memoizedState===null?X2:Z2,t=r(s,i),Bi){a=0;do{if(Bi=!1,ha=0,25<=a)throw Error(P(301));a+=1,Ye=We=null,n.updateQueue=null,Io.current=Q2,t=r(s,i)}while(Bi)}if(Io.current=al,n=We!==null&&We.next!==null,Gr=0,Ye=We=Ie=null,il=!1,n)throw Error(P(300));return t}function p1(){var t=ha!==0;return ha=0,t}function fn(){var t={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return Ye===null?Ie.memoizedState=Ye=t:Ye=Ye.next=t,Ye}function Vt(){if(We===null){var t=Ie.alternate;t=t!==null?t.memoizedState:null}else t=We.next;var n=Ye===null?Ie.memoizedState:Ye.next;if(n!==null)Ye=n,We=t;else{if(t===null)throw Error(P(310));We=t,t={memoizedState:We.memoizedState,baseState:We.baseState,baseQueue:We.baseQueue,queue:We.queue,next:null},Ye===null?Ie.memoizedState=Ye=t:Ye=Ye.next=t}return Ye}function pa(t,n){return typeof n=="function"?n(t):n}function Hc(t){var n=Vt(),r=n.queue;if(r===null)throw Error(P(311));r.lastRenderedReducer=t;var s=We,i=s.baseQueue,a=r.pending;if(a!==null){if(i!==null){var o=i.next;i.next=a.next,a.next=o}s.baseQueue=i=a,r.pending=null}if(i!==null){a=i.next,s=s.baseState;var l=o=null,c=null,d=a;do{var h=d.lane;if((Gr&h)===h)c!==null&&(c=c.next={lane:0,action:d.action,hasEagerState:d.hasEagerState,eagerState:d.eagerState,next:null}),s=d.hasEagerState?d.eagerState:t(s,d.action);else{var x={lane:h,action:d.action,hasEagerState:d.hasEagerState,eagerState:d.eagerState,next:null};c===null?(l=c=x,o=s):c=c.next=x,Ie.lanes|=h,$r|=h}d=d.next}while(d!==null&&d!==a);c===null?o=s:c.next=l,ln(s,n.memoizedState)||(Nt=!0),n.memoizedState=s,n.baseState=o,n.baseQueue=c,r.lastRenderedState=s}if(t=r.interleaved,t!==null){i=t;do a=i.lane,Ie.lanes|=a,$r|=a,i=i.next;while(i!==t)}else i===null&&(r.lanes=0);return[n.memoizedState,r.dispatch]}function Gc(t){var n=Vt(),r=n.queue;if(r===null)throw Error(P(311));r.lastRenderedReducer=t;var s=r.dispatch,i=r.pending,a=n.memoizedState;if(i!==null){r.pending=null;var o=i=i.next;do a=t(a,o.action),o=o.next;while(o!==i);ln(a,n.memoizedState)||(Nt=!0),n.memoizedState=a,n.baseQueue===null&&(n.baseState=a),r.lastRenderedState=a}return[a,s]}function IT(){}function CT(t,n){var r=Ie,s=Vt(),i=n(),a=!ln(s.memoizedState,i);if(a&&(s.memoizedState=i,Nt=!0),s=s.queue,m1(LT.bind(null,r,s,t),[t]),s.getSnapshot!==n||a||Ye!==null&&Ye.memoizedState.tag&1){if(r.flags|=2048,ma(9,kT.bind(null,r,s,i,n),void 0,null),Xe===null)throw Error(P(349));Gr&30||OT(r,n,i)}return i}function OT(t,n,r){t.flags|=16384,t={getSnapshot:n,value:r},n=Ie.updateQueue,n===null?(n={lastEffect:null,stores:null},Ie.updateQueue=n,n.stores=[t]):(r=n.stores,r===null?n.stores=[t]:r.push(t))}function kT(t,n,r,s){n.value=r,n.getSnapshot=s,DT(n)&&MT(t)}function LT(t,n,r){return r(function(){DT(n)&&MT(t)})}function DT(t){var n=t.getSnapshot;t=t.value;try{var r=n();return!ln(t,r)}catch{return!0}}function MT(t){var n=Fn(t,1);n!==null&&on(n,t,1,-1)}function Db(t){var n=fn();return typeof t=="function"&&(t=t()),n.memoizedState=n.baseState=t,t={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:pa,lastRenderedState:t},n.queue=t,t=t.dispatch=q2.bind(null,Ie,t),[n.memoizedState,t]}function ma(t,n,r,s){return t={tag:t,create:n,destroy:r,deps:s,next:null},n=Ie.updateQueue,n===null?(n={lastEffect:null,stores:null},Ie.updateQueue=n,n.lastEffect=t.next=t):(r=n.lastEffect,r===null?n.lastEffect=t.next=t:(s=r.next,r.next=t,t.next=s,n.lastEffect=t)),t}function FT(){return Vt().memoizedState}function Co(t,n,r,s){var i=fn();Ie.flags|=t,i.memoizedState=ma(1|n,r,void 0,s===void 0?null:s)}function wl(t,n,r,s){var i=Vt();s=s===void 0?null:s;var a=void 0;if(We!==null){var o=We.memoizedState;if(a=o.destroy,s!==null&&u1(s,o.deps)){i.memoizedState=ma(n,r,a,s);return}}Ie.flags|=t,i.memoizedState=ma(1|n,r,a,s)}function Mb(t,n){return Co(8390656,8,t,n)}function m1(t,n){return wl(2048,8,t,n)}function PT(t,n){return wl(4,2,t,n)}function UT(t,n){return wl(4,4,t,n)}function BT(t,n){if(typeof n=="function")return t=t(),n(t),function(){n(null)};if(n!=null)return t=t(),n.current=t,function(){n.current=null}}function HT(t,n,r){return r=r!=null?r.concat([t]):null,wl(4,4,BT.bind(null,n,t),r)}function f1(){}function GT(t,n){var r=Vt();n=n===void 0?null:n;var s=r.memoizedState;return s!==null&&n!==null&&u1(n,s[1])?s[0]:(r.memoizedState=[t,n],t)}function $T(t,n){var r=Vt();n=n===void 0?null:n;var s=r.memoizedState;return s!==null&&n!==null&&u1(n,s[1])?s[0]:(t=t(),r.memoizedState=[t,n],t)}function zT(t,n,r){return Gr&21?(ln(r,n)||(r=K0(),Ie.lanes|=r,$r|=r,t.baseState=!0),n):(t.baseState&&(t.baseState=!1,Nt=!0),t.memoizedState=r)}function K2(t,n){var r=be;be=r!==0&&4>r?r:4,t(!0);var s=Bc.transition;Bc.transition={};try{t(!1),n()}finally{be=r,Bc.transition=s}}function WT(){return Vt().memoizedState}function Y2(t,n,r){var s=pr(t);if(r={lane:s,action:r,hasEagerState:!1,eagerState:null,next:null},VT(t))KT(n,r);else if(r=NT(t,n,r,s),r!==null){var i=gt();on(r,t,s,i),YT(r,n,s)}}function q2(t,n,r){var s=pr(t),i={lane:s,action:r,hasEagerState:!1,eagerState:null,next:null};if(VT(t))KT(n,i);else{var a=t.alternate;if(t.lanes===0&&(a===null||a.lanes===0)&&(a=n.lastRenderedReducer,a!==null))try{var o=n.lastRenderedState,l=a(o,r);if(i.hasEagerState=!0,i.eagerState=l,ln(l,o)){var c=n.interleaved;c===null?(i.next=i,a1(n)):(i.next=c.next,c.next=i),n.interleaved=i;return}}catch{}finally{}r=NT(t,n,i,s),r!==null&&(i=gt(),on(r,t,s,i),YT(r,n,s))}}function VT(t){var n=t.alternate;return t===Ie||n!==null&&n===Ie}function KT(t,n){Bi=il=!0;var r=t.pending;r===null?n.next=n:(n.next=r.next,r.next=n),t.pending=n}function YT(t,n,r){if(r&4194240){var s=n.lanes;s&=t.pendingLanes,r|=s,n.lanes=r,Vu(t,r)}}var al={readContext:Wt,useCallback:lt,useContext:lt,useEffect:lt,useImperativeHandle:lt,useInsertionEffect:lt,useLayoutEffect:lt,useMemo:lt,useReducer:lt,useRef:lt,useState:lt,useDebugValue:lt,useDeferredValue:lt,useTransition:lt,useMutableSource:lt,useSyncExternalStore:lt,useId:lt,unstable_isNewReconciler:!1},X2={readContext:Wt,useCallback:function(t,n){return fn().memoizedState=[t,n===void 0?null:n],t},useContext:Wt,useEffect:Mb,useImperativeHandle:function(t,n,r){return r=r!=null?r.concat([t]):null,Co(4194308,4,BT.bind(null,n,t),r)},useLayoutEffect:function(t,n){return Co(4194308,4,t,n)},useInsertionEffect:function(t,n){return Co(4,2,t,n)},useMemo:function(t,n){var r=fn();return n=n===void 0?null:n,t=t(),r.memoizedState=[t,n],t},useReducer:function(t,n,r){var s=fn();return n=r!==void 0?r(n):n,s.memoizedState=s.baseState=n,t={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:t,lastRenderedState:n},s.queue=t,t=t.dispatch=Y2.bind(null,Ie,t),[s.memoizedState,t]},useRef:function(t){var n=fn();return t={current:t},n.memoizedState=t},useState:Db,useDebugValue:f1,useDeferredValue:function(t){return fn().memoizedState=t},useTransition:function(){var t=Db(!1),n=t[0];return t=K2.bind(null,t[1]),fn().memoizedState=t,[n,t]},useMutableSource:function(){},useSyncExternalStore:function(t,n,r){var s=Ie,i=fn();if(ve){if(r===void 0)throw Error(P(407));r=r()}else{if(r=n(),Xe===null)throw Error(P(349));Gr&30||OT(s,n,r)}i.memoizedState=r;var a={value:r,getSnapshot:n};return i.queue=a,Mb(LT.bind(null,s,a,t),[t]),s.flags|=2048,ma(9,kT.bind(null,s,a,r,n),void 0,null),r},useId:function(){var t=fn(),n=Xe.identifierPrefix;if(ve){var r=On,s=Cn;r=(s&~(1<<32-an(s)-1)).toString(32)+r,n=":"+n+"R"+r,r=ha++,0<r&&(n+="H"+r.toString(32)),n+=":"}else r=V2++,n=":"+n+"r"+r.toString(32)+":";return t.memoizedState=n},unstable_isNewReconciler:!1},Z2={readContext:Wt,useCallback:GT,useContext:Wt,useEffect:m1,useImperativeHandle:HT,useInsertionEffect:PT,useLayoutEffect:UT,useMemo:$T,useReducer:Hc,useRef:FT,useState:function(){return Hc(pa)},useDebugValue:f1,useDeferredValue:function(t){var n=Vt();return zT(n,We.memoizedState,t)},useTransition:function(){var t=Hc(pa)[0],n=Vt().memoizedState;return[t,n]},useMutableSource:IT,useSyncExternalStore:CT,useId:WT,unstable_isNewReconciler:!1},Q2={readContext:Wt,useCallback:GT,useContext:Wt,useEffect:m1,useImperativeHandle:HT,useInsertionEffect:PT,useLayoutEffect:UT,useMemo:$T,useReducer:Gc,useRef:FT,useState:function(){return Gc(pa)},useDebugValue:f1,useDeferredValue:function(t){var n=Vt();return We===null?n.memoizedState=t:zT(n,We.memoizedState,t)},useTransition:function(){var t=Gc(pa)[0],n=Vt().memoizedState;return[t,n]},useMutableSource:IT,useSyncExternalStore:CT,useId:WT,unstable_isNewReconciler:!1};function $s(t,n){try{var r="",s=n;do r+=_N(s),s=s.return;while(s);var i=r}catch(a){i=`
Error generating stack: `+a.message+`
`+a.stack}return{value:t,source:n,stack:i,digest:null}}function $c(t,n,r){return{value:t,source:null,stack:r??null,digest:n??null}}function ru(t,n){try{console.error(n.value)}catch(r){setTimeout(function(){throw r})}}var J2=typeof WeakMap=="function"?WeakMap:Map;function qT(t,n,r){r=kn(-1,r),r.tag=3,r.payload={element:null};var s=n.value;return r.callback=function(){ll||(ll=!0,pu=s),ru(t,n)},r}function XT(t,n,r){r=kn(-1,r),r.tag=3;var s=t.type.getDerivedStateFromError;if(typeof s=="function"){var i=n.value;r.payload=function(){return s(i)},r.callback=function(){ru(t,n)}}var a=t.stateNode;return a!==null&&typeof a.componentDidCatch=="function"&&(r.callback=function(){ru(t,n),typeof s!="function"&&(hr===null?hr=new Set([this]):hr.add(this));var o=n.stack;this.componentDidCatch(n.value,{componentStack:o!==null?o:""})}),r}function Fb(t,n,r){var s=t.pingCache;if(s===null){s=t.pingCache=new J2;var i=new Set;s.set(n,i)}else i=s.get(n),i===void 0&&(i=new Set,s.set(n,i));i.has(r)||(i.add(r),t=pj.bind(null,t,n,r),n.then(t,t))}function Pb(t){do{var n;if((n=t.tag===13)&&(n=t.memoizedState,n=n!==null?n.dehydrated!==null:!0),n)return t;t=t.return}while(t!==null);return null}function Ub(t,n,r,s,i){return t.mode&1?(t.flags|=65536,t.lanes=i,t):(t===n?t.flags|=65536:(t.flags|=128,r.flags|=131072,r.flags&=-52805,r.tag===1&&(r.alternate===null?r.tag=17:(n=kn(-1,1),n.tag=2,ur(r,n,1))),r.lanes|=1),t)}var ej=Bn.ReactCurrentOwner,Nt=!1;function ft(t,n,r,s){n.child=t===null?RT(n,null,r,s):Hs(n,t.child,r,s)}function Bb(t,n,r,s,i){r=r.render;var a=n.ref;return ks(n,i),s=h1(t,n,r,s,a,i),r=p1(),t!==null&&!Nt?(n.updateQueue=t.updateQueue,n.flags&=-2053,t.lanes&=~i,Pn(t,n,i)):(ve&&r&&e1(n),n.flags|=1,ft(t,n,s,i),n.child)}function Hb(t,n,r,s,i){if(t===null){var a=r.type;return typeof a=="function"&&!N1(a)&&a.defaultProps===void 0&&r.compare===null&&r.defaultProps===void 0?(n.tag=15,n.type=a,ZT(t,n,a,s,i)):(t=Do(r.type,null,s,n,n.mode,i),t.ref=n.ref,t.return=n,n.child=t)}if(a=t.child,!(t.lanes&i)){var o=a.memoizedProps;if(r=r.compare,r=r!==null?r:aa,r(o,s)&&t.ref===n.ref)return Pn(t,n,i)}return n.flags|=1,t=mr(a,s),t.ref=n.ref,t.return=n,n.child=t}function ZT(t,n,r,s,i){if(t!==null){var a=t.memoizedProps;if(aa(a,s)&&t.ref===n.ref)if(Nt=!1,n.pendingProps=s=a,(t.lanes&i)!==0)t.flags&131072&&(Nt=!0);else return n.lanes=t.lanes,Pn(t,n,i)}return su(t,n,r,s,i)}function QT(t,n,r){var s=n.pendingProps,i=s.children,a=t!==null?t.memoizedState:null;if(s.mode==="hidden")if(!(n.mode&1))n.memoizedState={baseLanes:0,cachePool:null,transitions:null},Ne(_s,It),It|=r;else{if(!(r&1073741824))return t=a!==null?a.baseLanes|r:r,n.lanes=n.childLanes=1073741824,n.memoizedState={baseLanes:t,cachePool:null,transitions:null},n.updateQueue=null,Ne(_s,It),It|=t,null;n.memoizedState={baseLanes:0,cachePool:null,transitions:null},s=a!==null?a.baseLanes:r,Ne(_s,It),It|=s}else a!==null?(s=a.baseLanes|r,n.memoizedState=null):s=r,Ne(_s,It),It|=s;return ft(t,n,i,r),n.child}function JT(t,n){var r=n.ref;(t===null&&r!==null||t!==null&&t.ref!==r)&&(n.flags|=512,n.flags|=2097152)}function su(t,n,r,s,i){var a=At(r)?Br:ht.current;return a=Us(n,a),ks(n,i),r=h1(t,n,r,s,a,i),s=p1(),t!==null&&!Nt?(n.updateQueue=t.updateQueue,n.flags&=-2053,t.lanes&=~i,Pn(t,n,i)):(ve&&s&&e1(n),n.flags|=1,ft(t,n,r,i),n.child)}function Gb(t,n,r,s,i){if(At(r)){var a=!0;Qo(n)}else a=!1;if(ks(n,i),n.stateNode===null)Oo(t,n),_T(n,r,s),nu(n,r,s,i),s=!0;else if(t===null){var o=n.stateNode,l=n.memoizedProps;o.props=l;var c=o.context,d=r.contextType;typeof d=="object"&&d!==null?d=Wt(d):(d=At(r)?Br:ht.current,d=Us(n,d));var h=r.getDerivedStateFromProps,x=typeof h=="function"||typeof o.getSnapshotBeforeUpdate=="function";x||typeof o.UNSAFE_componentWillReceiveProps!="function"&&typeof o.componentWillReceiveProps!="function"||(l!==s||c!==d)&&kb(n,o,s,d),tr=!1;var g=n.memoizedState;o.state=g,rl(n,s,o,i),c=n.memoizedState,l!==s||g!==c||jt.current||tr?(typeof h=="function"&&(tu(n,r,h,s),c=n.memoizedState),(l=tr||Ob(n,r,l,s,g,c,d))?(x||typeof o.UNSAFE_componentWillMount!="function"&&typeof o.componentWillMount!="function"||(typeof o.componentWillMount=="function"&&o.componentWillMount(),typeof o.UNSAFE_componentWillMount=="function"&&o.UNSAFE_componentWillMount()),typeof o.componentDidMount=="function"&&(n.flags|=4194308)):(typeof o.componentDidMount=="function"&&(n.flags|=4194308),n.memoizedProps=s,n.memoizedState=c),o.props=s,o.state=c,o.context=d,s=l):(typeof o.componentDidMount=="function"&&(n.flags|=4194308),s=!1)}else{o=n.stateNode,jT(t,n),l=n.memoizedProps,d=n.type===n.elementType?l:tn(n.type,l),o.props=d,x=n.pendingProps,g=o.context,c=r.contextType,typeof c=="object"&&c!==null?c=Wt(c):(c=At(r)?Br:ht.current,c=Us(n,c));var A=r.getDerivedStateFromProps;(h=typeof A=="function"||typeof o.getSnapshotBeforeUpdate=="function")||typeof o.UNSAFE_componentWillReceiveProps!="function"&&typeof o.componentWillReceiveProps!="function"||(l!==x||g!==c)&&kb(n,o,s,c),tr=!1,g=n.memoizedState,o.state=g,rl(n,s,o,i);var S=n.memoizedState;l!==x||g!==S||jt.current||tr?(typeof A=="function"&&(tu(n,r,A,s),S=n.memoizedState),(d=tr||Ob(n,r,d,s,g,S,c)||!1)?(h||typeof o.UNSAFE_componentWillUpdate!="function"&&typeof o.componentWillUpdate!="function"||(typeof o.componentWillUpdate=="function"&&o.componentWillUpdate(s,S,c),typeof o.UNSAFE_componentWillUpdate=="function"&&o.UNSAFE_componentWillUpdate(s,S,c)),typeof o.componentDidUpdate=="function"&&(n.flags|=4),typeof o.getSnapshotBeforeUpdate=="function"&&(n.flags|=1024)):(typeof o.componentDidUpdate!="function"||l===t.memoizedProps&&g===t.memoizedState||(n.flags|=4),typeof o.getSnapshotBeforeUpdate!="function"||l===t.memoizedProps&&g===t.memoizedState||(n.flags|=1024),n.memoizedProps=s,n.memoizedState=S),o.props=s,o.state=S,o.context=c,s=d):(typeof o.componentDidUpdate!="function"||l===t.memoizedProps&&g===t.memoizedState||(n.flags|=4),typeof o.getSnapshotBeforeUpdate!="function"||l===t.memoizedProps&&g===t.memoizedState||(n.flags|=1024),s=!1)}return iu(t,n,r,s,a,i)}function iu(t,n,r,s,i,a){JT(t,n);var o=(n.flags&128)!==0;if(!s&&!o)return i&&vb(n,r,!1),Pn(t,n,a);s=n.stateNode,ej.current=n;var l=o&&typeof r.getDerivedStateFromError!="function"?null:s.render();return n.flags|=1,t!==null&&o?(n.child=Hs(n,t.child,null,a),n.child=Hs(n,null,l,a)):ft(t,n,l,a),n.memoizedState=s.state,i&&vb(n,r,!0),n.child}function ey(t){var n=t.stateNode;n.pendingContext?_b(t,n.pendingContext,n.pendingContext!==n.context):n.context&&_b(t,n.context,!1),l1(t,n.containerInfo)}function $b(t,n,r,s,i){return Bs(),n1(i),n.flags|=256,ft(t,n,r,s),n.child}var au={dehydrated:null,treeContext:null,retryLane:0};function ou(t){return{baseLanes:t,cachePool:null,transitions:null}}function ty(t,n,r){var s=n.pendingProps,i=we.current,a=!1,o=(n.flags&128)!==0,l;if((l=o)||(l=t!==null&&t.memoizedState===null?!1:(i&2)!==0),l?(a=!0,n.flags&=-129):(t===null||t.memoizedState!==null)&&(i|=1),Ne(we,i&1),t===null)return Jd(n),t=n.memoizedState,t!==null&&(t=t.dehydrated,t!==null)?(n.mode&1?t.data==="$!"?n.lanes=8:n.lanes=1073741824:n.lanes=1,null):(o=s.children,t=s.fallback,a?(s=n.mode,a=n.child,o={mode:"hidden",children:o},!(s&1)&&a!==null?(a.childLanes=0,a.pendingProps=o):a=Ol(o,s,0,null),t=Ur(t,s,r,null),a.return=n,t.return=n,a.sibling=t,n.child=a,n.child.memoizedState=ou(r),n.memoizedState=au,t):g1(n,o));if(i=t.memoizedState,i!==null&&(l=i.dehydrated,l!==null))return tj(t,n,o,s,l,i,r);if(a){a=s.fallback,o=n.mode,i=t.child,l=i.sibling;var c={mode:"hidden",children:s.children};return!(o&1)&&n.child!==i?(s=n.child,s.childLanes=0,s.pendingProps=c,n.deletions=null):(s=mr(i,c),s.subtreeFlags=i.subtreeFlags&14680064),l!==null?a=mr(l,a):(a=Ur(a,o,r,null),a.flags|=2),a.return=n,s.return=n,s.sibling=a,n.child=s,s=a,a=n.child,o=t.child.memoizedState,o=o===null?ou(r):{baseLanes:o.baseLanes|r,cachePool:null,transitions:o.transitions},a.memoizedState=o,a.childLanes=t.childLanes&~r,n.memoizedState=au,s}return a=t.child,t=a.sibling,s=mr(a,{mode:"visible",children:s.children}),!(n.mode&1)&&(s.lanes=r),s.return=n,s.sibling=null,t!==null&&(r=n.deletions,r===null?(n.deletions=[t],n.flags|=16):r.push(t)),n.child=s,n.memoizedState=null,s}function g1(t,n){return n=Ol({mode:"visible",children:n},t.mode,0,null),n.return=t,t.child=n}function eo(t,n,r,s){return s!==null&&n1(s),Hs(n,t.child,null,r),t=g1(n,n.pendingProps.children),t.flags|=2,n.memoizedState=null,t}function tj(t,n,r,s,i,a,o){if(r)return n.flags&256?(n.flags&=-257,s=$c(Error(P(422))),eo(t,n,o,s)):n.memoizedState!==null?(n.child=t.child,n.flags|=128,null):(a=s.fallback,i=n.mode,s=Ol({mode:"visible",children:s.children},i,0,null),a=Ur(a,i,o,null),a.flags|=2,s.return=n,a.return=n,s.sibling=a,n.child=s,n.mode&1&&Hs(n,t.child,null,o),n.child.memoizedState=ou(o),n.memoizedState=au,a);if(!(n.mode&1))return eo(t,n,o,null);if(i.data==="$!"){if(s=i.nextSibling&&i.nextSibling.dataset,s)var l=s.dgst;return s=l,a=Error(P(419)),s=$c(a,s,void 0),eo(t,n,o,s)}if(l=(o&t.childLanes)!==0,Nt||l){if(s=Xe,s!==null){switch(o&-o){case 4:i=2;break;case 16:i=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:i=32;break;case 536870912:i=268435456;break;default:i=0}i=i&(s.suspendedLanes|o)?0:i,i!==0&&i!==a.retryLane&&(a.retryLane=i,Fn(t,i),on(s,t,i,-1))}return S1(),s=$c(Error(P(421))),eo(t,n,o,s)}return i.data==="$?"?(n.flags|=128,n.child=t.child,n=mj.bind(null,t),i._reactRetry=n,null):(t=a.treeContext,Ct=dr(i.nextSibling),Ot=n,ve=!0,sn=null,t!==null&&(Bt[Ht++]=Cn,Bt[Ht++]=On,Bt[Ht++]=Hr,Cn=t.id,On=t.overflow,Hr=n),n=g1(n,s.children),n.flags|=4096,n)}function zb(t,n,r){t.lanes|=n;var s=t.alternate;s!==null&&(s.lanes|=n),eu(t.return,n,r)}function zc(t,n,r,s,i){var a=t.memoizedState;a===null?t.memoizedState={isBackwards:n,rendering:null,renderingStartTime:0,last:s,tail:r,tailMode:i}:(a.isBackwards=n,a.rendering=null,a.renderingStartTime=0,a.last=s,a.tail=r,a.tailMode=i)}function ny(t,n,r){var s=n.pendingProps,i=s.revealOrder,a=s.tail;if(ft(t,n,s.children,r),s=we.current,s&2)s=s&1|2,n.flags|=128;else{if(t!==null&&t.flags&128)e:for(t=n.child;t!==null;){if(t.tag===13)t.memoizedState!==null&&zb(t,r,n);else if(t.tag===19)zb(t,r,n);else if(t.child!==null){t.child.return=t,t=t.child;continue}if(t===n)break e;for(;t.sibling===null;){if(t.return===null||t.return===n)break e;t=t.return}t.sibling.return=t.return,t=t.sibling}s&=1}if(Ne(we,s),!(n.mode&1))n.memoizedState=null;else switch(i){case"forwards":for(r=n.child,i=null;r!==null;)t=r.alternate,t!==null&&sl(t)===null&&(i=r),r=r.sibling;r=i,r===null?(i=n.child,n.child=null):(i=r.sibling,r.sibling=null),zc(n,!1,i,r,a);break;case"backwards":for(r=null,i=n.child,n.child=null;i!==null;){if(t=i.alternate,t!==null&&sl(t)===null){n.child=i;break}t=i.sibling,i.sibling=r,r=i,i=t}zc(n,!0,r,null,a);break;case"together":zc(n,!1,null,null,void 0);break;default:n.memoizedState=null}return n.child}function Oo(t,n){!(n.mode&1)&&t!==null&&(t.alternate=null,n.alternate=null,n.flags|=2)}function Pn(t,n,r){if(t!==null&&(n.dependencies=t.dependencies),$r|=n.lanes,!(r&n.childLanes))return null;if(t!==null&&n.child!==t.child)throw Error(P(153));if(n.child!==null){for(t=n.child,r=mr(t,t.pendingProps),n.child=r,r.return=n;t.sibling!==null;)t=t.sibling,r=r.sibling=mr(t,t.pendingProps),r.return=n;r.sibling=null}return n.child}function nj(t,n,r){switch(n.tag){case 3:ey(n),Bs();break;case 5:wT(n);break;case 1:At(n.type)&&Qo(n);break;case 4:l1(n,n.stateNode.containerInfo);break;case 10:var s=n.type._context,i=n.memoizedProps.value;Ne(tl,s._currentValue),s._currentValue=i;break;case 13:if(s=n.memoizedState,s!==null)return s.dehydrated!==null?(Ne(we,we.current&1),n.flags|=128,null):r&n.child.childLanes?ty(t,n,r):(Ne(we,we.current&1),t=Pn(t,n,r),t!==null?t.sibling:null);Ne(we,we.current&1);break;case 19:if(s=(r&n.childLanes)!==0,t.flags&128){if(s)return ny(t,n,r);n.flags|=128}if(i=n.memoizedState,i!==null&&(i.rendering=null,i.tail=null,i.lastEffect=null),Ne(we,we.current),s)break;return null;case 22:case 23:return n.lanes=0,QT(t,n,r)}return Pn(t,n,r)}var ry,lu,sy,iy;ry=function(t,n){for(var r=n.child;r!==null;){if(r.tag===5||r.tag===6)t.appendChild(r.stateNode);else if(r.tag!==4&&r.child!==null){r.child.return=r,r=r.child;continue}if(r===n)break;for(;r.sibling===null;){if(r.return===null||r.return===n)return;r=r.return}r.sibling.return=r.return,r=r.sibling}};lu=function(){};sy=function(t,n,r,s){var i=t.memoizedProps;if(i!==s){t=n.stateNode,Dr(Tn.current);var a=null;switch(r){case"input":i=Id(t,i),s=Id(t,s),a=[];break;case"select":i=Ce({},i,{value:void 0}),s=Ce({},s,{value:void 0}),a=[];break;case"textarea":i=kd(t,i),s=kd(t,s),a=[];break;default:typeof i.onClick!="function"&&typeof s.onClick=="function"&&(t.onclick=Xo)}Dd(r,s);var o;r=null;for(d in i)if(!s.hasOwnProperty(d)&&i.hasOwnProperty(d)&&i[d]!=null)if(d==="style"){var l=i[d];for(o in l)l.hasOwnProperty(o)&&(r||(r={}),r[o]="")}else d!=="dangerouslySetInnerHTML"&&d!=="children"&&d!=="suppressContentEditableWarning"&&d!=="suppressHydrationWarning"&&d!=="autoFocus"&&(Ji.hasOwnProperty(d)?a||(a=[]):(a=a||[]).push(d,null));for(d in s){var c=s[d];if(l=i!=null?i[d]:void 0,s.hasOwnProperty(d)&&c!==l&&(c!=null||l!=null))if(d==="style")if(l){for(o in l)!l.hasOwnProperty(o)||c&&c.hasOwnProperty(o)||(r||(r={}),r[o]="");for(o in c)c.hasOwnProperty(o)&&l[o]!==c[o]&&(r||(r={}),r[o]=c[o])}else r||(a||(a=[]),a.push(d,r)),r=c;else d==="dangerouslySetInnerHTML"?(c=c?c.__html:void 0,l=l?l.__html:void 0,c!=null&&l!==c&&(a=a||[]).push(d,c)):d==="children"?typeof c!="string"&&typeof c!="number"||(a=a||[]).push(d,""+c):d!=="suppressContentEditableWarning"&&d!=="suppressHydrationWarning"&&(Ji.hasOwnProperty(d)?(c!=null&&d==="onScroll"&&Ae("scroll",t),a||l===c||(a=[])):(a=a||[]).push(d,c))}r&&(a=a||[]).push("style",r);var d=a;(n.updateQueue=d)&&(n.flags|=4)}};iy=function(t,n,r,s){r!==s&&(n.flags|=4)};function fi(t,n){if(!ve)switch(t.tailMode){case"hidden":n=t.tail;for(var r=null;n!==null;)n.alternate!==null&&(r=n),n=n.sibling;r===null?t.tail=null:r.sibling=null;break;case"collapsed":r=t.tail;for(var s=null;r!==null;)r.alternate!==null&&(s=r),r=r.sibling;s===null?n||t.tail===null?t.tail=null:t.tail.sibling=null:s.sibling=null}}function ct(t){var n=t.alternate!==null&&t.alternate.child===t.child,r=0,s=0;if(n)for(var i=t.child;i!==null;)r|=i.lanes|i.childLanes,s|=i.subtreeFlags&14680064,s|=i.flags&14680064,i.return=t,i=i.sibling;else for(i=t.child;i!==null;)r|=i.lanes|i.childLanes,s|=i.subtreeFlags,s|=i.flags,i.return=t,i=i.sibling;return t.subtreeFlags|=s,t.childLanes=r,n}function rj(t,n,r){var s=n.pendingProps;switch(t1(n),n.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return ct(n),null;case 1:return At(n.type)&&Zo(),ct(n),null;case 3:return s=n.stateNode,Gs(),_e(jt),_e(ht),d1(),s.pendingContext&&(s.context=s.pendingContext,s.pendingContext=null),(t===null||t.child===null)&&(Qa(n)?n.flags|=4:t===null||t.memoizedState.isDehydrated&&!(n.flags&256)||(n.flags|=1024,sn!==null&&(gu(sn),sn=null))),lu(t,n),ct(n),null;case 5:c1(n);var i=Dr(ua.current);if(r=n.type,t!==null&&n.stateNode!=null)sy(t,n,r,s,i),t.ref!==n.ref&&(n.flags|=512,n.flags|=2097152);else{if(!s){if(n.stateNode===null)throw Error(P(166));return ct(n),null}if(t=Dr(Tn.current),Qa(n)){s=n.stateNode,r=n.type;var a=n.memoizedProps;switch(s[bn]=n,s[ca]=a,t=(n.mode&1)!==0,r){case"dialog":Ae("cancel",s),Ae("close",s);break;case"iframe":case"object":case"embed":Ae("load",s);break;case"video":case"audio":for(i=0;i<ki.length;i++)Ae(ki[i],s);break;case"source":Ae("error",s);break;case"img":case"image":case"link":Ae("error",s),Ae("load",s);break;case"details":Ae("toggle",s);break;case"input":Jg(s,a),Ae("invalid",s);break;case"select":s._wrapperState={wasMultiple:!!a.multiple},Ae("invalid",s);break;case"textarea":tb(s,a),Ae("invalid",s)}Dd(r,a),i=null;for(var o in a)if(a.hasOwnProperty(o)){var l=a[o];o==="children"?typeof l=="string"?s.textContent!==l&&(a.suppressHydrationWarning!==!0&&Za(s.textContent,l,t),i=["children",l]):typeof l=="number"&&s.textContent!==""+l&&(a.suppressHydrationWarning!==!0&&Za(s.textContent,l,t),i=["children",""+l]):Ji.hasOwnProperty(o)&&l!=null&&o==="onScroll"&&Ae("scroll",s)}switch(r){case"input":$a(s),eb(s,a,!0);break;case"textarea":$a(s),nb(s);break;case"select":case"option":break;default:typeof a.onClick=="function"&&(s.onclick=Xo)}s=i,n.updateQueue=s,s!==null&&(n.flags|=4)}else{o=i.nodeType===9?i:i.ownerDocument,t==="http://www.w3.org/1999/xhtml"&&(t=O0(r)),t==="http://www.w3.org/1999/xhtml"?r==="script"?(t=o.createElement("div"),t.innerHTML="<script><\/script>",t=t.removeChild(t.firstChild)):typeof s.is=="string"?t=o.createElement(r,{is:s.is}):(t=o.createElement(r),r==="select"&&(o=t,s.multiple?o.multiple=!0:s.size&&(o.size=s.size))):t=o.createElementNS(t,r),t[bn]=n,t[ca]=s,ry(t,n,!1,!1),n.stateNode=t;e:{switch(o=Md(r,s),r){case"dialog":Ae("cancel",t),Ae("close",t),i=s;break;case"iframe":case"object":case"embed":Ae("load",t),i=s;break;case"video":case"audio":for(i=0;i<ki.length;i++)Ae(ki[i],t);i=s;break;case"source":Ae("error",t),i=s;break;case"img":case"image":case"link":Ae("error",t),Ae("load",t),i=s;break;case"details":Ae("toggle",t),i=s;break;case"input":Jg(t,s),i=Id(t,s),Ae("invalid",t);break;case"option":i=s;break;case"select":t._wrapperState={wasMultiple:!!s.multiple},i=Ce({},s,{value:void 0}),Ae("invalid",t);break;case"textarea":tb(t,s),i=kd(t,s),Ae("invalid",t);break;default:i=s}Dd(r,i),l=i;for(a in l)if(l.hasOwnProperty(a)){var c=l[a];a==="style"?D0(t,c):a==="dangerouslySetInnerHTML"?(c=c?c.__html:void 0,c!=null&&k0(t,c)):a==="children"?typeof c=="string"?(r!=="textarea"||c!=="")&&ea(t,c):typeof c=="number"&&ea(t,""+c):a!=="suppressContentEditableWarning"&&a!=="suppressHydrationWarning"&&a!=="autoFocus"&&(Ji.hasOwnProperty(a)?c!=null&&a==="onScroll"&&Ae("scroll",t):c!=null&&Bu(t,a,c,o))}switch(r){case"input":$a(t),eb(t,s,!1);break;case"textarea":$a(t),nb(t);break;case"option":s.value!=null&&t.setAttribute("value",""+fr(s.value));break;case"select":t.multiple=!!s.multiple,a=s.value,a!=null?ws(t,!!s.multiple,a,!1):s.defaultValue!=null&&ws(t,!!s.multiple,s.defaultValue,!0);break;default:typeof i.onClick=="function"&&(t.onclick=Xo)}switch(r){case"button":case"input":case"select":case"textarea":s=!!s.autoFocus;break e;case"img":s=!0;break e;default:s=!1}}s&&(n.flags|=4)}n.ref!==null&&(n.flags|=512,n.flags|=2097152)}return ct(n),null;case 6:if(t&&n.stateNode!=null)iy(t,n,t.memoizedProps,s);else{if(typeof s!="string"&&n.stateNode===null)throw Error(P(166));if(r=Dr(ua.current),Dr(Tn.current),Qa(n)){if(s=n.stateNode,r=n.memoizedProps,s[bn]=n,(a=s.nodeValue!==r)&&(t=Ot,t!==null))switch(t.tag){case 3:Za(s.nodeValue,r,(t.mode&1)!==0);break;case 5:t.memoizedProps.suppressHydrationWarning!==!0&&Za(s.nodeValue,r,(t.mode&1)!==0)}a&&(n.flags|=4)}else s=(r.nodeType===9?r:r.ownerDocument).createTextNode(s),s[bn]=n,n.stateNode=s}return ct(n),null;case 13:if(_e(we),s=n.memoizedState,t===null||t.memoizedState!==null&&t.memoizedState.dehydrated!==null){if(ve&&Ct!==null&&n.mode&1&&!(n.flags&128))ST(),Bs(),n.flags|=98560,a=!1;else if(a=Qa(n),s!==null&&s.dehydrated!==null){if(t===null){if(!a)throw Error(P(318));if(a=n.memoizedState,a=a!==null?a.dehydrated:null,!a)throw Error(P(317));a[bn]=n}else Bs(),!(n.flags&128)&&(n.memoizedState=null),n.flags|=4;ct(n),a=!1}else sn!==null&&(gu(sn),sn=null),a=!0;if(!a)return n.flags&65536?n:null}return n.flags&128?(n.lanes=r,n):(s=s!==null,s!==(t!==null&&t.memoizedState!==null)&&s&&(n.child.flags|=8192,n.mode&1&&(t===null||we.current&1?Ve===0&&(Ve=3):S1())),n.updateQueue!==null&&(n.flags|=4),ct(n),null);case 4:return Gs(),lu(t,n),t===null&&oa(n.stateNode.containerInfo),ct(n),null;case 10:return i1(n.type._context),ct(n),null;case 17:return At(n.type)&&Zo(),ct(n),null;case 19:if(_e(we),a=n.memoizedState,a===null)return ct(n),null;if(s=(n.flags&128)!==0,o=a.rendering,o===null)if(s)fi(a,!1);else{if(Ve!==0||t!==null&&t.flags&128)for(t=n.child;t!==null;){if(o=sl(t),o!==null){for(n.flags|=128,fi(a,!1),s=o.updateQueue,s!==null&&(n.updateQueue=s,n.flags|=4),n.subtreeFlags=0,s=r,r=n.child;r!==null;)a=r,t=s,a.flags&=14680066,o=a.alternate,o===null?(a.childLanes=0,a.lanes=t,a.child=null,a.subtreeFlags=0,a.memoizedProps=null,a.memoizedState=null,a.updateQueue=null,a.dependencies=null,a.stateNode=null):(a.childLanes=o.childLanes,a.lanes=o.lanes,a.child=o.child,a.subtreeFlags=0,a.deletions=null,a.memoizedProps=o.memoizedProps,a.memoizedState=o.memoizedState,a.updateQueue=o.updateQueue,a.type=o.type,t=o.dependencies,a.dependencies=t===null?null:{lanes:t.lanes,firstContext:t.firstContext}),r=r.sibling;return Ne(we,we.current&1|2),n.child}t=t.sibling}a.tail!==null&&Ue()>zs&&(n.flags|=128,s=!0,fi(a,!1),n.lanes=4194304)}else{if(!s)if(t=sl(o),t!==null){if(n.flags|=128,s=!0,r=t.updateQueue,r!==null&&(n.updateQueue=r,n.flags|=4),fi(a,!0),a.tail===null&&a.tailMode==="hidden"&&!o.alternate&&!ve)return ct(n),null}else 2*Ue()-a.renderingStartTime>zs&&r!==1073741824&&(n.flags|=128,s=!0,fi(a,!1),n.lanes=4194304);a.isBackwards?(o.sibling=n.child,n.child=o):(r=a.last,r!==null?r.sibling=o:n.child=o,a.last=o)}return a.tail!==null?(n=a.tail,a.rendering=n,a.tail=n.sibling,a.renderingStartTime=Ue(),n.sibling=null,r=we.current,Ne(we,s?r&1|2:r&1),n):(ct(n),null);case 22:case 23:return y1(),s=n.memoizedState!==null,t!==null&&t.memoizedState!==null!==s&&(n.flags|=8192),s&&n.mode&1?It&1073741824&&(ct(n),n.subtreeFlags&6&&(n.flags|=8192)):ct(n),null;case 24:return null;case 25:return null}throw Error(P(156,n.tag))}function sj(t,n){switch(t1(n),n.tag){case 1:return At(n.type)&&Zo(),t=n.flags,t&65536?(n.flags=t&-65537|128,n):null;case 3:return Gs(),_e(jt),_e(ht),d1(),t=n.flags,t&65536&&!(t&128)?(n.flags=t&-65537|128,n):null;case 5:return c1(n),null;case 13:if(_e(we),t=n.memoizedState,t!==null&&t.dehydrated!==null){if(n.alternate===null)throw Error(P(340));Bs()}return t=n.flags,t&65536?(n.flags=t&-65537|128,n):null;case 19:return _e(we),null;case 4:return Gs(),null;case 10:return i1(n.type._context),null;case 22:case 23:return y1(),null;case 24:return null;default:return null}}var to=!1,dt=!1,ij=typeof WeakSet=="function"?WeakSet:Set,W=null;function As(t,n){var r=t.ref;if(r!==null)if(typeof r=="function")try{r(null)}catch(s){Le(t,n,s)}else r.current=null}function cu(t,n,r){try{r()}catch(s){Le(t,n,s)}}var Wb=!1;function aj(t,n){if(Vd=Ko,t=cT(),Ju(t)){if("selectionStart"in t)var r={start:t.selectionStart,end:t.selectionEnd};else e:{r=(r=t.ownerDocument)&&r.defaultView||window;var s=r.getSelection&&r.getSelection();if(s&&s.rangeCount!==0){r=s.anchorNode;var i=s.anchorOffset,a=s.focusNode;s=s.focusOffset;try{r.nodeType,a.nodeType}catch{r=null;break e}var o=0,l=-1,c=-1,d=0,h=0,x=t,g=null;t:for(;;){for(var A;x!==r||i!==0&&x.nodeType!==3||(l=o+i),x!==a||s!==0&&x.nodeType!==3||(c=o+s),x.nodeType===3&&(o+=x.nodeValue.length),(A=x.firstChild)!==null;)g=x,x=A;for(;;){if(x===t)break t;if(g===r&&++d===i&&(l=o),g===a&&++h===s&&(c=o),(A=x.nextSibling)!==null)break;x=g,g=x.parentNode}x=A}r=l===-1||c===-1?null:{start:l,end:c}}else r=null}r=r||{start:0,end:0}}else r=null;for(Kd={focusedElem:t,selectionRange:r},Ko=!1,W=n;W!==null;)if(n=W,t=n.child,(n.subtreeFlags&1028)!==0&&t!==null)t.return=n,W=t;else for(;W!==null;){n=W;try{var S=n.alternate;if(n.flags&1024)switch(n.tag){case 0:case 11:case 15:break;case 1:if(S!==null){var y=S.memoizedProps,_=S.memoizedState,f=n.stateNode,b=f.getSnapshotBeforeUpdate(n.elementType===n.type?y:tn(n.type,y),_);f.__reactInternalSnapshotBeforeUpdate=b}break;case 3:var T=n.stateNode.containerInfo;T.nodeType===1?T.textContent="":T.nodeType===9&&T.documentElement&&T.removeChild(T.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(P(163))}}catch(E){Le(n,n.return,E)}if(t=n.sibling,t!==null){t.return=n.return,W=t;break}W=n.return}return S=Wb,Wb=!1,S}function Hi(t,n,r){var s=n.updateQueue;if(s=s!==null?s.lastEffect:null,s!==null){var i=s=s.next;do{if((i.tag&t)===t){var a=i.destroy;i.destroy=void 0,a!==void 0&&cu(n,r,a)}i=i.next}while(i!==s)}}function Il(t,n){if(n=n.updateQueue,n=n!==null?n.lastEffect:null,n!==null){var r=n=n.next;do{if((r.tag&t)===t){var s=r.create;r.destroy=s()}r=r.next}while(r!==n)}}function du(t){var n=t.ref;if(n!==null){var r=t.stateNode;switch(t.tag){case 5:t=r;break;default:t=r}typeof n=="function"?n(t):n.current=t}}function ay(t){var n=t.alternate;n!==null&&(t.alternate=null,ay(n)),t.child=null,t.deletions=null,t.sibling=null,t.tag===5&&(n=t.stateNode,n!==null&&(delete n[bn],delete n[ca],delete n[Xd],delete n[G2],delete n[$2])),t.stateNode=null,t.return=null,t.dependencies=null,t.memoizedProps=null,t.memoizedState=null,t.pendingProps=null,t.stateNode=null,t.updateQueue=null}function oy(t){return t.tag===5||t.tag===3||t.tag===4}function Vb(t){e:for(;;){for(;t.sibling===null;){if(t.return===null||oy(t.return))return null;t=t.return}for(t.sibling.return=t.return,t=t.sibling;t.tag!==5&&t.tag!==6&&t.tag!==18;){if(t.flags&2||t.child===null||t.tag===4)continue e;t.child.return=t,t=t.child}if(!(t.flags&2))return t.stateNode}}function uu(t,n,r){var s=t.tag;if(s===5||s===6)t=t.stateNode,n?r.nodeType===8?r.parentNode.insertBefore(t,n):r.insertBefore(t,n):(r.nodeType===8?(n=r.parentNode,n.insertBefore(t,r)):(n=r,n.appendChild(t)),r=r._reactRootContainer,r!=null||n.onclick!==null||(n.onclick=Xo));else if(s!==4&&(t=t.child,t!==null))for(uu(t,n,r),t=t.sibling;t!==null;)uu(t,n,r),t=t.sibling}function hu(t,n,r){var s=t.tag;if(s===5||s===6)t=t.stateNode,n?r.insertBefore(t,n):r.appendChild(t);else if(s!==4&&(t=t.child,t!==null))for(hu(t,n,r),t=t.sibling;t!==null;)hu(t,n,r),t=t.sibling}var et=null,nn=!1;function Vn(t,n,r){for(r=r.child;r!==null;)ly(t,n,r),r=r.sibling}function ly(t,n,r){if(En&&typeof En.onCommitFiberUnmount=="function")try{En.onCommitFiberUnmount(Sl,r)}catch{}switch(r.tag){case 5:dt||As(r,n);case 6:var s=et,i=nn;et=null,Vn(t,n,r),et=s,nn=i,et!==null&&(nn?(t=et,r=r.stateNode,t.nodeType===8?t.parentNode.removeChild(r):t.removeChild(r)):et.removeChild(r.stateNode));break;case 18:et!==null&&(nn?(t=et,r=r.stateNode,t.nodeType===8?Fc(t.parentNode,r):t.nodeType===1&&Fc(t,r),sa(t)):Fc(et,r.stateNode));break;case 4:s=et,i=nn,et=r.stateNode.containerInfo,nn=!0,Vn(t,n,r),et=s,nn=i;break;case 0:case 11:case 14:case 15:if(!dt&&(s=r.updateQueue,s!==null&&(s=s.lastEffect,s!==null))){i=s=s.next;do{var a=i,o=a.destroy;a=a.tag,o!==void 0&&(a&2||a&4)&&cu(r,n,o),i=i.next}while(i!==s)}Vn(t,n,r);break;case 1:if(!dt&&(As(r,n),s=r.stateNode,typeof s.componentWillUnmount=="function"))try{s.props=r.memoizedProps,s.state=r.memoizedState,s.componentWillUnmount()}catch(l){Le(r,n,l)}Vn(t,n,r);break;case 21:Vn(t,n,r);break;case 22:r.mode&1?(dt=(s=dt)||r.memoizedState!==null,Vn(t,n,r),dt=s):Vn(t,n,r);break;default:Vn(t,n,r)}}function Kb(t){var n=t.updateQueue;if(n!==null){t.updateQueue=null;var r=t.stateNode;r===null&&(r=t.stateNode=new ij),n.forEach(function(s){var i=fj.bind(null,t,s);r.has(s)||(r.add(s),s.then(i,i))})}}function Zt(t,n){var r=n.deletions;if(r!==null)for(var s=0;s<r.length;s++){var i=r[s];try{var a=t,o=n,l=o;e:for(;l!==null;){switch(l.tag){case 5:et=l.stateNode,nn=!1;break e;case 3:et=l.stateNode.containerInfo,nn=!0;break e;case 4:et=l.stateNode.containerInfo,nn=!0;break e}l=l.return}if(et===null)throw Error(P(160));ly(a,o,i),et=null,nn=!1;var c=i.alternate;c!==null&&(c.return=null),i.return=null}catch(d){Le(i,n,d)}}if(n.subtreeFlags&12854)for(n=n.child;n!==null;)cy(n,t),n=n.sibling}function cy(t,n){var r=t.alternate,s=t.flags;switch(t.tag){case 0:case 11:case 14:case 15:if(Zt(n,t),pn(t),s&4){try{Hi(3,t,t.return),Il(3,t)}catch(y){Le(t,t.return,y)}try{Hi(5,t,t.return)}catch(y){Le(t,t.return,y)}}break;case 1:Zt(n,t),pn(t),s&512&&r!==null&&As(r,r.return);break;case 5:if(Zt(n,t),pn(t),s&512&&r!==null&&As(r,r.return),t.flags&32){var i=t.stateNode;try{ea(i,"")}catch(y){Le(t,t.return,y)}}if(s&4&&(i=t.stateNode,i!=null)){var a=t.memoizedProps,o=r!==null?r.memoizedProps:a,l=t.type,c=t.updateQueue;if(t.updateQueue=null,c!==null)try{l==="input"&&a.type==="radio"&&a.name!=null&&I0(i,a),Md(l,o);var d=Md(l,a);for(o=0;o<c.length;o+=2){var h=c[o],x=c[o+1];h==="style"?D0(i,x):h==="dangerouslySetInnerHTML"?k0(i,x):h==="children"?ea(i,x):Bu(i,h,x,d)}switch(l){case"input":Cd(i,a);break;case"textarea":C0(i,a);break;case"select":var g=i._wrapperState.wasMultiple;i._wrapperState.wasMultiple=!!a.multiple;var A=a.value;A!=null?ws(i,!!a.multiple,A,!1):g!==!!a.multiple&&(a.defaultValue!=null?ws(i,!!a.multiple,a.defaultValue,!0):ws(i,!!a.multiple,a.multiple?[]:"",!1))}i[ca]=a}catch(y){Le(t,t.return,y)}}break;case 6:if(Zt(n,t),pn(t),s&4){if(t.stateNode===null)throw Error(P(162));i=t.stateNode,a=t.memoizedProps;try{i.nodeValue=a}catch(y){Le(t,t.return,y)}}break;case 3:if(Zt(n,t),pn(t),s&4&&r!==null&&r.memoizedState.isDehydrated)try{sa(n.containerInfo)}catch(y){Le(t,t.return,y)}break;case 4:Zt(n,t),pn(t);break;case 13:Zt(n,t),pn(t),i=t.child,i.flags&8192&&(a=i.memoizedState!==null,i.stateNode.isHidden=a,!a||i.alternate!==null&&i.alternate.memoizedState!==null||(E1=Ue())),s&4&&Kb(t);break;case 22:if(h=r!==null&&r.memoizedState!==null,t.mode&1?(dt=(d=dt)||h,Zt(n,t),dt=d):Zt(n,t),pn(t),s&8192){if(d=t.memoizedState!==null,(t.stateNode.isHidden=d)&&!h&&t.mode&1)for(W=t,h=t.child;h!==null;){for(x=W=h;W!==null;){switch(g=W,A=g.child,g.tag){case 0:case 11:case 14:case 15:Hi(4,g,g.return);break;case 1:As(g,g.return);var S=g.stateNode;if(typeof S.componentWillUnmount=="function"){s=g,r=g.return;try{n=s,S.props=n.memoizedProps,S.state=n.memoizedState,S.componentWillUnmount()}catch(y){Le(s,r,y)}}break;case 5:As(g,g.return);break;case 22:if(g.memoizedState!==null){qb(x);continue}}A!==null?(A.return=g,W=A):qb(x)}h=h.sibling}e:for(h=null,x=t;;){if(x.tag===5){if(h===null){h=x;try{i=x.stateNode,d?(a=i.style,typeof a.setProperty=="function"?a.setProperty("display","none","important"):a.display="none"):(l=x.stateNode,c=x.memoizedProps.style,o=c!=null&&c.hasOwnProperty("display")?c.display:null,l.style.display=L0("display",o))}catch(y){Le(t,t.return,y)}}}else if(x.tag===6){if(h===null)try{x.stateNode.nodeValue=d?"":x.memoizedProps}catch(y){Le(t,t.return,y)}}else if((x.tag!==22&&x.tag!==23||x.memoizedState===null||x===t)&&x.child!==null){x.child.return=x,x=x.child;continue}if(x===t)break e;for(;x.sibling===null;){if(x.return===null||x.return===t)break e;h===x&&(h=null),x=x.return}h===x&&(h=null),x.sibling.return=x.return,x=x.sibling}}break;case 19:Zt(n,t),pn(t),s&4&&Kb(t);break;case 21:break;default:Zt(n,t),pn(t)}}function pn(t){var n=t.flags;if(n&2){try{e:{for(var r=t.return;r!==null;){if(oy(r)){var s=r;break e}r=r.return}throw Error(P(160))}switch(s.tag){case 5:var i=s.stateNode;s.flags&32&&(ea(i,""),s.flags&=-33);var a=Vb(t);hu(t,a,i);break;case 3:case 4:var o=s.stateNode.containerInfo,l=Vb(t);uu(t,l,o);break;default:throw Error(P(161))}}catch(c){Le(t,t.return,c)}t.flags&=-3}n&4096&&(t.flags&=-4097)}function oj(t,n,r){W=t,dy(t)}function dy(t,n,r){for(var s=(t.mode&1)!==0;W!==null;){var i=W,a=i.child;if(i.tag===22&&s){var o=i.memoizedState!==null||to;if(!o){var l=i.alternate,c=l!==null&&l.memoizedState!==null||dt;l=to;var d=dt;if(to=o,(dt=c)&&!d)for(W=i;W!==null;)o=W,c=o.child,o.tag===22&&o.memoizedState!==null?Xb(i):c!==null?(c.return=o,W=c):Xb(i);for(;a!==null;)W=a,dy(a),a=a.sibling;W=i,to=l,dt=d}Yb(t)}else i.subtreeFlags&8772&&a!==null?(a.return=i,W=a):Yb(t)}}function Yb(t){for(;W!==null;){var n=W;if(n.flags&8772){var r=n.alternate;try{if(n.flags&8772)switch(n.tag){case 0:case 11:case 15:dt||Il(5,n);break;case 1:var s=n.stateNode;if(n.flags&4&&!dt)if(r===null)s.componentDidMount();else{var i=n.elementType===n.type?r.memoizedProps:tn(n.type,r.memoizedProps);s.componentDidUpdate(i,r.memoizedState,s.__reactInternalSnapshotBeforeUpdate)}var a=n.updateQueue;a!==null&&Cb(n,a,s);break;case 3:var o=n.updateQueue;if(o!==null){if(r=null,n.child!==null)switch(n.child.tag){case 5:r=n.child.stateNode;break;case 1:r=n.child.stateNode}Cb(n,o,r)}break;case 5:var l=n.stateNode;if(r===null&&n.flags&4){r=l;var c=n.memoizedProps;switch(n.type){case"button":case"input":case"select":case"textarea":c.autoFocus&&r.focus();break;case"img":c.src&&(r.src=c.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(n.memoizedState===null){var d=n.alternate;if(d!==null){var h=d.memoizedState;if(h!==null){var x=h.dehydrated;x!==null&&sa(x)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(P(163))}dt||n.flags&512&&du(n)}catch(g){Le(n,n.return,g)}}if(n===t){W=null;break}if(r=n.sibling,r!==null){r.return=n.return,W=r;break}W=n.return}}function qb(t){for(;W!==null;){var n=W;if(n===t){W=null;break}var r=n.sibling;if(r!==null){r.return=n.return,W=r;break}W=n.return}}function Xb(t){for(;W!==null;){var n=W;try{switch(n.tag){case 0:case 11:case 15:var r=n.return;try{Il(4,n)}catch(c){Le(n,r,c)}break;case 1:var s=n.stateNode;if(typeof s.componentDidMount=="function"){var i=n.return;try{s.componentDidMount()}catch(c){Le(n,i,c)}}var a=n.return;try{du(n)}catch(c){Le(n,a,c)}break;case 5:var o=n.return;try{du(n)}catch(c){Le(n,o,c)}}}catch(c){Le(n,n.return,c)}if(n===t){W=null;break}var l=n.sibling;if(l!==null){l.return=n.return,W=l;break}W=n.return}}var lj=Math.ceil,ol=Bn.ReactCurrentDispatcher,b1=Bn.ReactCurrentOwner,$t=Bn.ReactCurrentBatchConfig,fe=0,Xe=null,Ge=null,nt=0,It=0,_s=Er(0),Ve=0,fa=null,$r=0,Cl=0,x1=0,Gi=null,St=null,E1=0,zs=1/0,wn=null,ll=!1,pu=null,hr=null,no=!1,ar=null,cl=0,$i=0,mu=null,ko=-1,Lo=0;function gt(){return fe&6?Ue():ko!==-1?ko:ko=Ue()}function pr(t){return t.mode&1?fe&2&&nt!==0?nt&-nt:W2.transition!==null?(Lo===0&&(Lo=K0()),Lo):(t=be,t!==0||(t=window.event,t=t===void 0?16:eT(t.type)),t):1}function on(t,n,r,s){if(50<$i)throw $i=0,mu=null,Error(P(185));Ta(t,r,s),(!(fe&2)||t!==Xe)&&(t===Xe&&(!(fe&2)&&(Cl|=r),Ve===4&&sr(t,nt)),_t(t,s),r===1&&fe===0&&!(n.mode&1)&&(zs=Ue()+500,vl&&Tr()))}function _t(t,n){var r=t.callbackNode;WN(t,n);var s=Vo(t,t===Xe?nt:0);if(s===0)r!==null&&ib(r),t.callbackNode=null,t.callbackPriority=0;else if(n=s&-s,t.callbackPriority!==n){if(r!=null&&ib(r),n===1)t.tag===0?z2(Zb.bind(null,t)):ET(Zb.bind(null,t)),B2(function(){!(fe&6)&&Tr()}),r=null;else{switch(Y0(s)){case 1:r=Wu;break;case 4:r=W0;break;case 16:r=Wo;break;case 536870912:r=V0;break;default:r=Wo}r=xy(r,uy.bind(null,t))}t.callbackPriority=n,t.callbackNode=r}}function uy(t,n){if(ko=-1,Lo=0,fe&6)throw Error(P(327));var r=t.callbackNode;if(Ls()&&t.callbackNode!==r)return null;var s=Vo(t,t===Xe?nt:0);if(s===0)return null;if(s&30||s&t.expiredLanes||n)n=dl(t,s);else{n=s;var i=fe;fe|=2;var a=py();(Xe!==t||nt!==n)&&(wn=null,zs=Ue()+500,Pr(t,n));do try{uj();break}catch(l){hy(t,l)}while(!0);s1(),ol.current=a,fe=i,Ge!==null?n=0:(Xe=null,nt=0,n=Ve)}if(n!==0){if(n===2&&(i=Hd(t),i!==0&&(s=i,n=fu(t,i))),n===1)throw r=fa,Pr(t,0),sr(t,s),_t(t,Ue()),r;if(n===6)sr(t,s);else{if(i=t.current.alternate,!(s&30)&&!cj(i)&&(n=dl(t,s),n===2&&(a=Hd(t),a!==0&&(s=a,n=fu(t,a))),n===1))throw r=fa,Pr(t,0),sr(t,s),_t(t,Ue()),r;switch(t.finishedWork=i,t.finishedLanes=s,n){case 0:case 1:throw Error(P(345));case 2:Ir(t,St,wn);break;case 3:if(sr(t,s),(s&130023424)===s&&(n=E1+500-Ue(),10<n)){if(Vo(t,0)!==0)break;if(i=t.suspendedLanes,(i&s)!==s){gt(),t.pingedLanes|=t.suspendedLanes&i;break}t.timeoutHandle=qd(Ir.bind(null,t,St,wn),n);break}Ir(t,St,wn);break;case 4:if(sr(t,s),(s&4194240)===s)break;for(n=t.eventTimes,i=-1;0<s;){var o=31-an(s);a=1<<o,o=n[o],o>i&&(i=o),s&=~a}if(s=i,s=Ue()-s,s=(120>s?120:480>s?480:1080>s?1080:1920>s?1920:3e3>s?3e3:4320>s?4320:1960*lj(s/1960))-s,10<s){t.timeoutHandle=qd(Ir.bind(null,t,St,wn),s);break}Ir(t,St,wn);break;case 5:Ir(t,St,wn);break;default:throw Error(P(329))}}}return _t(t,Ue()),t.callbackNode===r?uy.bind(null,t):null}function fu(t,n){var r=Gi;return t.current.memoizedState.isDehydrated&&(Pr(t,n).flags|=256),t=dl(t,n),t!==2&&(n=St,St=r,n!==null&&gu(n)),t}function gu(t){St===null?St=t:St.push.apply(St,t)}function cj(t){for(var n=t;;){if(n.flags&16384){var r=n.updateQueue;if(r!==null&&(r=r.stores,r!==null))for(var s=0;s<r.length;s++){var i=r[s],a=i.getSnapshot;i=i.value;try{if(!ln(a(),i))return!1}catch{return!1}}}if(r=n.child,n.subtreeFlags&16384&&r!==null)r.return=n,n=r;else{if(n===t)break;for(;n.sibling===null;){if(n.return===null||n.return===t)return!0;n=n.return}n.sibling.return=n.return,n=n.sibling}}return!0}function sr(t,n){for(n&=~x1,n&=~Cl,t.suspendedLanes|=n,t.pingedLanes&=~n,t=t.expirationTimes;0<n;){var r=31-an(n),s=1<<r;t[r]=-1,n&=~s}}function Zb(t){if(fe&6)throw Error(P(327));Ls();var n=Vo(t,0);if(!(n&1))return _t(t,Ue()),null;var r=dl(t,n);if(t.tag!==0&&r===2){var s=Hd(t);s!==0&&(n=s,r=fu(t,s))}if(r===1)throw r=fa,Pr(t,0),sr(t,n),_t(t,Ue()),r;if(r===6)throw Error(P(345));return t.finishedWork=t.current.alternate,t.finishedLanes=n,Ir(t,St,wn),_t(t,Ue()),null}function T1(t,n){var r=fe;fe|=1;try{return t(n)}finally{fe=r,fe===0&&(zs=Ue()+500,vl&&Tr())}}function zr(t){ar!==null&&ar.tag===0&&!(fe&6)&&Ls();var n=fe;fe|=1;var r=$t.transition,s=be;try{if($t.transition=null,be=1,t)return t()}finally{be=s,$t.transition=r,fe=n,!(fe&6)&&Tr()}}function y1(){It=_s.current,_e(_s)}function Pr(t,n){t.finishedWork=null,t.finishedLanes=0;var r=t.timeoutHandle;if(r!==-1&&(t.timeoutHandle=-1,U2(r)),Ge!==null)for(r=Ge.return;r!==null;){var s=r;switch(t1(s),s.tag){case 1:s=s.type.childContextTypes,s!=null&&Zo();break;case 3:Gs(),_e(jt),_e(ht),d1();break;case 5:c1(s);break;case 4:Gs();break;case 13:_e(we);break;case 19:_e(we);break;case 10:i1(s.type._context);break;case 22:case 23:y1()}r=r.return}if(Xe=t,Ge=t=mr(t.current,null),nt=It=n,Ve=0,fa=null,x1=Cl=$r=0,St=Gi=null,Lr!==null){for(n=0;n<Lr.length;n++)if(r=Lr[n],s=r.interleaved,s!==null){r.interleaved=null;var i=s.next,a=r.pending;if(a!==null){var o=a.next;a.next=i,s.next=o}r.pending=s}Lr=null}return t}function hy(t,n){do{var r=Ge;try{if(s1(),Io.current=al,il){for(var s=Ie.memoizedState;s!==null;){var i=s.queue;i!==null&&(i.pending=null),s=s.next}il=!1}if(Gr=0,Ye=We=Ie=null,Bi=!1,ha=0,b1.current=null,r===null||r.return===null){Ve=1,fa=n,Ge=null;break}e:{var a=t,o=r.return,l=r,c=n;if(n=nt,l.flags|=32768,c!==null&&typeof c=="object"&&typeof c.then=="function"){var d=c,h=l,x=h.tag;if(!(h.mode&1)&&(x===0||x===11||x===15)){var g=h.alternate;g?(h.updateQueue=g.updateQueue,h.memoizedState=g.memoizedState,h.lanes=g.lanes):(h.updateQueue=null,h.memoizedState=null)}var A=Pb(o);if(A!==null){A.flags&=-257,Ub(A,o,l,a,n),A.mode&1&&Fb(a,d,n),n=A,c=d;var S=n.updateQueue;if(S===null){var y=new Set;y.add(c),n.updateQueue=y}else S.add(c);break e}else{if(!(n&1)){Fb(a,d,n),S1();break e}c=Error(P(426))}}else if(ve&&l.mode&1){var _=Pb(o);if(_!==null){!(_.flags&65536)&&(_.flags|=256),Ub(_,o,l,a,n),n1($s(c,l));break e}}a=c=$s(c,l),Ve!==4&&(Ve=2),Gi===null?Gi=[a]:Gi.push(a),a=o;do{switch(a.tag){case 3:a.flags|=65536,n&=-n,a.lanes|=n;var f=qT(a,c,n);Ib(a,f);break e;case 1:l=c;var b=a.type,T=a.stateNode;if(!(a.flags&128)&&(typeof b.getDerivedStateFromError=="function"||T!==null&&typeof T.componentDidCatch=="function"&&(hr===null||!hr.has(T)))){a.flags|=65536,n&=-n,a.lanes|=n;var E=XT(a,l,n);Ib(a,E);break e}}a=a.return}while(a!==null)}fy(r)}catch(R){n=R,Ge===r&&r!==null&&(Ge=r=r.return);continue}break}while(!0)}function py(){var t=ol.current;return ol.current=al,t===null?al:t}function S1(){(Ve===0||Ve===3||Ve===2)&&(Ve=4),Xe===null||!($r&268435455)&&!(Cl&268435455)||sr(Xe,nt)}function dl(t,n){var r=fe;fe|=2;var s=py();(Xe!==t||nt!==n)&&(wn=null,Pr(t,n));do try{dj();break}catch(i){hy(t,i)}while(!0);if(s1(),fe=r,ol.current=s,Ge!==null)throw Error(P(261));return Xe=null,nt=0,Ve}function dj(){for(;Ge!==null;)my(Ge)}function uj(){for(;Ge!==null&&!MN();)my(Ge)}function my(t){var n=by(t.alternate,t,It);t.memoizedProps=t.pendingProps,n===null?fy(t):Ge=n,b1.current=null}function fy(t){var n=t;do{var r=n.alternate;if(t=n.return,n.flags&32768){if(r=sj(r,n),r!==null){r.flags&=32767,Ge=r;return}if(t!==null)t.flags|=32768,t.subtreeFlags=0,t.deletions=null;else{Ve=6,Ge=null;return}}else if(r=rj(r,n,It),r!==null){Ge=r;return}if(n=n.sibling,n!==null){Ge=n;return}Ge=n=t}while(n!==null);Ve===0&&(Ve=5)}function Ir(t,n,r){var s=be,i=$t.transition;try{$t.transition=null,be=1,hj(t,n,r,s)}finally{$t.transition=i,be=s}return null}function hj(t,n,r,s){do Ls();while(ar!==null);if(fe&6)throw Error(P(327));r=t.finishedWork;var i=t.finishedLanes;if(r===null)return null;if(t.finishedWork=null,t.finishedLanes=0,r===t.current)throw Error(P(177));t.callbackNode=null,t.callbackPriority=0;var a=r.lanes|r.childLanes;if(VN(t,a),t===Xe&&(Ge=Xe=null,nt=0),!(r.subtreeFlags&2064)&&!(r.flags&2064)||no||(no=!0,xy(Wo,function(){return Ls(),null})),a=(r.flags&15990)!==0,r.subtreeFlags&15990||a){a=$t.transition,$t.transition=null;var o=be;be=1;var l=fe;fe|=4,b1.current=null,aj(t,r),cy(r,t),O2(Kd),Ko=!!Vd,Kd=Vd=null,t.current=r,oj(r),FN(),fe=l,be=o,$t.transition=a}else t.current=r;if(no&&(no=!1,ar=t,cl=i),a=t.pendingLanes,a===0&&(hr=null),BN(r.stateNode),_t(t,Ue()),n!==null)for(s=t.onRecoverableError,r=0;r<n.length;r++)i=n[r],s(i.value,{componentStack:i.stack,digest:i.digest});if(ll)throw ll=!1,t=pu,pu=null,t;return cl&1&&t.tag!==0&&Ls(),a=t.pendingLanes,a&1?t===mu?$i++:($i=0,mu=t):$i=0,Tr(),null}function Ls(){if(ar!==null){var t=Y0(cl),n=$t.transition,r=be;try{if($t.transition=null,be=16>t?16:t,ar===null)var s=!1;else{if(t=ar,ar=null,cl=0,fe&6)throw Error(P(331));var i=fe;for(fe|=4,W=t.current;W!==null;){var a=W,o=a.child;if(W.flags&16){var l=a.deletions;if(l!==null){for(var c=0;c<l.length;c++){var d=l[c];for(W=d;W!==null;){var h=W;switch(h.tag){case 0:case 11:case 15:Hi(8,h,a)}var x=h.child;if(x!==null)x.return=h,W=x;else for(;W!==null;){h=W;var g=h.sibling,A=h.return;if(ay(h),h===d){W=null;break}if(g!==null){g.return=A,W=g;break}W=A}}}var S=a.alternate;if(S!==null){var y=S.child;if(y!==null){S.child=null;do{var _=y.sibling;y.sibling=null,y=_}while(y!==null)}}W=a}}if(a.subtreeFlags&2064&&o!==null)o.return=a,W=o;else e:for(;W!==null;){if(a=W,a.flags&2048)switch(a.tag){case 0:case 11:case 15:Hi(9,a,a.return)}var f=a.sibling;if(f!==null){f.return=a.return,W=f;break e}W=a.return}}var b=t.current;for(W=b;W!==null;){o=W;var T=o.child;if(o.subtreeFlags&2064&&T!==null)T.return=o,W=T;else e:for(o=b;W!==null;){if(l=W,l.flags&2048)try{switch(l.tag){case 0:case 11:case 15:Il(9,l)}}catch(R){Le(l,l.return,R)}if(l===o){W=null;break e}var E=l.sibling;if(E!==null){E.return=l.return,W=E;break e}W=l.return}}if(fe=i,Tr(),En&&typeof En.onPostCommitFiberRoot=="function")try{En.onPostCommitFiberRoot(Sl,t)}catch{}s=!0}return s}finally{be=r,$t.transition=n}}return!1}function Qb(t,n,r){n=$s(r,n),n=qT(t,n,1),t=ur(t,n,1),n=gt(),t!==null&&(Ta(t,1,n),_t(t,n))}function Le(t,n,r){if(t.tag===3)Qb(t,t,r);else for(;n!==null;){if(n.tag===3){Qb(n,t,r);break}else if(n.tag===1){var s=n.stateNode;if(typeof n.type.getDerivedStateFromError=="function"||typeof s.componentDidCatch=="function"&&(hr===null||!hr.has(s))){t=$s(r,t),t=XT(n,t,1),n=ur(n,t,1),t=gt(),n!==null&&(Ta(n,1,t),_t(n,t));break}}n=n.return}}function pj(t,n,r){var s=t.pingCache;s!==null&&s.delete(n),n=gt(),t.pingedLanes|=t.suspendedLanes&r,Xe===t&&(nt&r)===r&&(Ve===4||Ve===3&&(nt&130023424)===nt&&500>Ue()-E1?Pr(t,0):x1|=r),_t(t,n)}function gy(t,n){n===0&&(t.mode&1?(n=Va,Va<<=1,!(Va&130023424)&&(Va=4194304)):n=1);var r=gt();t=Fn(t,n),t!==null&&(Ta(t,n,r),_t(t,r))}function mj(t){var n=t.memoizedState,r=0;n!==null&&(r=n.retryLane),gy(t,r)}function fj(t,n){var r=0;switch(t.tag){case 13:var s=t.stateNode,i=t.memoizedState;i!==null&&(r=i.retryLane);break;case 19:s=t.stateNode;break;default:throw Error(P(314))}s!==null&&s.delete(n),gy(t,r)}var by;by=function(t,n,r){if(t!==null)if(t.memoizedProps!==n.pendingProps||jt.current)Nt=!0;else{if(!(t.lanes&r)&&!(n.flags&128))return Nt=!1,nj(t,n,r);Nt=!!(t.flags&131072)}else Nt=!1,ve&&n.flags&1048576&&TT(n,el,n.index);switch(n.lanes=0,n.tag){case 2:var s=n.type;Oo(t,n),t=n.pendingProps;var i=Us(n,ht.current);ks(n,r),i=h1(null,n,s,t,i,r);var a=p1();return n.flags|=1,typeof i=="object"&&i!==null&&typeof i.render=="function"&&i.$$typeof===void 0?(n.tag=1,n.memoizedState=null,n.updateQueue=null,At(s)?(a=!0,Qo(n)):a=!1,n.memoizedState=i.state!==null&&i.state!==void 0?i.state:null,o1(n),i.updater=Rl,n.stateNode=i,i._reactInternals=n,nu(n,s,t,r),n=iu(null,n,s,!0,a,r)):(n.tag=0,ve&&a&&e1(n),ft(null,n,i,r),n=n.child),n;case 16:s=n.elementType;e:{switch(Oo(t,n),t=n.pendingProps,i=s._init,s=i(s._payload),n.type=s,i=n.tag=bj(s),t=tn(s,t),i){case 0:n=su(null,n,s,t,r);break e;case 1:n=Gb(null,n,s,t,r);break e;case 11:n=Bb(null,n,s,t,r);break e;case 14:n=Hb(null,n,s,tn(s.type,t),r);break e}throw Error(P(306,s,""))}return n;case 0:return s=n.type,i=n.pendingProps,i=n.elementType===s?i:tn(s,i),su(t,n,s,i,r);case 1:return s=n.type,i=n.pendingProps,i=n.elementType===s?i:tn(s,i),Gb(t,n,s,i,r);case 3:e:{if(ey(n),t===null)throw Error(P(387));s=n.pendingProps,a=n.memoizedState,i=a.element,jT(t,n),rl(n,s,null,r);var o=n.memoizedState;if(s=o.element,a.isDehydrated)if(a={element:s,isDehydrated:!1,cache:o.cache,pendingSuspenseBoundaries:o.pendingSuspenseBoundaries,transitions:o.transitions},n.updateQueue.baseState=a,n.memoizedState=a,n.flags&256){i=$s(Error(P(423)),n),n=$b(t,n,s,r,i);break e}else if(s!==i){i=$s(Error(P(424)),n),n=$b(t,n,s,r,i);break e}else for(Ct=dr(n.stateNode.containerInfo.firstChild),Ot=n,ve=!0,sn=null,r=RT(n,null,s,r),n.child=r;r;)r.flags=r.flags&-3|4096,r=r.sibling;else{if(Bs(),s===i){n=Pn(t,n,r);break e}ft(t,n,s,r)}n=n.child}return n;case 5:return wT(n),t===null&&Jd(n),s=n.type,i=n.pendingProps,a=t!==null?t.memoizedProps:null,o=i.children,Yd(s,i)?o=null:a!==null&&Yd(s,a)&&(n.flags|=32),JT(t,n),ft(t,n,o,r),n.child;case 6:return t===null&&Jd(n),null;case 13:return ty(t,n,r);case 4:return l1(n,n.stateNode.containerInfo),s=n.pendingProps,t===null?n.child=Hs(n,null,s,r):ft(t,n,s,r),n.child;case 11:return s=n.type,i=n.pendingProps,i=n.elementType===s?i:tn(s,i),Bb(t,n,s,i,r);case 7:return ft(t,n,n.pendingProps,r),n.child;case 8:return ft(t,n,n.pendingProps.children,r),n.child;case 12:return ft(t,n,n.pendingProps.children,r),n.child;case 10:e:{if(s=n.type._context,i=n.pendingProps,a=n.memoizedProps,o=i.value,Ne(tl,s._currentValue),s._currentValue=o,a!==null)if(ln(a.value,o)){if(a.children===i.children&&!jt.current){n=Pn(t,n,r);break e}}else for(a=n.child,a!==null&&(a.return=n);a!==null;){var l=a.dependencies;if(l!==null){o=a.child;for(var c=l.firstContext;c!==null;){if(c.context===s){if(a.tag===1){c=kn(-1,r&-r),c.tag=2;var d=a.updateQueue;if(d!==null){d=d.shared;var h=d.pending;h===null?c.next=c:(c.next=h.next,h.next=c),d.pending=c}}a.lanes|=r,c=a.alternate,c!==null&&(c.lanes|=r),eu(a.return,r,n),l.lanes|=r;break}c=c.next}}else if(a.tag===10)o=a.type===n.type?null:a.child;else if(a.tag===18){if(o=a.return,o===null)throw Error(P(341));o.lanes|=r,l=o.alternate,l!==null&&(l.lanes|=r),eu(o,r,n),o=a.sibling}else o=a.child;if(o!==null)o.return=a;else for(o=a;o!==null;){if(o===n){o=null;break}if(a=o.sibling,a!==null){a.return=o.return,o=a;break}o=o.return}a=o}ft(t,n,i.children,r),n=n.child}return n;case 9:return i=n.type,s=n.pendingProps.children,ks(n,r),i=Wt(i),s=s(i),n.flags|=1,ft(t,n,s,r),n.child;case 14:return s=n.type,i=tn(s,n.pendingProps),i=tn(s.type,i),Hb(t,n,s,i,r);case 15:return ZT(t,n,n.type,n.pendingProps,r);case 17:return s=n.type,i=n.pendingProps,i=n.elementType===s?i:tn(s,i),Oo(t,n),n.tag=1,At(s)?(t=!0,Qo(n)):t=!1,ks(n,r),_T(n,s,i),nu(n,s,i,r),iu(null,n,s,!0,t,r);case 19:return ny(t,n,r);case 22:return QT(t,n,r)}throw Error(P(156,n.tag))};function xy(t,n){return z0(t,n)}function gj(t,n,r,s){this.tag=t,this.key=r,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=n,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=s,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Gt(t,n,r,s){return new gj(t,n,r,s)}function N1(t){return t=t.prototype,!(!t||!t.isReactComponent)}function bj(t){if(typeof t=="function")return N1(t)?1:0;if(t!=null){if(t=t.$$typeof,t===Gu)return 11;if(t===$u)return 14}return 2}function mr(t,n){var r=t.alternate;return r===null?(r=Gt(t.tag,n,t.key,t.mode),r.elementType=t.elementType,r.type=t.type,r.stateNode=t.stateNode,r.alternate=t,t.alternate=r):(r.pendingProps=n,r.type=t.type,r.flags=0,r.subtreeFlags=0,r.deletions=null),r.flags=t.flags&14680064,r.childLanes=t.childLanes,r.lanes=t.lanes,r.child=t.child,r.memoizedProps=t.memoizedProps,r.memoizedState=t.memoizedState,r.updateQueue=t.updateQueue,n=t.dependencies,r.dependencies=n===null?null:{lanes:n.lanes,firstContext:n.firstContext},r.sibling=t.sibling,r.index=t.index,r.ref=t.ref,r}function Do(t,n,r,s,i,a){var o=2;if(s=t,typeof t=="function")N1(t)&&(o=1);else if(typeof t=="string")o=5;else e:switch(t){case gs:return Ur(r.children,i,a,n);case Hu:o=8,i|=8;break;case _d:return t=Gt(12,r,n,i|2),t.elementType=_d,t.lanes=a,t;case vd:return t=Gt(13,r,n,i),t.elementType=vd,t.lanes=a,t;case Rd:return t=Gt(19,r,n,i),t.elementType=Rd,t.lanes=a,t;case v0:return Ol(r,i,a,n);default:if(typeof t=="object"&&t!==null)switch(t.$$typeof){case A0:o=10;break e;case _0:o=9;break e;case Gu:o=11;break e;case $u:o=14;break e;case er:o=16,s=null;break e}throw Error(P(130,t==null?t:typeof t,""))}return n=Gt(o,r,n,i),n.elementType=t,n.type=s,n.lanes=a,n}function Ur(t,n,r,s){return t=Gt(7,t,s,n),t.lanes=r,t}function Ol(t,n,r,s){return t=Gt(22,t,s,n),t.elementType=v0,t.lanes=r,t.stateNode={isHidden:!1},t}function Wc(t,n,r){return t=Gt(6,t,null,n),t.lanes=r,t}function Vc(t,n,r){return n=Gt(4,t.children!==null?t.children:[],t.key,n),n.lanes=r,n.stateNode={containerInfo:t.containerInfo,pendingChildren:null,implementation:t.implementation},n}function xj(t,n,r,s,i){this.tag=n,this.containerInfo=t,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=_c(0),this.expirationTimes=_c(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=_c(0),this.identifierPrefix=s,this.onRecoverableError=i,this.mutableSourceEagerHydrationData=null}function j1(t,n,r,s,i,a,o,l,c){return t=new xj(t,n,r,l,c),n===1?(n=1,a===!0&&(n|=8)):n=0,a=Gt(3,null,null,n),t.current=a,a.stateNode=t,a.memoizedState={element:s,isDehydrated:r,cache:null,transitions:null,pendingSuspenseBoundaries:null},o1(a),t}function Ej(t,n,r){var s=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:fs,key:s==null?null:""+s,children:t,containerInfo:n,implementation:r}}function Ey(t){if(!t)return gr;t=t._reactInternals;e:{if(Yr(t)!==t||t.tag!==1)throw Error(P(170));var n=t;do{switch(n.tag){case 3:n=n.stateNode.context;break e;case 1:if(At(n.type)){n=n.stateNode.__reactInternalMemoizedMergedChildContext;break e}}n=n.return}while(n!==null);throw Error(P(171))}if(t.tag===1){var r=t.type;if(At(r))return xT(t,r,n)}return n}function Ty(t,n,r,s,i,a,o,l,c){return t=j1(r,s,!0,t,i,a,o,l,c),t.context=Ey(null),r=t.current,s=gt(),i=pr(r),a=kn(s,i),a.callback=n??null,ur(r,a,i),t.current.lanes=i,Ta(t,i,s),_t(t,s),t}function kl(t,n,r,s){var i=n.current,a=gt(),o=pr(i);return r=Ey(r),n.context===null?n.context=r:n.pendingContext=r,n=kn(a,o),n.payload={element:t},s=s===void 0?null:s,s!==null&&(n.callback=s),t=ur(i,n,o),t!==null&&(on(t,i,o,a),wo(t,i,o)),o}function ul(t){if(t=t.current,!t.child)return null;switch(t.child.tag){case 5:return t.child.stateNode;default:return t.child.stateNode}}function Jb(t,n){if(t=t.memoizedState,t!==null&&t.dehydrated!==null){var r=t.retryLane;t.retryLane=r!==0&&r<n?r:n}}function A1(t,n){Jb(t,n),(t=t.alternate)&&Jb(t,n)}function Tj(){return null}var yy=typeof reportError=="function"?reportError:function(t){console.error(t)};function _1(t){this._internalRoot=t}Ll.prototype.render=_1.prototype.render=function(t){var n=this._internalRoot;if(n===null)throw Error(P(409));kl(t,n,null,null)};Ll.prototype.unmount=_1.prototype.unmount=function(){var t=this._internalRoot;if(t!==null){this._internalRoot=null;var n=t.containerInfo;zr(function(){kl(null,t,null,null)}),n[Mn]=null}};function Ll(t){this._internalRoot=t}Ll.prototype.unstable_scheduleHydration=function(t){if(t){var n=Z0();t={blockedOn:null,target:t,priority:n};for(var r=0;r<rr.length&&n!==0&&n<rr[r].priority;r++);rr.splice(r,0,t),r===0&&J0(t)}};function v1(t){return!(!t||t.nodeType!==1&&t.nodeType!==9&&t.nodeType!==11)}function Dl(t){return!(!t||t.nodeType!==1&&t.nodeType!==9&&t.nodeType!==11&&(t.nodeType!==8||t.nodeValue!==" react-mount-point-unstable "))}function ex(){}function yj(t,n,r,s,i){if(i){if(typeof s=="function"){var a=s;s=function(){var d=ul(o);a.call(d)}}var o=Ty(n,s,t,0,null,!1,!1,"",ex);return t._reactRootContainer=o,t[Mn]=o.current,oa(t.nodeType===8?t.parentNode:t),zr(),o}for(;i=t.lastChild;)t.removeChild(i);if(typeof s=="function"){var l=s;s=function(){var d=ul(c);l.call(d)}}var c=j1(t,0,!1,null,null,!1,!1,"",ex);return t._reactRootContainer=c,t[Mn]=c.current,oa(t.nodeType===8?t.parentNode:t),zr(function(){kl(n,c,r,s)}),c}function Ml(t,n,r,s,i){var a=r._reactRootContainer;if(a){var o=a;if(typeof i=="function"){var l=i;i=function(){var c=ul(o);l.call(c)}}kl(n,o,t,i)}else o=yj(r,n,t,i,s);return ul(o)}q0=function(t){switch(t.tag){case 3:var n=t.stateNode;if(n.current.memoizedState.isDehydrated){var r=Oi(n.pendingLanes);r!==0&&(Vu(n,r|1),_t(n,Ue()),!(fe&6)&&(zs=Ue()+500,Tr()))}break;case 13:zr(function(){var s=Fn(t,1);if(s!==null){var i=gt();on(s,t,1,i)}}),A1(t,1)}};Ku=function(t){if(t.tag===13){var n=Fn(t,134217728);if(n!==null){var r=gt();on(n,t,134217728,r)}A1(t,134217728)}};X0=function(t){if(t.tag===13){var n=pr(t),r=Fn(t,n);if(r!==null){var s=gt();on(r,t,n,s)}A1(t,n)}};Z0=function(){return be};Q0=function(t,n){var r=be;try{return be=t,n()}finally{be=r}};Pd=function(t,n,r){switch(n){case"input":if(Cd(t,r),n=r.name,r.type==="radio"&&n!=null){for(r=t;r.parentNode;)r=r.parentNode;for(r=r.querySelectorAll("input[name="+JSON.stringify(""+n)+'][type="radio"]'),n=0;n<r.length;n++){var s=r[n];if(s!==t&&s.form===t.form){var i=_l(s);if(!i)throw Error(P(90));w0(s),Cd(s,i)}}}break;case"textarea":C0(t,r);break;case"select":n=r.value,n!=null&&ws(t,!!r.multiple,n,!1)}};P0=T1;U0=zr;var Sj={usingClientEntryPoint:!1,Events:[Sa,Ts,_l,M0,F0,T1]},gi={findFiberByHostInstance:kr,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},Nj={bundleType:gi.bundleType,version:gi.version,rendererPackageName:gi.rendererPackageName,rendererConfig:gi.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Bn.ReactCurrentDispatcher,findHostInstanceByFiber:function(t){return t=G0(t),t===null?null:t.stateNode},findFiberByHostInstance:gi.findFiberByHostInstance||Tj,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var ro=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ro.isDisabled&&ro.supportsFiber)try{Sl=ro.inject(Nj),En=ro}catch{}}Lt.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Sj;Lt.createPortal=function(t,n){var r=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!v1(n))throw Error(P(200));return Ej(t,n,null,r)};Lt.createRoot=function(t,n){if(!v1(t))throw Error(P(299));var r=!1,s="",i=yy;return n!=null&&(n.unstable_strictMode===!0&&(r=!0),n.identifierPrefix!==void 0&&(s=n.identifierPrefix),n.onRecoverableError!==void 0&&(i=n.onRecoverableError)),n=j1(t,1,!1,null,null,r,!1,s,i),t[Mn]=n.current,oa(t.nodeType===8?t.parentNode:t),new _1(n)};Lt.findDOMNode=function(t){if(t==null)return null;if(t.nodeType===1)return t;var n=t._reactInternals;if(n===void 0)throw typeof t.render=="function"?Error(P(188)):(t=Object.keys(t).join(","),Error(P(268,t)));return t=G0(n),t=t===null?null:t.stateNode,t};Lt.flushSync=function(t){return zr(t)};Lt.hydrate=function(t,n,r){if(!Dl(n))throw Error(P(200));return Ml(null,t,n,!0,r)};Lt.hydrateRoot=function(t,n,r){if(!v1(t))throw Error(P(405));var s=r!=null&&r.hydratedSources||null,i=!1,a="",o=yy;if(r!=null&&(r.unstable_strictMode===!0&&(i=!0),r.identifierPrefix!==void 0&&(a=r.identifierPrefix),r.onRecoverableError!==void 0&&(o=r.onRecoverableError)),n=Ty(n,null,t,1,r??null,i,!1,a,o),t[Mn]=n.current,oa(t),s)for(t=0;t<s.length;t++)r=s[t],i=r._getVersion,i=i(r._source),n.mutableSourceEagerHydrationData==null?n.mutableSourceEagerHydrationData=[r,i]:n.mutableSourceEagerHydrationData.push(r,i);return new Ll(n)};Lt.render=function(t,n,r){if(!Dl(n))throw Error(P(200));return Ml(null,t,n,!1,r)};Lt.unmountComponentAtNode=function(t){if(!Dl(t))throw Error(P(40));return t._reactRootContainer?(zr(function(){Ml(null,null,t,!1,function(){t._reactRootContainer=null,t[Mn]=null})}),!0):!1};Lt.unstable_batchedUpdates=T1;Lt.unstable_renderSubtreeIntoContainer=function(t,n,r,s){if(!Dl(r))throw Error(P(200));if(t==null||t._reactInternals===void 0)throw Error(P(38));return Ml(t,n,r,!1,s)};Lt.version="18.2.0-next-9e3b772b8-20220608";function Sy(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(Sy)}catch(t){console.error(t)}}Sy(),T0.exports=Lt;var R1=T0.exports;const jj=Vs(R1),Aj=c0({__proto__:null,default:jj},[R1]);var tx=R1;jd.createRoot=tx.createRoot,jd.hydrateRoot=tx.hydrateRoot;/**
 * @remix-run/router v1.12.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function De(){return De=Object.assign?Object.assign.bind():function(t){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var s in r)Object.prototype.hasOwnProperty.call(r,s)&&(t[s]=r[s])}return t},De.apply(this,arguments)}var Fe;(function(t){t.Pop="POP",t.Push="PUSH",t.Replace="REPLACE"})(Fe||(Fe={}));const nx="popstate";function _j(t){t===void 0&&(t={});function n(s,i){let{pathname:a,search:o,hash:l}=s.location;return ga("",{pathname:a,search:o,hash:l},i.state&&i.state.usr||null,i.state&&i.state.key||"default")}function r(s,i){return typeof i=="string"?i:Vr(i)}return Rj(n,r,null,t)}function re(t,n){if(t===!1||t===null||typeof t>"u")throw new Error(n)}function Wr(t,n){if(!t){typeof console<"u"&&console.warn(n);try{throw new Error(n)}catch{}}}function vj(){return Math.random().toString(36).substr(2,8)}function rx(t,n){return{usr:t.state,key:t.key,idx:n}}function ga(t,n,r,s){return r===void 0&&(r=null),De({pathname:typeof t=="string"?t:t.pathname,search:"",hash:""},typeof n=="string"?Hn(n):n,{state:r,key:n&&n.key||s||vj()})}function Vr(t){let{pathname:n="/",search:r="",hash:s=""}=t;return r&&r!=="?"&&(n+=r.charAt(0)==="?"?r:"?"+r),s&&s!=="#"&&(n+=s.charAt(0)==="#"?s:"#"+s),n}function Hn(t){let n={};if(t){let r=t.indexOf("#");r>=0&&(n.hash=t.substr(r),t=t.substr(0,r));let s=t.indexOf("?");s>=0&&(n.search=t.substr(s),t=t.substr(0,s)),t&&(n.pathname=t)}return n}function Rj(t,n,r,s){s===void 0&&(s={});let{window:i=document.defaultView,v5Compat:a=!1}=s,o=i.history,l=Fe.Pop,c=null,d=h();d==null&&(d=0,o.replaceState(De({},o.state,{idx:d}),""));function h(){return(o.state||{idx:null}).idx}function x(){l=Fe.Pop;let _=h(),f=_==null?null:_-d;d=_,c&&c({action:l,location:y.location,delta:f})}function g(_,f){l=Fe.Push;let b=ga(y.location,_,f);r&&r(b,_),d=h()+1;let T=rx(b,d),E=y.createHref(b);try{o.pushState(T,"",E)}catch(R){if(R instanceof DOMException&&R.name==="DataCloneError")throw R;i.location.assign(E)}a&&c&&c({action:l,location:y.location,delta:1})}function A(_,f){l=Fe.Replace;let b=ga(y.location,_,f);r&&r(b,_),d=h();let T=rx(b,d),E=y.createHref(b);o.replaceState(T,"",E),a&&c&&c({action:l,location:y.location,delta:0})}function S(_){let f=i.location.origin!=="null"?i.location.origin:i.location.href,b=typeof _=="string"?_:Vr(_);return re(f,"No window.location.(origin|href) available to create URL for href: "+b),new URL(b,f)}let y={get action(){return l},get location(){return t(i,o)},listen(_){if(c)throw new Error("A history only accepts one active listener");return i.addEventListener(nx,x),c=_,()=>{i.removeEventListener(nx,x),c=null}},createHref(_){return n(i,_)},createURL:S,encodeLocation(_){let f=S(_);return{pathname:f.pathname,search:f.search,hash:f.hash}},push:g,replace:A,go(_){return o.go(_)}};return y}var Pe;(function(t){t.data="data",t.deferred="deferred",t.redirect="redirect",t.error="error"})(Pe||(Pe={}));const wj=new Set(["lazy","caseSensitive","path","id","index","children"]);function Ij(t){return t.index===!0}function bu(t,n,r,s){return r===void 0&&(r=[]),s===void 0&&(s={}),t.map((i,a)=>{let o=[...r,a],l=typeof i.id=="string"?i.id:o.join("-");if(re(i.index!==!0||!i.children,"Cannot specify children on an index route"),re(!s[l],'Found a route id collision on id "'+l+`".  Route id's must be globally unique within Data Router usages`),Ij(i)){let c=De({},i,n(i),{id:l});return s[l]=c,c}else{let c=De({},i,n(i),{id:l,children:void 0});return s[l]=c,i.children&&(c.children=bu(i.children,n,o,s)),c}})}function vs(t,n,r){r===void 0&&(r="/");let s=typeof n=="string"?Hn(n):n,i=br(s.pathname||"/",r);if(i==null)return null;let a=Ny(t);Oj(a);let o=null;for(let l=0;o==null&&l<a.length;++l)o=Hj(a[l],$j(i));return o}function Cj(t,n){let{route:r,pathname:s,params:i}=t;return{id:r.id,pathname:s,params:i,data:n[r.id],handle:r.handle}}function Ny(t,n,r,s){n===void 0&&(n=[]),r===void 0&&(r=[]),s===void 0&&(s="");let i=(a,o,l)=>{let c={relativePath:l===void 0?a.path||"":l,caseSensitive:a.caseSensitive===!0,childrenIndex:o,route:a};c.relativePath.startsWith("/")&&(re(c.relativePath.startsWith(s),'Absolute route path "'+c.relativePath+'" nested under path '+('"'+s+'" is not valid. An absolute child route path ')+"must start with the combined path of all its parent routes."),c.relativePath=c.relativePath.slice(s.length));let d=Ln([s,c.relativePath]),h=r.concat(c);a.children&&a.children.length>0&&(re(a.index!==!0,"Index routes must not have child routes. Please remove "+('all child routes from route path "'+d+'".')),Ny(a.children,n,h,d)),!(a.path==null&&!a.index)&&n.push({path:d,score:Uj(d,a.index),routesMeta:h})};return t.forEach((a,o)=>{var l;if(a.path===""||!((l=a.path)!=null&&l.includes("?")))i(a,o);else for(let c of jy(a.path))i(a,o,c)}),n}function jy(t){let n=t.split("/");if(n.length===0)return[];let[r,...s]=n,i=r.endsWith("?"),a=r.replace(/\?$/,"");if(s.length===0)return i?[a,""]:[a];let o=jy(s.join("/")),l=[];return l.push(...o.map(c=>c===""?a:[a,c].join("/"))),i&&l.push(...o),l.map(c=>t.startsWith("/")&&c===""?"/":c)}function Oj(t){t.sort((n,r)=>n.score!==r.score?r.score-n.score:Bj(n.routesMeta.map(s=>s.childrenIndex),r.routesMeta.map(s=>s.childrenIndex)))}const kj=/^:\w+$/,Lj=3,Dj=2,Mj=1,Fj=10,Pj=-2,sx=t=>t==="*";function Uj(t,n){let r=t.split("/"),s=r.length;return r.some(sx)&&(s+=Pj),n&&(s+=Dj),r.filter(i=>!sx(i)).reduce((i,a)=>i+(kj.test(a)?Lj:a===""?Mj:Fj),s)}function Bj(t,n){return t.length===n.length&&t.slice(0,-1).every((s,i)=>s===n[i])?t[t.length-1]-n[n.length-1]:0}function Hj(t,n){let{routesMeta:r}=t,s={},i="/",a=[];for(let o=0;o<r.length;++o){let l=r[o],c=o===r.length-1,d=i==="/"?n:n.slice(i.length)||"/",h=hl({path:l.relativePath,caseSensitive:l.caseSensitive,end:c},d);if(!h)return null;Object.assign(s,h.params);let x=l.route;a.push({params:s,pathname:Ln([i,h.pathname]),pathnameBase:Kj(Ln([i,h.pathnameBase])),route:x}),h.pathnameBase!=="/"&&(i=Ln([i,h.pathnameBase]))}return a}function hl(t,n){typeof t=="string"&&(t={path:t,caseSensitive:!1,end:!0});let[r,s]=Gj(t.path,t.caseSensitive,t.end),i=n.match(r);if(!i)return null;let a=i[0],o=a.replace(/(.)\/+$/,"$1"),l=i.slice(1);return{params:s.reduce((d,h,x)=>{let{paramName:g,isOptional:A}=h;if(g==="*"){let y=l[x]||"";o=a.slice(0,a.length-y.length).replace(/(.)\/+$/,"$1")}const S=l[x];return A&&!S?d[g]=void 0:d[g]=zj(S||"",g),d},{}),pathname:a,pathnameBase:o,pattern:t}}function Gj(t,n,r){n===void 0&&(n=!1),r===void 0&&(r=!0),Wr(t==="*"||!t.endsWith("*")||t.endsWith("/*"),'Route path "'+t+'" will be treated as if it were '+('"'+t.replace(/\*$/,"/*")+'" because the `*` character must ')+"always follow a `/` in the pattern. To get rid of this warning, "+('please change the route path to "'+t.replace(/\*$/,"/*")+'".'));let s=[],i="^"+t.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^${}|()[\]]/g,"\\$&").replace(/\/:(\w+)(\?)?/g,(o,l,c)=>(s.push({paramName:l,isOptional:c!=null}),c?"/?([^\\/]+)?":"/([^\\/]+)"));return t.endsWith("*")?(s.push({paramName:"*"}),i+=t==="*"||t==="/*"?"(.*)$":"(?:\\/(.+)|\\/*)$"):r?i+="\\/*$":t!==""&&t!=="/"&&(i+="(?:(?=\\/|$))"),[new RegExp(i,n?void 0:"i"),s]}function $j(t){try{return decodeURI(t)}catch(n){return Wr(!1,'The URL path "'+t+'" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent '+("encoding ("+n+").")),t}}function zj(t,n){try{return decodeURIComponent(t)}catch(r){return Wr(!1,'The value for the URL param "'+n+'" will not be decoded because'+(' the string "'+t+'" is a malformed URL segment. This is probably')+(" due to a bad percent encoding ("+r+").")),t}}function br(t,n){if(n==="/")return t;if(!t.toLowerCase().startsWith(n.toLowerCase()))return null;let r=n.endsWith("/")?n.length-1:n.length,s=t.charAt(r);return s&&s!=="/"?null:t.slice(r)||"/"}function Wj(t,n){n===void 0&&(n="/");let{pathname:r,search:s="",hash:i=""}=typeof t=="string"?Hn(t):t;return{pathname:r?r.startsWith("/")?r:Vj(r,n):n,search:Yj(s),hash:qj(i)}}function Vj(t,n){let r=n.replace(/\/+$/,"").split("/");return t.split("/").forEach(i=>{i===".."?r.length>1&&r.pop():i!=="."&&r.push(i)}),r.length>1?r.join("/"):"/"}function Kc(t,n,r,s){return"Cannot include a '"+t+"' character in a manually specified "+("`to."+n+"` field ["+JSON.stringify(s)+"].  Please separate it out to the ")+("`to."+r+"` field. Alternatively you may provide the full path as ")+'a string in <Link to="..."> and the router will parse it for you.'}function Fl(t){return t.filter((n,r)=>r===0||n.route.path&&n.route.path.length>0)}function w1(t,n,r,s){s===void 0&&(s=!1);let i;typeof t=="string"?i=Hn(t):(i=De({},t),re(!i.pathname||!i.pathname.includes("?"),Kc("?","pathname","search",i)),re(!i.pathname||!i.pathname.includes("#"),Kc("#","pathname","hash",i)),re(!i.search||!i.search.includes("#"),Kc("#","search","hash",i)));let a=t===""||i.pathname==="",o=a?"/":i.pathname,l;if(o==null)l=r;else if(s){let x=n[n.length-1].replace(/^\//,"").split("/");if(o.startsWith("..")){let g=o.split("/");for(;g[0]==="..";)g.shift(),x.pop();i.pathname=g.join("/")}l="/"+x.join("/")}else{let x=n.length-1;if(o.startsWith("..")){let g=o.split("/");for(;g[0]==="..";)g.shift(),x-=1;i.pathname=g.join("/")}l=x>=0?n[x]:"/"}let c=Wj(i,l),d=o&&o!=="/"&&o.endsWith("/"),h=(a||o===".")&&r.endsWith("/");return!c.pathname.endsWith("/")&&(d||h)&&(c.pathname+="/"),c}const Ln=t=>t.join("/").replace(/\/\/+/g,"/"),Kj=t=>t.replace(/\/+$/,"").replace(/^\/*/,"/"),Yj=t=>!t||t==="?"?"":t.startsWith("?")?t:"?"+t,qj=t=>!t||t==="#"?"":t.startsWith("#")?t:"#"+t;class I1{constructor(n,r,s,i){i===void 0&&(i=!1),this.status=n,this.statusText=r||"",this.internal=i,s instanceof Error?(this.data=s.toString(),this.error=s):this.data=s}}function Ay(t){return t!=null&&typeof t.status=="number"&&typeof t.statusText=="string"&&typeof t.internal=="boolean"&&"data"in t}const _y=["post","put","patch","delete"],Xj=new Set(_y),Zj=["get",..._y],Qj=new Set(Zj),Jj=new Set([301,302,303,307,308]),eA=new Set([307,308]),Yc={state:"idle",location:void 0,formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0,json:void 0,text:void 0},tA={state:"idle",data:void 0,formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0,json:void 0,text:void 0},bi={state:"unblocked",proceed:void 0,reset:void 0,location:void 0},vy=/^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,nA=t=>({hasErrorBoundary:!!t.hasErrorBoundary}),Ry="remix-router-transitions";function rA(t){const n=t.window?t.window:typeof window<"u"?window:void 0,r=typeof n<"u"&&typeof n.document<"u"&&typeof n.document.createElement<"u",s=!r;re(t.routes.length>0,"You must provide a non-empty routes array to createRouter");let i;if(t.mapRouteProperties)i=t.mapRouteProperties;else if(t.detectErrorBoundary){let w=t.detectErrorBoundary;i=C=>({hasErrorBoundary:w(C)})}else i=nA;let a={},o=bu(t.routes,i,void 0,a),l,c=t.basename||"/",d=De({v7_fetcherPersist:!1,v7_normalizeFormMethod:!1,v7_prependBasename:!1},t.future),h=null,x=new Set,g=null,A=null,S=null,y=t.hydrationData!=null,_=vs(o,t.history.location,c),f=null;if(_==null){let w=Pt(404,{pathname:t.history.location.pathname}),{matches:C,route:D}=hx(o);_=C,f={[D.id]:w}}let b=!_.some(w=>w.route.lazy)&&(!_.some(w=>w.route.loader)||t.hydrationData!=null),T,E={historyAction:t.history.action,location:t.history.location,matches:_,initialized:b,navigation:Yc,restoreScrollPosition:t.hydrationData!=null?!1:null,preventScrollReset:!1,revalidation:"idle",loaderData:t.hydrationData&&t.hydrationData.loaderData||{},actionData:t.hydrationData&&t.hydrationData.actionData||null,errors:t.hydrationData&&t.hydrationData.errors||f,fetchers:new Map,blockers:new Map},R=Fe.Pop,I=!1,v,O=!1,F=new Map,H=null,J=!1,X=!1,ie=[],Me=[],ue=new Map,Qe=0,Oe=-1,$=new Map,Y=new Set,q=new Map,he=new Map,ge=new Set,Et=new Map,pt=new Map,Nr=!1;function Sn(){if(h=t.history.listen(w=>{let{action:C,location:D,delta:z}=w;if(Nr){Nr=!1;return}Wr(pt.size===0||z!=null,"You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.");let K=$g({currentLocation:E.location,nextLocation:D,historyAction:C});if(K&&z!=null){Nr=!0,t.history.go(z*-1),Ua(K,{state:"blocked",location:D,proceed(){Ua(K,{state:"proceeding",proceed:void 0,reset:void 0,location:D}),t.history.go(z)},reset(){let se=new Map(E.blockers);se.set(K,bi),Rt({blockers:se})}});return}return jr(C,D)}),r){mA(n,F);let w=()=>fA(n,F);n.addEventListener("pagehide",w),H=()=>n.removeEventListener("pagehide",w)}return E.initialized||jr(Fe.Pop,E.location),T}function ss(){h&&h(),H&&H(),x.clear(),v&&v.abort(),E.fetchers.forEach((w,C)=>Pa(C)),E.blockers.forEach((w,C)=>Gg(C))}function BS(w){return x.add(w),()=>x.delete(w)}function Rt(w,C){C===void 0&&(C={}),E=De({},E,w);let D=[],z=[];d.v7_fetcherPersist&&E.fetchers.forEach((K,se)=>{K.state==="idle"&&(ge.has(se)?z.push(se):D.push(se))}),[...x].forEach(K=>K(E,{deletedFetchers:z,unstable_viewTransitionOpts:C.viewTransitionOpts,unstable_flushSync:C.flushSync===!0})),d.v7_fetcherPersist&&(D.forEach(K=>E.fetchers.delete(K)),z.forEach(K=>Pa(K)))}function ii(w,C,D){var z,K;let{flushSync:se}=D===void 0?{}:D,te=E.actionData!=null&&E.navigation.formMethod!=null&&rn(E.navigation.formMethod)&&E.navigation.state==="loading"&&((z=w.state)==null?void 0:z._isRedirect)!==!0,ee;C.actionData?Object.keys(C.actionData).length>0?ee=C.actionData:ee=null:te?ee=E.actionData:ee=null;let Z=C.loaderData?ux(E.loaderData,C.loaderData,C.matches||[],C.errors):E.loaderData,pe=E.blockers;pe.size>0&&(pe=new Map(pe),pe.forEach((Te,Re)=>pe.set(Re,bi)));let Je=I===!0||E.navigation.formMethod!=null&&rn(E.navigation.formMethod)&&((K=w.state)==null?void 0:K._isRedirect)!==!0;l&&(o=l,l=void 0),J||R===Fe.Pop||(R===Fe.Push?t.history.push(w,w.state):R===Fe.Replace&&t.history.replace(w,w.state));let ae;if(R===Fe.Pop){let Te=F.get(E.location.pathname);Te&&Te.has(w.pathname)?ae={currentLocation:E.location,nextLocation:w}:F.has(w.pathname)&&(ae={currentLocation:w,nextLocation:E.location})}else if(O){let Te=F.get(E.location.pathname);Te?Te.add(w.pathname):(Te=new Set([w.pathname]),F.set(E.location.pathname,Te)),ae={currentLocation:E.location,nextLocation:w}}Rt(De({},C,{actionData:ee,loaderData:Z,historyAction:R,location:w,initialized:!0,navigation:Yc,revalidation:"idle",restoreScrollPosition:Wg(w,C.matches||E.matches),preventScrollReset:Je,blockers:pe}),{viewTransitionOpts:ae,flushSync:se===!0}),R=Fe.Pop,I=!1,O=!1,J=!1,X=!1,ie=[],Me=[]}async function Mg(w,C){if(typeof w=="number"){t.history.go(w);return}let D=xu(E.location,E.matches,c,d.v7_prependBasename,w,C==null?void 0:C.fromRouteId,C==null?void 0:C.relative),{path:z,submission:K,error:se}=ix(d.v7_normalizeFormMethod,!1,D,C),te=E.location,ee=ga(E.location,z,C&&C.state);ee=De({},ee,t.history.encodeLocation(ee));let Z=C&&C.replace!=null?C.replace:void 0,pe=Fe.Push;Z===!0?pe=Fe.Replace:Z===!1||K!=null&&rn(K.formMethod)&&K.formAction===E.location.pathname+E.location.search&&(pe=Fe.Replace);let Je=C&&"preventScrollReset"in C?C.preventScrollReset===!0:void 0,ae=(C&&C.unstable_flushSync)===!0,Te=$g({currentLocation:te,nextLocation:ee,historyAction:pe});if(Te){Ua(Te,{state:"blocked",location:ee,proceed(){Ua(Te,{state:"proceeding",proceed:void 0,reset:void 0,location:ee}),Mg(w,C)},reset(){let Re=new Map(E.blockers);Re.set(Te,bi),Rt({blockers:Re})}});return}return await jr(pe,ee,{submission:K,pendingError:se,preventScrollReset:Je,replace:C&&C.replace,enableViewTransition:C&&C.unstable_viewTransition,flushSync:ae})}function HS(){if(fc(),Rt({revalidation:"loading"}),E.navigation.state!=="submitting"){if(E.navigation.state==="idle"){jr(E.historyAction,E.location,{startUninterruptedRevalidation:!0});return}jr(R||E.historyAction,E.navigation.location,{overrideNavigation:E.navigation})}}async function jr(w,C,D){v&&v.abort(),v=null,R=w,J=(D&&D.startUninterruptedRevalidation)===!0,XS(E.location,E.matches),I=(D&&D.preventScrollReset)===!0,O=(D&&D.enableViewTransition)===!0;let z=l||o,K=D&&D.overrideNavigation,se=vs(z,C,c),te=(D&&D.flushSync)===!0;if(!se){let Re=Pt(404,{pathname:C.pathname}),{matches:mt,route:hn}=hx(z);gc(),ii(C,{matches:mt,loaderData:{},errors:{[hn.id]:Re}},{flushSync:te});return}if(E.initialized&&!X&&lA(E.location,C)&&!(D&&D.submission&&rn(D.submission.formMethod))){ii(C,{matches:se},{flushSync:te});return}v=new AbortController;let ee=Ei(t.history,C,v.signal,D&&D.submission),Z,pe;if(D&&D.pendingError)pe={[zi(se).route.id]:D.pendingError};else if(D&&D.submission&&rn(D.submission.formMethod)){let Re=await GS(ee,C,D.submission,se,{replace:D.replace,flushSync:te});if(Re.shortCircuited)return;Z=Re.pendingActionData,pe=Re.pendingActionError,K=qc(C,D.submission),te=!1,ee=new Request(ee.url,{signal:ee.signal})}let{shortCircuited:Je,loaderData:ae,errors:Te}=await $S(ee,C,se,K,D&&D.submission,D&&D.fetcherSubmission,D&&D.replace,te,Z,pe);Je||(v=null,ii(C,De({matches:se},Z?{actionData:Z}:{},{loaderData:ae,errors:Te})))}async function GS(w,C,D,z,K){K===void 0&&(K={}),fc();let se=hA(C,D);Rt({navigation:se},{flushSync:K.flushSync===!0});let te,ee=Tu(z,C);if(!ee.route.action&&!ee.route.lazy)te={type:Pe.error,error:Pt(405,{method:w.method,pathname:C.pathname,routeId:ee.route.id})};else if(te=await xi("action",w,ee,z,a,i,c),w.signal.aborted)return{shortCircuited:!0};if(Ds(te)){let Z;return K&&K.replace!=null?Z=K.replace:Z=te.location===E.location.pathname+E.location.search,await ai(E,te,{submission:D,replace:Z}),{shortCircuited:!0}}if(Wi(te)){let Z=zi(z,ee.route.id);return(K&&K.replace)!==!0&&(R=Fe.Push),{pendingActionData:{},pendingActionError:{[Z.route.id]:te.error}}}if(Mr(te))throw Pt(400,{type:"defer-action"});return{pendingActionData:{[ee.route.id]:te.data}}}async function $S(w,C,D,z,K,se,te,ee,Z,pe){let Je=z||qc(C,K),ae=K||se||fx(Je),Te=l||o,[Re,mt]=ax(t.history,E,D,ae,C,X,ie,Me,q,Y,Te,c,Z,pe);if(gc(ye=>!(D&&D.some(Mt=>Mt.route.id===ye))||Re&&Re.some(Mt=>Mt.route.id===ye)),Oe=++Qe,Re.length===0&&mt.length===0){let ye=Bg();return ii(C,De({matches:D,loaderData:{},errors:pe||null},Z?{actionData:Z}:{},ye?{fetchers:new Map(E.fetchers)}:{}),{flushSync:ee}),{shortCircuited:!0}}if(!J){mt.forEach(Mt=>{let Be=E.fetchers.get(Mt.key),Ar=Ti(void 0,Be?Be.data:void 0);E.fetchers.set(Mt.key,Ar)});let ye=Z||E.actionData;Rt(De({navigation:Je},ye?Object.keys(ye).length===0?{actionData:null}:{actionData:ye}:{},mt.length>0?{fetchers:new Map(E.fetchers)}:{}),{flushSync:ee})}mt.forEach(ye=>{ue.has(ye.key)&&Wn(ye.key),ye.controller&&ue.set(ye.key,ye.controller)});let hn=()=>mt.forEach(ye=>Wn(ye.key));v&&v.signal.addEventListener("abort",hn);let{results:li,loaderResults:bc,fetcherResults:is}=await Fg(E.matches,D,Re,mt,w);if(w.signal.aborted)return{shortCircuited:!0};v&&v.signal.removeEventListener("abort",hn),mt.forEach(ye=>ue.delete(ye.key));let Xt=px(li);if(Xt){if(Xt.idx>=Re.length){let ye=mt[Xt.idx-Re.length].key;Y.add(ye)}return await ai(E,Xt.result,{replace:te}),{shortCircuited:!0}}let{loaderData:Ba,errors:xc}=dx(E,D,Re,bc,pe,mt,is,Et);Et.forEach((ye,Mt)=>{ye.subscribe(Be=>{(Be||ye.done)&&Et.delete(Mt)})});let Ec=Bg(),Tc=Hg(Oe),as=Ec||Tc||mt.length>0;return De({loaderData:Ba,errors:xc},as?{fetchers:new Map(E.fetchers)}:{})}function zS(w,C,D,z){if(s)throw new Error("router.fetch() was called during the server render, but it shouldn't be. You are likely calling a useFetcher() method in the body of your component. Try moving it to a useEffect or a callback.");ue.has(w)&&Wn(w);let K=(z&&z.unstable_flushSync)===!0,se=l||o,te=xu(E.location,E.matches,c,d.v7_prependBasename,D,C,z==null?void 0:z.relative),ee=vs(se,te,c);if(!ee){oi(w,C,Pt(404,{pathname:te}),{flushSync:K});return}let{path:Z,submission:pe,error:Je}=ix(d.v7_normalizeFormMethod,!0,te,z);if(Je){oi(w,C,Je,{flushSync:K});return}let ae=Tu(ee,Z);if(I=(z&&z.preventScrollReset)===!0,pe&&rn(pe.formMethod)){WS(w,C,Z,ae,ee,K,pe);return}q.set(w,{routeId:C,path:Z}),VS(w,C,Z,ae,ee,K,pe)}async function WS(w,C,D,z,K,se,te){if(fc(),q.delete(w),!z.route.action&&!z.route.lazy){let Be=Pt(405,{method:te.formMethod,pathname:D,routeId:C});oi(w,C,Be,{flushSync:se});return}let ee=E.fetchers.get(w);zn(w,pA(te,ee),{flushSync:se});let Z=new AbortController,pe=Ei(t.history,D,Z.signal,te);ue.set(w,Z);let Je=Qe,ae=await xi("action",pe,z,K,a,i,c);if(pe.signal.aborted){ue.get(w)===Z&&ue.delete(w);return}if(ge.has(w)){zn(w,Zn(void 0));return}if(Ds(ae))if(ue.delete(w),Oe>Je){zn(w,Zn(void 0));return}else return Y.add(w),zn(w,Ti(te)),ai(E,ae,{fetcherSubmission:te});if(Wi(ae)){oi(w,C,ae.error);return}if(Mr(ae))throw Pt(400,{type:"defer-action"});let Te=E.navigation.location||E.location,Re=Ei(t.history,Te,Z.signal),mt=l||o,hn=E.navigation.state!=="idle"?vs(mt,E.navigation.location,c):E.matches;re(hn,"Didn't find any matches after fetcher action");let li=++Qe;$.set(w,li);let bc=Ti(te,ae.data);E.fetchers.set(w,bc);let[is,Xt]=ax(t.history,E,hn,te,Te,X,ie,Me,q,Y,mt,c,{[z.route.id]:ae.data},void 0);Xt.filter(Be=>Be.key!==w).forEach(Be=>{let Ar=Be.key,Vg=E.fetchers.get(Ar),QS=Ti(void 0,Vg?Vg.data:void 0);E.fetchers.set(Ar,QS),ue.has(Ar)&&Wn(Ar),Be.controller&&ue.set(Ar,Be.controller)}),Rt({fetchers:new Map(E.fetchers)});let Ba=()=>Xt.forEach(Be=>Wn(Be.key));Z.signal.addEventListener("abort",Ba);let{results:xc,loaderResults:Ec,fetcherResults:Tc}=await Fg(E.matches,hn,is,Xt,Re);if(Z.signal.aborted)return;Z.signal.removeEventListener("abort",Ba),$.delete(w),ue.delete(w),Xt.forEach(Be=>ue.delete(Be.key));let as=px(xc);if(as){if(as.idx>=is.length){let Be=Xt[as.idx-is.length].key;Y.add(Be)}return ai(E,as.result)}let{loaderData:ye,errors:Mt}=dx(E,E.matches,is,Ec,void 0,Xt,Tc,Et);if(E.fetchers.has(w)){let Be=Zn(ae.data);E.fetchers.set(w,Be)}Hg(li),E.navigation.state==="loading"&&li>Oe?(re(R,"Expected pending action"),v&&v.abort(),ii(E.navigation.location,{matches:hn,loaderData:ye,errors:Mt,fetchers:new Map(E.fetchers)})):(Rt({errors:Mt,loaderData:ux(E.loaderData,ye,hn,Mt),fetchers:new Map(E.fetchers)}),X=!1)}async function VS(w,C,D,z,K,se,te){let ee=E.fetchers.get(w);zn(w,Ti(te,ee?ee.data:void 0),{flushSync:se});let Z=new AbortController,pe=Ei(t.history,D,Z.signal);ue.set(w,Z);let Je=Qe,ae=await xi("loader",pe,z,K,a,i,c);if(Mr(ae)&&(ae=await Cy(ae,pe.signal,!0)||ae),ue.get(w)===Z&&ue.delete(w),!pe.signal.aborted){if(ge.has(w)){zn(w,Zn(void 0));return}if(Ds(ae))if(Oe>Je){zn(w,Zn(void 0));return}else{Y.add(w),await ai(E,ae);return}if(Wi(ae)){oi(w,C,ae.error);return}re(!Mr(ae),"Unhandled fetcher deferred data"),zn(w,Zn(ae.data))}}async function ai(w,C,D){let{submission:z,fetcherSubmission:K,replace:se}=D===void 0?{}:D;C.revalidate&&(X=!0);let te=ga(w.location,C.location,{_isRedirect:!0});if(re(te,"Expected a location on the redirect navigation"),r){let Te=!1;if(C.reloadDocument)Te=!0;else if(vy.test(C.location)){const Re=t.history.createURL(C.location);Te=Re.origin!==n.location.origin||br(Re.pathname,c)==null}if(Te){se?n.location.replace(C.location):n.location.assign(C.location);return}}v=null;let ee=se===!0?Fe.Replace:Fe.Push,{formMethod:Z,formAction:pe,formEncType:Je}=w.navigation;!z&&!K&&Z&&pe&&Je&&(z=fx(w.navigation));let ae=z||K;if(eA.has(C.status)&&ae&&rn(ae.formMethod))await jr(ee,te,{submission:De({},ae,{formAction:C.location}),preventScrollReset:I});else{let Te=qc(te,z);await jr(ee,te,{overrideNavigation:Te,fetcherSubmission:K,preventScrollReset:I})}}async function Fg(w,C,D,z,K){let se=await Promise.all([...D.map(Z=>xi("loader",K,Z,C,a,i,c)),...z.map(Z=>Z.matches&&Z.match&&Z.controller?xi("loader",Ei(t.history,Z.path,Z.controller.signal),Z.match,Z.matches,a,i,c):{type:Pe.error,error:Pt(404,{pathname:Z.path})})]),te=se.slice(0,D.length),ee=se.slice(D.length);return await Promise.all([mx(w,D,te,te.map(()=>K.signal),!1,E.loaderData),mx(w,z.map(Z=>Z.match),ee,z.map(Z=>Z.controller?Z.controller.signal:null),!0)]),{results:se,loaderResults:te,fetcherResults:ee}}function fc(){X=!0,ie.push(...gc()),q.forEach((w,C)=>{ue.has(C)&&(Me.push(C),Wn(C))})}function zn(w,C,D){D===void 0&&(D={}),E.fetchers.set(w,C),Rt({fetchers:new Map(E.fetchers)},{flushSync:(D&&D.flushSync)===!0})}function oi(w,C,D,z){z===void 0&&(z={});let K=zi(E.matches,C);Pa(w),Rt({errors:{[K.route.id]:D},fetchers:new Map(E.fetchers)},{flushSync:(z&&z.flushSync)===!0})}function Pg(w){return d.v7_fetcherPersist&&(he.set(w,(he.get(w)||0)+1),ge.has(w)&&ge.delete(w)),E.fetchers.get(w)||tA}function Pa(w){let C=E.fetchers.get(w);ue.has(w)&&!(C&&C.state==="loading"&&$.has(w))&&Wn(w),q.delete(w),$.delete(w),Y.delete(w),ge.delete(w),E.fetchers.delete(w)}function KS(w){if(d.v7_fetcherPersist){let C=(he.get(w)||0)-1;C<=0?(he.delete(w),ge.add(w)):he.set(w,C)}else Pa(w);Rt({fetchers:new Map(E.fetchers)})}function Wn(w){let C=ue.get(w);re(C,"Expected fetch controller: "+w),C.abort(),ue.delete(w)}function Ug(w){for(let C of w){let D=Pg(C),z=Zn(D.data);E.fetchers.set(C,z)}}function Bg(){let w=[],C=!1;for(let D of Y){let z=E.fetchers.get(D);re(z,"Expected fetcher: "+D),z.state==="loading"&&(Y.delete(D),w.push(D),C=!0)}return Ug(w),C}function Hg(w){let C=[];for(let[D,z]of $)if(z<w){let K=E.fetchers.get(D);re(K,"Expected fetcher: "+D),K.state==="loading"&&(Wn(D),$.delete(D),C.push(D))}return Ug(C),C.length>0}function YS(w,C){let D=E.blockers.get(w)||bi;return pt.get(w)!==C&&pt.set(w,C),D}function Gg(w){E.blockers.delete(w),pt.delete(w)}function Ua(w,C){let D=E.blockers.get(w)||bi;re(D.state==="unblocked"&&C.state==="blocked"||D.state==="blocked"&&C.state==="blocked"||D.state==="blocked"&&C.state==="proceeding"||D.state==="blocked"&&C.state==="unblocked"||D.state==="proceeding"&&C.state==="unblocked","Invalid blocker state transition: "+D.state+" -> "+C.state);let z=new Map(E.blockers);z.set(w,C),Rt({blockers:z})}function $g(w){let{currentLocation:C,nextLocation:D,historyAction:z}=w;if(pt.size===0)return;pt.size>1&&Wr(!1,"A router only supports one blocker at a time");let K=Array.from(pt.entries()),[se,te]=K[K.length-1],ee=E.blockers.get(se);if(!(ee&&ee.state==="proceeding")&&te({currentLocation:C,nextLocation:D,historyAction:z}))return se}function gc(w){let C=[];return Et.forEach((D,z)=>{(!w||w(z))&&(D.cancel(),C.push(z),Et.delete(z))}),C}function qS(w,C,D){if(g=w,S=C,A=D||null,!y&&E.navigation===Yc){y=!0;let z=Wg(E.location,E.matches);z!=null&&Rt({restoreScrollPosition:z})}return()=>{g=null,S=null,A=null}}function zg(w,C){return A&&A(w,C.map(z=>Cj(z,E.loaderData)))||w.key}function XS(w,C){if(g&&S){let D=zg(w,C);g[D]=S()}}function Wg(w,C){if(g){let D=zg(w,C),z=g[D];if(typeof z=="number")return z}return null}function ZS(w){a={},l=bu(w,i,void 0,a)}return T={get basename(){return c},get state(){return E},get routes(){return o},get window(){return n},initialize:Sn,subscribe:BS,enableScrollRestoration:qS,navigate:Mg,fetch:zS,revalidate:HS,createHref:w=>t.history.createHref(w),encodeLocation:w=>t.history.encodeLocation(w),getFetcher:Pg,deleteFetcher:KS,dispose:ss,getBlocker:YS,deleteBlocker:Gg,_internalFetchControllers:ue,_internalActiveDeferreds:Et,_internalSetRoutes:ZS},T}function sA(t){return t!=null&&("formData"in t&&t.formData!=null||"body"in t&&t.body!==void 0)}function xu(t,n,r,s,i,a,o){let l,c;if(a){l=[];for(let h of n)if(l.push(h),h.route.id===a){c=h;break}}else l=n,c=n[n.length-1];let d=w1(i||".",Fl(l).map(h=>h.pathnameBase),br(t.pathname,r)||t.pathname,o==="path");return i==null&&(d.search=t.search,d.hash=t.hash),(i==null||i===""||i===".")&&c&&c.route.index&&!C1(d.search)&&(d.search=d.search?d.search.replace(/^\?/,"?index&"):"?index"),s&&r!=="/"&&(d.pathname=d.pathname==="/"?r:Ln([r,d.pathname])),Vr(d)}function ix(t,n,r,s){if(!s||!sA(s))return{path:r};if(s.formMethod&&!uA(s.formMethod))return{path:r,error:Pt(405,{method:s.formMethod})};let i=()=>({path:r,error:Pt(400,{type:"invalid-body"})}),a=s.formMethod||"get",o=t?a.toUpperCase():a.toLowerCase(),l=Iy(r);if(s.body!==void 0){if(s.formEncType==="text/plain"){if(!rn(o))return i();let g=typeof s.body=="string"?s.body:s.body instanceof FormData||s.body instanceof URLSearchParams?Array.from(s.body.entries()).reduce((A,S)=>{let[y,_]=S;return""+A+y+"="+_+`
`},""):String(s.body);return{path:r,submission:{formMethod:o,formAction:l,formEncType:s.formEncType,formData:void 0,json:void 0,text:g}}}else if(s.formEncType==="application/json"){if(!rn(o))return i();try{let g=typeof s.body=="string"?JSON.parse(s.body):s.body;return{path:r,submission:{formMethod:o,formAction:l,formEncType:s.formEncType,formData:void 0,json:g,text:void 0}}}catch{return i()}}}re(typeof FormData=="function","FormData is not available in this environment");let c,d;if(s.formData)c=Eu(s.formData),d=s.formData;else if(s.body instanceof FormData)c=Eu(s.body),d=s.body;else if(s.body instanceof URLSearchParams)c=s.body,d=cx(c);else if(s.body==null)c=new URLSearchParams,d=new FormData;else try{c=new URLSearchParams(s.body),d=cx(c)}catch{return i()}let h={formMethod:o,formAction:l,formEncType:s&&s.formEncType||"application/x-www-form-urlencoded",formData:d,json:void 0,text:void 0};if(rn(h.formMethod))return{path:r,submission:h};let x=Hn(r);return n&&x.search&&C1(x.search)&&c.append("index",""),x.search="?"+c,{path:Vr(x),submission:h}}function iA(t,n){let r=t;if(n){let s=t.findIndex(i=>i.route.id===n);s>=0&&(r=t.slice(0,s))}return r}function ax(t,n,r,s,i,a,o,l,c,d,h,x,g,A){let S=A?Object.values(A)[0]:g?Object.values(g)[0]:void 0,y=t.createURL(n.location),_=t.createURL(i),f=A?Object.keys(A)[0]:void 0,T=iA(r,f).filter((R,I)=>{if(R.route.lazy)return!0;if(R.route.loader==null)return!1;if(aA(n.loaderData,n.matches[I],R)||o.some(F=>F===R.route.id))return!0;let v=n.matches[I],O=R;return ox(R,De({currentUrl:y,currentParams:v.params,nextUrl:_,nextParams:O.params},s,{actionResult:S,defaultShouldRevalidate:a||y.pathname+y.search===_.pathname+_.search||y.search!==_.search||wy(v,O)}))}),E=[];return c.forEach((R,I)=>{if(!r.some(J=>J.route.id===R.routeId))return;let v=vs(h,R.path,x);if(!v){E.push({key:I,routeId:R.routeId,path:R.path,matches:null,match:null,controller:null});return}let O=n.fetchers.get(I),F=Tu(v,R.path),H=!1;d.has(I)?H=!1:l.includes(I)?H=!0:O&&O.state!=="idle"&&O.data===void 0?H=a:H=ox(F,De({currentUrl:y,currentParams:n.matches[n.matches.length-1].params,nextUrl:_,nextParams:r[r.length-1].params},s,{actionResult:S,defaultShouldRevalidate:a})),H&&E.push({key:I,routeId:R.routeId,path:R.path,matches:v,match:F,controller:new AbortController})}),[T,E]}function aA(t,n,r){let s=!n||r.route.id!==n.route.id,i=t[r.route.id]===void 0;return s||i}function wy(t,n){let r=t.route.path;return t.pathname!==n.pathname||r!=null&&r.endsWith("*")&&t.params["*"]!==n.params["*"]}function ox(t,n){if(t.route.shouldRevalidate){let r=t.route.shouldRevalidate(n);if(typeof r=="boolean")return r}return n.defaultShouldRevalidate}async function lx(t,n,r){if(!t.lazy)return;let s=await t.lazy();if(!t.lazy)return;let i=r[t.id];re(i,"No route found in manifest");let a={};for(let o in s){let c=i[o]!==void 0&&o!=="hasErrorBoundary";Wr(!c,'Route "'+i.id+'" has a static property "'+o+'" defined but its lazy function is also returning a value for this property. '+('The lazy route property "'+o+'" will be ignored.')),!c&&!wj.has(o)&&(a[o]=s[o])}Object.assign(i,a),Object.assign(i,De({},n(i),{lazy:void 0}))}async function xi(t,n,r,s,i,a,o,l){l===void 0&&(l={});let c,d,h,x=S=>{let y,_=new Promise((f,b)=>y=b);return h=()=>y(),n.signal.addEventListener("abort",h),Promise.race([S({request:n,params:r.params,context:l.requestContext}),_])};try{let S=r.route[t];if(r.route.lazy)if(S){let y,_=await Promise.all([x(S).catch(f=>{y=f}),lx(r.route,a,i)]);if(y)throw y;d=_[0]}else if(await lx(r.route,a,i),S=r.route[t],S)d=await x(S);else if(t==="action"){let y=new URL(n.url),_=y.pathname+y.search;throw Pt(405,{method:n.method,pathname:_,routeId:r.route.id})}else return{type:Pe.data,data:void 0};else if(S)d=await x(S);else{let y=new URL(n.url),_=y.pathname+y.search;throw Pt(404,{pathname:_})}re(d!==void 0,"You defined "+(t==="action"?"an action":"a loader")+" for route "+('"'+r.route.id+"\" but didn't return anything from your `"+t+"` ")+"function. Please return a value or `null`.")}catch(S){c=Pe.error,d=S}finally{h&&n.signal.removeEventListener("abort",h)}if(dA(d)){let S=d.status;if(Jj.has(S)){let f=d.headers.get("Location");if(re(f,"Redirects returned/thrown from loaders/actions must have a Location header"),!vy.test(f))f=xu(new URL(n.url),s.slice(0,s.indexOf(r)+1),o,!0,f);else if(!l.isStaticRequest){let b=new URL(n.url),T=f.startsWith("//")?new URL(b.protocol+f):new URL(f),E=br(T.pathname,o)!=null;T.origin===b.origin&&E&&(f=T.pathname+T.search+T.hash)}if(l.isStaticRequest)throw d.headers.set("Location",f),d;return{type:Pe.redirect,status:S,location:f,revalidate:d.headers.get("X-Remix-Revalidate")!==null,reloadDocument:d.headers.get("X-Remix-Reload-Document")!==null}}if(l.isRouteRequest)throw{type:c===Pe.error?Pe.error:Pe.data,response:d};let y,_=d.headers.get("Content-Type");return _&&/\bapplication\/json\b/.test(_)?y=await d.json():y=await d.text(),c===Pe.error?{type:c,error:new I1(S,d.statusText,y),headers:d.headers}:{type:Pe.data,data:y,statusCode:d.status,headers:d.headers}}if(c===Pe.error)return{type:c,error:d};if(cA(d)){var g,A;return{type:Pe.deferred,deferredData:d,statusCode:(g=d.init)==null?void 0:g.status,headers:((A=d.init)==null?void 0:A.headers)&&new Headers(d.init.headers)}}return{type:Pe.data,data:d}}function Ei(t,n,r,s){let i=t.createURL(Iy(n)).toString(),a={signal:r};if(s&&rn(s.formMethod)){let{formMethod:o,formEncType:l}=s;a.method=o.toUpperCase(),l==="application/json"?(a.headers=new Headers({"Content-Type":l}),a.body=JSON.stringify(s.json)):l==="text/plain"?a.body=s.text:l==="application/x-www-form-urlencoded"&&s.formData?a.body=Eu(s.formData):a.body=s.formData}return new Request(i,a)}function Eu(t){let n=new URLSearchParams;for(let[r,s]of t.entries())n.append(r,typeof s=="string"?s:s.name);return n}function cx(t){let n=new FormData;for(let[r,s]of t.entries())n.append(r,s);return n}function oA(t,n,r,s,i){let a={},o=null,l,c=!1,d={};return r.forEach((h,x)=>{let g=n[x].route.id;if(re(!Ds(h),"Cannot handle redirect results in processLoaderData"),Wi(h)){let A=zi(t,g),S=h.error;s&&(S=Object.values(s)[0],s=void 0),o=o||{},o[A.route.id]==null&&(o[A.route.id]=S),a[g]=void 0,c||(c=!0,l=Ay(h.error)?h.error.status:500),h.headers&&(d[g]=h.headers)}else Mr(h)?(i.set(g,h.deferredData),a[g]=h.deferredData.data):a[g]=h.data,h.statusCode!=null&&h.statusCode!==200&&!c&&(l=h.statusCode),h.headers&&(d[g]=h.headers)}),s&&(o=s,a[Object.keys(s)[0]]=void 0),{loaderData:a,errors:o,statusCode:l||200,loaderHeaders:d}}function dx(t,n,r,s,i,a,o,l){let{loaderData:c,errors:d}=oA(n,r,s,i,l);for(let h=0;h<a.length;h++){let{key:x,match:g,controller:A}=a[h];re(o!==void 0&&o[h]!==void 0,"Did not find corresponding fetcher result");let S=o[h];if(!(A&&A.signal.aborted))if(Wi(S)){let y=zi(t.matches,g==null?void 0:g.route.id);d&&d[y.route.id]||(d=De({},d,{[y.route.id]:S.error})),t.fetchers.delete(x)}else if(Ds(S))re(!1,"Unhandled fetcher revalidation redirect");else if(Mr(S))re(!1,"Unhandled fetcher deferred data");else{let y=Zn(S.data);t.fetchers.set(x,y)}}return{loaderData:c,errors:d}}function ux(t,n,r,s){let i=De({},n);for(let a of r){let o=a.route.id;if(n.hasOwnProperty(o)?n[o]!==void 0&&(i[o]=n[o]):t[o]!==void 0&&a.route.loader&&(i[o]=t[o]),s&&s.hasOwnProperty(o))break}return i}function zi(t,n){return(n?t.slice(0,t.findIndex(s=>s.route.id===n)+1):[...t]).reverse().find(s=>s.route.hasErrorBoundary===!0)||t[0]}function hx(t){let n=t.length===1?t[0]:t.find(r=>r.index||!r.path||r.path==="/")||{id:"__shim-error-route__"};return{matches:[{params:{},pathname:"",pathnameBase:"",route:n}],route:n}}function Pt(t,n){let{pathname:r,routeId:s,method:i,type:a}=n===void 0?{}:n,o="Unknown Server Error",l="Unknown @remix-run/router error";return t===400?(o="Bad Request",i&&r&&s?l="You made a "+i+' request to "'+r+'" but '+('did not provide a `loader` for route "'+s+'", ')+"so there is no way to handle the request.":a==="defer-action"?l="defer() is not supported in actions":a==="invalid-body"&&(l="Unable to encode submission body")):t===403?(o="Forbidden",l='Route "'+s+'" does not match URL "'+r+'"'):t===404?(o="Not Found",l='No route matches URL "'+r+'"'):t===405&&(o="Method Not Allowed",i&&r&&s?l="You made a "+i.toUpperCase()+' request to "'+r+'" but '+('did not provide an `action` for route "'+s+'", ')+"so there is no way to handle the request.":i&&(l='Invalid request method "'+i.toUpperCase()+'"')),new I1(t||500,o,new Error(l),!0)}function px(t){for(let n=t.length-1;n>=0;n--){let r=t[n];if(Ds(r))return{result:r,idx:n}}}function Iy(t){let n=typeof t=="string"?Hn(t):t;return Vr(De({},n,{hash:""}))}function lA(t,n){return t.pathname!==n.pathname||t.search!==n.search?!1:t.hash===""?n.hash!=="":t.hash===n.hash?!0:n.hash!==""}function Mr(t){return t.type===Pe.deferred}function Wi(t){return t.type===Pe.error}function Ds(t){return(t&&t.type)===Pe.redirect}function cA(t){let n=t;return n&&typeof n=="object"&&typeof n.data=="object"&&typeof n.subscribe=="function"&&typeof n.cancel=="function"&&typeof n.resolveData=="function"}function dA(t){return t!=null&&typeof t.status=="number"&&typeof t.statusText=="string"&&typeof t.headers=="object"&&typeof t.body<"u"}function uA(t){return Qj.has(t.toLowerCase())}function rn(t){return Xj.has(t.toLowerCase())}async function mx(t,n,r,s,i,a){for(let o=0;o<r.length;o++){let l=r[o],c=n[o];if(!c)continue;let d=t.find(x=>x.route.id===c.route.id),h=d!=null&&!wy(d,c)&&(a&&a[c.route.id])!==void 0;if(Mr(l)&&(i||h)){let x=s[o];re(x,"Expected an AbortSignal for revalidating fetcher deferred result"),await Cy(l,x,i).then(g=>{g&&(r[o]=g||r[o])})}}}async function Cy(t,n,r){if(r===void 0&&(r=!1),!await t.deferredData.resolveData(n)){if(r)try{return{type:Pe.data,data:t.deferredData.unwrappedData}}catch(i){return{type:Pe.error,error:i}}return{type:Pe.data,data:t.deferredData.data}}}function C1(t){return new URLSearchParams(t).getAll("index").some(n=>n==="")}function Tu(t,n){let r=typeof n=="string"?Hn(n).search:n.search;if(t[t.length-1].route.index&&C1(r||""))return t[t.length-1];let s=Fl(t);return s[s.length-1]}function fx(t){let{formMethod:n,formAction:r,formEncType:s,text:i,formData:a,json:o}=t;if(!(!n||!r||!s)){if(i!=null)return{formMethod:n,formAction:r,formEncType:s,formData:void 0,json:void 0,text:i};if(a!=null)return{formMethod:n,formAction:r,formEncType:s,formData:a,json:void 0,text:void 0};if(o!==void 0)return{formMethod:n,formAction:r,formEncType:s,formData:void 0,json:o,text:void 0}}}function qc(t,n){return n?{state:"loading",location:t,formMethod:n.formMethod,formAction:n.formAction,formEncType:n.formEncType,formData:n.formData,json:n.json,text:n.text}:{state:"loading",location:t,formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0,json:void 0,text:void 0}}function hA(t,n){return{state:"submitting",location:t,formMethod:n.formMethod,formAction:n.formAction,formEncType:n.formEncType,formData:n.formData,json:n.json,text:n.text}}function Ti(t,n){return t?{state:"loading",formMethod:t.formMethod,formAction:t.formAction,formEncType:t.formEncType,formData:t.formData,json:t.json,text:t.text,data:n}:{state:"loading",formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0,json:void 0,text:void 0,data:n}}function pA(t,n){return{state:"submitting",formMethod:t.formMethod,formAction:t.formAction,formEncType:t.formEncType,formData:t.formData,json:t.json,text:t.text,data:n?n.data:void 0}}function Zn(t){return{state:"idle",formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0,json:void 0,text:void 0,data:t}}function mA(t,n){try{let r=t.sessionStorage.getItem(Ry);if(r){let s=JSON.parse(r);for(let[i,a]of Object.entries(s||{}))a&&Array.isArray(a)&&n.set(i,new Set(a||[]))}}catch{}}function fA(t,n){if(n.size>0){let r={};for(let[s,i]of n)r[s]=[...i];try{t.sessionStorage.setItem(Ry,JSON.stringify(r))}catch(s){Wr(!1,"Failed to save applied view transitions in sessionStorage ("+s+").")}}}/**
 * React Router v6.19.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function pl(){return pl=Object.assign?Object.assign.bind():function(t){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var s in r)Object.prototype.hasOwnProperty.call(r,s)&&(t[s]=r[s])}return t},pl.apply(this,arguments)}const ja=M.createContext(null),O1=M.createContext(null),qr=M.createContext(null),Pl=M.createContext(null),Gn=M.createContext({outlet:null,matches:[],isDataRoute:!1}),Oy=M.createContext(null);function gA(t,n){let{relative:r}=n===void 0?{}:n;Xs()||re(!1);let{basename:s,navigator:i}=M.useContext(qr),{hash:a,pathname:o,search:l}=Ul(t,{relative:r}),c=o;return s!=="/"&&(c=o==="/"?s:Ln([s,o])),i.createHref({pathname:c,search:l,hash:a})}function Xs(){return M.useContext(Pl)!=null}function Zs(){return Xs()||re(!1),M.useContext(Pl).location}function yu(t){Xs()||re(!1);let{pathname:n}=Zs();return M.useMemo(()=>hl(t,n),[n,t])}function ky(t){M.useContext(qr).static||M.useLayoutEffect(t)}function bA(){let{isDataRoute:t}=M.useContext(Gn);return t?CA():xA()}function xA(){Xs()||re(!1);let t=M.useContext(ja),{basename:n,navigator:r}=M.useContext(qr),{matches:s}=M.useContext(Gn),{pathname:i}=Zs(),a=JSON.stringify(Fl(s).map(c=>c.pathnameBase)),o=M.useRef(!1);return ky(()=>{o.current=!0}),M.useCallback(function(c,d){if(d===void 0&&(d={}),!o.current)return;if(typeof c=="number"){r.go(c);return}let h=w1(c,JSON.parse(a),i,d.relative==="path");t==null&&n!=="/"&&(h.pathname=h.pathname==="/"?n:Ln([n,h.pathname])),(d.replace?r.replace:r.push)(h,d.state,d)},[n,r,a,i,t])}const EA=M.createContext(null);function TA(t){let n=M.useContext(Gn).outlet;return n&&M.createElement(EA.Provider,{value:t},n)}function k1(){let{matches:t}=M.useContext(Gn),n=t[t.length-1];return n?n.params:{}}function Ul(t,n){let{relative:r}=n===void 0?{}:n,{matches:s}=M.useContext(Gn),{pathname:i}=Zs(),a=JSON.stringify(Fl(s).map((o,l)=>l===s.length-1?o.pathname:o.pathnameBase));return M.useMemo(()=>w1(t,JSON.parse(a),i,r==="path"),[t,a,i,r])}function yA(t,n,r){Xs()||re(!1);let{navigator:s}=M.useContext(qr),{matches:i}=M.useContext(Gn),a=i[i.length-1],o=a?a.params:{};a&&a.pathname;let l=a?a.pathnameBase:"/";a&&a.route;let c=Zs(),d;if(n){var h;let y=typeof n=="string"?Hn(n):n;l==="/"||(h=y.pathname)!=null&&h.startsWith(l)||re(!1),d=y}else d=c;let x=d.pathname||"/",g=l==="/"?x:x.slice(l.length)||"/",A=vs(t,{pathname:g}),S=_A(A&&A.map(y=>Object.assign({},y,{params:Object.assign({},o,y.params),pathname:Ln([l,s.encodeLocation?s.encodeLocation(y.pathname).pathname:y.pathname]),pathnameBase:y.pathnameBase==="/"?l:Ln([l,s.encodeLocation?s.encodeLocation(y.pathnameBase).pathname:y.pathnameBase])})),i,r);return n&&S?M.createElement(Pl.Provider,{value:{location:pl({pathname:"/",search:"",hash:"",state:null,key:"default"},d),navigationType:Fe.Pop}},S):S}function SA(){let t=IA(),n=Ay(t)?t.status+" "+t.statusText:t instanceof Error?t.message:JSON.stringify(t),r=t instanceof Error?t.stack:null,i={padding:"0.5rem",backgroundColor:"rgba(200,200,200, 0.5)"},a=null;return M.createElement(M.Fragment,null,M.createElement("h2",null,"Unexpected Application Error!"),M.createElement("h3",{style:{fontStyle:"italic"}},n),r?M.createElement("pre",{style:i},r):null,a)}const NA=M.createElement(SA,null);class jA extends M.Component{constructor(n){super(n),this.state={location:n.location,revalidation:n.revalidation,error:n.error}}static getDerivedStateFromError(n){return{error:n}}static getDerivedStateFromProps(n,r){return r.location!==n.location||r.revalidation!=="idle"&&n.revalidation==="idle"?{error:n.error,location:n.location,revalidation:n.revalidation}:{error:n.error||r.error,location:r.location,revalidation:n.revalidation||r.revalidation}}componentDidCatch(n,r){console.error("React Router caught the following error during render",n,r)}render(){return this.state.error?M.createElement(Gn.Provider,{value:this.props.routeContext},M.createElement(Oy.Provider,{value:this.state.error,children:this.props.component})):this.props.children}}function AA(t){let{routeContext:n,match:r,children:s}=t,i=M.useContext(ja);return i&&i.static&&i.staticContext&&(r.route.errorElement||r.route.ErrorBoundary)&&(i.staticContext._deepestRenderedBoundaryId=r.route.id),M.createElement(Gn.Provider,{value:n},s)}function _A(t,n,r){var s;if(n===void 0&&(n=[]),r===void 0&&(r=null),t==null){var i;if((i=r)!=null&&i.errors)t=r.matches;else return null}let a=t,o=(s=r)==null?void 0:s.errors;if(o!=null){let l=a.findIndex(c=>c.route.id&&(o==null?void 0:o[c.route.id]));l>=0||re(!1),a=a.slice(0,Math.min(a.length,l+1))}return a.reduceRight((l,c,d)=>{let h=c.route.id?o==null?void 0:o[c.route.id]:null,x=null;r&&(x=c.route.errorElement||NA);let g=n.concat(a.slice(0,d+1)),A=()=>{let S;return h?S=x:c.route.Component?S=M.createElement(c.route.Component,null):c.route.element?S=c.route.element:S=l,M.createElement(AA,{match:c,routeContext:{outlet:l,matches:g,isDataRoute:r!=null},children:S})};return r&&(c.route.ErrorBoundary||c.route.errorElement||d===0)?M.createElement(jA,{location:r.location,revalidation:r.revalidation,component:x,error:h,children:A(),routeContext:{outlet:null,matches:g,isDataRoute:!0}}):A()},null)}var Ly=function(t){return t.UseBlocker="useBlocker",t.UseRevalidator="useRevalidator",t.UseNavigateStable="useNavigate",t}(Ly||{}),ml=function(t){return t.UseBlocker="useBlocker",t.UseLoaderData="useLoaderData",t.UseActionData="useActionData",t.UseRouteError="useRouteError",t.UseNavigation="useNavigation",t.UseRouteLoaderData="useRouteLoaderData",t.UseMatches="useMatches",t.UseRevalidator="useRevalidator",t.UseNavigateStable="useNavigate",t.UseRouteId="useRouteId",t}(ml||{});function vA(t){let n=M.useContext(ja);return n||re(!1),n}function RA(t){let n=M.useContext(O1);return n||re(!1),n}function wA(t){let n=M.useContext(Gn);return n||re(!1),n}function Dy(t){let n=wA(),r=n.matches[n.matches.length-1];return r.route.id||re(!1),r.route.id}function IA(){var t;let n=M.useContext(Oy),r=RA(ml.UseRouteError),s=Dy(ml.UseRouteError);return n||((t=r.errors)==null?void 0:t[s])}function CA(){let{router:t}=vA(Ly.UseNavigateStable),n=Dy(ml.UseNavigateStable),r=M.useRef(!1);return ky(()=>{r.current=!0}),M.useCallback(function(i,a){a===void 0&&(a={}),r.current&&(typeof i=="number"?t.navigate(i):t.navigate(i,pl({fromRouteId:n},a)))},[t,n])}function OA(t){return TA(t.context)}function kA(t){let{basename:n="/",children:r=null,location:s,navigationType:i=Fe.Pop,navigator:a,static:o=!1}=t;Xs()&&re(!1);let l=n.replace(/^\/*/,"/"),c=M.useMemo(()=>({basename:l,navigator:a,static:o}),[l,a,o]);typeof s=="string"&&(s=Hn(s));let{pathname:d="/",search:h="",hash:x="",state:g=null,key:A="default"}=s,S=M.useMemo(()=>{let y=br(d,l);return y==null?null:{location:{pathname:y,search:h,hash:x,state:g,key:A},navigationType:i}},[l,d,h,x,g,A,i]);return S==null?null:M.createElement(qr.Provider,{value:c},M.createElement(Pl.Provider,{children:r,value:S}))}new Promise(()=>{});function LA(t){let n={hasErrorBoundary:t.ErrorBoundary!=null||t.errorElement!=null};return t.Component&&Object.assign(n,{element:M.createElement(t.Component),Component:void 0}),t.ErrorBoundary&&Object.assign(n,{errorElement:M.createElement(t.ErrorBoundary),ErrorBoundary:void 0}),n}/**
 * React Router DOM v6.19.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function Ws(){return Ws=Object.assign?Object.assign.bind():function(t){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var s in r)Object.prototype.hasOwnProperty.call(r,s)&&(t[s]=r[s])}return t},Ws.apply(this,arguments)}function My(t,n){if(t==null)return{};var r={},s=Object.keys(t),i,a;for(a=0;a<s.length;a++)i=s[a],!(n.indexOf(i)>=0)&&(r[i]=t[i]);return r}function DA(t){return!!(t.metaKey||t.altKey||t.ctrlKey||t.shiftKey)}function MA(t,n){return t.button===0&&(!n||n==="_self")&&!DA(t)}const FA=["onClick","relative","reloadDocument","replace","state","target","to","preventScrollReset","unstable_viewTransition"],PA=["aria-current","caseSensitive","className","end","style","to","unstable_viewTransition","children"];function UA(t,n){return rA({basename:n==null?void 0:n.basename,future:Ws({},n==null?void 0:n.future,{v7_prependBasename:!0}),history:_j({window:n==null?void 0:n.window}),hydrationData:(n==null?void 0:n.hydrationData)||BA(),routes:t,mapRouteProperties:LA,window:n==null?void 0:n.window}).initialize()}function BA(){var t;let n=(t=window)==null?void 0:t.__staticRouterHydrationData;return n&&n.errors&&(n=Ws({},n,{errors:HA(n.errors)})),n}function HA(t){if(!t)return null;let n=Object.entries(t),r={};for(let[s,i]of n)if(i&&i.__type==="RouteErrorResponse")r[s]=new I1(i.status,i.statusText,i.data,i.internal===!0);else if(i&&i.__type==="Error"){if(i.__subType){let a=window[i.__subType];if(typeof a=="function")try{let o=new a(i.message);o.stack="",r[s]=o}catch{}}if(r[s]==null){let a=new Error(i.message);a.stack="",r[s]=a}}else r[s]=i;return r}const Fy=M.createContext({isTransitioning:!1}),GA=M.createContext(new Map),$A="startTransition",gx=mN[$A],zA="flushSync",bx=Aj[zA];function WA(t){gx?gx(t):t()}function yi(t){bx?bx(t):t()}class VA{constructor(){this.status="pending",this.promise=new Promise((n,r)=>{this.resolve=s=>{this.status==="pending"&&(this.status="resolved",n(s))},this.reject=s=>{this.status==="pending"&&(this.status="rejected",r(s))}})}}function KA(t){let{fallbackElement:n,router:r,future:s}=t,[i,a]=M.useState(r.state),[o,l]=M.useState(),[c,d]=M.useState({isTransitioning:!1}),[h,x]=M.useState(),[g,A]=M.useState(),[S,y]=M.useState(),_=M.useRef(new Map),{v7_startTransition:f}=s||{},b=M.useCallback(v=>{f?WA(v):v()},[f]),T=M.useCallback((v,O)=>{let{deletedFetchers:F,unstable_flushSync:H,unstable_viewTransitionOpts:J}=O;F.forEach(ie=>_.current.delete(ie)),v.fetchers.forEach((ie,Me)=>{ie.data!==void 0&&_.current.set(Me,ie.data)});let X=r.window==null||typeof r.window.document.startViewTransition!="function";if(!J||X){H?yi(()=>a(v)):b(()=>a(v));return}if(H){yi(()=>{g&&(h&&h.resolve(),g.skipTransition()),d({isTransitioning:!0,flushSync:!0,currentLocation:J.currentLocation,nextLocation:J.nextLocation})});let ie=r.window.document.startViewTransition(()=>{yi(()=>a(v))});ie.finished.finally(()=>{yi(()=>{x(void 0),A(void 0),l(void 0),d({isTransitioning:!1})})}),yi(()=>A(ie));return}g?(h&&h.resolve(),g.skipTransition(),y({state:v,currentLocation:J.currentLocation,nextLocation:J.nextLocation})):(l(v),d({isTransitioning:!0,flushSync:!1,currentLocation:J.currentLocation,nextLocation:J.nextLocation}))},[r.window,g,h,_,b]);M.useLayoutEffect(()=>r.subscribe(T),[r,T]),M.useEffect(()=>{c.isTransitioning&&!c.flushSync&&x(new VA)},[c]),M.useEffect(()=>{if(h&&o&&r.window){let v=o,O=h.promise,F=r.window.document.startViewTransition(async()=>{b(()=>a(v)),await O});F.finished.finally(()=>{x(void 0),A(void 0),l(void 0),d({isTransitioning:!1})}),A(F)}},[b,o,h,r.window]),M.useEffect(()=>{h&&o&&i.location.key===o.location.key&&h.resolve()},[h,g,i.location,o]),M.useEffect(()=>{!c.isTransitioning&&S&&(l(S.state),d({isTransitioning:!0,flushSync:!1,currentLocation:S.currentLocation,nextLocation:S.nextLocation}),y(void 0))},[c.isTransitioning,S]);let E=M.useMemo(()=>({createHref:r.createHref,encodeLocation:r.encodeLocation,go:v=>r.navigate(v),push:(v,O,F)=>r.navigate(v,{state:O,preventScrollReset:F==null?void 0:F.preventScrollReset}),replace:(v,O,F)=>r.navigate(v,{replace:!0,state:O,preventScrollReset:F==null?void 0:F.preventScrollReset})}),[r]),R=r.basename||"/",I=M.useMemo(()=>({router:r,navigator:E,static:!1,basename:R}),[r,E,R]);return M.createElement(M.Fragment,null,M.createElement(ja.Provider,{value:I},M.createElement(O1.Provider,{value:i},M.createElement(GA.Provider,{value:_.current},M.createElement(Fy.Provider,{value:c},M.createElement(kA,{basename:R,location:i.location,navigationType:i.historyAction,navigator:E},i.initialized?M.createElement(YA,{routes:r.routes,state:i}):n))))),null)}function YA(t){let{routes:n,state:r}=t;return yA(n,void 0,r)}const qA=typeof window<"u"&&typeof window.document<"u"&&typeof window.document.createElement<"u",XA=/^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,it=M.forwardRef(function(n,r){let{onClick:s,relative:i,reloadDocument:a,replace:o,state:l,target:c,to:d,preventScrollReset:h,unstable_viewTransition:x}=n,g=My(n,FA),{basename:A}=M.useContext(qr),S,y=!1;if(typeof d=="string"&&XA.test(d)&&(S=d,qA))try{let T=new URL(window.location.href),E=d.startsWith("//")?new URL(T.protocol+d):new URL(d),R=br(E.pathname,A);E.origin===T.origin&&R!=null?d=R+E.search+E.hash:y=!0}catch{}let _=gA(d,{relative:i}),f=JA(d,{replace:o,state:l,target:c,preventScrollReset:h,relative:i,unstable_viewTransition:x});function b(T){s&&s(T),T.defaultPrevented||f(T)}return M.createElement("a",Ws({},g,{href:S||_,onClick:y||a?s:b,ref:r,target:c}))}),ZA=M.forwardRef(function(n,r){let{"aria-current":s="page",caseSensitive:i=!1,className:a="",end:o=!1,style:l,to:c,unstable_viewTransition:d,children:h}=n,x=My(n,PA),g=Ul(c,{relative:x.relative}),A=Zs(),S=M.useContext(O1),{navigator:y}=M.useContext(qr),_=S!=null&&e_(g)&&d===!0,f=y.encodeLocation?y.encodeLocation(g).pathname:g.pathname,b=A.pathname,T=S&&S.navigation&&S.navigation.location?S.navigation.location.pathname:null;i||(b=b.toLowerCase(),T=T?T.toLowerCase():null,f=f.toLowerCase());const E=f!=="/"&&f.endsWith("/")?f.length-1:f.length;let R=b===f||!o&&b.startsWith(f)&&b.charAt(E)==="/",I=T!=null&&(T===f||!o&&T.startsWith(f)&&T.charAt(f.length)==="/"),v={isActive:R,isPending:I,isTransitioning:_},O=R?s:void 0,F;typeof a=="function"?F=a(v):F=[a,R?"active":null,I?"pending":null,_?"transitioning":null].filter(Boolean).join(" ");let H=typeof l=="function"?l(v):l;return M.createElement(it,Ws({},x,{"aria-current":O,className:F,ref:r,style:H,to:c,unstable_viewTransition:d}),typeof h=="function"?h(v):h)});var Su;(function(t){t.UseScrollRestoration="useScrollRestoration",t.UseSubmit="useSubmit",t.UseSubmitFetcher="useSubmitFetcher",t.UseFetcher="useFetcher",t.useViewTransitionState="useViewTransitionState"})(Su||(Su={}));var xx;(function(t){t.UseFetcher="useFetcher",t.UseFetchers="useFetchers",t.UseScrollRestoration="useScrollRestoration"})(xx||(xx={}));function QA(t){let n=M.useContext(ja);return n||re(!1),n}function JA(t,n){let{target:r,replace:s,state:i,preventScrollReset:a,relative:o,unstable_viewTransition:l}=n===void 0?{}:n,c=bA(),d=Zs(),h=Ul(t,{relative:o});return M.useCallback(x=>{if(MA(x,r)){x.preventDefault();let g=s!==void 0?s:Vr(d)===Vr(h);c(t,{replace:g,state:i,preventScrollReset:a,relative:o,unstable_viewTransition:l})}},[d,c,h,s,i,r,t,a,o,l])}function e_(t,n){n===void 0&&(n={});let r=M.useContext(Fy);r==null&&re(!1);let{basename:s}=QA(Su.useViewTransitionState),i=Ul(t,{relative:n.relative});if(!r.isTransitioning)return!1;let a=br(r.currentLocation.pathname,s)||r.currentLocation.pathname,o=br(r.nextLocation.pathname,s)||r.nextLocation.pathname;return hl(i.pathname,o)!=null||hl(i.pathname,a)!=null}function t_(){return e.jsxs("main",{className:"container mx-auto px-2 py-4",children:[e.jsx("h1",{className:"font-bold text-red-900",children:"Такой страницы нет!"}),e.jsx(it,{to:"/",className:"focus-visible:font-semibold focus-visible:outline-0 hover:font-semibold text-blue-500",children:"Перейти на главную"})]})}function n_(){return e.jsxs("ul",{className:"list-disc",children:[e.jsx("li",{children:e.jsx(it,{to:"subjects",className:"focus-visible:font-semibold focus-visible:outline-0 hover:font-semibold text-blue-500",children:"Список тем"})}),e.jsx("li",{children:e.jsx(it,{to:"tasks",className:"focus-visible:font-semibold focus-visible:outline-0 hover:font-semibold text-blue-500",children:"Список задач"})})]})}function fl({type:t}){switch(t){case"easy":return e.jsx("span",{className:"bg-green-50 font-medium inline-flex items-center px-2 py-1 ring-1 ring-inset ring-green-600/20 rounded-md text-xs text-green-700",children:"Easy"});case"medium":return e.jsx("span",{className:"bg-yellow-50 font-medium inline-flex items-center px-2 py-1 ring-1 ring-inset ring-yellow-600/20 rounded-md text-xs text-yellow-800",children:"Medium"});case"hard":return e.jsx("span",{className:"bg-red-50 font-medium inline-flex items-center px-2 py-1 ring-1 ring-inset ring-red-600/10 rounded-md text-xs text-red-700",children:"Hard"});default:return e.jsx("span",{className:"bg-white font-medium inline-flex items-center mr-1 px-2 py-1 ring-1 ring-gray-500/10 ring-inset rounded-md text-gray-600 text-xs",children:t})}}const Bl={arrays:"Массивы",objects:"Объекты","hash-implementation":"Реализация хеша","prefix-sums":"Префиксные суммы",stack:"Стек","two-pointers":"Метод двух указателей","sliding-window":"Метод скользящего окна","binary-search":"Бинарный поиск","linked-lists":"Связные списки","doubly-linked-lists":"Двусвязные списки",queues:"Очереди","fast-and-slow-pointers":"Быстрые и медленные указатели","one-branch-recursion":"Рекурсия (одна ветвь)","two-branch-recursion":"Рекурсия (две ветви)","insertion-sort":"Сортировка вставками","merge-sort":"Сортировка слиянием","quick-sort":"Быстрая сортировка","bucket-sort":"Блочная сортировка","binary-tree":"Бинарное дерево","binary-search-tree":"Бинарное дерево поиска","bst-insert-and-remove":"BST вставка и удаление","depth-first-search":"Поиск в глубину","iterative-depth-first-search":"Итеративный поиск в глубину","breadth-first-search":"Поиск в ширину",backtracking:"Поиск с возвратом (бэктрекинг)",subsets:"Подмножества",combinations:"Сочетания",permutations:"Перестановки","intro-to-graphs":"Введение в графы","matrix-depth-first-search":"Поиск в глубину в графе, представленным матрицей","matrix-breadth-first-search":"Поиск в ширину в графе, представленным матрицей","adjacency-list":"Список смежности","heap-properties":"Свойства кучи","heap-push-and-pop":"Куча: добавление и удаление",heapify:"Преобразование массива в кучу (Heapify)","one-dimension-dp":"Одномерное динамическое программирование",palindromes:"Палиндромы","topological-sort":"Топологическая сортировка",intervals:"Интервалы",trie:"Префиксное дерево","union-find":"Система непересекающихся множеств","segment-tree":"Дерево отрезков","kadanes-algorithm":"Алгоритм Кэдейна",greedy:"Жадные алгоритмы","two-dimension-dp":"Двумерное динамическое программирование","0-1-knapsack":"Рюкзак 0-1","unbounded-knapsack":"Неограниченный рюкзак","longest-common-subsequence":"Наибольшая общая подпоследовательность","bit-operations":"Битовые операции","math-and-geometry":"Математика и геометрия"};var p=(t=>(t.ARRAY="Array",t.BACKTRACKING="Backtracking",t.BINARY_SEARCH="Binary Search",t.BINARY_SEARCH_TREE="Binary Search Tree",t.BINARY_TREE="Binary Tree",t.BIT_MANIPULATION="Bit Manipulation",t.BREADTH_FIRST_SEARCH="Breadth-First Search",t.BUCKET_SORT="Bucket Sort",t.COUNTING="Counting",t.COUNTING_SORT="Counting Sort",t.DATA_STREAM="Data Stream",t.DEPTH_FIRST_SEARCH="Depth-First Search",t.DESIGN="Design",t.DIVIDE_AND_CONQUER="Divide and Conquer",t.DOUBLY_LINKED_LIST="Doubly-Linked List",t.DYNAMIC_PROGRAMMING="Dynamic Programming",t.GRAPH="Graph",t.GREEDY="Greedy",t.HASH_FUNCTION="Hash Function",t.HASH_TABLE="Hash Table",t.HEAP="Heap (Priority Queue)",t.INTERACTIVE="Interactive",t.ITERATOR="Iterator",t.LINKED_LIST="Linked List",t.MATH="Math",t.MATRIX="Matrix",t.MEMOIZATION="Memoization",t.MERGE_SORT="Merge Sort",t.MONOTONIC_QUEUE="Monotonic Queue",t.MONOTONIC_STACK="Monotonic Stack",t.PREFIX_SUM="Prefix Sum",t.QUEUE="Queue",t.QUICKSELECT="Quickselect",t.RADIX_SORT="Radix Sort",t.RECURSION="Recursion",t.SIMULATION="Simulation",t.SLIDING_WINDOW="Sliding Window",t.SORTING="Sorting",t.STACK="Stack",t.STRING="String",t.STRING_MATCHING="String Matching",t.TOPOLOGICAL_SORT="Topological sort",t.TREE="Tree",t.TRIE="Trie",t.TWO_POINTERS="Two Pointers",t.UNION_FIND="Union Find",t))(p||{});const r_=[{code:`// Время O(n), память O(1)
const removeElement = (nums, val) => {
  let index = 0;

  for (const num of nums) {
    if (num !== val) {
      nums[index++] = num;
    }
  }

  return index;
};

console.log(removeElement([3, 2, 2, 3], 3)); // 2
console.log(removeElement([0, 1, 2, 2, 3, 0, 4, 2], 2)); // 5`,difficulty:"easy",id:"remove-element",link:"https://leetcode.com/problems/remove-element/",name:"Remove Element",subject:"arrays",tags:[p.ARRAY,p.TWO_POINTERS]},{code:`// Время O(n), память O(1)
const removeDuplicates = (nums) => {
  let currentUniqueIndex = 0;

  for (let i = 1; i < nums.length; i++) {
    if (nums[i] !== nums[currentUniqueIndex]) {
      nums[++currentUniqueIndex] = nums[i];
    }
  }

  return currentUniqueIndex + 1;
};

console.log(removeDuplicates([1, 1, 2])); // 2
console.log(removeDuplicates([0, 0, 1, 1, 1, 2, 2, 3, 3, 4])); // 5`,difficulty:"easy",id:"remove-duplicates-from-sorted-array",link:"https://leetcode.com/problems/remove-duplicates-from-sorted-array/",name:"Remove Duplicates from Sorted Array",subject:"arrays",tags:[p.ARRAY,p.TWO_POINTERS]},{code:`// Время O(n), память O(1)
const getConcatenation = (nums) => {
    const ans = [];
    
    for (let i = 0; i < nums.length; i++) {
      ans[i] = nums[i];
      ans[i + nums.length] = nums[i];
    }
    
    return ans;
};
  
console.log(getConcatenation([1, 2, 1])); // [1, 2, 1, 1, 2, 1]
console.log(getConcatenation([1, 3, 2, 1])); // [1, 3, 2, 1, 1, 3, 2, 1]`,difficulty:"easy",id:"concatenation-of-array",link:"https://leetcode.com/problems/concatenation-of-array/",name:"Concatenation of Array",subject:"arrays",tags:[p.ARRAY]},{code:`// Время O(n), память O(n)
const containsDuplicate = (nums) => {
  const hashset = new Set();

  for (const num of nums) {
    if (hashset.has(num)) {
      return true;
    }
    
    hashset.add(num);
  }
  
  return false;
};
  
console.log(containsDuplicate([1, 2, 3, 1])); // true
console.log(containsDuplicate([1, 2, 3, 4])); // false`,difficulty:"easy",id:"contains-duplicate",link:"https://leetcode.com/problems/contains-duplicate/",name:"Contains Duplicate",subject:"objects",tags:[p.ARRAY,p.HASH_TABLE,p.SORTING]},{code:`// Время O(n), память O(n)
const twoSum = (nums, target) => {
  const prevMap = new Map();

  for (let i = 0; i < nums.length; i++) {
    const diff = target - nums[i];
    
    if (prevMap.has(diff)) {
      return [prevMap.get(diff), i];
    }
    
    prevMap.set(nums[i], i);
  }
};
  
console.log(twoSum([2, 7, 11, 15], 9)); // [0, 1]
console.log(twoSum([3, 2, 4], 6)); // [1, 2]`,difficulty:"easy",id:"two-sum",link:"https://leetcode.com/problems/two-sum/",name:"Two Sum",subject:"objects",tags:[p.ARRAY,p.HASH_TABLE]},{code:`// Время O(1), память O(n)
function Node(key, value) {
  this.key = key;
  this.value = value;
  this.prev = null;
  this.next = null;
}

function LRUCache(capacity) {
  this.capacity = capacity;
  this.cache = new Map();

  this.left = new Node(0, 0);
  this.right = new Node(0, 0);
  this.left.next = this.right;
  this.right.prev = this.left;
}

LRUCache.prototype.remove = function(node) {
  const { prev, next } = node;  
  prev.next = next;
  next.prev = prev;
};

LRUCache.prototype.insert = function(node) {
  const prev = this.right.prev;
  const next = this.right;

  prev.next = node;
  next.prev = node;
  node.next = next;
  node.prev = prev;
};

LRUCache.prototype.get = function(key) {
  if (this.cache.has(key)) {
    const node = this.cache.get(key);

    this.remove(node);
    this.insert(node);

    return node.value;
  }
  
  return -1;
};

LRUCache.prototype.put = function(key, value) {
  if (this.cache.has(key)) {
    this.remove(this.cache.get(key));
  }
  
  const node = new Node(key, value);
  this.cache.set(key, node);
  this.insert(node);
  
  if (this.cache.size > this.capacity) {
    const lru = this.left.next;
    this.remove(lru);
    this.cache.delete(lru.key);
  }
};

const cache = new LRUCache(2);
cache.put(1, 1);
cache.put(2, 2);
console.log(cache.get(1)); // 1
cache.put(3, 3);
console.log(cache.get(2)); // -1
cache.put(4, 4);
console.log(cache.get(1)); // -1
console.log(cache.get(3)); // 3
console.log(cache.get(4)); // 4`,difficulty:"medium",id:"lru-cache",link:"https://leetcode.com/problems/lru-cache/",name:"LRU Cache",subject:"objects",tags:[p.HASH_TABLE,p.LINKED_LIST,p.DESIGN,p.DOUBLY_LINKED_LIST]},{code:`class ListNode {
  next = null;

  constructor(key) {
    this.key = key;
  }
}

class MyHashSet {
  set = Array.from({ length: 10 ** 4 }, () => new ListNode(0));

  #getNodeByKey(key) {
    return this.set[key % this.set.length];
  }

  add(key) {
    let currentNode = this.#getNodeByKey(key);

    while (currentNode.next) {
      if (currentNode.next.key === key) {
        return;
      }

      currentNode = currentNode.next;
    }

    currentNode.next = new ListNode(key);
  }
  
  remove(key) {
    let currentNode = this.#getNodeByKey(key);

    while (currentNode.next) {
      if (currentNode.next.key === key) {
        currentNode.next = currentNode.next.next;

        return;
      }

      currentNode = currentNode.next;
    }
  }

  contains(key) {
    let currentNode = this.#getNodeByKey(key);
    
    while (currentNode.next) {
      if (currentNode.next.key === key) {
        return true;
      }
      
      currentNode = currentNode.next;
    }
    
    return false;
  }
}

const myHashSet = new MyHashSet();
myHashSet.add(1);
myHashSet.add(2);
console.log(myHashSet.contains(1)); // true
console.log(myHashSet.contains(3)); // false
myHashSet.add(2);
console.log(myHashSet.contains(2)); // true
myHashSet.remove(2);
console.log(myHashSet.contains(2)); // false`,difficulty:"easy",id:"design-hashset",link:"https://leetcode.com/problems/design-hashset/",name:"Design HashSet",subject:"hash-implementation",tags:[p.ARRAY,p.HASH_TABLE,p.LINKED_LIST,p.DESIGN,p.HASH_FUNCTION]},{code:`class ListNode {
  next = null;

  constructor(key, value) {
    this.key = key;
    this.value = value;
  }
}

class MyHashMap {
  map = Array.from({ length: 10 ** 4 }, () => new ListNode(-1, -1));

  #getNodeByKey(key) {
    return this.map[key % this.map.length];
  }

  put(key, value) {
    let currentNode = this.#getNodeByKey(key);

    while (currentNode.next) {
      if (currentNode.next.key === key) {
        currentNode.next.value = value;

        return;
      }

      currentNode = currentNode.next;
    }

    currentNode.next = new ListNode(key, value);
  }

  get(key) {
    let currentNode = this.#getNodeByKey(key).next;

    while (currentNode) {
      if (currentNode.key === key) {
        return currentNode.value;
      }

      currentNode = currentNode.next;
    }

    return -1;
  }
  
  remove(key) {
    let currentNode = this.#getNodeByKey(key);

    while (currentNode.next) {
      if (currentNode.next.key === key) {
        currentNode.next = currentNode.next.next;

        return;
      }

      currentNode = currentNode.next;
    }
  }
}

const myHasMap = new MyHashMap();
myHasMap.put(1, 1);
myHasMap.put(2, 2);
console.log(myHasMap.get(1)); // 1
console.log(myHasMap.get(3)); // -1
myHasMap.put(2, 1);
console.log(myHasMap.get(2)); // 1
myHasMap.remove(2);
console.log(myHasMap.get(2)); // -1`,difficulty:"easy",id:"design-hashmap",link:"https://leetcode.com/problems/design-hashmap/",name:"Design HashMap",subject:"hash-implementation",tags:[p.ARRAY,p.HASH_TABLE,p.LINKED_LIST,p.DESIGN,p.HASH_FUNCTION]},{code:`class NumArray {
  prefix = [];

  constructor(nums) {
    let total = 0;
    
    for (const num of nums) {
      total += num;
      this.prefix.push(total);
    }
  }
  
  sumRange(left, right) {
    const rightSum = this.prefix[right];
    const leftSum = left > 0 ? this.prefix[left - 1] : 0;
    
    return rightSum - leftSum;
  }
}

const myNumArray = new NumArray([-2, 0, 3, -5, 2, -1]);
console.log(myNumArray.sumRange(0, 2)); // 1
console.log(myNumArray.sumRange(2, 5)); // -1
console.log(myNumArray.sumRange(0, 5)); // -3`,difficulty:"easy",id:"range-sum-query-immutable",link:"https://leetcode.com/problems/range-sum-query-immutable/",name:"Range Sum Query - Immutable",subject:"prefix-sums",tags:[p.ARRAY,p.DESIGN,p.PREFIX_SUM]},{code:`class NumMatrix {
  constructor(matrix) {
    const rowsCount = matrix.length;
    const columnsCount = matrix[0].length;
    
    this.sumMatrix = Array.from({ length: rowsCount + 1 }, () => Array(columnsCount + 1).fill(0));
    
    for (let rowIdx = 0; rowIdx < rowsCount; rowIdx++) {
      let prefix = 0;
      
      for (let columnIdx = 0; columnIdx < columnsCount; columnIdx++) {
        prefix += matrix[rowIdx][columnIdx];
        
        const above = this.sumMatrix[rowIdx][columnIdx + 1];
        
        this.sumMatrix[rowIdx + 1][columnIdx + 1] = prefix + above;
      }
    }
  }
  
  sumRegion(row1, col1, row2, col2) {
    const r1 = row1 + 1;
    const c1 = col1 + 1;
    const r2 = row2 + 1;
    const c2 = col2 + 1;
    
    const bottomRight = this.sumMatrix[r2][c2];
    const above = this.sumMatrix[r1 - 1][c2];
    const left = this.sumMatrix[r2][c1 - 1];
    const topLeft = this.sumMatrix[r1 - 1][c1 - 1];
    
    return bottomRight - above - left + topLeft;
  }
}

const myNumMatrix = new NumMatrix([[3, 0, 1, 4, 2], [5, 6, 3, 2, 1], [1, 2, 0, 1, 5], [4, 1, 0, 1, 7], [1, 0, 3, 0, 5]]);
console.log(myNumMatrix.sumRegion(2, 1, 4, 3)); // 8
console.log(myNumMatrix.sumRegion(1, 1, 2, 2)); // 11
console.log(myNumMatrix.sumRegion(1, 2, 2, 4)); // 12`,difficulty:"medium",id:"range-sum-query-2d-immutable",link:"https://leetcode.com/problems/range-sum-query-2d-immutable/",name:"Range Sum Query 2D - Immutable",subject:"prefix-sums",tags:[p.ARRAY,p.DESIGN,p.MATRIX,p.PREFIX_SUM]},{code:`// Время O(n), память O(1)
const pivotIndex = (nums) => {
  const total = nums.reduce((result, num) => result + num);
  
  let leftSum = 0;
  
  for (let i = 0; i < nums.length; i++) {
    const rightSum = total - nums[i] - leftSum;
    
    if (leftSum === rightSum) {
      return i;
    }
    
    leftSum += nums[i];
  }
  
  return -1;
};

console.log(pivotIndex([1, 7, 3, 6, 5, 6])); // 3
console.log(pivotIndex([1, 2, 3])); // -1
console.log(pivotIndex([2, 1, -1])); // 0`,difficulty:"easy",id:"find-pivot-index",link:"https://leetcode.com/problems/find-pivot-index/",name:"Find Pivot Index",subject:"prefix-sums",tags:[p.ARRAY,p.PREFIX_SUM]},{code:`// Время O(n), память O(1)
const productExceptSelf = (nums) => {
  const result = Array(nums.length);

  let prefix = 1;

  for (let i = 0; i < nums.length; i++) {
    result[i] = prefix;
    prefix *= nums[i];
  }

  let postfix = 1;

  for (let j = nums.length - 1; j >= 0; j--) {
    result[j] *= postfix;
    postfix *= nums[j];
  }

  return result;
};

console.log(productExceptSelf([1, 2, 3, 4])); // [24, 12, 8, 6]
console.log(productExceptSelf([-1, 1, 0, -3, 3])); // [0, 0, 9, 0, 0]`,difficulty:"medium",id:"product-of-array-except-self",link:"https://leetcode.com/problems/product-of-array-except-self/",name:"Product of Array Except Self",subject:"prefix-sums",tags:[p.ARRAY,p.PREFIX_SUM]},{code:`// Время O(n), память O(n)
const subarraySum = (nums, k) => {
  const prefixSum = new Map([[0, 1]]);

  let result = 0;
  let currentSum = 0;

  for (const num of nums) {
    currentSum += num;    

    const diff = currentSum - k;

    result += prefixSum.get(diff) ?? 0;
    prefixSum.set(currentSum, 1 + (prefixSum.get(currentSum) ?? 0));
  }

  return result;
};

console.log(subarraySum([1, 1, 1], 2)); // 2
console.log(subarraySum([1, 2, 3], 3)); // 2`,difficulty:"medium",id:"subarray-sum-equals-k",link:"https://leetcode.com/problems/subarray-sum-equals-k/",name:"Subarray Sum Equals K",subject:"prefix-sums",tags:[p.ARRAY,p.HASH_TABLE,p.PREFIX_SUM]},{code:`// Время O(n), память O(n)
const isAnagram = (s, t) => {
  if (s.length !== t.length) {
    return false;
  }

  const sCharCount = {};
  const tCharCount = {};

  for (let i = 0; i < s.length; i++) {
    sCharCount[s[i]] = 1 + (sCharCount[s[i]] ?? 0);
    tCharCount[t[i]] = 1 + (tCharCount[t[i]] ?? 0);
  }

  for (char of Object.keys(sCharCount)) {
    if (sCharCount[char] !== tCharCount[char]) {
      return false;
    }
  }

  return true;
};

console.log(isAnagram('anagram', 'nagaram')); // true
console.log(isAnagram('rat', 'car')); // false`,difficulty:"easy",id:"valid-anagram",link:"https://leetcode.com/problems/valid-anagram/",name:"Valid Anagram",subject:"objects",tags:[p.HASH_TABLE,p.STRING,p.SORTING]},{code:`// Время O(n ∗ k), память O(n ∗ k), k - длина самой длинной строки
const groupAnagrams = (strs) => {
  const result = {};

  for (const str of strs) {
    const count = Array(26).fill(0);

    for (const char of str) {
      count[char.charCodeAt() - 'a'.charCodeAt()] += 1;
    }

    const commaSeparatedCount = count.join(',');

    if (result[commaSeparatedCount]) {
      result[commaSeparatedCount].push(str);
    } else {
      result[commaSeparatedCount] = [str];
    }
  }

  return Object.values(result);
};

console.log(groupAnagrams(['eat', 'tea', 'tan', 'ate', 'nat', 'bat'])); // [['eat', 'tea', 'ate'], ['tan', 'nat'], ['bat']]
console.log(groupAnagrams([''])); // [['']]
console.log(groupAnagrams(['a'])); // [['a']]`,difficulty:"medium",id:"group-anagrams",link:"https://leetcode.com/problems/group-anagrams/",name:"Group Anagrams",subject:"objects",tags:[p.ARRAY,p.HASH_TABLE,p.STRING,p.SORTING]},{code:`// Время O(n), память O(n)
const topKFrequent = (nums, k) => {
  const result = [];
  const count = new Map();
  const frequencies = Array.from({ length: nums.length + 1 }, () => []);

  for (const num of nums) {
    count.set(num, 1 + (count.get(num) ?? 0));
  }

  for (const [num, frequency] of count) {
    frequencies[frequency].push(num);
  }

  for (let i = frequencies.length - 1; i > 0; i--) {
    for (const n of frequencies[i]) {
      result.push(n);

      if (result.length === k) {
        return result;
      }
    }
  }
};

console.log(topKFrequent([1, 1, 1, 2, 2, 3], 2)); // [1, 2]
console.log(topKFrequent([1], 1)); // [1]`,difficulty:"medium",id:"top-k-frequent-elements",link:"https://leetcode.com/problems/top-k-frequent-elements/",name:"Top K Frequent Elements",subject:"objects",tags:[p.ARRAY,p.HASH_TABLE,p.DIVIDE_AND_CONQUER,p.SORTING,p.HEAP,p.BUCKET_SORT,p.COUNTING,p.QUICKSELECT]},{code:`// Время O(ROWS ∗ COLS), память O(CELLS)
const isValidSudoku = (board) => {
  const rows = Array.from({ length: board.length }, () => new Set());
  const columns = Array.from({ length: board.length }, () => new Set());
  const squares = Array.from({ length: board.length }, () => new Set());

  for (let row = 0; row < rows.length; row++) {
    for (let col = 0; col < rows.length; col++) {
      if (board[row][col] === '.') {
        continue;
      }

      const squaresIndex = Math.floor(row / 3) * 3 + Math.floor(col / 3);

      if (rows[row].has(board[row][col])
        || columns[col].has(board[row][col])
        || squares[squaresIndex].has(board[row][col])) {
          return false;
      }

      rows[row].add(board[row][col]);
      columns[col].add(board[row][col]);
      squares[squaresIndex].add(board[row][col]);
    }
  }

  return true;
};

console.log(isValidSudoku([
  ['5', '3', '.', '.', '7', '.', '.', '.', '.'],
  ['6', '.', '.', '1', '9', '5', '.', '.', '.'],
  ['.', '9', '8', '.', '.', '.', '.', '6', '.'],
  ['8', '.', '.', '.', '6', '.', '.', '.', '3'],
  ['4', '.', '.', '8', '.', '3', '.', '.', '1'],
  ['7', '.', '.', '.', '2', '.', '.', '.', '6'],
  ['.', '6', '.', '.', '.', '.', '2', '8', '.'],
  ['.', '.', '.', '4', '1', '9', '.', '.', '5'],
  ['.', '.', '.', '.', '8', '.', '.', '7', '9']
])); // true
console.log(isValidSudoku([
  ['8', '3', '.', '.', '7', '.', '.', '.', '.'],
  ['6', '.', '.', '1', '9', '5', '.', '.', '.'],
  ['.', '9', '8', '.', '.', '.', '.', '6', '.'],
  ['8', '.', '.', '.', '6', '.', '.', '.', '3'],
  ['4', '.', '.', '8', '.', '3', '.', '.', '1'],
  ['7', '.', '.', '.', '2', '.', '.', '.', '6'],
  ['.', '6', '.', '.', '.', '.', '2', '8', '.'],
  ['.', '.', '.', '4', '1', '9', '.', '.', '5'],
  ['.', '.', '.', '.', '8', '.', '.', '7', '9']
])); // false`,difficulty:"medium",id:"valid-sudoku",link:"https://leetcode.com/problems/valid-sudoku/",name:"Valid Sudoku",subject:"objects",tags:[p.ARRAY,p.HASH_TABLE,p.MATRIX]},{code:`// Время O(n), память O(n)
const longestConsecutive = (nums) => {
  const numSet = new Set(nums);
  let longest = 0;

  for (const num of nums) {
    if (!numSet.has(num - 1)) {
      let length = 1;

      while (numSet.has(num + length)) {
        length++;
      }

      longest = Math.max(length, longest);
    }
  }

  return longest;
};

console.log(longestConsecutive([100, 4, 200, 1, 3, 2])); // 4
console.log(longestConsecutive([0, 3, 7, 2, 5, 8, 4, 6, 0, 1])); // 9`,difficulty:"medium",id:"longest-consecutive-sequence",link:"https://leetcode.com/problems/longest-consecutive-sequence/",name:"Longest Consecutive Sequence",subject:"objects",tags:[p.ARRAY,p.HASH_TABLE,p.UNION_FIND]}],s_=[{code:`// Время O(n), память O(n)
const hasPathSum = (root, targetSum) => {
  if (!root) {
    return false;
  }

  if (!root.left && !root.right) {
    return targetSum - root.val === 0;
  }

  return hasPathSum(root.left, targetSum - root.val) || hasPathSum(root.right, targetSum - root.val);
};

console.log(hasPathSum({
  val: 5,
  left: {
    val: 4,
    left: {
      val: 11,
      left: {
        val: 7,
        left: null,
        right: null
      },
      right: {
        val: 2,
        left: null,
        right: null
      }
    },
    right: null
  },
  right: {
    val: 8,
    left: {
      val: 13,
      left: null,
      right: null
    },
    right: {
      val: 4,
      left: null,
      right: {
        val: 1,
        left: null,
        right: null
      }
    }
  }
}, 22)); // true
console.log(hasPathSum({ val: 1, left: { val: 2, left: null, right: null }, right: { val: 3, left: null, right: null } }, 0)); // false
console.log(hasPathSum(null, 0)); // false`,difficulty:"easy",id:"path-sum",link:"https://leetcode.com/problems/path-sum/",name:"Path Sum",subject:"backtracking",tags:[p.TREE,p.DEPTH_FIRST_SEARCH,p.BREADTH_FIRST_SEARCH,p.BINARY_TREE]},{code:`const generateParenthesis = (n) => {
  const result = [];

  const backtrack = (openN, closedN, path) => {
    if (openN === closedN && openN === n) {
      result.push(path);
      return;
    }

    if (openN < n) {
      backtrack(openN + 1, closedN, path + '(');
    }

    if (closedN < openN) {
      backtrack(openN, closedN + 1, path + ')');
    }
  };

  backtrack(0, 0, '');

  return result;
};

console.log(generateParenthesis(3)); // ['((()))', '(()())', '(())()', '()(())', '()()()']
console.log(generateParenthesis(1)); // ['()']`,difficulty:"medium",id:"generate-parentheses",link:"https://leetcode.com/problems/generate-parentheses/",name:"Generate Parentheses",subject:"backtracking",tags:[p.STRING,p.DYNAMIC_PROGRAMMING,p.BACKTRACKING]},{code:`// Время O(n ∗ 2^n), память O(n ∗ 2^n)
const subsets = (nums) => {
  const result = [];
  const subset = [];

  const backtracking = (i) => {
    if (i >= nums.length) {
      result.push([...subset]);
      return;
    }

    subset.push(nums[i]);
    backtracking(i + 1);

    subset.pop();
    backtracking(i + 1);
  };

  backtracking(0);

  return result;
};

console.log(subsets([1, 2, 3])); // [[1, 2, 3], [1, 2], [1, 3], [1], [2, 3], [2], [3], []]
console.log(subsets([0])); // [[0], []]`,difficulty:"medium",id:"subsets",link:"https://leetcode.com/problems/subsets/",name:"Subsets",subject:"subsets",tags:[p.ARRAY,p.BACKTRACKING,p.BIT_MANIPULATION]},{code:`// Время O(n ∗ 2^n), память O(n ∗ 2^n)
const subsetsWithDup = (nums) => {
  nums.sort();

  const result = [];

  const backtracking = (i, subset) => {
    if (i >= nums.length) {
      result.push([...subset]);
      return;
    }

    subset.push(nums[i]);
    backtracking(i + 1, subset);
    subset.pop();

    while (i + 1 < nums.length && nums[i] === nums[i + 1]) {
      i++;
    }

    backtracking(i + 1, subset);
  };

  backtracking(0, []);

  return result;
};

console.log(subsetsWithDup([1, 2, 2])); // [[1, 2, 2], [1, 2], [1], [2, 2], [2], []]
console.log(subsetsWithDup([0])); // [[0], []]`,difficulty:"medium",id:"subsets-ii",link:"https://leetcode.com/problems/subsets-ii/",name:"Subsets II",subject:"subsets",tags:[p.ARRAY,p.BACKTRACKING,p.BIT_MANIPULATION]},{code:`// Время O(k ∗ n^k), память O(k)
const combine = (n, k) => {
  const result = [];

  const backtrack = (start, combination) => {
    if (combination.length === k) {
      result.push([...combination]);
      return;
    }

    for (let i = start; i <= n; i++) {
      combination.push(i);
      backtrack(i + 1, combination);
      combination.pop();
    }
  };

  backtrack(1, []);

  return result;
};

console.log(combine(4, 2)); // [[1, 2], [1, 3], [1, 4], [2, 3], [2, 4], [3, 4]]
console.log(combine(1, 1)); // [[1]]`,difficulty:"medium",id:"combinations",link:"https://leetcode.com/problems/combinations/",name:"Combinations",subject:"combinations",tags:[p.BACKTRACKING]},{code:`// Время O(2 ^ target), память O(k), k - длина самого длинного сочетания
const combinationSum = (candidates, target) => {
  const result = [];

  const backtrack = (i, cur, total) => {
    if (total === target) {
      result.push([...cur]);
      return;
    }

    if (i >= candidates.length || total > target) {
      return;
    }

    cur.push(candidates[i]);
    backtrack(i, cur, total + candidates[i]);
    cur.pop();
    backtrack(i + 1, cur, total);
  };

  backtrack(0, [], 0);

  return result;
};

console.log(combinationSum([2, 3, 6, 7], 7)); // [[2, 2, 3], [7]]
console.log(combinationSum([2, 3, 5], 8)); // [[2, 2, 2, 2], [2, 3, 3], [3, 5]]
console.log(combinationSum([2], 1)); // []`,difficulty:"medium",id:"combination-sum",link:"https://leetcode.com/problems/combination-sum/",name:"Combination Sum",subject:"combinations",tags:[p.ARRAY,p.BACKTRACKING]},{code:`// Время O(n ∗ 4^n), память O(n)
const DigitToChar = {
  '2': 'abc',
  '3': 'def',
  '4': 'ghi',
  '5': 'jkl',
  '6': 'mno',
  '7': 'pqrs',
  '8': 'tuv',
  '9': 'wxyz',
}

const letterCombinations = (digits) => {
  const result = [];

  const backtrack = (i, curStr) => {
    if (curStr.length === digits.length) {
      result.push(curStr);
      return;
    }

    for (let char of DigitToChar[digits[i]]) {
      backtrack(i + 1, curStr + char);
    }
  };

  if (digits) {
    backtrack(0, '');
  }

  return result;
};

console.log(letterCombinations('23')); // ['ad', 'ae', 'af', 'bd', 'be', 'bf', 'cd', 'ce', 'cf']
console.log(letterCombinations('')); // []
console.log(letterCombinations('2')); // ['a', 'b', 'c']`,difficulty:"medium",id:"letter-combinations-of-a-phone-number",link:"https://leetcode.com/problems/letter-combinations-of-a-phone-number/",name:"Letter Combinations of a Phone Number",subject:"combinations",tags:[p.HASH_TABLE,p.STRING,p.BACKTRACKING]},{code:`// Время O(n^2 ∗ n!), память O(n!)
const permute = (nums) => {
  const result = [];

  const backtrack = (i) => {
    if (i >= nums.length) {
      result.push([...nums]);
    }

    for (let j = i; j < nums.length; j++) {
      [nums[i], nums[j]] = [nums[j], nums[i]];
      backtrack(i + 1);
      [nums[i], nums[j]] = [nums[j], nums[i]];
    }
  }

  backtrack(0);

  return result;
};

console.log(permute([1, 2, 3])); // [[1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 2, 1], [3, 1, 2]]
console.log(permute([0, 1])); // [[0, 1], [1, 0]]
console.log(permute([1])); // [[1]]`,difficulty:"medium",id:"permutations",link:"https://leetcode.com/problems/permutations/",name:"Permutations",subject:"permutations",tags:[p.ARRAY,p.BACKTRACKING]},{code:`// Время O(n ∗ n!), память O(n)
const permuteUnique = (nums) => {
  const result = [];
  const permutation = [];
  const count = {};

  nums.forEach((num) => {
    count[num] = 1 + (count[num] ?? 0);
  });

  const backtrack = () => {
    if (permutation.length === nums.length) {
      result.push([...permutation]);
      return;
    }

    Object.keys(count).forEach((num) => {
      if (count[num] > 0) {
        permutation.push(num);
        count[num]--;

        backtrack();

        permutation.pop();
        count[num]++;
      }
    });
  }

  backtrack(0);

  return result;
};

console.log(permuteUnique([1, 1, 2])); // [[1, 1, 2], [1, 2, 1], [2, 1, 1]]
console.log(permuteUnique([1, 2, 3])); // [[1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1]]`,difficulty:"medium",id:"permutations-ii",link:"https://leetcode.com/problems/permutations-ii/",name:"Permutations II",subject:"permutations",tags:[p.ARRAY,p.BACKTRACKING]},{code:`// Время O(2 ^ n), память O(n)
const combinationSum2 = (candidates, target) => {
  candidates.sort((a, b) => a - b);

  const result = [];

  const backtrack = (cur, position, target) => {
    if (target === 0) {
      result.push([...cur]);
    }

    if (target <= 0) {
      return;
    }

    let prev = -1;

    for (let i = position; i < candidates.length; i++) {
      if (candidates[i] === prev) {
        continue;
      }

      cur.push(candidates[i]);
      backtrack(cur, i + 1, target - candidates[i]);
      cur.pop();
      prev = candidates[i];
    }
  };

  backtrack([], 0, target);

  return result;
};

console.log(combinationSum2([10, 1, 2, 7, 6, 1, 5], 8)); // [[1, 1, 6], [1, 2, 5], [1, 7], [2, 6]]
console.log(combinationSum2([2, 5, 2, 1, 2], 5)); // [[1, 2, 2], [5]]`,difficulty:"medium",id:"combination-sum-ii",link:"https://leetcode.com/problems/combination-sum-ii/",name:"Combination Sum II",subject:"combinations",tags:[p.ARRAY,p.BACKTRACKING]},{code:`// Время O(n ∗ m ∗ 4^l), память O(l), n и m - размеры матрицы, l - длина word
const exist = (board, word) => {
  const rowsCount = board.length;
  const columnsCount = board[0].length;

  const backtrack = (row, col, i) => {
    if (i === word.length) {
      return true;
    }

    if (row < 0
      || col < 0
      || row >= rowsCount
      || col >= columnsCount
      || word[i] !== board[row][col]
    ) {
      return false;
    }

    board[row][col] = '.';

    const result = backtrack(row + 1, col, i + 1)
      || backtrack(row - 1, col, i + 1)
      || backtrack(row, col + 1, i + 1)
      || backtrack(row, col - 1, i + 1);

    board[row][col] = word[i];

    return result;
  }

  for (let row = 0; row < rowsCount; row++) {
    for (let col = 0; col < columnsCount; col++) {
      if (backtrack(row, col, 0)) {
        return true;
      }
    }
  }

  return false;
};

console.log(exist([['A', 'B', 'C', 'E'], ['S', 'F', 'C', 'S'], ['A', 'D', 'E', 'E']], 'ABCCED')); // true
console.log(exist([['A', 'B', 'C', 'E'], ['S', 'F', 'C', 'S'], ['A', 'D', 'E', 'E']], 'SEE')); // true
console.log(exist([['A', 'B', 'C', 'E'], ['S', 'F', 'C', 'S'], ['A', 'D', 'E', 'E']], 'ABCB')); // false`,difficulty:"medium",id:"word-search",link:"https://leetcode.com/problems/word-search/",name:"Word Search",subject:"backtracking",tags:[p.ARRAY,p.BACKTRACKING,p.MATRIX]},{code:`// Время O(n ∗ 2^n), память O(n)
const isPalindrome = (str, left, right) => {
  while (left < right) {
    if (str[left] !== str[right]) {
      return false;
    }

    left++;
    right--;
  }

  return true;
}

const partition = (s) => {
  const result = [];
  const part = [];

  const backtrack = (i) => {
    if (i >= s.length) {
      result.push([...part]);
      return;
    }

    for (let j = i; j < s.length; j++) {
      if (isPalindrome(s, i, j)) {
        part.push(s.slice(i, j + 1));
        backtrack(j + 1);
        part.pop();
      }
    }
  };

  backtrack(0);

  return result;
};

console.log(partition('aab', [['a', 'a', 'b'], ['aa', 'b']])); // true
console.log(partition('a', [['a']])); // false`,difficulty:"medium",id:"palindrome-partitioning",link:"https://leetcode.com/problems/palindrome-partitioning/",name:"Palindrome Partitioning",subject:"backtracking",tags:[p.STRING,p.DYNAMIC_PROGRAMMING,p.BACKTRACKING]}],i_=[{code:`// Время O(1), память O(1)
const hammingWeight = (n) => {
  let result = 0;

  while (n) {
    if (n & 1) {
      result++;
    }

    n >>= 1;
  }

  return result;
};

console.log(hammingWeight(11)); // 3
console.log(hammingWeight(128)); // 1
console.log(hammingWeight(2147483645)); // 30`,difficulty:"easy",id:"number-of-1-bits",link:"https://leetcode.com/problems/number-of-1-bits/",name:"Number of 1 Bits",subject:"bit-operations",tags:[p.DIVIDE_AND_CONQUER,p.BIT_MANIPULATION]}],a_=[{code:`// Время O(log n), память O(1)
const search = (nums, target) => {
  let l = 0;
  let r = nums.length - 1;

  while (l <= r) {
    const mid = l + Math.floor((r - l) / 2);

    if (nums[mid] > target) {
      r = mid - 1;
    } else if (nums[mid] < target) {
      l = mid + 1;
    } else {
      return mid;
    }
  }

  return -1;
};

console.log(search([-1, 0, 3, 5, 9, 12], 9)); // 4
console.log(search([-1, 0, 3, 5, 9, 12], 2)); // -1`,difficulty:"easy",id:"binary-search",link:"https://leetcode.com/problems/binary-search/",name:"Binary Search",subject:"binary-search",tags:[p.ARRAY,p.BINARY_SEARCH]},{code:`// Время O(log m + log n), память O(1)
const searchMatrix = (matrix, target) => {
  const rowsCount = matrix.length;
  const columnsCount = matrix[0].length;

  let top = 0;
  let bottom = rowsCount - 1;
  let row;

  while (top <= bottom) {
    row = Math.floor((top + bottom) / 2);

    if (target > matrix[row].at(-1)) {
      top = row + 1;
    } else if (target < matrix[row][0]) {
      bottom = row - 1;
    } else {
      break;
    }
  }

  if (top > bottom) {
    return false;
  }
  
  let l = 0;
  let r = columnsCount - 1;
  
  while (l <= r) {
    const mid = Math.floor((l + r) / 2);
  
    if (target > matrix[row][mid]) {
      l = mid + 1;
    } else if (target < matrix[row][mid]) {
      r = mid - 1;
    } else {
      return true;
    }
  }

  return false;
};

console.log(searchMatrix([[1, 3, 5, 7], [10, 11, 16, 20], [23, 30, 34, 60]], 3)); // true
console.log(searchMatrix([[1, 3, 5, 7], [10, 11, 16, 20], [23, 30, 34, 60]], 13)); // false`,difficulty:"medium",id:"search-a-2d-matrix",link:"https://leetcode.com/problems/search-a-2d-matrix/",name:"Search a 2D Matrix",subject:"binary-search",tags:[p.ARRAY,p.BINARY_SEARCH,p.MATRIX]},{code:`// Время O(log n), память O(1)
const guessNumber = (n) => {
  let low = 1;
  let high = n;

  while (low <= high) {
    const num = Math.floor((top + bottom) / 2);
    const result = guess(num);

    if (result > 0) {
      low = num + 1;
    } else if (result < 0) {
      high = num - 1;
    } else {
      return num;
    }
  }
};

console.log(guessNumber(10)); // 6
console.log(guessNumber(1)); // 1
console.log(guessNumber(2)); // 1`,difficulty:"easy",id:"guess-number-higher-or-lower",link:"https://leetcode.com/problems/guess-number-higher-or-lower/",name:"Guess Number Higher or Lower",subject:"binary-search",tags:[p.BINARY_SEARCH,p.INTERACTIVE]},{code:`// Время O(log n), память O(1)
const solution = (isBadVersion) => (n) => {
  let low = 1;
  let high = n;

  while (low <= high) {
    const mid = low + Math.floor((high - low) / 2);

    if (isBadVersion(mid)) {
      if (isBadVersion(mid - 1)) {
        high = mid - 1;
      } else {
        return mid;
      }
    } else {
      if (isBadVersion(mid + 1)) {
        return mid + 1;
      } else {
        low = mid + 1;
      }
    }
  }
};

console.log(solution(isBadVersion)(5)); // 4
console.log(solution(isBadVersion)(1)); // 1`,difficulty:"easy",id:"first-bad-version",link:"https://leetcode.com/problems/first-bad-version/",name:"First Bad Version",subject:"binary-search",tags:[p.BINARY_SEARCH,p.INTERACTIVE]},{code:`// Время O(n ∗ log m), память O(1), m - максимальное количество бананов в грозди
const minEatingSpeed = (piles, h) => {
  let left = 1;
  let right = Math.max(...piles);
  let result = right;

  while (left <= right) {
    const k = Math.floor((left + right) / 2);
    let hours = 0;

    for (const pile of piles) {
      hours += Math.ceil(pile / k);
    }

    if (hours <= h) {
      result = k;
      right = k - 1;
    } else {
      left = k + 1;
    }
  }

  return result;
};

console.log(minEatingSpeed([3, 6, 7, 11], 8)); // 4
console.log(minEatingSpeed([30, 11, 23, 4, 20], 5)); // 30
console.log(minEatingSpeed([30, 11, 23, 4, 20], 6)); // 23`,difficulty:"medium",id:"koko-eating-bananas",link:"https://leetcode.com/problems/koko-eating-bananas/",name:"Koko Eating Bananas",subject:"binary-search",tags:[p.ARRAY,p.BINARY_SEARCH]},{code:`// Время O(log n), память O(1)
const findMin = (nums) => {
  let left = 0;
  let right = nums.length - 1;

  while (left < right) {
    const middle = Math.floor((left + right) / 2);

    if (nums[middle] > nums[right]) {
      left = middle + 1;
    } else {
      right = middle;
    }
  }

  return nums[left];
};

console.log(findMin([3, 4, 5, 1, 2])); // 1
console.log(findMin([4, 5, 6, 7, 0, 1, 2])); // 0
console.log(findMin([11, 13, 15, 17])); // 11`,difficulty:"medium",id:"find-minimum-in-rotated-sorted-array",link:"https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/",name:"Find Minimum in Rotated Sorted Array",subject:"binary-search",tags:[p.ARRAY,p.BINARY_SEARCH]},{code:`// Время O(log n), память O(1)
const search = (nums, target) => {
  let left = 0;
  let right = nums.length - 1;

  while (left <= right) {
    const middle = Math.floor((left + right) / 2);

    if (target === nums[middle]) {
      return middle;
    }

    if (nums[left] <= nums[middle]) {
      if (target > nums[middle] || target < nums[left]) {
        left = middle + 1;
      } else {
        right = middle - 1;
      }
    } else {
      if (target < nums[middle] || target > nums[right]) {
        right = middle - 1;
      } else {
        left = middle + 1;
      }
    }
  }

  return -1;
};

console.log(search([4, 5, 6, 7, 0, 1, 2], 0)); // 4
console.log(search([4, 5, 6, 7, 0, 1, 2], 3)); // -1
console.log(search([1], 0)); // -1`,difficulty:"medium",id:"search-in-rotated-sorted-array",link:"https://leetcode.com/problems/search-in-rotated-sorted-array/",name:"Search in Rotated Sorted Array",subject:"binary-search",tags:[p.ARRAY,p.BINARY_SEARCH]},{code:`class TimeMap {
  store = {};

  set(key, value, timestamp) {
    if (!this.store[key]) {
      this.store[key] = [];
    }

    this.store[key].push([value, timestamp]);
  };

  get(key, timestamp) {
    let result = '';
    const values = this.store[key] ?? [];
    let left = 0;
    let right = values.length - 1;

    while (left <= right) {
      const middle = Math.floor((left + right) / 2);

      if (values[middle][1] <= timestamp) {
        result = values[middle][0];
        left = middle + 1;
      } else {
        right = middle - 1;
      }
    }

    return result;
  };
};

const timeMap = new TimeMap();
timeMap.set('foo', 'bar', 1);
console.log(timeMap.get('foo', 1)); // 'bar'
console.log(timeMap.get('foo', 3)); // 'bar'
timeMap.set('foo', 'bar2', 4);
console.log(timeMap.get('foo', 4)); // 'bar2'
console.log(timeMap.get('foo', 5)); // 'bar2'`,difficulty:"medium",id:"time-based-key-value-store",link:"https://leetcode.com/problems/time-based-key-value-store/",name:"Time Based Key-Value Store",subject:"binary-search",tags:[p.HASH_TABLE,p.STRING,p.BINARY_SEARCH,p.DESIGN]}],o_=[{code:`// Время O(ROWS ∗ COLS), память O(ROWS ∗ COLS)
const numIslands = (grid) => {
  const rowsCount = grid.length;
  const columnsCount = grid[0].length;
  let result = 0;

  const dfs = (row, col) => {
    if (row < 0
      || row >= rowsCount
      || col < 0
      || col >= columnsCount
      || grid[row][col] === '0'
    ) {
      return;
    }

    grid[row][col] = '0';

    dfs(row + 1, col);    
    dfs(row - 1, col);
    dfs(row, col + 1);
    dfs(row, col - 1);
  };

  for (let row = 0; row < rowsCount; row++) {
    for (let col = 0; col < columnsCount; col++) {
      if (grid[row][col] === '1') {
        result++;
        dfs(row, col);
      }
    }
  }

  return result;
};

console.log(numIslands([
  ['1', '1', '1', '1', '0'],
  ['1', '1', '0', '1', '0'],
  ['1', '1', '0', '0', '0'],
  ['0', '0', '0', '0', '0']
])); // 1
console.log(numIslands([
  ['1', '1', '0', '0', '0'],
  ['1', '1', '0', '0', '0'],
  ['0', '0', '1', '0', '0'],
  ['0', '0', '0', '1', '1']
])); // 3`,difficulty:"medium",id:"number-of-islands",link:"https://leetcode.com/problems/number-of-islands/",name:"Number of Islands",subject:"matrix-depth-first-search",tags:[p.ARRAY,p.DEPTH_FIRST_SEARCH,p.BREADTH_FIRST_SEARCH,p.UNION_FIND,p.MATRIX]},{code:`// Время O(ROWS ∗ COLS), память O(ROWS ∗ COLS)
const maxAreaOfIsland = (grid) => {
  const rowsCount = grid.length;
  const columnsCount = grid[0].length;
  const visited = new Set();
  let result = 0;

  const dfs = (row, col) => {
    if (row < 0
      || row >= rowsCount
      || col < 0
      || col >= columnsCount
      || grid[row][col] === 0
      || visited.has(\`\${row}-\${col}\`)
    ) {
      return 0;
    }

    visited.add(\`\${row}-\${col}\`);

    return 1
      + dfs(row + 1, col)
      + dfs(row - 1, col)
      + dfs(row, col + 1)
      + dfs(row, col - 1);
  };

  for (let row = 0; row < rowsCount; row++) {
    for (let col = 0; col < columnsCount; col++) {
      result = Math.max(result, dfs(row, col));
    }
  }

  return result;
};

console.log(maxAreaOfIsland([
  [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
  [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0],
  [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
  [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0],
  [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0],
  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
  [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0],
  [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0]
])); // 6
console.log(maxAreaOfIsland([[0, 0, 0, 0, 0, 0, 0, 0]])); // 0`,difficulty:"medium",id:"max-area-of-island",link:"https://leetcode.com/problems/max-area-of-island/",name:"Max Area of Island",subject:"matrix-depth-first-search",tags:[p.ARRAY,p.DEPTH_FIRST_SEARCH,p.BREADTH_FIRST_SEARCH,p.UNION_FIND,p.MATRIX]},{code:`// Время O(ROWS ∗ COLS), память O(ROWS ∗ COLS)
const pacificAtlantic = (heights) => {
  const rowsCount = heights.length;
  const columnsCount = heights[0].length;
  const pacific = new Set();
  const atlantic = new Set();
  const result = [];

  const dfs = (row, col, ocean, prevHeight) => {
    if (ocean.has(\`\${row},\${col}\`)
      || Math.min(row, col) < 0
      || row >= rowsCount
      || col >= columnsCount
      || heights[row][col] < prevHeight
    ) {
      return;
    }

    ocean.add(\`\${row},\${col}\`);

    dfs(row + 1, col, ocean, heights[row][col]);
    dfs(row - 1, col, ocean, heights[row][col]);
    dfs(row, col + 1, ocean, heights[row][col]);
    dfs(row, col - 1, ocean, heights[row][col]);
  };

  for (let col = 0; col < columnsCount; col++) {
    dfs(0, col, pacific, 0);
    dfs(rowsCount - 1, col, atlantic, 0);
  }

  for (let row = 0; row < rowsCount; row++) {
    dfs(row, 0, pacific, 0);
    dfs(row, columnsCount - 1, atlantic, 0);
  }

  for (let row = 0; row < rowsCount; row++) {
    for (let col = 0; col < columnsCount; col++) {
      if (pacific.has(\`\${row},\${col}\`) && atlantic.has(\`\${row},\${col}\`)) {
        result.push([row, col]);
      }
    }
  }

  return result;
};

console.log(pacificAtlantic([
  [1, 2, 2, 3, 5],
  [3, 2, 3, 4, 4],
  [2, 4 ,5, 3, 1],
  [6, 7, 1, 4, 5],
  [5, 1, 1, 2, 4]
])); // [[0, 4], [1, 3], [1, 4], [2, 2], [3, 0], [3, 1], [4, 0]]
console.log(pacificAtlantic([[1]])); // [[0, 0]]`,difficulty:"medium",id:"pacific-atlantic-water-flow",link:"https://leetcode.com/problems/pacific-atlantic-water-flow/",name:"Pacific Atlantic Water Flow",subject:"matrix-depth-first-search",tags:[p.ARRAY,p.DEPTH_FIRST_SEARCH,p.BREADTH_FIRST_SEARCH,p.MATRIX]},{code:`// Время O(ROWS ∗ COLS), память O(ROWS ∗ COLS)
const solve = (board) => {
  const rowsCount = board.length;
  const columnsCount = board[0].length;

  const capture = (row, col) => {
    if (Math.min(row, col) < 0
      || row >= rowsCount
      || col >= columnsCount
      || board[row][col] !== 'O'
    ) {
      return;
    }

    board[row][col] = 'T';

    capture(row + 1, col);
    capture(row - 1, col);
    capture(row, col + 1);
    capture(row, col - 1);
  };

  for (let row = 0; row < rowsCount; row++) {
    for (let col = 0; col < columnsCount; col++) {
      if (board[row][col] === 'O'
        && ([0, rowsCount - 1].includes(row) || [0, columnsCount - 1].includes(col))) {
          capture(row, col);
        }
    }
  }

  for (let row = 0; row < rowsCount; row++) {
    for (let col = 0; col < columnsCount; col++) {
      if (board[row][col] === 'O') {
        board[row][col] = 'X';
      }

      if (board[row][col] === 'T') {
        board[row][col] = 'O';
      }
    }
  }
};

const board1 = [
  ['X', 'X', 'X', 'X'],
  ['X', 'O', 'O', 'X'],
  ['X', 'X', 'O', 'X'],
  ['X', 'O', 'X', 'X']
];
solve(board1);
console.log(board1);
/*
  [
    ['X', 'X', 'X', 'X'],
    ['X', 'X', 'X', 'X'],
    ['X', 'X', 'X', 'X'],
    ['X', 'O', 'X', 'X']
  ]
*/

const board2 = [['X']];
solve(board2);
console.log(board2); // [['X']]`,difficulty:"medium",id:"surrounded-regions",link:"https://leetcode.com/problems/surrounded-regions/",name:"Surrounded Regions",subject:"matrix-depth-first-search",tags:[p.ARRAY,p.DEPTH_FIRST_SEARCH,p.BREADTH_FIRST_SEARCH,p.UNION_FIND,p.MATRIX]},{code:`// Время O(n^2), память O(n^2)
const DIRECTIONS = [[-1, -1], [-1, 0], [-1, 1], [0, -1], [0, 1], [1, -1], [1, 0], [1, 1]];

class MyListNode {
  constructor(value, prev = null, next = null) {
    this.value = value;
    this.prev = prev;
    this.next = next;
  }
}

class MyQueue {
  length = 0;

  constructor() {
    this.head = new MyListNode(null);
    this.tail = new MyListNode(null);
    this.head.next = this.tail;
    this.tail.prev = this.head;
  }

  enqueue(value) {
    const node = new MyListNode(value, this.tail.prev, this.tail);
    node.prev.next = node;
    node.next.prev = node;

    this.length++;
  }

  dequeue() {
    const { value } = this.head.next;

    this.head.next = this.head.next.next;
    this.head.next.prev = this.head;

    this.length--;

    return value;
  }
}

const shortestPathBinaryMatrix = (grid) => {
  const n = grid.length;
  const queue = new MyQueue();
  const visited = new Set(\`\${0},\${0}\`);
  queue.enqueue([0, 0, 1]);

  while (queue.length) {
    const [row, col, length] = queue.dequeue();
    
    if (Math.min(row, col) < 0
      || Math.max(row, col) >= n
      || grid[row][col]
    ) {
      continue;
    }

    if (row === n - 1 && col === n - 1) {
      return length;
    }
    
    for (const [dr, dc] of DIRECTIONS) {
      const newRow = row + dr;
      const newCol = col + dc;

      if (!visited.has(\`\${newRow},\${newCol}\`)) {
        queue.enqueue([newRow, newCol, length + 1]);
        visited.add(\`\${newRow},\${newCol}\`);
      }
    }
  }

  return -1;
};

console.log(shortestPathBinaryMatrix([
  [0, 1],
  [1, 0]
])); // 2
console.log(shortestPathBinaryMatrix([
  [0, 0, 0],
  [1, 1, 0],
  [1, 1, 0]
])); // 4`,difficulty:"medium",id:"shortest-path-in-binary-matrix",link:"https://leetcode.com/problems/shortest-path-in-binary-matrix/",name:"Shortest Path in Binary Matrix",subject:"matrix-breadth-first-search",tags:[p.ARRAY,p.BREADTH_FIRST_SEARCH,p.MATRIX]},{code:`// Время O(ROWS ∗ COLS), память O(ROWS ∗ COLS)
const DIRECTIONS = [[0, 1], [0, -1], [1, 0], [-1, 0]];

class MyListNode {
  constructor(value, prev = null, next = null) {
    this.value = value;
    this.prev = prev;
    this.next = next;
  }
}

class MyQueue {
  length = 0;

  constructor() {
    this.head = new MyListNode(null);
    this.tail = new MyListNode(null);
    this.head.next = this.tail;
    this.tail.prev = this.head;
  }

  enqueue(value) {
    const node = new MyListNode(value, this.tail.prev, this.tail);
    node.prev.next = node;
    node.next.prev = node;

    this.length++;
  }

  dequeue() {
    const { value } = this.head.next;

    this.head.next = this.head.next.next;
    this.head.next.prev = this.head;

    this.length--;

    return value;
  }
}

const orangesRotting = (grid) => {
  const rowsCount = grid.length;
  const columnsCount = grid[0].length;
  const queue = new MyQueue();
  let time = 0;
  let freshCount = 0;

  for (let row = 0; row < rowsCount; row++) {
    for (let col = 0; col < columnsCount; col++) {
      if (grid[row][col] === 1) {
        freshCount++;
      }
      
      if (grid[row][col] === 2) {
        queue.enqueue([row, col]);
      }
    }
  }

  while (queue.length && freshCount) {
    const queueLength = queue.length;

    for (let i = 0; i < queueLength; i++) {
      const [row, col] = queue.dequeue();

      for (const [dr, dc] of DIRECTIONS) {
        const newRow = row + dr;
        const newCol = col + dc;

        if (Math.min(newRow, newCol) < 0
          || newRow >= rowsCount
          || newCol >= columnsCount
          || grid[newRow][newCol] !== 1
        ) {
          continue;
        }

        grid[newRow][newCol] = 2;
        queue.enqueue([newRow, newCol]);
        freshCount--;
      }
    }

    time++;
  }

  return freshCount ? -1 : time;
};

console.log(orangesRotting([
  [2, 1, 1],
  [1, 1, 0],
  [0, 1, 1]
])); // 4
console.log(orangesRotting([
  [2, 1, 1],
  [0, 1, 1],
  [1, 0, 1]
])); // -1
console.log(orangesRotting([
  [0, 2]
])); // 0`,difficulty:"medium",id:"rotting-oranges",link:"https://leetcode.com/problems/rotting-oranges/",name:"Rotting Oranges",subject:"matrix-breadth-first-search",tags:[p.ARRAY,p.BREADTH_FIRST_SEARCH,p.MATRIX]},{code:`// Время O(E + V), память O(V)
const cloneGraph = (node) => {
  const OldToNew = new Map();

  const dfs = (node) => {
    if (OldToNew.has(node)) {
      return OldToNew.get(node);
    }

    const copy = new Node(node.val);
    OldToNew.set(node, copy);

    for (const neighbor of node.neighbors) {
      copy.neighbors.push(dfs(neighbor));
    }

    return copy;
  };

  return node ? dfs(node) : node;
};

const node1 = { val: 1, neighbors: [] };
const node2 = { val: 2, neighbors: [] };
const node3 = { val: 3, neighbors: [] };
const node4 = { val: 4, neighbors: [] };

node1.neighbors.push(node2, node4);
node2.neighbors.push(node1, node3);
node3.neighbors.push(node2, node4);
node4.neighbors.push(node1, node3);

console.log(cloneGraph(node1));
console.log(cloneGraph({ val: 1, neighbors: [] })); // { val: 1, neighbors: [] }
console.log(cloneGraph(null)); // null`,difficulty:"medium",id:"clone-graph",link:"https://leetcode.com/problems/clone-graph/",name:"Clone Graph",subject:"adjacency-list",tags:[p.HASH_TABLE,p.DEPTH_FIRST_SEARCH,p.BREADTH_FIRST_SEARCH,p.GRAPH]},{code:`const canFinish = (numCourses, prerequisites) => {
  const preMap = new Map();

  for (let course = 0; course < numCourses; course++) {
    preMap.set(course, []);
  }

  for (const [course, prerequisite] of prerequisites) {
    preMap.get(course).push(prerequisite);
  }

  const visited = new Set();

  const dfs = (course) => {
    if (visited.has(course)) {
      return false;
    }

    if (preMap.get(course).length === 0) {
      return true;
    }

    visited.add(course);

    for (const prerequisite of preMap.get(course)) {
      if (!dfs(prerequisite)) {
        return false;
      }
    }

    visited.delete(course);
    preMap.set(course, []);

    return true;
  };

  for (let course = 0; course < numCourses; course++) {
    if (!dfs(course)) {
      return false;
    }
  }

  return true;
};

console.log(canFinish(2, [[1, 0]])); // true
console.log(canFinish(2, [[1, 0], [0, 1]])); // false`,difficulty:"medium",id:"course-schedule",link:"https://leetcode.com/problems/course-schedule/",name:"Course Schedule",subject:"adjacency-list",tags:[p.DEPTH_FIRST_SEARCH,p.BREADTH_FIRST_SEARCH,p.GRAPH,p.TOPOLOGICAL_SORT]},{code:`const findOrder = (numCourses, prerequisites) => {
  const preMap = new Map();

  for (let course = 0; course < numCourses; course++) {
    preMap.set(course, []);
  }

  for (const [course, prerequisite] of prerequisites) {
    preMap.get(course).push(prerequisite);
  }

  const visited = new Set();
  const cycle = new Set();
  const result = [];

  const dfs = (course) => {
    if (cycle.has(course)) {
      return false;
    }

    if (visited.has(course)) {
      return true;
    }

    cycle.add(course);

    for (const prerequisite of preMap.get(course)) {
      if (!dfs(prerequisite)) {
        return false;
      }
    }

    cycle.delete(course);
    visited.add(course);
    result.push(course);

    return true;
  };

  for (let course = 0; course < numCourses; course++) {
    if (!dfs(course)) {
      return [];
    }
  }

  return result;
};

console.log(findOrder(2, [[1, 0]])); // [0, 1]
console.log(findOrder(4, [[1, 0], [2, 0], [3, 1], [3, 2]])); // [0, 1, 2, 3]
console.log(findOrder(1, [])); // [0]`,difficulty:"medium",id:"course-schedule-ii",link:"https://leetcode.com/problems/course-schedule-ii/",name:"Course Schedule II",subject:"adjacency-list",tags:[p.DEPTH_FIRST_SEARCH,p.BREADTH_FIRST_SEARCH,p.GRAPH,p.TOPOLOGICAL_SORT]}],l_=[{code:`// Время O(n), память O(1)
const canJump = (nums) => {
  let goal = nums.length - 1;

  for (let i = nums.length - 1; i >= 0; i--) {
    if (i + nums[i] >= goal) {
      goal = i;
    }
  }

  return goal === 0;
};

console.log(canJump([2, 3, 1, 1, 4])); // true
console.log(canJump([3, 2, 1, 0, 4])); // false`,difficulty:"medium",id:"jump-game",link:"https://leetcode.com/problems/jump-game/",name:"Jump Game",subject:"greedy",tags:[p.ARRAY,p.DYNAMIC_PROGRAMMING,p.GREEDY]},{code:`// Время O(n), память O(1)
const jump = (nums) => {
  let result = 0;
  let left = 0;
  let right = 0;

  while (right < nums.length - 1) {
    let farthest = 0;

    for (let i = left; i < right + 1; i++) {
      farthest = Math.max(farthest, i + nums[i]);
    }

    left = right + 1;
    right = farthest;
    result++;
  }

  return result;
};

console.log(jump([2, 3, 1, 1, 4])); // 2
console.log(jump([2, 3, 0, 1, 4])); // 2`,difficulty:"medium",id:"jump-game-ii",link:"https://leetcode.com/problems/jump-game-ii/",name:"Jump Game II",subject:"greedy",tags:[p.ARRAY,p.DYNAMIC_PROGRAMMING,p.GREEDY]},{code:`// Время O(n), память O(1)
const partitionLabels = (s) => {
  const CharToLastIndex = {};

  for (let i = 0; i < s.length; i++) {
    CharToLastIndex[s[i]] = i;
  }

  const result = [];
  let size = 0;
  let end = 0;

  for (let i = 0; i < s.length; i++) {
    size++;
    end = Math.max(end, CharToLastIndex[s[i]]);

    if (i === end) {
      result.push(size);
      size = 0;
    }
  }

  return result;
};

console.log(partitionLabels('ababcbacadefegdehijhklij')); // [9, 7, 8]
console.log(partitionLabels('eccbbbbdec')); // [10]`,difficulty:"medium",id:"partition-labels",link:"https://leetcode.com/problems/partition-labels/",name:"Partition Labels",subject:"greedy",tags:[p.HASH_TABLE,p.TWO_POINTERS,p.STRING,p.GREEDY]}],c_=[{code:`const insert = (intervals, newInterval) => {
  const result = [];

  for (let i = 0; i < intervals.length; i++) {
    if (newInterval[1] < intervals[i][0]) {
      result.push(newInterval, ...intervals.slice(i));
      return result;
    }

    if (newInterval[0] > intervals[i][1]) {
      result.push(intervals[i]);
    } else {
      newInterval = [Math.min(intervals[i][0], newInterval[0]), Math.max(intervals[i][1], newInterval[1])];
    }
  }

  result.push(newInterval);
  return result;
};

console.log(insert([[1, 3], [6, 9]], [2, 5])); // [[1, 5], [6, 9]]
console.log(insert([[1, 2], [3, 5], [6, 7], [8, 10], [12, 16]], [4, 8])); // [[1, 2], [3, 10], [12, 16]]`,difficulty:"medium",id:"insert-interval",link:"https://leetcode.com/problems/insert-interval/",name:"Insert Interval",subject:"intervals",tags:[p.ARRAY]},{code:`const merge = (intervals) => {
  intervals.sort((a, b) => a[0] - b[0]);

  const result = [intervals[0]];

  for (i = 1; i < intervals.length; i++) {
    const lastEnd = result.at(-1)[1];

    if (lastEnd < intervals[i][0]) {
      result.push(intervals[i]);
    } else {
      result.at(-1)[1] = Math.max(lastEnd, intervals[i][1]);
    }
  }

  return result;
};

console.log(merge([[1, 3], [2, 6], [8, 10], [15, 18]])); // [[1, 6], [8, 10], [15, 18]]
console.log(merge([[1, 4], [4, 5]])); // [[1, 5]]`,difficulty:"medium",id:"merge-intervals",link:"https://leetcode.com/problems/merge-intervals/",name:"Merge Intervals",subject:"intervals",tags:[p.ARRAY,p.SORTING]},{code:`const eraseOverlapIntervals = (intervals) => {
  intervals.sort((a, b) => a[0] - b[0]);

  let result = 0;
  let prevEnd = intervals[0][1];

  for (let i = 1; i < intervals.length; i++) {
    if (intervals[i][0] >= prevEnd) {
      prevEnd = intervals[i][1];
    } else {
      result++;
      prevEnd = Math.min(prevEnd, intervals[i][1]);
    }
  }

  return result;
};

console.log(eraseOverlapIntervals([[1, 2], [2, 3], [3, 4], [1, 3]])); // 1
console.log(eraseOverlapIntervals([[1, 2], [1, 2], [1, 2]])); // 2
console.log(eraseOverlapIntervals([[1, 2], [2, 3]])); // 0`,difficulty:"medium",id:"non-overlapping-intervals",link:"https://leetcode.com/problems/non-overlapping-intervals/",name:"Non-overlapping Intervals",subject:"intervals",tags:[p.ARRAY,p.DYNAMIC_PROGRAMMING,p.GREEDY,p.SORTING]}],d_=[{code:`// Время O(n), память O(1)
const maxSubArray = (nums) => {
  let maxSum = -Infinity;
  let currentSum = 0;

  for (const num of nums) {
    currentSum = Math.max(currentSum, 0) + num;
    maxSum = Math.max(maxSum, currentSum);
  }

  return maxSum;
};

console.log(maxSubArray([-2, 1, -3, 4, -1, 2, 1, -5, 4])); // 6
console.log(maxSubArray([1])); // 1
console.log(maxSubArray([5, 4, -1, 7, 8])); // 23`,difficulty:"medium",id:"maximum-subarray",link:"https://leetcode.com/problems/maximum-subarray/",name:"Maximum Subarray",subject:"kadanes-algorithm",tags:[p.ARRAY,p.DIVIDE_AND_CONQUER,p.DYNAMIC_PROGRAMMING]},{code:`// Время O(n), память O(1)
const maxSubarraySumCircular = (nums) => {
  let maxSum = -Infinity;
  let minSum = Infinity;
  let currentMaxSum = 0;
  let currentMinSum = 0;
  let total = 0;

  for (const num of nums) {
    currentMaxSum = Math.max(currentMaxSum + num, num);
    currentMinSum = Math.min(currentMinSum + num, num);
    total += num;
    maxSum = Math.max(maxSum, currentMaxSum);
    minSum = Math.min(minSum, currentMinSum);
  }

  return maxSum > 0 ? Math.max(maxSum, total - minSum) : maxSum;
};

console.log(maxSubarraySumCircular([1, -2, 3, -2])); // 3
console.log(maxSubarraySumCircular([5, -3, 5])); // 10
console.log(maxSubarraySumCircular([-3, -2, -3])); // -2`,difficulty:"medium",id:"maximum-sum-circular-subarray",link:"https://leetcode.com/problems/maximum-sum-circular-subarray/",name:"Maximum Sum Circular Subarray",subject:"kadanes-algorithm",tags:[p.ARRAY,p.DIVIDE_AND_CONQUER,p.DYNAMIC_PROGRAMMING,p.QUEUE,p.MONOTONIC_QUEUE]}],u_=[{code:`// Время O(n), память O(1)
const reverseList = (head) => {
  let prev = null;
  let cur = head;

  while (cur) {
    const next = cur.next;
    cur.next = prev;
    prev = cur;
    cur = next;
  }

  return prev;
};

console.log(reverseList({ val: 1, next: { val: 2, next: { val: 3, next: { val: 4, next: { val: 5, next: null } } } } }));
// result: { val: 5, next: { val: 4, next: { val: 3, next: { val: 2, next: { val: 1, next: null } } } } }
console.log(reverseList({ val: 1, next: { val: 2, next: null } })); // { val: 2, next: { val: 1, next: null } }
console.log(reverseList(null)); // null`,difficulty:"easy",id:"reverse-linked-list",link:"https://leetcode.com/problems/reverse-linked-list/",name:"Reverse Linked List",subject:"linked-lists",tags:[p.LINKED_LIST,p.RECURSION]},{code:`// Время O(m + n), память O(1)
const mergeTwoLists = (list1, list2) => {
  const dummyNode = new ListNode();
  let tail = dummyNode;

  while (list1 && list2) {
    if (list1.val < list2.val) {
      tail.next = list1;
      list1 = list1.next;
    } else {
      tail.next = list2;
      list2 = list2.next;
    }
    
    tail = tail.next;
  }
  
  if (list1) {
    tail.next = list1;
  } else {
    tail.next = list2;
  }

  return dummyNode.next;
};

console.log(mergeTwoLists({ val: 1, next: { val: 2, next: { val: 4, next: null } } }, { val: 1, next: { val: 3, next: { val: 4, next: null } } }));
// result: { val: 1, next: { val: 1, next: { val: 2, next: { val: 3, next: { val: 4, next: { val: 4, next: null } } } } } }
console.log(mergeTwoLists(null, null)); // null
console.log(mergeTwoLists(null, { val: 0, next: null })); // { val: 0, next: null }`,difficulty:"easy",id:"merge-two-sorted-lists",link:"https://leetcode.com/problems/merge-two-sorted-lists/",name:"Merge Two Sorted Lists",subject:"linked-lists",tags:[p.LINKED_LIST,p.RECURSION]},{code:`class ListNode {
  prev = null;
  next = null;

  constructor(val) {
    this.val = val;
  }    
}

class MyLinkedList {
  constructor() {
    this.head = new ListNode(-1);
    this.tail = new ListNode(-1);
    this.head.next = this.tail;
    this.tail.prev = this.head;
  }

  get(index) {
    let currentNode = this.head.next;

    while (currentNode && index > 0) {
      currentNode = currentNode.next;
      index--;
    }

    if (currentNode && currentNode !== this.tail && index === 0) {
      return currentNode.val;
    }

    return -1;
  }

  addAtHead(val) {
    const node = new ListNode(val);
    const next = this.head.next;
    const prev = this.head;

    prev.next = node;
    next.prev = node;
    node.next = next;
    node.prev = prev;
  }

  addAtTail(val) {
    const node = new ListNode(val);
    const next = this.tail;
    const prev = this.tail.prev;

    prev.next = node;
    next.prev = node;
    node.next = next;
    node.prev = prev;
  }

  addAtIndex(index, val) {
    let currentNode = this.head.next;

    while (currentNode && index > 0) {
      currentNode = currentNode.next;
      index--;
    }

    if (currentNode && index === 0) {
      const node = new ListNode(val);
      const next = currentNode;
      const prev = currentNode.prev;
  
      prev.next = node;
      next.prev = node;
      node.next = next;
      node.prev = prev;
    }
  }

  deleteAtIndex(index, val) {
    let currentNode = this.head.next;

    while (currentNode && index > 0) {
      currentNode = currentNode.next;
      index--;
    }

    if (currentNode && currentNode !== this.tail && index === 0) {
      const next = currentNode.next;
      const prev = currentNode.prev;
  
      next.prev = prev;
      prev.next = next;
    }
  }
}

const myLinkedList = new MyLinkedList();
myLinkedList.addAtHead(1);
myLinkedList.addAtTail(3);
myLinkedList.addAtIndex(1, 2);
console.log(myLinkedList.get(1)); // 2
myLinkedList.deleteAtIndex(1);
console.log(myLinkedList.get(1)); // 3`,difficulty:"medium",id:"design-linked-list",link:"https://leetcode.com/problems/design-linked-list/",name:"Design Linked List",subject:"doubly-linked-lists",tags:[p.LINKED_LIST,p.DESIGN]},{code:`class ListNode {
  constructor(val, prev = null, next = null) {
    this.val = val;
    this.prev = prev;
    this.next = next;
  }    
}

class BrowserHistory {
  constructor(homepage) {
    this.currentPage = new ListNode(homepage);
  }

  visit(url) {
    this.currentPage.next = new ListNode(url, this.currentPage);
    this.currentPage = this.currentPage.next;
  }

  back(steps) {
    while (this.currentPage.prev && steps > 0) {
      this.currentPage = this.currentPage.prev;
      steps--;
    }

    return this.currentPage.val;
  }

  forward(steps) {
    while (this.currentPage.next && steps > 0) {
      this.currentPage = this.currentPage.next;
      steps--;
    }

    return this.currentPage.val;
  }
}

const browserHistory = new BrowserHistory('leetcode.com');
browserHistory.visit('google.com');
browserHistory.visit('facebook.com');
browserHistory.visit('youtube.com');
console.log(browserHistory.back(1)); // 'facebook.com'
console.log(browserHistory.back(1)); // 'google.com'
console.log(browserHistory.forward(1)); // 'facebook.com'
browserHistory.visit('linkedin.com');
console.log(browserHistory.forward(2)); // 'linkedin.com'
console.log(browserHistory.back(2)); // 'google.com'
console.log(browserHistory.back(7)); // 'leetcode.com'`,difficulty:"medium",id:"design-browser-history",link:"https://leetcode.com/problems/design-browser-history/",name:"Design Browser History",subject:"doubly-linked-lists",tags:[p.ARRAY,p.LINKED_LIST,p.STACK,p.DESIGN,p.DOUBLY_LINKED_LIST,p.DATA_STREAM]},{code:`class ListNode {
  constructor(value, prev = null, next = null) {
    this.value = value;
    this.prev = prev;
    this.next = next;
  }
}

class MyQueue {
  size = 0;

  constructor() {
    this.head = new ListNode(null);
    this.tail = new ListNode(null);
    this.head.next = this.tail;
    this.tail.prev = this.head;
  }

  isEmpty() {
    return this.size === 0;
  }

  peek() {
    return this.head.next.value;
  }

  enqueue(value) {
    const node = new ListNode(value, this.tail.prev, this.tail);
    node.prev.next = node;
    node.next.prev = node;

    this.size++;
  }

  dequeue() {
    const { value } = this.head.next;

    this.head.next = this.head.next.next;
    this.head.next.prev = this.head;

    this.size--;

    return value;
  }
}

class MyStack {
  queue = new MyQueue();

  push(x) {
    this.queue.enqueue(x);

    for (let i = 0; i < this.queue.size - 1; i++) {
      this.queue.enqueue(this.queue.dequeue());
    }
  };

  pop() {
    return this.queue.dequeue();
  };

  top() {
    return this.queue.peek();
  };

  empty() {
    return this.queue.isEmpty();
  };
}

const myStack = new MyStack();
myStack.push(1);
myStack.push(2);
console.log(myStack.top()); // 2
console.log(myStack.pop()); // 2
console.log(myStack.empty()); // false`,difficulty:"easy",id:"implement-stack-using-queues",link:"https://leetcode.com/problems/implement-stack-using-queues/",name:"Implement Stack using Queues",subject:"queues",tags:[p.STACK,p.DESIGN,p.QUEUE]},{code:`// Время O(n), память O(1)
const middleNode = (head) => {
  let slow = head;
  let fast = head;

  while (fast?.next) {
    slow = slow.next;
    fast = fast.next.next;
  }

  return slow;
};

console.log(middleNode({ val: 1, next: { val: 2, next: { val: 3, next: { val: 4, next: { val: 5, next: null} } } } })); // { val: 3 }
console.log(middleNode({ val: 1, next: { val: 2, next: { val: 3, next: { val: 4, next: { val: 5, next: { val: 6, next: null } } } } } })); // { val: 4 }`,difficulty:"easy",id:"middle-of-the-linked-list",link:"https://leetcode.com/problems/middle-of-the-linked-list/",name:"Middle of the Linked List",subject:"fast-and-slow-pointers",tags:[p.LINKED_LIST,p.TWO_POINTERS]},{code:`// Время O(n), память O(1)
const pairSum = (head) => {
  let slow = head;
  let fast = head;
  let prev = null;
  let result = 0;

  while (fast?.next) {
    fast = fast.next.next;
    [slow.next, prev, slow] = [prev, slow, slow.next];
  }

  while (slow) {
    result = Math.max(result, prev.val + slow.val);
    prev = prev.next;
    slow = slow.next;
  }

  return result;
};

console.log(pairSum({ val: 5, next: { val: 4, next: { val: 2, next: { val: 1, next: null } } } })); // 6
console.log(pairSum({ val: 4, next: { val: 2, next: { val: 2, next: { val: 3, next: null } } } })); // 7
console.log(pairSum({ val: 1, next: { val: 100000, next: null } })); // 100001`,difficulty:"medium",id:"maximum-twin-sum-of-a-linked-list",link:"https://leetcode.com/problems/maximum-twin-sum-of-a-linked-list/",name:"Maximum Twin Sum of a Linked List",subject:"fast-and-slow-pointers",tags:[p.LINKED_LIST,p.TWO_POINTERS,p.STACK]},{code:`// Время O(n), память O(1)
const hasCycle = (head) => {
  let slow = head;
  let fast = head;

  while (fast?.next) {
    slow = slow.next;
    fast = fast.next.next;
    
    if (slow === fast) {
      return true;
    }
  }

  return false;
};

const cycleHead1 = { val: 2, next: null }; 
const cycledList1 = { val: 3, next: null };
const cycledList1Tail = { val: 0, next: { val: -4, next: cycleHead1 } };
cycleHead1.next = cycledList1Tail;
cycledList1.next = cycleHead1;

console.log(hasCycle(cycledList1)); // true

const cycledList2 = { val: 1, next: null };
const cycledList2Tail = { val: 2, next: cycledList2 };
cycledList2.next = cycledList2Tail;

console.log(hasCycle(cycledList2)); // true
console.log(hasCycle({ val: 1, next: null })) // false`,difficulty:"easy",id:"linked-list-cycle",link:"https://leetcode.com/problems/linked-list-cycle/",name:"Linked List Cycle",subject:"fast-and-slow-pointers",tags:[p.HASH_TABLE,p.LINKED_LIST,p.TWO_POINTERS]},{code:`// Время O(n), память O(1)
const detectCycle = (head) => {
  let slow = head;
  let fast = head;

  while (fast?.next) {
    slow = slow.next;
    fast = fast.next.next;

    if (slow === fast) {
      break;
    }
  }

  if (!fast?.next) {
    return null;
  }

  let slow2 = head;

  while (slow !== slow2) {
    slow = slow.next;
    slow2 = slow2.next;
  }

  return slow;
};

const cycleHead1 = { val: 2, next: null }; 
const cycledList1 = { val: 3, next: null };
const cycledList1Tail = { val: 0, next: { val: -4, next: cycleHead1 } };
cycleHead1.next = cycledList1Tail;
cycledList1.next = cycleHead1;

console.log(detectCycle(cycledList1)); // { val: 2 }

const cycledList2 = { val: 1, next: null };
const cycledList2Tail = { val: 2, next: cycledList2 };
cycledList2.next = cycledList2Tail;

console.log(detectCycle(cycledList2)); // { val: 1 }
console.log(detectCycle({ val: 1, next: null })); // null`,difficulty:"medium",id:"linked-list-cycle-ii",link:"https://leetcode.com/problems/linked-list-cycle-ii/",name:"Linked List Cycle II",subject:"fast-and-slow-pointers",tags:[p.HASH_TABLE,p.LINKED_LIST,p.TWO_POINTERS]},{code:`// Время O(n), память O(1)
const findDuplicate = (nums) => {
  let slow = 0;
  let fast = 0;

  while (true) {
    slow = nums[slow];
    fast = nums[nums[fast]];

    if (slow === fast) {
      break;
    }
  }

  let slow2 = 0;

  while (true) {
    slow = nums[slow];
    slow2 = nums[slow2];

    if (slow === slow2) {
      return slow;
    }
  }
};

console.log(findDuplicate([1, 3, 4, 2, 2])); // 2
console.log(findDuplicate([3, 1, 3, 4, 2])); // 3`,difficulty:"medium",id:"find-the-duplicate-number",link:"https://leetcode.com/problems/find-the-duplicate-number/",name:"Find the Duplicate Number",subject:"fast-and-slow-pointers",tags:[p.ARRAY,p.TWO_POINTERS,p.BINARY_SEARCH,p.BIT_MANIPULATION]},{code:`// Время O(max(m, n)), память O(1)
const addTwoNumbers = (l1, l2) => {
  const dummyNode = new ListNode();
  let currentNode = dummyNode;
  let carry = 0;

  while (l1 || l2 || carry) {
    const val1 = l1?.val ?? 0;
    const val2 = l2?.val ?? 0;

    let val = val1 + val2 + carry;
    carry = Math.floor(val / 10);
    val = val % 10;
    currentNode.next = new ListNode(val);

    currentNode = currentNode.next;
    l1 = l1?.next ?? null;
    l2 = l2?.next ?? null;
  }

  return dummyNode.next;
};

console.log(addTwoNumbers(
  { val: 2, next: { val: 4, next: { val: 3, next: null } } },
  { val: 5, next: { val: 6, next: { val: 4, next: null } } }  
)); // { val: 7, next: { val: 0, next: { val: 8, next: null } } }
console.log(addTwoNumbers({ val: 0, next: null }, { val: 0, next: null })); // { val: 0, next: null }
console.log(addTwoNumbers(
  { val: 9, next: { val: 9, next: { val: 9, next: { val: 9, next: { val: 9, next: { val: 9, next: { val: 9, next: null } } } } } } },
  { val: 9, next: { val: 9, next: { val: 9, next: { val: 9, next: null } } } }  
));
// { val: 8, next: { val: 9, next: { val: 9, next: { val: 9, next: { val: 0, next: { val: 0, next: { val: 0, next: { val: 1, next: null } } } } } } } }`,difficulty:"medium",id:"add-two-numbers",link:"https://leetcode.com/problems/add-two-numbers/",name:"Add Two Numbers",subject:"linked-lists",tags:[p.LINKED_LIST,p.MATH,p.RECURSION]},{code:`// Время O(n), память O(1)
const reorderList = (head) => {
  let slow = head;
  let fast = head.next;
  
  while (fast?.next) {
    slow = slow.next;
    fast = fast.next.next;
  }

  let second = slow.next;
  let prev = null;
  slow.next = null;

  while (second) {
    [second.next, prev, second] = [prev, second, second.next];
  }

  let first = head;
  second = prev;

  while (second) {
    [first.next, second.next, first, second] = [second, first.next, first.next, second.next];
  }
};

const list1 = { val: 1, next: { val: 2, next: { val: 3, next: { val: 4, next: null } } } };
reorderList(list1);
console.log(list1); // { val: 1, next: { val: 4, next: { val: 2, next: { val: 3, next: null } } } }

const list2 = { val: 1, next: { val: 2, next: { val: 3, next: { val: 4, next: { val: 5, next: null } } } } };
reorderList(list2);
console.log(list2); // { val: 1, next: { val: 5, next: { val: 2, next: { val: 4, next: { val: 3, next: null } } } } }`,difficulty:"medium",id:"reorder-list",link:"https://leetcode.com/problems/reorder-list/",name:"Reorder List",subject:"fast-and-slow-pointers",tags:[p.LINKED_LIST,p.TWO_POINTERS,p.STACK,p.RECURSION]},{code:`// Время O(n), память O(1)
const removeNthFromEnd = (head, n) => {
  const dummyNode = new ListNode(null, head);
  let left = dummyNode;
  let right = head;

  while (n > 0 && right) {
    right = right.next;
    n--;
  }

  while (right) {
    left = left.next;
    right = right.next;
  }

  left.next = left.next.next;
  return dummyNode.next;
};

console.log(removeNthFromEnd({
  val: 1,
  next: {
    val: 2,
    next: {
      val: 3,
      next: {
        val: 4,
        next: {
          val: 5,
          next: null
        }
      }
    }
  }
}, 2)); // { val: 1, next: { val: 2, next: { val: 3, next: { val: 5, next: null } } } }
console.log(removeNthFromEnd({ val: 1, next: null }, 1)); // null
console.log(removeNthFromEnd({ val: 1, next: { val: 2, next: null } }, 1)); // { val: 1, next: null }`,difficulty:"medium",id:"remove-nth-node-from-end-of-list",link:"https://leetcode.com/problems/remove-nth-node-from-end-of-list/",name:"Remove Nth Node From End of List",subject:"linked-lists",tags:[p.LINKED_LIST,p.TWO_POINTERS]},{code:`// Время O(n), память O(n)
const copyRandomList = (head) => {
  const OldToCopy = new Map([[null, null]]);

  let cur = head;

  while (cur) {
    const copy = new Node(cur.val);
    OldToCopy.set(cur, copy);
    cur = cur.next;
  }

  cur = head;

  while (cur) {
    const copy = OldToCopy.get(cur);
    copy.next = OldToCopy.get(cur.next);
    copy.random = OldToCopy.get(cur.random);
    cur = cur.next;
  }

  return OldToCopy.get(head);
};

const node1list1 = { val: 7, next: null, random: null };
const node2list1 = { val: 13, next: null, random: node1list1 };
const node3list1 = { val: 11, next: null, random: null };
const node4list1 = { val: 10, next: null, random: node3list1 };
const node5list1 = { val: 7, next: null, random: node1list1 };
node3list1.random = node5list1;
node1list1.next = node2list1;
node2list1.next = node3list1;
node3list1.next = node4list1;
node4list1.next = node5list1;

console.log(copyRandomList(node1list1));

const node1list2 = { val: 1, next: null, random: null };
const node2list2 = { val: 2, next: null, random: null };
node1list2.next = node2list2;
node1list2.random = node2list2;
node2list2.random = node2list2;

console.log(copyRandomList(node1list2));

const node1list3 = { val: 3, next: null, random: null };
const node2list3 = { val: 3, next: null, random: node1list3 };
const node3list3 = { val: 3, next: null, random: null };
node1list3.next = node2list3;
node2list3.next = node3list3;

console.log(copyRandomList(node1list3));`,difficulty:"medium",id:"copy-list-with-random-pointer",link:"https://leetcode.com/problems/copy-list-with-random-pointer/",name:"Copy List with Random Pointer",subject:"linked-lists",tags:[p.HASH_TABLE,p.LINKED_LIST]}],h_=[{code:`// Время O(n^2), память O(1)
const rotate = (matrix) => {
  let left = 0;
  let top = left;
  let right = matrix.length - 1;
  let bottom = right;

  while (left < right) {
    for (let i = 0; i < right - left; i++) {
      const topLeft = matrix[top][left + i];

      matrix[top][left + i] = matrix[bottom - i][left];
      matrix[bottom - i][left] = matrix[bottom][right - i];
      matrix[bottom][right - i] = matrix[top + i][right];
      matrix[top + i][right] = topLeft;
    }

    left++;
    top++;
    right--;
    bottom--;
  }
};

const matrix1 = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];
rotate(matrix1);
console.log(matrix1); // [[7, 4, 1], [8, 5, 2], [9, 6, 3]]

const matrix2 = [[5, 1, 9, 11], [2, 4, 8, 10], [13, 3, 6, 7], [15, 14, 12, 16]];
rotate(matrix2);
console.log(matrix2); // [[15, 13, 2, 5], [14, 3, 4, 1], [12, 6, 8, 9], [16, 7, 10, 11]]`,difficulty:"medium",id:"rotate-image",link:"https://leetcode.com/problems/rotate-image/",name:"Rotate Image",subject:"math-and-geometry",tags:[p.ARRAY,p.MATH,p.MATRIX]},{code:`// Время O(m ∗ n), память O(1)
const spiralOrder = (matrix) => {
  const result = [];

  let left = 0;
  let right = matrix[0].length;
  let top = 0;
  let bottom = matrix.length;

  while (left < right && top < bottom) {
    for (let i = left; i < right; i++) {
      result.push(matrix[top][i]);
    }

    top++;

    for (let i = top; i < bottom; i++) {
      result.push(matrix[i][right - 1]);
    }

    right--;

    if (left >= right || top >= bottom) {
      break;
    }

    for (let i = right - 1; i > left - 1; i--) {
      result.push(matrix[bottom - 1][i]);
    }

    bottom--;

    for (let i = bottom - 1; i > top - 1; i--) {
      result.push(matrix[i][left]);
    }

    left++;
  }

  return result;
};

console.log(spiralOrder([[1, 2, 3], [4, 5, 6], [7, 8, 9]])); // [1, 2, 3, 6, 9, 8, 7, 4, 5]
console.log(spiralOrder([
  [1, 2, 3, 4],
  [5, 6, 7, 8],
  [9, 10, 11, 12]
])); // [1, 2, 3, 4, 8, 12, 11, 10, 9, 5, 6, 7]`,difficulty:"medium",id:"spiral-matrix",link:"https://leetcode.com/problems/spiral-matrix/",name:"Spiral Matrix",subject:"math-and-geometry",tags:[p.ARRAY,p.MATRIX,p.SIMULATION]},{code:`// Время O(log n), память O(log n)
const sumOfSquares = (n) => {
  let result = 0;

  while (n) {
    let digit = n % 10;
    digit **= 2;
    result += digit;
    n = Math.floor(n / 10);
  }

  return result;
};

const isHappy = (n) => {
  const visited = new Set();

  while (!visited.has(n)) {
    visited.add(n);

    n = sumOfSquares(n);

    if (n === 1) {
      return true;
    }
  }

  return false;
};

console.log(isHappy(19)); // true
console.log(isHappy(2)); // false`,difficulty:"easy",id:"happy-number",link:"https://leetcode.com/problems/happy-number/",name:"Happy Number",subject:"math-and-geometry",tags:[p.HASH_TABLE,p.MATH,p.TWO_POINTERS]},{code:`// Время O(log n), память O(log n)
const myPow = (x, n) => {
  const helper = (x, n) => {
    if (!x) {
      return 0;
    }

    if (!n) {
      return 1;
    }

    const result = helper(x * x, Math.floor(n / 2));

    return n % 2 ? x * result : result;
  }

  const result = helper(x, Math.abs(n));

  return n >= 0 ? result : 1 / result;
};

console.log(myPow(2.00000, 10)); // 1024
console.log(myPow(2.10000, 3)); // 9.261000000000001
console.log(myPow(2.00000, -2)); // 0.25`,difficulty:"medium",id:"powx-n",link:"https://leetcode.com/problems/powx-n/",name:"Pow(x, n)",subject:"math-and-geometry",tags:[p.MATH,p.RECURSION]}],p_=[{code:`// Время O(n), память O(1)
const rob = (nums) => {
  let rob1 = 0;
  let rob2 = 0;

  for (const num of nums) {
    [rob1, rob2] = [rob2, Math.max(rob1 + num, rob2)];
  }

  return rob2;
};

console.log(rob([1, 2, 3, 1])); // 4
console.log(rob([2, 7, 9, 3, 1])); // 12`,difficulty:"medium",id:"house-robber",link:"https://leetcode.com/problems/house-robber/",name:"House Robber",subject:"one-dimension-dp",tags:[p.ARRAY,p.DYNAMIC_PROGRAMMING]},{code:`// Время O(n), память O(1)
const rob = (nums) => {
  const helper = (start, end) => {
    let rob1 = 0;
    let rob2 = 0;

    for (let i = start; i < end; i++) {      
      [rob1, rob2] = [rob2, Math.max(rob1 + nums[i], rob2)];
    }

    return rob2;
  };

  return Math.max(nums[0], helper(0, nums.length - 1), helper(1, nums.length));
};

console.log(rob([2, 3, 2])); // 3
console.log(rob([1, 2, 3, 1])); // 4
console.log(rob([1, 2, 3])); // 3`,difficulty:"medium",id:"house-robber-ii",link:"https://leetcode.com/problems/house-robber-ii/",name:"House Robber II",subject:"one-dimension-dp",tags:[p.ARRAY,p.DYNAMIC_PROGRAMMING]},{code:`// Время O(n^2), память O(1)
const longestPalindrome = (s) => {
  let result = '';
  let substr = '';

  for (let i = 0; i < s.length; i++) {
    substr = '';
    let left = i;
    let right = i;

    while (left >= 0 && right < s.length && s[left] === s[right]) {      
      substr = substr ? \`\${s[left]}\${substr}\${s[right]}\` : s[i];

      if (result.length < substr.length) {
        result = substr;
      }

      left--;
      right++;
    }

    substr = '';
    left = i;
    right = i + 1;

    while (left >= 0 && right < s.length && s[left] === s[right]) {
      substr = \`\${s[left]}\${substr}\${s[right]}\`;

      if (result.length < substr.length) {
        result = substr;
      }

      left--;
      right++;
    }
  }

  return result;
};

console.log(longestPalindrome('babad')); // 'bab'
console.log(longestPalindrome('cbbd')); // 'bb'`,difficulty:"medium",id:"longest-palindromic-substring",link:"https://leetcode.com/problems/longest-palindromic-substring/",name:"Longest Palindromic Substring",subject:"palindromes",tags:[p.STRING,p.DYNAMIC_PROGRAMMING]},{code:`// Время O(n^2), память O(1)
const countSubstrings = (s) => {
  let result = 0;

  for (let i = 0; i < s.length; i++) {
    let left = i;
    let right = i;

    while (left >= 0 && right < s.length && s[left] === s[right]) {
      result++;
      left--;
      right++;
    }

    left = i;
    right = i + 1;

    while (left >= 0 && right < s.length && s[left] === s[right]) {
      result++;
      left--;
      right++;
    }
  }

  return result;
};

console.log(countSubstrings('abc')); // 3
console.log(countSubstrings('aaa')); // 6`,difficulty:"medium",id:"palindromic-substrings",link:"https://leetcode.com/problems/palindromic-substrings/",name:"Palindromic Substrings",subject:"palindromes",tags:[p.STRING,p.DYNAMIC_PROGRAMMING]}],m_=[{code:`// Время O(2^n), память O(n)
const fib = (n) => {
  if (n <= 1) {
    return n;
  }

  return fib(n - 1) + fib(n - 2);
};

console.log(fib(2)); // 1
console.log(fib(3)); // 2
console.log(fib(4)); // 3`,difficulty:"easy",id:"fibonacci-number",link:"https://leetcode.com/problems/fibonacci-number/",name:"Fibonacci Number",subject:"two-branch-recursion",tags:[p.MATH,p.DYNAMIC_PROGRAMMING,p.RECURSION,p.MEMOIZATION]}],f_=[{code:`// Время O(n), память O(k)
const containsNearbyDuplicate = (nums, k) => {
  const numsWindow = new Set();
  let l = 0;

  for (let r = 0; r < nums.length; r++) {
    if (r - l > k) {
      numsWindow.delete(nums[l]);
      l++;
    }

    if (numsWindow.has(nums[r])) {
      return true;
    }

    numsWindow.add(nums[r]);
  }

  return false;
};

console.log(containsNearbyDuplicate([1, 2, 3, 1], 3)); // true
console.log(containsNearbyDuplicate([1, 0, 1, 1], 1)); // true
console.log(containsNearbyDuplicate([1, 2, 3, 1, 2, 3], 2)); // false`,difficulty:"easy",id:"contains-duplicate-ii",link:"https://leetcode.com/problems/contains-duplicate-ii/",name:"Contains Duplicate II",subject:"sliding-window",tags:[p.ARRAY,p.HASH_TABLE,p.SLIDING_WINDOW]},{code:`// Время O(n), память O(1)
const numOfSubarrays = (arr, k, threshold) => {
  let l = 0;
  let sum = 0;
  let result = 0;

  for (let r = 0; r < arr.length; r++) {
    if (r - l === k) {
      sum -= arr[l];
      l++;
    }

    sum += arr[r];

    if (r + 1 >= k && sum / k >= threshold) {
      result++;
    }
  }

  return result;
};

console.log(numOfSubarrays([2, 2, 2, 2, 5, 5, 5, 8], 3, 4)); // 3
console.log(numOfSubarrays([11, 13, 17, 23, 29, 31, 7, 5, 2, 3], 3, 5)); // 6`,difficulty:"medium",id:"number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold",link:"https://leetcode.com/problems/number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold/",name:"Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold",subject:"sliding-window",tags:[p.ARRAY,p.SLIDING_WINDOW]},{code:`// Время O(n), память O(1)
const minSubArrayLen = (target, nums) => {
  let currentSum = 0;
  let l = 0;
  let result = Infinity;

  for (let r = 0; r < nums.length; r++) {
    currentSum += nums[r];

    while (currentSum >= target) {
      result = Math.min(r - l + 1, result);
      currentSum -= nums[l];
      l++;
    }
  }

  if (result === Infinity) {
    return 0;
  }

  return result;
};

console.log(minSubArrayLen(7, [2, 3, 1, 2, 4, 3])); // 2
console.log(minSubArrayLen(4, [1, 4, 4])); // 1
console.log(minSubArrayLen(11, [1, 1, 1, 1, 1, 1, 1, 1])); // 0`,difficulty:"medium",id:"minimum-size-subarray-sum",link:"https://leetcode.com/problems/minimum-size-subarray-sum/",name:"Minimum Size Subarray Sum",subject:"sliding-window",tags:[p.ARRAY,p.BINARY_SEARCH,p.SLIDING_WINDOW,p.PREFIX_SUM]},{code:`// Время O(n), память O(n)
const lengthOfLongestSubstring = (s) => {
  const charSet = new Set();
  let l = 0;
  let result = 0;

  for (let r = 0; r < s.length; r++) {
    while (charSet.has(s[r])) {
      charSet.delete(s[l]);
      l++;
    }

    charSet.add(s[r]);
    result = Math.max(result, r - l + 1);
  }

  return result;
};

console.log(lengthOfLongestSubstring('abcabcbb')); // 3
console.log(lengthOfLongestSubstring('bbbbb')); // 1
console.log(lengthOfLongestSubstring('pwwkew')); // 3`,difficulty:"medium",id:"longest-substring-without-repeating-characters",link:"https://leetcode.com/problems/longest-substring-without-repeating-characters/",name:"Longest Substring Without Repeating Characters",subject:"sliding-window",tags:[p.HASH_TABLE,p.STRING,p.SLIDING_WINDOW]},{code:`// Время O(n), память O(1)
const maxProfit = (prices) => {
  let l = 0;
  let maxProfit = 0;

  for (let r = 1; r < prices.length; r++) {
    if (prices[l] < prices[r]) {
      const profit = prices[r] - prices[l];

      maxProfit = Math.max(maxProfit, profit);
    } else {
      l = r;
    }
  }

  return maxProfit;
};

console.log(maxProfit([7, 1, 5, 3, 6, 4])); // 5
console.log(maxProfit([7, 6, 4, 3, 1])); // 0`,difficulty:"easy",id:"best-time-to-buy-and-sell-stock",link:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock/",name:"Best Time to Buy and Sell Stock",subject:"sliding-window",tags:[p.ARRAY,p.DYNAMIC_PROGRAMMING]},{code:`// Время O(n), память O(1)
const characterReplacement = (s, k) => {
  const count = {};
  let result = 0;
  let left = 0;
  let maxFrequency = 0;

  for (let right = 0; right < s.length; right++) {
    count[s[right]] = 1 + (count[s[right]] ?? 0);
    maxFrequency = Math.max(maxFrequency, count[s[right]]);

    while (right - left + 1 - maxFrequency > k) {
      count[s[left]]--;
      left++;
    }

    result = Math.max(result, right - left + 1);
  }

  return result;
};

console.log(characterReplacement('ABAB', 2)); // 4
console.log(characterReplacement('AABABBA', 1)); // 4`,difficulty:"medium",id:"longest-repeating-character-replacement",link:"https://leetcode.com/problems/longest-repeating-character-replacement/",name:"Longest Repeating Character Replacement",subject:"sliding-window",tags:[p.HASH_TABLE,p.STRING,p.SLIDING_WINDOW]},{code:`// Время O(n), память O(1)
const checkInclusion = (s1, s2) => {
  if (s1.length > s2.length) {
    return false;
  }

  const s1Count = Array(26).fill(0);
  const s2Count = Array(26).fill(0);

  for (let i = 0; i < s1.length; i++) {
    s1Count[s1[i].charCodeAt() - 'a'.charCodeAt()]++;
    s2Count[s2[i].charCodeAt() - 'a'.charCodeAt()]++;
  }

  let matches = 0;

  for (let i = 0; i < 26; i++) {
    if (s1Count[i] === s2Count[i]) {
      matches++;
    }
  }

  let left = 0;

  for (let right = s1.length; right < s2.length; right++) {
    if (matches === 26) {
      return true;
    }

    let index = s2[right].charCodeAt() - 'a'.charCodeAt();
    s2Count[index]++;

    if (s1Count[index] === s2Count[index]) {
      matches++;
    } else if (s1Count[index] + 1 === s2Count[index]) {
      matches--;
    }

    index = s2[left].charCodeAt() - 'a'.charCodeAt();
    s2Count[index]--;

    if (s1Count[index] === s2Count[index]) {
      matches++;
    } else if (s1Count[index] - 1 === s2Count[index]) {
      matches--;
    }

    left++;
  }

  return matches === 26;
};

console.log(checkInclusion('ab', 'eidbaooo')); // true
console.log(checkInclusion('ab', 'eidboaoo')); // false`,difficulty:"medium",id:"permutation-in-string",link:"https://leetcode.com/problems/permutation-in-string/",name:"Permutation in String",subject:"sliding-window",tags:[p.HASH_TABLE,p.TWO_POINTERS,p.STRING,p.SLIDING_WINDOW]}],g_=[{code:`// Время O(n ∗ log n), память O(n)
const sortArray = (nums) => {
  const quickSort = (nums, start, end) => {
    if (end - start + 1 <= 1) {
      return nums;
    }

    const pivot = nums[Math.round(Math.random() * (end - start) + start)];

    let left = start;
    let right = end;

    while (left <= right) {
      while (nums[left] < pivot) {
        left++;
      }

      while (nums[right] > pivot) {
        right--;
      }

      if (left <= right) {
        [nums[right], nums[left]] = [nums[left], nums[right]];
        left++;
        right--;
      }
    }

    quickSort(nums, start, right);
    quickSort(nums, left, end);

    return nums;
  };

  return quickSort(nums, 0, nums.length - 1);
};

console.log(sortArray([5, 2, 3, 1])); // [1, 2, 3, 5]
console.log(sortArray([5, 1, 1, 2, 0, 0])); // [0, 0, 1, 1, 2, 5]`,difficulty:"medium",id:"sort-an-array",link:"https://leetcode.com/problems/sort-an-array/",name:"Sort an Array",subject:"quick-sort",tags:[p.ARRAY,p.DIVIDE_AND_CONQUER,p.SORTING,p.HEAP,p.MERGE_SORT,p.BUCKET_SORT,p.RADIX_SORT,p.COUNTING_SORT]},{code:`// Время O(n), память O(1)
const sortColors = (nums) => {
  let left = 0;
  let right = nums.length - 1;
  let i = 0;

  while (i <= right) {
    if (nums[i] === 0) {
      [nums[left], nums[i]] = [nums[i], nums[left]];
      left++;
    } else if (nums[i] === 2) {
      [nums[i], nums[right]] = [nums[right], nums[i]];
      right--;
      i--;
    }

    i++;
  }
};

const array1 = [2, 0, 2, 1, 1, 0];
sortColors(array1);
console.log(array1); // [0, 0, 1, 1, 2, 2]

const array2 = [2, 0, 1];
sortColors(array2);
console.log(array2); // [0, 1, 2]`,difficulty:"medium",id:"sort-colors",link:"https://leetcode.com/problems/sort-colors/",name:"Sort Colors",subject:"bucket-sort",tags:[p.ARRAY,p.TWO_POINTERS,p.SORTING]}],b_=[{code:`// Время O(n), память O(n)
const calPoints = (operations) => {
  const record = [];
  
  for (const operation of operations) {
    switch (operation) {
      case '+': {
        record.push(record.at(-1) + record.at(-2));
        break;
      }
      case 'D': {
        record.push(record.at(-1) * 2);
        break;
      }
      case 'C': {
        record.pop();
        break;
      }
      default: {
        record.push(Number(operation));
      }
    }
  }

  return record.reduce((result, cur) => result + cur, 0);
};

console.log(calPoints(['5', '2', 'C', 'D', '+'])); // 30
console.log(calPoints(['5', '-2', '4', 'C', 'D', '9', '+', '+'])); // 27
console.log(calPoints(['1', 'C'])); // 0`,difficulty:"easy",id:"baseball-game",link:"https://leetcode.com/problems/baseball-game/",name:"Baseball Game",subject:"stack",tags:[p.ARRAY,p.STACK,p.SIMULATION]},{code:`// Время O(n), память O(n)
const CloseToOpenBracket = {
  ')' : '(',
  ']' : '[',
  '}' : '{'
};

const isValid = (s) => {
  if (s.length % 2) {
    return false;
  }

  const stack = [];

  for (const char of s) {
    if (CloseToOpenBracket[char]) {
      if (stack.length && stack.at(-1) === CloseToOpenBracket[char]) {
        stack.pop();
      } else {
        return false;
      }
    } else {
      stack.push(char);
    }
  }

  return !stack.length;
};

console.log(isValid('()')); // true
console.log(isValid('()[]{}')); // true
console.log(isValid('(]')); // false`,difficulty:"easy",id:"valid-parentheses",link:"https://leetcode.com/problems/valid-parentheses/",name:"Valid Parentheses",subject:"stack",tags:[p.STRING,p.STACK]},{code:`class MinStack {
  stack = [];
  minStack = [];

  push(value) {
    this.stack.push(value);

    const minValue = Math.min(value, this.minStack.at(-1) ?? value);

    this.minStack.push(minValue);
  }

  pop() {
    this.stack.pop();
    this.minStack.pop();
  }

  top() {
    return this.stack.at(-1);
  }

  getMin() {
    return this.minStack.at(-1);
  }
}

const minStack = new MinStack();
minStack.push(-2);
minStack.push(0);
minStack.push(-3);
console.log(minStack.getMin()); // -3
minStack.pop();
console.log(minStack.top()); // 0
console.log(minStack.getMin()); // -2`,difficulty:"medium",id:"min-stack",link:"https://leetcode.com/problems/min-stack/",name:"Min Stack",subject:"stack",tags:[p.STACK,p.DESIGN]},{code:`// Время O(n), память O(n)
const evalRPN = (tokens) => {
  const stack = [];

  for (const token of tokens) {
     if (['+', '-', '*', '/'].includes(token)) {
      const lastValue = stack.pop();
      const penultimateValue = stack.pop();

      switch (token) {
        case '+': {
          stack.push(penultimateValue + lastValue);
          break;
        }
        case '-': {
          stack.push(penultimateValue - lastValue);
          break;
        }
        case '*': {
          stack.push(penultimateValue * lastValue);
          break;
        }
        case '/': {
          stack.push(Math.trunc(penultimateValue / lastValue));
          break;
        }
        default: {
          break;
        }
      }
    } else {
      stack.push(Number(token));
    }
  }

  return stack.pop();
};

console.log(evalRPN(['2', '1', '+', '3', '*'])); // 9
console.log(evalRPN(['4', '13', '5', '/', '+'])); // 6
console.log(evalRPN(['10', '6', '9', '3', '+', '-11', '*', '/', '*', '17', '+', '5', '+'])); // 22`,difficulty:"medium",id:"evaluate-reverse-polish-notation",link:"https://leetcode.com/problems/evaluate-reverse-polish-notation/",name:"Evaluate Reverse Polish Notation",subject:"stack",tags:[p.ARRAY,p.MATH,p.STACK]},{code:`// Время O(n), память O(n)
const dailyTemperatures = (temperatures) => {
  const answer = Array(temperatures.length).fill(0);
  const stack = [];

  for (let i = 0; i < temperatures.length; i++) {
    while (stack.length && temperatures[i] > temperatures[stack.at(-1)]) {
      const colderDayIndex = stack.pop();

      answer[colderDayIndex] = i - colderDayIndex;
    }

    stack.push(i);
  }

  return answer;
};

console.log(dailyTemperatures([73, 74, 75, 71, 69, 72, 76, 73])); // [1, 1, 4, 2, 1, 1, 0, 0]
console.log(dailyTemperatures([30, 40, 50, 60])); // [1, 1, 1, 0]
console.log(dailyTemperatures([30, 60, 90])); // [1, 1, 0]`,difficulty:"medium",id:"daily-temperatures",link:"https://leetcode.com/problems/daily-temperatures/",name:"Daily Temperatures",subject:"stack",tags:[p.ARRAY,p.STACK,p.MONOTONIC_STACK]},{code:`// Время O(n ∗ log n), память O(n)
const carFleet = (target, position, speed) => {
  const pairs = Array.from({ length: position.length }, (_, i) => [position[i], speed[i]]).sort(([p1], [p2]) => p2 - p1);
  const stack = [];

  for (const [p, s] of pairs) {
    stack.push((target - p) / s);

    if (stack.length >= 2 && stack.at(-1) <= stack.at(-2)) {
      stack.pop();
    }
  }

  return stack.length;
};

console.log(carFleet(12, [10, 8, 0, 5, 3], [2, 4, 1, 1, 3])); // 3
console.log(carFleet(10, [3], [3])); // 1
console.log(carFleet(100, [0, 2, 4], [4, 2, 1])); // 1`,difficulty:"medium",id:"car-fleet",link:"https://leetcode.com/problems/car-fleet/",name:"Car Fleet",subject:"stack",tags:[p.ARRAY,p.STACK,p.SORTING,p.MONOTONIC_STACK]}],x_=[{code:`// Время O(h), память O(h), h - высота дерева
const searchBST = (root, val) => {
  if (!root) {
    return null;
  }

  if (root.val > val) {
    return searchBST(root.left, val);
  }
  
  if (root.val < val) {
    return searchBST(root.right, val);
  }

  return root;
};

console.log(searchBST({
  val: 4,
  left: {
    val: 2,
    left: {
      val: 1,
      left: null,
      right: null
    },
    right: {
      val: 3,
      left: null,
      right: null
    }
  },
  right: {
    val: 7,
    left: null,
    right: null
  }
}, 2)); // { val: 2, left: { val: 1, left: null, right: null }, right: { val: 3, left: null, right: null } }
console.log(searchBST({
  val: 4,
  left: {
    val: 2,
    left: {
      val: 1,
      left: null,
      right: null
    },
    right: {
      val: 3,
      left: null,
      right: null
    }
  },
  right: {
    val: 7,
    left: null,
    right: null
  }
}, 5)); // null`,difficulty:"easy",id:"search-in-a-binary-search-tree",link:"https://leetcode.com/problems/search-in-a-binary-search-tree/",name:"Search in a Binary Search Tree",subject:"binary-search-tree",tags:[p.TREE,p.BINARY_SEARCH_TREE,p.BINARY_TREE]},{code:`// Время O(h), память O(h), h - высота дерева
const insertIntoBST = (root, val) => {
  if (!root) {
    return new TreeNode(val);
  }

  if (root.val < val) {
    root.right = insertIntoBST(root.right, val);
  } else {
    root.left = insertIntoBST(root.left, val);
  }

  return root;
};

console.log(insertIntoBST({
  val: 4,
  left: {
    val: 2,
    left: {
      val: 1,
      left: null,
      right: null
    },
    right: {
      val: 3,
      left: null,
      right: null
    }
  },
  right: {
    val: 7,
    left: null,
    right: null
  }
}, 5)); // { val: 4, left: { val: 2, left: { val: 1, left: null, right: null }, right: { val: 3, left: null, right: null } }, right: { val: 7, left: { val: 5, left: null, right: null }, right: null } }
console.log(insertIntoBST({
  val: 40,
  left: {
    val: 20,
    left: {
      val: 10,
      left: null,
      right: null
    },
    right: {
      val: 30,
      left: null,
      right: null
    }
  },
  right: {
    val: 60,
    left: {
      val: 50,
      left: null,
      right: null
    },
    right: {
      val: 70,
      left: null,
      right: null
    }
  }
}, 25)); // { val: 40, left: { val: 20, left: { val: 10, left: null, right: null }, right: { val: 30, left: { val: 25, left: null, right: null }, right: null } }, right: { val: 60, left: { val: 50, left: null, right: null }, right: { val: 70, left: null, right: null } } }`,difficulty:"medium",id:"insert-into-a-binary-search-tree",link:"https://leetcode.com/problems/insert-into-a-binary-search-tree/",name:"Insert into a Binary Search Tree",subject:"bst-insert-and-remove",tags:[p.TREE,p.BINARY_SEARCH_TREE,p.BINARY_TREE]},{code:`// Время O(h), память O(h), h - высота дерева
const deleteNode = (root, key) => {
  if (!root) {
    return null;
  }

  if (root.val > key) {
    root.left = deleteNode(root.left, key);
  } else if (root.val < key) {
    root.right = deleteNode(root.right, key);
  } else {
    if (!root.left) {
      return root.right;
    } else if (!root.right) {
      return root.left;
    }

    let cur = root.right;

    while (cur && cur.left) {
      cur = cur.left;
    }

    root.val = cur.val;
    root.right = deleteNode(root.right, root.val);
  }

  return root;
};

console.log(deleteNode({
  val: 5,
  left: {
    val: 3,
    left: {
      val: 2,
      left: null,
      right: null
    },
    right: {
      val: 4,
      left: null,
      right: null
    }
  },
  right: {
    val: 6,
    left: null,
    right: {
      val: 7,
      left: null,
      right: null
    }
  }
}, 3)); // { val: 5, left: { val: 4, left: { val: 2, left: null, right: null }, right: null }, right: { val: 6, left: null, right: { val: 7, left: null, right: null } } }
console.log(deleteNode({
  val: 5,
  left: {
    val: 3,
    left: {
      val: 2,
      left: null,
      right: null
    },
    right: {
      val: 4,
      left: null,
      right: null
    }
  },
  right: {
    val: 6,
    left: null,
    right: {
      val: 7,
      left: null,
      right: null
    }
  }
}, 0)); // { val: 5, left: { val: 3, left: { val: 2, left: null, right: null }, right: { val: 4, left: null, right: null } }, right: { val: 6, left: null, right: { val: 7, left: null, right: null } } }`,difficulty:"medium",id:"delete-node-in-a-bst",link:"https://leetcode.com/problems/delete-node-in-a-bst/",name:"Delete Node in a BST",subject:"bst-insert-and-remove",tags:[p.TREE,p.BINARY_SEARCH_TREE,p.BINARY_TREE]},{code:`// Время O(n), память O(n)
const inorderTraversal = (root) => {
  const result = [];
  const stack = [];

  let cur = root;

  while (cur || stack.length) {
    while (cur) {
      stack.push(cur);
      cur = cur.left;
    }

    cur = stack.pop();
    result.push(cur.val);
    cur = cur.right;
  }

  return result;
};

console.log(inorderTraversal({
  val: 1,
  left: null,
  right: {
    val: 2,
    left: {
      val: 3,
      left: null,
      right: null
    },
    right: null
  }
})); // [1, 3, 2]
console.log(inorderTraversal(null)); // []
console.log(inorderTraversal({ val: 1, left: null, right: null })); // [1]`,difficulty:"easy",id:"binary-tree-inorder-traversal",link:"https://leetcode.com/problems/binary-tree-inorder-traversal/",name:"Binary Tree Inorder Traversal",subject:"depth-first-search",tags:[p.STACK,p.TREE,p.DEPTH_FIRST_SEARCH,p.BINARY_TREE]},{code:`// Время O(n), память O(n)
const kthSmallest = (root, k) => {
  const stack = [];
  let n = 0;
  let cur = root;

  while (cur || stack.length) {
    while (cur) {
      stack.push(cur);
      cur = cur.left;
    }

    cur = stack.pop();
    n++;
    
    if (n === k) {
      return cur.val;
    }

    cur = cur.right;
  }
};

console.log(kthSmallest({
  val: 3,
  left: {
    val: 1,
    left: null,
    right: {
      val: 2,
      left: null,
      right: null
    }
  },
  right: {
    val: 4,
    left: null,
    right: null
  }
}, 1)); // 1
console.log(kthSmallest({
  val: 5,
  left: {
    val: 3,
    left: {
      val: 2,
      left: {
        val: 1,
        left: null,
        right: null
      },
      right: null
    },
    right: {
      val: 4,
      left: null,
      right: null
    }
  },
  right: {
    val: 6,
    left: null,
    right: null
  }
}, 3)); // 3`,difficulty:"medium",id:"kth-smallest-element-in-a-bst",link:"https://leetcode.com/problems/kth-smallest-element-in-a-bst/",name:"Kth Smallest Element in a BST",subject:"depth-first-search",tags:[p.TREE,p.DEPTH_FIRST_SEARCH,p.BINARY_SEARCH_TREE,p.BINARY_TREE]},{code:`// Время O(n^2), память O(h), h - высота дерева
const buildTree = (preorder, inorder) => {
  if (!preorder.length || !inorder.length) {
    return null;
  }

  const root = new TreeNode(preorder[0]);
  const mid = inorder.indexOf(preorder[0]);

  root.left = buildTree(preorder.slice(1, mid + 1), inorder.slice(0, mid));
  root.right = buildTree(preorder.slice(mid + 1), inorder.slice(mid + 1));
  
  return root;
};

console.log(buildTree([3, 9, 20, 15, 7], [9, 3, 15, 20, 7]));
/*
{
  val: 3,
  left: {
    val: 9,
    left: null,
    right: null
  },
  right: {
    val: 20,
    left: {
      val: 15,
      left: null,
      right: null
    },
    right: {
      val: 7,
      left: null,
      right: null
    }
  }
}
*/
console.log(buildTree([-1], [-1])); // { val: -1, left: null, right: null }`,difficulty:"medium",id:"construct-binary-tree-from-preorder-and-inorder-traversal",link:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/",name:"Construct Binary Tree from Preorder and Inorder Traversal",subject:"depth-first-search",tags:[p.ARRAY,p.HASH_TABLE,p.DIVIDE_AND_CONQUER,p.TREE,p.BINARY_TREE]},{code:`class BSTIterator {
  constructor(root) {
    this.stack = [];

    while (root) {
      this.stack.push(root);
      root = root.left;
    }
  }

  next() {
    const node = this.stack.pop();
    let cur = node.right;

    while (cur) {
      this.stack.push(cur);
      cur = cur.left;
    }

    return node.val;
  };

  hasNext() {
    return this.stack.length > 0;
  };
};

const bSTIterator = new BSTIterator({
  val: 7,
  left: {
    val: 3,
    left: null,
    right: null
  },
  right: {
    val: 15,
    left: {
      val: 9,
      left: null,
      right: null
    },
    right: {
      val: 20,
      left: null,
      right: null
    }
  }
});

console.log(bSTIterator.next()); // 3
console.log(bSTIterator.next()); // 7
console.log(bSTIterator.hasNext()); // true
console.log(bSTIterator.next()); // 9
console.log(bSTIterator.hasNext()); // true
console.log(bSTIterator.next()); // 15
console.log(bSTIterator.hasNext()); // true
console.log(bSTIterator.next()); // 20
console.log(bSTIterator.hasNext()); // false`,difficulty:"medium",id:"binary-search-tree-iterator",link:"https://leetcode.com/problems/binary-search-tree-iterator/",name:"Binary Search Tree Iterator",subject:"depth-first-search",tags:[p.STACK,p.TREE,p.DESIGN,p.BINARY_SEARCH_TREE,p.BINARY_TREE,p.ITERATOR]},{code:`// Время O(n), память O(n)
const preorderTraversal = (root) => {
  const result = [];
  const stack = [];

  let cur = root;

  while (cur || stack.length) {
    if (cur) {
      result.push(cur.val);
      stack.push(cur.right);
      cur = cur.left;
    } else {
      cur = stack.pop();
    }
  }

  return result;
};

console.log(preorderTraversal({
  val: 1,
  left: null,
  right: {
    val: 2,
    left: {
      val: 3,
      left: null,
      right: null
    },
    right: null
  }
})); // [1, 2, 3]
console.log(preorderTraversal(null)); // []
console.log(preorderTraversal({ val: 1, left: null, right: null })); // [1]`,difficulty:"easy",id:"binary-tree-preorder-traversal",link:"https://leetcode.com/problems/binary-tree-preorder-traversal/",name:"Binary Tree Preorder Traversal",subject:"iterative-depth-first-search",tags:[p.STACK,p.TREE,p.DEPTH_FIRST_SEARCH,p.BINARY_TREE]},{code:`// Время O(n), память O(n)
const postorderTraversal = (root) => {
  const result = [];
  const stack = [{ node: root, visited: false }];

  while (stack.length) {
    const { node, visited } = stack.pop();
  
    if (node) {
      if (visited) {
        result.push(node.val);
      } else {
        stack.push({ node: node, visited: true });
        stack.push({ node: node.right, visited: false });
        stack.push({ node: node.left, visited: false });
      }
    }
  }

  return result;
};

console.log(postorderTraversal({
  val: 1,
  left: null,
  right: {
    val: 2,
    left: {
      val: 3,
      left: null,
      right: null
    },
    right: null
  }
})); // [3, 2, 1]
console.log(postorderTraversal(null)); // []
console.log(postorderTraversal({ val: 1, left: null, right: null })); // [1]`,difficulty:"easy",id:"binary-tree-postorder-traversal",link:"https://leetcode.com/problems/binary-tree-postorder-traversal/",name:"Binary Tree Postorder Traversal",subject:"iterative-depth-first-search",tags:[p.STACK,p.TREE,p.DEPTH_FIRST_SEARCH,p.BINARY_TREE]},{code:`// Время O(n), память O(n)
class ListNode {
  constructor(value, prev = null, next = null) {
    this.value = value;
    this.prev = prev;
    this.next = next;
  }
}

class MyQueue {
  size = 0;

  constructor() {
    this.head = new ListNode(null);
    this.tail = new ListNode(null);
    this.head.next = this.tail;
    this.tail.prev = this.head;
  }

  enqueue(value) {
    const node = new ListNode(value, this.tail.prev, this.tail);
    node.prev.next = node;
    node.next.prev = node;

    this.size++;
  }

  dequeue() {
    const { value } = this.head.next;

    this.head.next = this.head.next.next;
    this.head.next.prev = this.head;

    this.size--;

    return value;
  }
}

const levelOrder = (root) => {
  const result = [];

  const queue = new MyQueue();
  queue.enqueue(root);

  while (queue.size) {
    const queueLength = queue.size;
    const level = [];

    for (let i = 0; i < queueLength; i++) {
      const node = queue.dequeue();
      
      if (node) {
        level.push(node.val);
        queue.enqueue(node.left);
        queue.enqueue(node.right);        
      }
    }
    
    if (level.length) {
      result.push(level);
    }
  }

  return result;
};

console.log(levelOrder({
  val: 3,
  left: {
    val: 9,
    left: null,
    right: null
  },
  right: {
    val: 20,
    left: {
      val: 15,
      left: null,
      right: null
    },
    right: {
      val: 7,
      left: null,
      right: null
    }
  }
})); // [[3], [9, 20], [15, 7]]
console.log(levelOrder({ val: 1, left: null, right: null })); // [[1]]
console.log(levelOrder(null)); // []`,difficulty:"medium",id:"binary-tree-level-order-traversal",link:"https://leetcode.com/problems/binary-tree-level-order-traversal/",name:"Binary Tree Level Order Traversal",subject:"breadth-first-search",tags:[p.TREE,p.BREADTH_FIRST_SEARCH,p.BINARY_TREE]},{code:`// Время O(n), память O(w), w - максимальная ширина дерева
class ListNode {
  constructor(value, prev = null, next = null) {
    this.value = value;
    this.prev = prev;
    this.next = next;
  }
}

class MyQueue {
  size = 0;

  constructor() {
    this.head = new ListNode(null);
    this.tail = new ListNode(null);
    this.head.next = this.tail;
    this.tail.prev = this.head;
  }

  enqueue(value) {
    const node = new ListNode(value, this.tail.prev, this.tail);
    node.prev.next = node;
    node.next.prev = node;

    this.size++;
  }

  dequeue() {
    const { value } = this.head.next;

    this.head.next = this.head.next.next;
    this.head.next.prev = this.head;

    this.size--;

    return value;
  }
}

const rightSideView = (root) => {
  const result = [];

  const queue = new MyQueue();
  queue.enqueue(root);

  while (queue.size) {
    let rightSide = null;
    const queueLength = queue.size;

    for (let i = 0; i < queueLength; i++) {
      const node = queue.dequeue();
      
      if (node) {
        rightSide = node;
        queue.enqueue(node.left);
        queue.enqueue(node.right);        
      }
    }
    
    if (rightSide) {
      result.push(rightSide.val);
    }
  }

  return result;
};

console.log(rightSideView({
  val: 1,
  left: {
    val: 2,
    left: null,
    right: {
      val: 5,
      left: null,
      right: null
    }
  },
  right: {
    val: 3,
    left: null,
    right: {
      val: 4,
      left: null,
      right: null
    }
  }
})); // [1, 3, 4]
console.log(rightSideView({ val: 1, left: null, right: { val: 3, left: null, right: null } })); // [1, 3]
console.log(rightSideView(null)); // []`,difficulty:"medium",id:"binary-tree-right-side-view",link:"https://leetcode.com/problems/binary-tree-right-side-view/",name:"Binary Tree Right Side View",subject:"breadth-first-search",tags:[p.TREE,p.DEPTH_FIRST_SEARCH,p.BREADTH_FIRST_SEARCH,p.BINARY_TREE]},{code:`// Время O(n), память O(n)
const invertTree = (root) => {
  if (!root) {
    return null;
  }

  [root.left, root.right] = [root.right, root.left];

  invertTree(root.left);
  invertTree(root.right);

  return root;
};

console.log(invertTree({
  val: 4,
  left: {
    val: 2,
    left: {
      val: 1,
      left: null,
      right: null
    },
    right: {
      val: 3,
      left: null,
      right: null
    }
  },
  right: {
    val: 7,
    left: {
      val: 6,
      left: null,
      right: null
    },
    right: {
      val: 9,
      left: null,
      right: null
    }
  }
})); // { val: 4, left: { val: 7, left: { val: 9, left: null, right: null }, right: { val: 6, left: null, right: null } }, right: { val: 2, left: { val: 3, left: null, right: null }, right: { val: 1, left: null, right: null } } }
console.log(invertTree({
  val: 2,
  left: {
    val: 1,
    left: null,
    right: null
  },
  right: {
    val: 3,
    left: null,
    right: null
  }
})); // { val: 2, left: { val: 3, left: null, right: null }, right: { val: 1, left: null, right: null } }
console.log(invertTree(null)); // null`,difficulty:"easy",id:"invert-binary-tree",link:"https://leetcode.com/problems/invert-binary-tree/",name:"Invert Binary Tree",subject:"depth-first-search",tags:[p.TREE,p.DEPTH_FIRST_SEARCH,p.BREADTH_FIRST_SEARCH,p.BINARY_TREE]},{code:`// Время O(n), память O(n)
const maxDepth = (root) => {
  if (!root) {
    return 0;
  }

  return 1 + Math.max(maxDepth(root.left), maxDepth(root.right));
};

console.log(maxDepth({
  val: 3,
  left: {
    val: 9,
    left: null,
    right: null
  },
  right: {
    val: 20,
    left: {
      val: 15,
      left: null,
      right: null
    },
    right: {
      val: 7,
      left: null,
      right: null
    }
  }
})); // 3
console.log(maxDepth({ val: 1, left: null, right: { val: 2, left: null, right: null } })); // 2`,difficulty:"easy",id:"maximum-depth-of-binary-tree",link:"https://leetcode.com/problems/maximum-depth-of-binary-tree/",name:"Maximum Depth of Binary Tree",subject:"depth-first-search",tags:[p.TREE,p.DEPTH_FIRST_SEARCH,p.BREADTH_FIRST_SEARCH,p.BINARY_TREE]},{code:`// Время O(n), память O(n)
const diameterOfBinaryTree = (root) => {
  let result = 0;

  const dfs = (root) => {
    if (!root) {
      return 0;
    }

    const left = dfs(root.left);
    const right = dfs(root.right);
    result = Math.max(result, left + right);

    return 1 + Math.max(left, right);
  };

  dfs(root);

  return result;
};

console.log(diameterOfBinaryTree({
  val: 1,
  left: {
    val: 2,
    left: {
      val: 4,
      left: null,
      right: null
    },
    right: {
      val: 5,
      left: null,
      right: null
    }
  },
  right: {
    val: 3,
    left: null,
    right: null
  }
})); // 3
console.log(diameterOfBinaryTree({ val: 1, left: { val: 2, left: null, right: null }, right: null })); // 1`,difficulty:"easy",id:"diameter-of-binary-tree",link:"https://leetcode.com/problems/diameter-of-binary-tree/",name:"Diameter of Binary Tree",subject:"depth-first-search",tags:[p.TREE,p.DEPTH_FIRST_SEARCH,p.BINARY_TREE]},{code:`// Время O(n), память O(n)
const isBalanced = (root) => {
  let result = true;

  const dfs = (root) => {
    if (!root) {
      return 0;
    }

    const left = dfs(root.left);
    const right = dfs(root.right);

    if (Math.abs(left - right) > 1) {
      result = false;
    }

    return 1 + Math.max(left, right);
  }

  dfs(root);

  return result;
};

console.log(isBalanced({
  val: 3,
  left: {
    val: 9,
    left: null,
    right: null
  },
  right: {
    val: 20,
    left: {
      val: 15,
      left: null,
      right: null
    },
    right: {
      val:7,
      left: null,
      right: null
    }
  }
})); // true
console.log(isBalanced({
  val: 1,
  left: {
    val: 2,
    left: {
      val: 3,
      left: {
        val: 4,
        left: null,
        right: null
      },
      right: {
        val: 4,
        left: null,
        right: null
      }
    },
    right: {
      val: 3,
      left: null,
      right: null
    }
  },
  right: {
    val: 2,
    left: null,
    right: null
  }
})); // false
console.log(isBalanced(null)); // true`,difficulty:"easy",id:"balanced-binary-tree",link:"https://leetcode.com/problems/balanced-binary-tree/",name:"Balanced Binary Tree",subject:"depth-first-search",tags:[p.TREE,p.DEPTH_FIRST_SEARCH,p.BINARY_TREE]},{code:`// Время O(min(p, q)), память O(min(p, q))
const isSameTree = (p, q) => {
  if (!p && !q) {
    return true;
  }

  if (!p || !q || p.val !== q.val) {
    return false;
  }

  return isSameTree(p.left, q.left) && isSameTree(p.right, q.right);
};

console.log(isSameTree({
  val: 1,
  left: {
    val: 2,
    left: null,
    right: null
  },
  right: {
    val: 3,
    left: null,
    right: null
  }
}, {
  val: 1,
  left: {
    val: 2,
    left: null,
    right: null
  },
  right: {
    val: 3,
    left: null,
    right: null
  }
})); // true
console.log(isSameTree({
  val: 1,
  left: {
    val: 2,
    left: null,
    right: null
  },
  right: null
}, {
  val: 1,
  left: null,
  right: {
    val: 2,
    left: null,
    right: null
  }
})); // false
console.log(isSameTree({
  val: 1,
  left: {
    val: 2,
    left: null,
    right: null
  },
  right: {
    val: 1,
    left: null,
    right: null
  }
}, {
  val: 1,
  left: {
    val: 1,
    left: null,
    right: null
  },
  right: {
    val: 2,
    left: null,
    right: null
  }
})); // false`,difficulty:"easy",id:"same-tree",link:"https://leetcode.com/problems/same-tree/",name:"Same Tree",subject:"depth-first-search",tags:[p.TREE,p.DEPTH_FIRST_SEARCH,p.BREADTH_FIRST_SEARCH,p.BINARY_TREE]},{code:`// Время O(n ∗ m), память O(n), m - количество узлов в поддереве
const isSameTree = (root, root2) => {
  if (!root && !root2) {
    return true;
  }

  if (root && root2 && root.val === root2.val) {
    return isSameTree(root.left, root2.left) && isSameTree(root.right, root2.right);
  }

  return false;
};

const isSubtree = (root, subRoot) => {
  if (!subRoot) {
    return true;
  }

  if (!root) {
    return false;
  }

  if (isSameTree(root, subRoot)) {
    return true;
  }

  return isSubtree(root.left, subRoot) || isSubtree(root.right, subRoot);
};

console.log(isSubtree({
  val: 3,
  left: {
    val: 4,
    left: {
      val: 1,
      left: null,
      right: null
    },
    right: {
      val: 2,
      left: null,
      right: null
    }
  },
  right: {
    val: 5,
    left: null,
    right: null
  }
}, {
  val: 4,
  left: {
    val: 1,
    left: null,
    right: null
  },
  right: {
    val: 2,
    left: null,
    right: null
  }
})); // true
console.log(isSubtree({
  val: 3,
  left: {
    val: 4,
    left: {
      val: 1,
      left: null,
      right: null
    },
    right: {
      val: 2,
      left: {
        val: 0,
        left: null,
        right: null
      },
      right: null
    }
  },
  right: {
    val: 5,
    left: null,
    right: null
  }
}, {
  val: 4,
  left: {
    val: 1,
    left: null,
    right: null
  },
  right: {
    val: 2,
    left: null,
    right: null
  }
})); // false`,difficulty:"easy",id:"subtree-of-another-tree",link:"https://leetcode.com/problems/subtree-of-another-tree/",name:"Subtree of Another Tree",subject:"depth-first-search",tags:[p.TREE,p.DEPTH_FIRST_SEARCH,p.STRING_MATCHING,p.BINARY_TREE,p.HASH_FUNCTION]},{code:`// Время O(n), память O(1)
const lowestCommonAncestor = (root, p, q) => {
  let cur = root;

  while (cur) {
    if (p > cur.val && q > cur.val) {
      cur = cur.right;
    } else if (p < cur.val && q < cur.val) {
      cur = cur.left;
    } else {    
      return cur;
    }
  }
};

console.log(lowestCommonAncestor({
  val: 6,
  left: {
    val: 2,
    left: {
      val: 0,
      left: null,
      right: null
    },
    right: {
      val: 4,
      left: {
        val: 3,
        left: null,
        right: null
      },
      right: {
        val: 5,
        left: null,
        right: null
      }
    }
  },
  right: {
    val: 8,
    left: {
      val: 7,
      left: null,
      right: null
    },
    right: {
      val: 9,
      left: null,
      right: null
    }
  }
}, 2, 8)); // 6
console.log(lowestCommonAncestor({
  val: 6,
  left: {
    val: 2,
    left: {
      val: 0,
      left: null,
      right: null
    },
    right: {
      val: 4,
      left: {
        val: 3,
        left: null,
        right: null
      },
      right: {
        val: 5,
        left: null,
        right: null
      }
    }
  },
  right: {
    val: 8,
    left: {
      val: 7,
      left: null,
      right: null
    },
    right: {
      val: 9,
      left: null,
      right: null
    }
  }
}, 2, 4)); // 2
console.log(lowestCommonAncestor({
  val: 2,
  left: {
    val: 1,
    left: null,
    right: null
  },
  right: null
}, 2, 1)); // 2`,difficulty:"medium",id:"lowest-common-ancestor-of-a-binary-search-tree",link:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/",name:"Lowest Common Ancestor of a Binary Search Tree",subject:"binary-search-tree",tags:[p.TREE,p.DEPTH_FIRST_SEARCH,p.BINARY_SEARCH_TREE,p.BINARY_TREE]},{code:`// Время O(n), память O(n)
const goodNodes = (root) => {
  const dfs = (node, maxVal) => {
    if (!node) {
      return 0;
    }

    let result = node.val >= maxVal ? 1 : 0;
    maxVal = Math.max(maxVal, node.val);
    result += dfs(node.left, maxVal);
    result += dfs(node.right, maxVal);
    return result;
  };

  return dfs(root, root.val);
};

console.log(goodNodes({
  val: 3,
  left: {
    val: 1,
    left: {
      val: 3,
      left: null,
      right: null
    },
    right: null
  },
  right: {
    val: 4,
    left: {
      val: 1,
      left: null,
      right: null
    },
    right: {
      val: 5,
      left: null,
      right: null
    }
  }
})); // 4
console.log(goodNodes({
  val: 3,
  left: {
    val: 3,
    left: {
      val: 4,
      left: null,
      right: null
    },
    right: {
      val: 2,
      left: null,
      right: null
    }
  },
  right: null
})); // 3
console.log(goodNodes({
  val: 1,
  left: null,
  right: null
})); // 1`,difficulty:"medium",id:"count-good-nodes-in-binary-tree",link:"https://leetcode.com/problems/count-good-nodes-in-binary-tree/",name:"Count Good Nodes in Binary Tree",subject:"depth-first-search",tags:[p.TREE,p.DEPTH_FIRST_SEARCH,p.BREADTH_FIRST_SEARCH,p.BINARY_TREE]},{code:`// Время O(n), память O(n)
const isValidBST = (root) => {
  const valid = (node, left, right) => {
    if (!node) {
      return true;
    }

    if (!(node.val < right && node.val > left)) {
      return false;
    }

    return valid(node.left, left, node.val) && valid(node.right, node.val, right);
  }

  return valid(root, -Infinity, Infinity);
};

console.log(isValidBST({
  val: 2,
  left: {
    val: 1,
    left: null,
    right: null
  },
  right: {
    val: 3,
    left: null,
    right: null
  }
})); // true
console.log(isValidBST({
  val: 5,
  left: {
    val: 1,
    left: null,
    right: null
  },
  right: {
    val: 4,
    left: {
      val: 3,
      left: null,
      right: null
    },
    right: {
      val: 6,
      left: null,
      right: null
    }
  }
})); // false`,difficulty:"medium",id:"validate-binary-search-tree",link:"https://leetcode.com/problems/validate-binary-search-tree/",name:"Validate Binary Search Tree",subject:"depth-first-search",tags:[p.TREE,p.DEPTH_FIRST_SEARCH,p.BINARY_SEARCH_TREE,p.BINARY_TREE]}],E_=[{code:`class TrieNode {
  isEndOfWord = false;
  children = new Map();
}

class Trie {
  root = new TrieNode();

  insert(word) {
    let cur = this.root;

    for (const char of word) {
      if (!cur.children.has(char)) {
        cur.children.set(char, new TrieNode());
      }

      cur = cur.children.get(char);
    }

    cur.isEndOfWord = true;
  };

  search(word) {
    let cur = this.root;

    for (const char of word) {
      if (!cur.children.has(char)) {
        return false;
      }

      cur = cur.children.get(char);
    }

    return cur.isEndOfWord;
  };

  startsWith(prefix) {
    let cur = this.root;

    for (const char of prefix) {
      if (!cur.children.has(char)) {
        return false;
      }

      cur = cur.children.get(char);
    }

    return true;
  };
}

const trie = new Trie();
trie.insert('apple');
console.log(trie.search('apple')); // true
console.log(trie.search('app')); // false
console.log(trie.startsWith('app')); // true
trie.insert('app');
console.log(trie.search('app')); // true`,difficulty:"medium",id:"implement-trie-prefix-tree",link:"https://leetcode.com/problems/implement-trie-prefix-tree/",name:"Implement Trie (Prefix Tree)",subject:"trie",tags:[p.HASH_TABLE,p.STRING,p.DESIGN,p.TRIE]},{code:`class TrieNode {
  isEndOfWord = false;
  children = new Map();
}

class WordDictionary {
  root = new TrieNode();

  addWord(word) {
    let cur = this.root;

    for (const char of word) {
      if (!cur.children.has(char)) {
        cur.children.set(char, new TrieNode());
      }

      cur = cur.children.get(char);
    }

    cur.isEndOfWord = true;
  };

  search(word) {
    return this.#dfs(word, 0, this.root);
  };

  #dfs(word, index, root) {
    let cur = root;

    for (let i = index; i < word.length; i++) {
      if (word[i] === '.') {
        for (const child of cur.children.values()) {
          if (this.#dfs(word, i + 1, child)) {
            return true;
          }
        }

        return false;
      }

      if (!cur.children.has(word[i])) {
        return false;
      }

      cur = cur.children.get(word[i]);
    }

    return cur.isEndOfWord;
  }
}

const wordDictionary = new WordDictionary();
wordDictionary.addWord('bad');
wordDictionary.addWord('dad');
wordDictionary.addWord('mad');
console.log(wordDictionary.search('pad')); // false
console.log(wordDictionary.search('bad')); // true
console.log(wordDictionary.search('.ad')); // true
console.log(wordDictionary.search('b..')); // true`,difficulty:"medium",id:"design-add-and-search-words-data-structure",link:"https://leetcode.com/problems/design-add-and-search-words-data-structure/",name:"Design Add and Search Words Data Structure",subject:"trie",tags:[p.STRING,p.DEPTH_FIRST_SEARCH,p.DESIGN,p.TRIE]}],T_=[{code:`// Время O(n), память O(1)
const isAlphaNum = (char) =>
  (char.charCodeAt(0) >= 'A'.charCodeAt(0) && char.charCodeAt(0) <= 'Z'.charCodeAt(0)) ||
  (char.charCodeAt(0) >= 'a'.charCodeAt(0) && char.charCodeAt(0) <= 'z'.charCodeAt(0)) ||
  (char.charCodeAt(0) >= '0'.charCodeAt(0) && char.charCodeAt(0) <= '9'.charCodeAt(0));

const isPalindrome = (s) => {
  let l = 0;
  let r = s.length - 1;

  while (l < r) {
    while (l < r && !isAlphaNum(s[l])) {
      l++;
    }

    while (r > l && !isAlphaNum(s[r])) {
      r--;
    }

    if (s[l].toLowerCase() !== s[r].toLowerCase()) {
      return false;
    }

    l++;
    r--;
  }

  return true;
};

console.log(isPalindrome('A man, a plan, a canal: Panama')); // true
console.log(isPalindrome('race a car')); // false
console.log(isPalindrome(' ')); // true`,difficulty:"easy",id:"valid-palindrome",link:"https://leetcode.com/problems/valid-palindrome/",name:"Valid Palindrome",subject:"two-pointers",tags:[p.TWO_POINTERS,p.STRING]},{code:`// Время O(n), память O(1)
const twoSum = (numbers, target) => {
  let l = 0;
  let r = numbers.length - 1;

  while (l < r) {
    const sum = numbers[l] + numbers[r];
    
    if (sum > target) {
      r--;
    } else if (sum < target) {
      l++;
    } else {
      return [l + 1, r + 1];
    }
  }
};

console.log(twoSum([2, 7, 11, 15], 9)); // [1, 2]
console.log(twoSum([2, 3, 4], 6)); // [1, 3]
console.log(twoSum([-1, 0], -1)); // [1, 2]`,difficulty:"medium",id:"two-sum-ii-input-array-is-sorted",link:"https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/",name:"Two Sum II - Input Array Is Sorted",subject:"two-pointers",tags:[p.ARRAY,p.TWO_POINTERS,p.BINARY_SEARCH]},{code:`// Время O(n), память O(1)
const removeDuplicates = (nums) => {
  let l = 0;
  let r = 0;

  while (r < nums.length) {
    let count = 1;

    while (r + 1 < nums.length && nums[r] === nums[r + 1]) {
      r++;
      count++;
    }

    for (let i = 0; i < Math.min(2, count); i++) {
      nums[l] = nums[r];
      l++;
    }

    r++;
  }

  return l;
};

console.log(removeDuplicates([1, 1, 1, 2, 2, 3])); // 5
console.log(removeDuplicates([0, 0, 1, 1, 1, 1, 2, 3, 3])); // 7`,difficulty:"medium",id:"remove-duplicates-from-sorted-array-ii",link:"https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/",name:"Remove Duplicates from Sorted Array II",subject:"two-pointers",tags:[p.ARRAY,p.TWO_POINTERS]},{code:`// Время O(n^2), память O(1)
const threeSum = (nums) => {
  const result = [];
  nums.sort((a, b) => a - b);

  for (let i = 0; i < nums.length; i++) {     
    if (i > 0 && nums[i] === nums[i - 1]) {
      continue;
    }

    let left = i + 1;
    let right = nums.length - 1;

    while (left < right) {
      const sum = nums[i] + nums[left] + nums[right];

      if (sum > 0) {
        right--;
      } else if (sum < 0) {
        left++;
      } else {
        result.push([nums[i], nums[left], nums[right]]);
        left++;

        while (nums[left] === nums[left - 1] && left < right) {
          left++;
        }
      }
    }
  }

  return result;
};

console.log(threeSum([-1, 0, 1, 2, -1, -4])); // [[-1, -1, 2], [-1, 0, 1]]
console.log(threeSum([0, 1, 1])); // []
console.log(threeSum([0, 0, 0])); // [0, 0, 0]`,difficulty:"medium",id:"3sum",link:"https://leetcode.com/problems/3sum/",name:"3Sum",subject:"two-pointers",tags:[p.ARRAY,p.TWO_POINTERS,p.SORTING]},{code:`// Время O(n), память O(1)
const maxArea = (height) => {
  let result = 0;
  let left = 0;
  let right = height.length - 1;

  while (left < right) {
    const area = (right - left) * Math.min(height[left], height[right]);
    result = Math.max(result, area);

    if (height[left] < height[right]) {
      left++;
    } else {
      right--;
    }
  }

  return result;
};

console.log(maxArea([1, 8, 6, 2, 5, 4, 8, 3, 7])); // 49
console.log(maxArea([1, 1])); // 1`,difficulty:"medium",id:"container-with-most-water",link:"https://leetcode.com/problems/container-with-most-water/",name:"Container With Most Water",subject:"two-pointers",tags:[p.ARRAY,p.TWO_POINTERS,p.GREEDY]}],ba=r_.concat(b_,T_,f_,a_,u_,m_,g_,x_,s_,o_,p_,c_,E_,d_,l_,i_,h_);function Py(t){return!!Bl[t]}function y_({subjectId:t,subjectsMatch:n,taskId:r,tasksMatch:s}){const i=[{title:"Главная",to:"/"}];if((n||t)&&i.push({title:"Список тем",to:"/subjects"}),Py(t)&&i.push({title:Bl[t],to:`/subjects/${t}`}),(s||r)&&i.push({title:"Список задач",to:"/tasks"}),r){const a=ba.find(o=>o.id===r);a!=null&&a.name&&i.push({title:a.name,to:`/tasks/${r}`})}return i}function S_(){const{taskId:t,subjectId:n}=k1(),r=yu("/subjects"),s=yu("/tasks");return e.jsx("nav",{children:e.jsx("ul",{className:"flex flex-wrap gap-x-2",children:y_({subjectId:n,subjectsMatch:r,taskId:t,tasksMatch:s}).map(({title:i,to:a},o,l)=>e.jsxs(M.Fragment,{children:[e.jsx("li",{children:e.jsx(ZA,{className:({isActive:c})=>c?"focus-visible:outline-0 pointer-events-none":"focus-visible:outline-0 focus-visible:underline hover:underline",end:!0,to:a,children:i})}),o<l.length-1&&e.jsx("li",{children:e.jsx("span",{children:">"})})]},i))})})}function Or(){return Or=Object.assign?Object.assign.bind():function(t){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var s in r)Object.prototype.hasOwnProperty.call(r,s)&&(t[s]=r[s])}return t},Or.apply(this,arguments)}function N_(t,n){if(t==null)return{};var r={},s=Object.keys(t),i,a;for(a=0;a<s.length;a++)i=s[a],!(n.indexOf(i)>=0)&&(r[i]=t[i]);return r}function Ex(t){if(t)throw t}/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */var j_=function(n){return n!=null&&n.constructor!=null&&typeof n.constructor.isBuffer=="function"&&n.constructor.isBuffer(n)};const Uy=Vs(j_);var Mo=Object.prototype.hasOwnProperty,By=Object.prototype.toString,Tx=Object.defineProperty,yx=Object.getOwnPropertyDescriptor,Sx=function(n){return typeof Array.isArray=="function"?Array.isArray(n):By.call(n)==="[object Array]"},Nx=function(n){if(!n||By.call(n)!=="[object Object]")return!1;var r=Mo.call(n,"constructor"),s=n.constructor&&n.constructor.prototype&&Mo.call(n.constructor.prototype,"isPrototypeOf");if(n.constructor&&!r&&!s)return!1;var i;for(i in n);return typeof i>"u"||Mo.call(n,i)},jx=function(n,r){Tx&&r.name==="__proto__"?Tx(n,r.name,{enumerable:!0,configurable:!0,value:r.newValue,writable:!0}):n[r.name]=r.newValue},Ax=function(n,r){if(r==="__proto__")if(Mo.call(n,r)){if(yx)return yx(n,r).value}else return;return n[r]},A_=function t(){var n,r,s,i,a,o,l=arguments[0],c=1,d=arguments.length,h=!1;for(typeof l=="boolean"&&(h=l,l=arguments[1]||{},c=2),(l==null||typeof l!="object"&&typeof l!="function")&&(l={});c<d;++c)if(n=arguments[c],n!=null)for(r in n)s=Ax(l,r),i=Ax(n,r),l!==i&&(h&&i&&(Nx(i)||(a=Sx(i)))?(a?(a=!1,o=s&&Sx(s)?s:[]):o=s&&Nx(s)?s:{},jx(l,{name:r,newValue:t(h,o,i)})):typeof i<"u"&&jx(l,{name:r,newValue:i}));return l};const _x=Vs(A_);function Nu(t){if(typeof t!="object"||t===null)return!1;const n=Object.getPrototypeOf(t);return(n===null||n===Object.prototype||Object.getPrototypeOf(n)===null)&&!(Symbol.toStringTag in t)&&!(Symbol.iterator in t)}function __(){const t=[],n={run:r,use:s};return n;function r(...i){let a=-1;const o=i.pop();if(typeof o!="function")throw new TypeError("Expected function as last argument, not "+o);l(null,...i);function l(c,...d){const h=t[++a];let x=-1;if(c){o(c);return}for(;++x<i.length;)(d[x]===null||d[x]===void 0)&&(d[x]=i[x]);i=d,h?v_(h,l)(...d):o(null,...d)}}function s(i){if(typeof i!="function")throw new TypeError("Expected `middelware` to be a function, not "+i);return t.push(i),n}}function v_(t,n){let r;return s;function s(...o){const l=t.length>o.length;let c;l&&o.push(i);try{c=t.apply(this,o)}catch(d){const h=d;if(l&&r)throw h;return i(h)}l||(c instanceof Promise?c.then(a,i):c instanceof Error?i(c):a(c))}function i(o,...l){r||(r=!0,n(o,...l))}function a(o){i(null,o)}}function R_(t){return!t||typeof t!="object"?"":"position"in t||"type"in t?vx(t.position):"start"in t||"end"in t?vx(t):"line"in t||"column"in t?ju(t):""}function ju(t){return Rx(t&&t.line)+":"+Rx(t&&t.column)}function vx(t){return ju(t&&t.start)+"-"+ju(t&&t.end)}function Rx(t){return t&&typeof t=="number"?t:1}class Kt extends Error{constructor(n,r,s){const i=[null,null];let a={start:{line:null,column:null},end:{line:null,column:null}};if(super(),typeof r=="string"&&(s=r,r=void 0),typeof s=="string"){const o=s.indexOf(":");o===-1?i[1]=s:(i[0]=s.slice(0,o),i[1]=s.slice(o+1))}r&&("type"in r||"position"in r?r.position&&(a=r.position):"start"in r||"end"in r?a=r:("line"in r||"column"in r)&&(a.start=r)),this.name=R_(r)||"1:1",this.message=typeof n=="object"?n.message:n,this.stack="",typeof n=="object"&&n.stack&&(this.stack=n.stack),this.reason=this.message,this.fatal,this.line=a.start.line,this.column=a.start.column,this.position=a,this.source=i[0],this.ruleId=i[1],this.file,this.actual,this.expected,this.url,this.note}}Kt.prototype.file="";Kt.prototype.name="";Kt.prototype.reason="";Kt.prototype.message="";Kt.prototype.stack="";Kt.prototype.fatal=null;Kt.prototype.column=null;Kt.prototype.line=null;Kt.prototype.source=null;Kt.prototype.ruleId=null;Kt.prototype.position=null;const gn={basename:w_,dirname:I_,extname:C_,join:O_,sep:"/"};function w_(t,n){if(n!==void 0&&typeof n!="string")throw new TypeError('"ext" argument must be a string');Aa(t);let r=0,s=-1,i=t.length,a;if(n===void 0||n.length===0||n.length>t.length){for(;i--;)if(t.charCodeAt(i)===47){if(a){r=i+1;break}}else s<0&&(a=!0,s=i+1);return s<0?"":t.slice(r,s)}if(n===t)return"";let o=-1,l=n.length-1;for(;i--;)if(t.charCodeAt(i)===47){if(a){r=i+1;break}}else o<0&&(a=!0,o=i+1),l>-1&&(t.charCodeAt(i)===n.charCodeAt(l--)?l<0&&(s=i):(l=-1,s=o));return r===s?s=o:s<0&&(s=t.length),t.slice(r,s)}function I_(t){if(Aa(t),t.length===0)return".";let n=-1,r=t.length,s;for(;--r;)if(t.charCodeAt(r)===47){if(s){n=r;break}}else s||(s=!0);return n<0?t.charCodeAt(0)===47?"/":".":n===1&&t.charCodeAt(0)===47?"//":t.slice(0,n)}function C_(t){Aa(t);let n=t.length,r=-1,s=0,i=-1,a=0,o;for(;n--;){const l=t.charCodeAt(n);if(l===47){if(o){s=n+1;break}continue}r<0&&(o=!0,r=n+1),l===46?i<0?i=n:a!==1&&(a=1):i>-1&&(a=-1)}return i<0||r<0||a===0||a===1&&i===r-1&&i===s+1?"":t.slice(i,r)}function O_(...t){let n=-1,r;for(;++n<t.length;)Aa(t[n]),t[n]&&(r=r===void 0?t[n]:r+"/"+t[n]);return r===void 0?".":k_(r)}function k_(t){Aa(t);const n=t.charCodeAt(0)===47;let r=L_(t,!n);return r.length===0&&!n&&(r="."),r.length>0&&t.charCodeAt(t.length-1)===47&&(r+="/"),n?"/"+r:r}function L_(t,n){let r="",s=0,i=-1,a=0,o=-1,l,c;for(;++o<=t.length;){if(o<t.length)l=t.charCodeAt(o);else{if(l===47)break;l=47}if(l===47){if(!(i===o-1||a===1))if(i!==o-1&&a===2){if(r.length<2||s!==2||r.charCodeAt(r.length-1)!==46||r.charCodeAt(r.length-2)!==46){if(r.length>2){if(c=r.lastIndexOf("/"),c!==r.length-1){c<0?(r="",s=0):(r=r.slice(0,c),s=r.length-1-r.lastIndexOf("/")),i=o,a=0;continue}}else if(r.length>0){r="",s=0,i=o,a=0;continue}}n&&(r=r.length>0?r+"/..":"..",s=2)}else r.length>0?r+="/"+t.slice(i+1,o):r=t.slice(i+1,o),s=o-i-1;i=o,a=0}else l===46&&a>-1?a++:a=-1}return r}function Aa(t){if(typeof t!="string")throw new TypeError("Path must be a string. Received "+JSON.stringify(t))}const D_={cwd:M_};function M_(){return"/"}function Au(t){return t!==null&&typeof t=="object"&&t.href&&t.origin}function F_(t){if(typeof t=="string")t=new URL(t);else if(!Au(t)){const n=new TypeError('The "path" argument must be of type string or an instance of URL. Received `'+t+"`");throw n.code="ERR_INVALID_ARG_TYPE",n}if(t.protocol!=="file:"){const n=new TypeError("The URL must be of scheme file");throw n.code="ERR_INVALID_URL_SCHEME",n}return P_(t)}function P_(t){if(t.hostname!==""){const s=new TypeError('File URL host must be "localhost" or empty on darwin');throw s.code="ERR_INVALID_FILE_URL_HOST",s}const n=t.pathname;let r=-1;for(;++r<n.length;)if(n.charCodeAt(r)===37&&n.charCodeAt(r+1)===50){const s=n.charCodeAt(r+2);if(s===70||s===102){const i=new TypeError("File URL path must not include encoded / characters");throw i.code="ERR_INVALID_FILE_URL_PATH",i}}return decodeURIComponent(n)}const Xc=["history","path","basename","stem","extname","dirname"];class U_{constructor(n){let r;n?typeof n=="string"||B_(n)?r={value:n}:Au(n)?r={path:n}:r=n:r={},this.data={},this.messages=[],this.history=[],this.cwd=D_.cwd(),this.value,this.stored,this.result,this.map;let s=-1;for(;++s<Xc.length;){const a=Xc[s];a in r&&r[a]!==void 0&&r[a]!==null&&(this[a]=a==="history"?[...r[a]]:r[a])}let i;for(i in r)Xc.includes(i)||(this[i]=r[i])}get path(){return this.history[this.history.length-1]}set path(n){Au(n)&&(n=F_(n)),Qc(n,"path"),this.path!==n&&this.history.push(n)}get dirname(){return typeof this.path=="string"?gn.dirname(this.path):void 0}set dirname(n){wx(this.basename,"dirname"),this.path=gn.join(n||"",this.basename)}get basename(){return typeof this.path=="string"?gn.basename(this.path):void 0}set basename(n){Qc(n,"basename"),Zc(n,"basename"),this.path=gn.join(this.dirname||"",n)}get extname(){return typeof this.path=="string"?gn.extname(this.path):void 0}set extname(n){if(Zc(n,"extname"),wx(this.dirname,"extname"),n){if(n.charCodeAt(0)!==46)throw new Error("`extname` must start with `.`");if(n.includes(".",1))throw new Error("`extname` cannot contain multiple dots")}this.path=gn.join(this.dirname,this.stem+(n||""))}get stem(){return typeof this.path=="string"?gn.basename(this.path,this.extname):void 0}set stem(n){Qc(n,"stem"),Zc(n,"stem"),this.path=gn.join(this.dirname||"",n+(this.extname||""))}toString(n){return(this.value||"").toString(n||void 0)}message(n,r,s){const i=new Kt(n,r,s);return this.path&&(i.name=this.path+":"+i.name,i.file=this.path),i.fatal=!1,this.messages.push(i),i}info(n,r,s){const i=this.message(n,r,s);return i.fatal=null,i}fail(n,r,s){const i=this.message(n,r,s);throw i.fatal=!0,i}}function Zc(t,n){if(t&&t.includes(gn.sep))throw new Error("`"+n+"` cannot be a path: did not expect `"+gn.sep+"`")}function Qc(t,n){if(!t)throw new Error("`"+n+"` cannot be empty")}function wx(t,n){if(!t)throw new Error("Setting `"+n+"` requires `path` to be set too")}function B_(t){return Uy(t)}const H_=Gy().freeze(),Hy={}.hasOwnProperty;function Gy(){const t=__(),n=[];let r={},s,i=-1;return a.data=o,a.Parser=void 0,a.Compiler=void 0,a.freeze=l,a.attachers=n,a.use=c,a.parse=d,a.stringify=h,a.run=x,a.runSync=g,a.process=A,a.processSync=S,a;function a(){const y=Gy();let _=-1;for(;++_<n.length;)y.use(...n[_]);return y.data(_x(!0,{},r)),y}function o(y,_){return typeof y=="string"?arguments.length===2?(td("data",s),r[y]=_,a):Hy.call(r,y)&&r[y]||null:y?(td("data",s),r=y,a):r}function l(){if(s)return a;for(;++i<n.length;){const[y,..._]=n[i];if(_[0]===!1)continue;_[0]===!0&&(_[0]=void 0);const f=y.call(a,..._);typeof f=="function"&&t.use(f)}return s=!0,i=Number.POSITIVE_INFINITY,a}function c(y,..._){let f;if(td("use",s),y!=null)if(typeof y=="function")R(y,..._);else if(typeof y=="object")Array.isArray(y)?E(y):T(y);else throw new TypeError("Expected usable value, not `"+y+"`");return f&&(r.settings=Object.assign(r.settings||{},f)),a;function b(I){if(typeof I=="function")R(I);else if(typeof I=="object")if(Array.isArray(I)){const[v,...O]=I;R(v,...O)}else T(I);else throw new TypeError("Expected usable value, not `"+I+"`")}function T(I){E(I.plugins),I.settings&&(f=Object.assign(f||{},I.settings))}function E(I){let v=-1;if(I!=null)if(Array.isArray(I))for(;++v<I.length;){const O=I[v];b(O)}else throw new TypeError("Expected a list of plugins, not `"+I+"`")}function R(I,v){let O=-1,F;for(;++O<n.length;)if(n[O][0]===I){F=n[O];break}F?(Nu(F[1])&&Nu(v)&&(v=_x(!0,F[1],v)),F[1]=v):n.push([...arguments])}}function d(y){a.freeze();const _=Si(y),f=a.Parser;return Jc("parse",f),Ix(f,"parse")?new f(String(_),_).parse():f(String(_),_)}function h(y,_){a.freeze();const f=Si(_),b=a.Compiler;return ed("stringify",b),Cx(y),Ix(b,"compile")?new b(y,f).compile():b(y,f)}function x(y,_,f){if(Cx(y),a.freeze(),!f&&typeof _=="function"&&(f=_,_=void 0),!f)return new Promise(b);b(null,f);function b(T,E){t.run(y,Si(_),R);function R(I,v,O){v=v||y,I?E(I):T?T(v):f(null,v,O)}}}function g(y,_){let f,b;return a.run(y,_,T),Ox("runSync","run",b),f;function T(E,R){Ex(E),f=R,b=!0}}function A(y,_){if(a.freeze(),Jc("process",a.Parser),ed("process",a.Compiler),!_)return new Promise(f);f(null,_);function f(b,T){const E=Si(y);a.run(a.parse(E),E,(I,v,O)=>{if(I||!v||!O)R(I);else{const F=a.stringify(v,O);F==null||(z_(F)?O.value=F:O.result=F),R(I,O)}});function R(I,v){I||!v?T(I):b?b(v):_(null,v)}}}function S(y){let _;a.freeze(),Jc("processSync",a.Parser),ed("processSync",a.Compiler);const f=Si(y);return a.process(f,b),Ox("processSync","process",_),f;function b(T){_=!0,Ex(T)}}}function Ix(t,n){return typeof t=="function"&&t.prototype&&(G_(t.prototype)||n in t.prototype)}function G_(t){let n;for(n in t)if(Hy.call(t,n))return!0;return!1}function Jc(t,n){if(typeof n!="function")throw new TypeError("Cannot `"+t+"` without `Parser`")}function ed(t,n){if(typeof n!="function")throw new TypeError("Cannot `"+t+"` without `Compiler`")}function td(t,n){if(n)throw new Error("Cannot call `"+t+"` on a frozen processor.\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.")}function Cx(t){if(!Nu(t)||typeof t.type!="string")throw new TypeError("Expected node, got `"+t+"`")}function Ox(t,n,r){if(!r)throw new Error("`"+t+"` finished async. Use `"+n+"` instead")}function Si(t){return $_(t)?t:new U_(t)}function $_(t){return!!(t&&typeof t=="object"&&"message"in t&&"messages"in t)}function z_(t){return typeof t=="string"||Uy(t)}var cn={};const W_=[65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111];cn.REPLACEMENT_CHARACTER="�";cn.CODE_POINTS={EOF:-1,NULL:0,TABULATION:9,CARRIAGE_RETURN:13,LINE_FEED:10,FORM_FEED:12,SPACE:32,EXCLAMATION_MARK:33,QUOTATION_MARK:34,NUMBER_SIGN:35,AMPERSAND:38,APOSTROPHE:39,HYPHEN_MINUS:45,SOLIDUS:47,DIGIT_0:48,DIGIT_9:57,SEMICOLON:59,LESS_THAN_SIGN:60,EQUALS_SIGN:61,GREATER_THAN_SIGN:62,QUESTION_MARK:63,LATIN_CAPITAL_A:65,LATIN_CAPITAL_F:70,LATIN_CAPITAL_X:88,LATIN_CAPITAL_Z:90,RIGHT_SQUARE_BRACKET:93,GRAVE_ACCENT:96,LATIN_SMALL_A:97,LATIN_SMALL_F:102,LATIN_SMALL_X:120,LATIN_SMALL_Z:122,REPLACEMENT_CHARACTER:65533};cn.CODE_POINT_SEQUENCES={DASH_DASH_STRING:[45,45],DOCTYPE_STRING:[68,79,67,84,89,80,69],CDATA_START_STRING:[91,67,68,65,84,65,91],SCRIPT_STRING:[115,99,114,105,112,116],PUBLIC_STRING:[80,85,66,76,73,67],SYSTEM_STRING:[83,89,83,84,69,77]};cn.isSurrogate=function(t){return t>=55296&&t<=57343};cn.isSurrogatePair=function(t){return t>=56320&&t<=57343};cn.getSurrogatePairCodePoint=function(t,n){return(t-55296)*1024+9216+n};cn.isControlCodePoint=function(t){return t!==32&&t!==10&&t!==13&&t!==9&&t!==12&&t>=1&&t<=31||t>=127&&t<=159};cn.isUndefinedCodePoint=function(t){return t>=64976&&t<=65007||W_.indexOf(t)>-1};var L1={controlCharacterInInputStream:"control-character-in-input-stream",noncharacterInInputStream:"noncharacter-in-input-stream",surrogateInInputStream:"surrogate-in-input-stream",nonVoidHtmlElementStartTagWithTrailingSolidus:"non-void-html-element-start-tag-with-trailing-solidus",endTagWithAttributes:"end-tag-with-attributes",endTagWithTrailingSolidus:"end-tag-with-trailing-solidus",unexpectedSolidusInTag:"unexpected-solidus-in-tag",unexpectedNullCharacter:"unexpected-null-character",unexpectedQuestionMarkInsteadOfTagName:"unexpected-question-mark-instead-of-tag-name",invalidFirstCharacterOfTagName:"invalid-first-character-of-tag-name",unexpectedEqualsSignBeforeAttributeName:"unexpected-equals-sign-before-attribute-name",missingEndTagName:"missing-end-tag-name",unexpectedCharacterInAttributeName:"unexpected-character-in-attribute-name",unknownNamedCharacterReference:"unknown-named-character-reference",missingSemicolonAfterCharacterReference:"missing-semicolon-after-character-reference",unexpectedCharacterAfterDoctypeSystemIdentifier:"unexpected-character-after-doctype-system-identifier",unexpectedCharacterInUnquotedAttributeValue:"unexpected-character-in-unquoted-attribute-value",eofBeforeTagName:"eof-before-tag-name",eofInTag:"eof-in-tag",missingAttributeValue:"missing-attribute-value",missingWhitespaceBetweenAttributes:"missing-whitespace-between-attributes",missingWhitespaceAfterDoctypePublicKeyword:"missing-whitespace-after-doctype-public-keyword",missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers:"missing-whitespace-between-doctype-public-and-system-identifiers",missingWhitespaceAfterDoctypeSystemKeyword:"missing-whitespace-after-doctype-system-keyword",missingQuoteBeforeDoctypePublicIdentifier:"missing-quote-before-doctype-public-identifier",missingQuoteBeforeDoctypeSystemIdentifier:"missing-quote-before-doctype-system-identifier",missingDoctypePublicIdentifier:"missing-doctype-public-identifier",missingDoctypeSystemIdentifier:"missing-doctype-system-identifier",abruptDoctypePublicIdentifier:"abrupt-doctype-public-identifier",abruptDoctypeSystemIdentifier:"abrupt-doctype-system-identifier",cdataInHtmlContent:"cdata-in-html-content",incorrectlyOpenedComment:"incorrectly-opened-comment",eofInScriptHtmlCommentLikeText:"eof-in-script-html-comment-like-text",eofInDoctype:"eof-in-doctype",nestedComment:"nested-comment",abruptClosingOfEmptyComment:"abrupt-closing-of-empty-comment",eofInComment:"eof-in-comment",incorrectlyClosedComment:"incorrectly-closed-comment",eofInCdata:"eof-in-cdata",absenceOfDigitsInNumericCharacterReference:"absence-of-digits-in-numeric-character-reference",nullCharacterReference:"null-character-reference",surrogateCharacterReference:"surrogate-character-reference",characterReferenceOutsideUnicodeRange:"character-reference-outside-unicode-range",controlCharacterReference:"control-character-reference",noncharacterCharacterReference:"noncharacter-character-reference",missingWhitespaceBeforeDoctypeName:"missing-whitespace-before-doctype-name",missingDoctypeName:"missing-doctype-name",invalidCharacterSequenceAfterDoctypeName:"invalid-character-sequence-after-doctype-name",duplicateAttribute:"duplicate-attribute",nonConformingDoctype:"non-conforming-doctype",missingDoctype:"missing-doctype",misplacedDoctype:"misplaced-doctype",endTagWithoutMatchingOpenElement:"end-tag-without-matching-open-element",closingOfElementWithOpenChildElements:"closing-of-element-with-open-child-elements",disallowedContentInNoscriptInHead:"disallowed-content-in-noscript-in-head",openElementsLeftAfterEof:"open-elements-left-after-eof",abandonedHeadElementChild:"abandoned-head-element-child",misplacedStartTagForHeadElement:"misplaced-start-tag-for-head-element",nestedNoscriptInHead:"nested-noscript-in-head",eofInElementThatCanContainOnlyText:"eof-in-element-that-can-contain-only-text"};const hs=cn,nd=L1,_r=hs.CODE_POINTS,V_=65536;let K_=class{constructor(){this.html=null,this.pos=-1,this.lastGapPos=-1,this.lastCharPos=-1,this.gapStack=[],this.skipNextNewLine=!1,this.lastChunkWritten=!1,this.endOfChunkHit=!1,this.bufferWaterline=V_}_err(){}_addGap(){this.gapStack.push(this.lastGapPos),this.lastGapPos=this.pos}_processSurrogate(n){if(this.pos!==this.lastCharPos){const r=this.html.charCodeAt(this.pos+1);if(hs.isSurrogatePair(r))return this.pos++,this._addGap(),hs.getSurrogatePairCodePoint(n,r)}else if(!this.lastChunkWritten)return this.endOfChunkHit=!0,_r.EOF;return this._err(nd.surrogateInInputStream),n}dropParsedChunk(){this.pos>this.bufferWaterline&&(this.lastCharPos-=this.pos,this.html=this.html.substring(this.pos),this.pos=0,this.lastGapPos=-1,this.gapStack=[])}write(n,r){this.html?this.html+=n:this.html=n,this.lastCharPos=this.html.length-1,this.endOfChunkHit=!1,this.lastChunkWritten=r}insertHtmlAtCurrentPos(n){this.html=this.html.substring(0,this.pos+1)+n+this.html.substring(this.pos+1,this.html.length),this.lastCharPos=this.html.length-1,this.endOfChunkHit=!1}advance(){if(this.pos++,this.pos>this.lastCharPos)return this.endOfChunkHit=!this.lastChunkWritten,_r.EOF;let n=this.html.charCodeAt(this.pos);return this.skipNextNewLine&&n===_r.LINE_FEED?(this.skipNextNewLine=!1,this._addGap(),this.advance()):n===_r.CARRIAGE_RETURN?(this.skipNextNewLine=!0,_r.LINE_FEED):(this.skipNextNewLine=!1,hs.isSurrogate(n)&&(n=this._processSurrogate(n)),n>31&&n<127||n===_r.LINE_FEED||n===_r.CARRIAGE_RETURN||n>159&&n<64976||this._checkForProblematicCharacters(n),n)}_checkForProblematicCharacters(n){hs.isControlCodePoint(n)?this._err(nd.controlCharacterInInputStream):hs.isUndefinedCodePoint(n)&&this._err(nd.noncharacterInInputStream)}retreat(){this.pos===this.lastGapPos&&(this.lastGapPos=this.gapStack.pop(),this.pos--),this.pos--}};var Y_=K_,q_=new Uint16Array([4,52,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,106,303,412,810,1432,1701,1796,1987,2114,2360,2420,2484,3170,3251,4140,4393,4575,4610,5106,5512,5728,6117,6274,6315,6345,6427,6516,7002,7910,8733,9323,9870,10170,10631,10893,11318,11386,11467,12773,13092,14474,14922,15448,15542,16419,17666,18166,18611,19004,19095,19298,19397,4,16,69,77,97,98,99,102,103,108,109,110,111,112,114,115,116,117,140,150,158,169,176,194,199,210,216,222,226,242,256,266,283,294,108,105,103,5,198,1,59,148,1,198,80,5,38,1,59,156,1,38,99,117,116,101,5,193,1,59,167,1,193,114,101,118,101,59,1,258,4,2,105,121,182,191,114,99,5,194,1,59,189,1,194,59,1,1040,114,59,3,55349,56580,114,97,118,101,5,192,1,59,208,1,192,112,104,97,59,1,913,97,99,114,59,1,256,100,59,1,10835,4,2,103,112,232,237,111,110,59,1,260,102,59,3,55349,56632,112,108,121,70,117,110,99,116,105,111,110,59,1,8289,105,110,103,5,197,1,59,264,1,197,4,2,99,115,272,277,114,59,3,55349,56476,105,103,110,59,1,8788,105,108,100,101,5,195,1,59,292,1,195,109,108,5,196,1,59,301,1,196,4,8,97,99,101,102,111,114,115,117,321,350,354,383,388,394,400,405,4,2,99,114,327,336,107,115,108,97,115,104,59,1,8726,4,2,118,119,342,345,59,1,10983,101,100,59,1,8966,121,59,1,1041,4,3,99,114,116,362,369,379,97,117,115,101,59,1,8757,110,111,117,108,108,105,115,59,1,8492,97,59,1,914,114,59,3,55349,56581,112,102,59,3,55349,56633,101,118,101,59,1,728,99,114,59,1,8492,109,112,101,113,59,1,8782,4,14,72,79,97,99,100,101,102,104,105,108,111,114,115,117,442,447,456,504,542,547,569,573,577,616,678,784,790,796,99,121,59,1,1063,80,89,5,169,1,59,454,1,169,4,3,99,112,121,464,470,497,117,116,101,59,1,262,4,2,59,105,476,478,1,8914,116,97,108,68,105,102,102,101,114,101,110,116,105,97,108,68,59,1,8517,108,101,121,115,59,1,8493,4,4,97,101,105,111,514,520,530,535,114,111,110,59,1,268,100,105,108,5,199,1,59,528,1,199,114,99,59,1,264,110,105,110,116,59,1,8752,111,116,59,1,266,4,2,100,110,553,560,105,108,108,97,59,1,184,116,101,114,68,111,116,59,1,183,114,59,1,8493,105,59,1,935,114,99,108,101,4,4,68,77,80,84,591,596,603,609,111,116,59,1,8857,105,110,117,115,59,1,8854,108,117,115,59,1,8853,105,109,101,115,59,1,8855,111,4,2,99,115,623,646,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8754,101,67,117,114,108,121,4,2,68,81,658,671,111,117,98,108,101,81,117,111,116,101,59,1,8221,117,111,116,101,59,1,8217,4,4,108,110,112,117,688,701,736,753,111,110,4,2,59,101,696,698,1,8759,59,1,10868,4,3,103,105,116,709,717,722,114,117,101,110,116,59,1,8801,110,116,59,1,8751,111,117,114,73,110,116,101,103,114,97,108,59,1,8750,4,2,102,114,742,745,59,1,8450,111,100,117,99,116,59,1,8720,110,116,101,114,67,108,111,99,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8755,111,115,115,59,1,10799,99,114,59,3,55349,56478,112,4,2,59,67,803,805,1,8915,97,112,59,1,8781,4,11,68,74,83,90,97,99,101,102,105,111,115,834,850,855,860,865,888,903,916,921,1011,1415,4,2,59,111,840,842,1,8517,116,114,97,104,100,59,1,10513,99,121,59,1,1026,99,121,59,1,1029,99,121,59,1,1039,4,3,103,114,115,873,879,883,103,101,114,59,1,8225,114,59,1,8609,104,118,59,1,10980,4,2,97,121,894,900,114,111,110,59,1,270,59,1,1044,108,4,2,59,116,910,912,1,8711,97,59,1,916,114,59,3,55349,56583,4,2,97,102,927,998,4,2,99,109,933,992,114,105,116,105,99,97,108,4,4,65,68,71,84,950,957,978,985,99,117,116,101,59,1,180,111,4,2,116,117,964,967,59,1,729,98,108,101,65,99,117,116,101,59,1,733,114,97,118,101,59,1,96,105,108,100,101,59,1,732,111,110,100,59,1,8900,102,101,114,101,110,116,105,97,108,68,59,1,8518,4,4,112,116,117,119,1021,1026,1048,1249,102,59,3,55349,56635,4,3,59,68,69,1034,1036,1041,1,168,111,116,59,1,8412,113,117,97,108,59,1,8784,98,108,101,4,6,67,68,76,82,85,86,1065,1082,1101,1189,1211,1236,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8751,111,4,2,116,119,1089,1092,59,1,168,110,65,114,114,111,119,59,1,8659,4,2,101,111,1107,1141,102,116,4,3,65,82,84,1117,1124,1136,114,114,111,119,59,1,8656,105,103,104,116,65,114,114,111,119,59,1,8660,101,101,59,1,10980,110,103,4,2,76,82,1149,1177,101,102,116,4,2,65,82,1158,1165,114,114,111,119,59,1,10232,105,103,104,116,65,114,114,111,119,59,1,10234,105,103,104,116,65,114,114,111,119,59,1,10233,105,103,104,116,4,2,65,84,1199,1206,114,114,111,119,59,1,8658,101,101,59,1,8872,112,4,2,65,68,1218,1225,114,114,111,119,59,1,8657,111,119,110,65,114,114,111,119,59,1,8661,101,114,116,105,99,97,108,66,97,114,59,1,8741,110,4,6,65,66,76,82,84,97,1264,1292,1299,1352,1391,1408,114,114,111,119,4,3,59,66,85,1276,1278,1283,1,8595,97,114,59,1,10515,112,65,114,114,111,119,59,1,8693,114,101,118,101,59,1,785,101,102,116,4,3,82,84,86,1310,1323,1334,105,103,104,116,86,101,99,116,111,114,59,1,10576,101,101,86,101,99,116,111,114,59,1,10590,101,99,116,111,114,4,2,59,66,1345,1347,1,8637,97,114,59,1,10582,105,103,104,116,4,2,84,86,1362,1373,101,101,86,101,99,116,111,114,59,1,10591,101,99,116,111,114,4,2,59,66,1384,1386,1,8641,97,114,59,1,10583,101,101,4,2,59,65,1399,1401,1,8868,114,114,111,119,59,1,8615,114,114,111,119,59,1,8659,4,2,99,116,1421,1426,114,59,3,55349,56479,114,111,107,59,1,272,4,16,78,84,97,99,100,102,103,108,109,111,112,113,115,116,117,120,1466,1470,1478,1489,1515,1520,1525,1536,1544,1593,1609,1617,1650,1664,1668,1677,71,59,1,330,72,5,208,1,59,1476,1,208,99,117,116,101,5,201,1,59,1487,1,201,4,3,97,105,121,1497,1503,1512,114,111,110,59,1,282,114,99,5,202,1,59,1510,1,202,59,1,1069,111,116,59,1,278,114,59,3,55349,56584,114,97,118,101,5,200,1,59,1534,1,200,101,109,101,110,116,59,1,8712,4,2,97,112,1550,1555,99,114,59,1,274,116,121,4,2,83,86,1563,1576,109,97,108,108,83,113,117,97,114,101,59,1,9723,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59,1,9643,4,2,103,112,1599,1604,111,110,59,1,280,102,59,3,55349,56636,115,105,108,111,110,59,1,917,117,4,2,97,105,1624,1640,108,4,2,59,84,1631,1633,1,10869,105,108,100,101,59,1,8770,108,105,98,114,105,117,109,59,1,8652,4,2,99,105,1656,1660,114,59,1,8496,109,59,1,10867,97,59,1,919,109,108,5,203,1,59,1675,1,203,4,2,105,112,1683,1689,115,116,115,59,1,8707,111,110,101,110,116,105,97,108,69,59,1,8519,4,5,99,102,105,111,115,1713,1717,1722,1762,1791,121,59,1,1060,114,59,3,55349,56585,108,108,101,100,4,2,83,86,1732,1745,109,97,108,108,83,113,117,97,114,101,59,1,9724,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59,1,9642,4,3,112,114,117,1770,1775,1781,102,59,3,55349,56637,65,108,108,59,1,8704,114,105,101,114,116,114,102,59,1,8497,99,114,59,1,8497,4,12,74,84,97,98,99,100,102,103,111,114,115,116,1822,1827,1834,1848,1855,1877,1882,1887,1890,1896,1978,1984,99,121,59,1,1027,5,62,1,59,1832,1,62,109,109,97,4,2,59,100,1843,1845,1,915,59,1,988,114,101,118,101,59,1,286,4,3,101,105,121,1863,1869,1874,100,105,108,59,1,290,114,99,59,1,284,59,1,1043,111,116,59,1,288,114,59,3,55349,56586,59,1,8921,112,102,59,3,55349,56638,101,97,116,101,114,4,6,69,70,71,76,83,84,1915,1933,1944,1953,1959,1971,113,117,97,108,4,2,59,76,1925,1927,1,8805,101,115,115,59,1,8923,117,108,108,69,113,117,97,108,59,1,8807,114,101,97,116,101,114,59,1,10914,101,115,115,59,1,8823,108,97,110,116,69,113,117,97,108,59,1,10878,105,108,100,101,59,1,8819,99,114,59,3,55349,56482,59,1,8811,4,8,65,97,99,102,105,111,115,117,2005,2012,2026,2032,2036,2049,2073,2089,82,68,99,121,59,1,1066,4,2,99,116,2018,2023,101,107,59,1,711,59,1,94,105,114,99,59,1,292,114,59,1,8460,108,98,101,114,116,83,112,97,99,101,59,1,8459,4,2,112,114,2055,2059,102,59,1,8461,105,122,111,110,116,97,108,76,105,110,101,59,1,9472,4,2,99,116,2079,2083,114,59,1,8459,114,111,107,59,1,294,109,112,4,2,68,69,2097,2107,111,119,110,72,117,109,112,59,1,8782,113,117,97,108,59,1,8783,4,14,69,74,79,97,99,100,102,103,109,110,111,115,116,117,2144,2149,2155,2160,2171,2189,2194,2198,2209,2245,2307,2329,2334,2341,99,121,59,1,1045,108,105,103,59,1,306,99,121,59,1,1025,99,117,116,101,5,205,1,59,2169,1,205,4,2,105,121,2177,2186,114,99,5,206,1,59,2184,1,206,59,1,1048,111,116,59,1,304,114,59,1,8465,114,97,118,101,5,204,1,59,2207,1,204,4,3,59,97,112,2217,2219,2238,1,8465,4,2,99,103,2225,2229,114,59,1,298,105,110,97,114,121,73,59,1,8520,108,105,101,115,59,1,8658,4,2,116,118,2251,2281,4,2,59,101,2257,2259,1,8748,4,2,103,114,2265,2271,114,97,108,59,1,8747,115,101,99,116,105,111,110,59,1,8898,105,115,105,98,108,101,4,2,67,84,2293,2300,111,109,109,97,59,1,8291,105,109,101,115,59,1,8290,4,3,103,112,116,2315,2320,2325,111,110,59,1,302,102,59,3,55349,56640,97,59,1,921,99,114,59,1,8464,105,108,100,101,59,1,296,4,2,107,109,2347,2352,99,121,59,1,1030,108,5,207,1,59,2358,1,207,4,5,99,102,111,115,117,2372,2386,2391,2397,2414,4,2,105,121,2378,2383,114,99,59,1,308,59,1,1049,114,59,3,55349,56589,112,102,59,3,55349,56641,4,2,99,101,2403,2408,114,59,3,55349,56485,114,99,121,59,1,1032,107,99,121,59,1,1028,4,7,72,74,97,99,102,111,115,2436,2441,2446,2452,2467,2472,2478,99,121,59,1,1061,99,121,59,1,1036,112,112,97,59,1,922,4,2,101,121,2458,2464,100,105,108,59,1,310,59,1,1050,114,59,3,55349,56590,112,102,59,3,55349,56642,99,114,59,3,55349,56486,4,11,74,84,97,99,101,102,108,109,111,115,116,2508,2513,2520,2562,2585,2981,2986,3004,3011,3146,3167,99,121,59,1,1033,5,60,1,59,2518,1,60,4,5,99,109,110,112,114,2532,2538,2544,2548,2558,117,116,101,59,1,313,98,100,97,59,1,923,103,59,1,10218,108,97,99,101,116,114,102,59,1,8466,114,59,1,8606,4,3,97,101,121,2570,2576,2582,114,111,110,59,1,317,100,105,108,59,1,315,59,1,1051,4,2,102,115,2591,2907,116,4,10,65,67,68,70,82,84,85,86,97,114,2614,2663,2672,2728,2735,2760,2820,2870,2888,2895,4,2,110,114,2620,2633,103,108,101,66,114,97,99,107,101,116,59,1,10216,114,111,119,4,3,59,66,82,2644,2646,2651,1,8592,97,114,59,1,8676,105,103,104,116,65,114,114,111,119,59,1,8646,101,105,108,105,110,103,59,1,8968,111,4,2,117,119,2679,2692,98,108,101,66,114,97,99,107,101,116,59,1,10214,110,4,2,84,86,2699,2710,101,101,86,101,99,116,111,114,59,1,10593,101,99,116,111,114,4,2,59,66,2721,2723,1,8643,97,114,59,1,10585,108,111,111,114,59,1,8970,105,103,104,116,4,2,65,86,2745,2752,114,114,111,119,59,1,8596,101,99,116,111,114,59,1,10574,4,2,101,114,2766,2792,101,4,3,59,65,86,2775,2777,2784,1,8867,114,114,111,119,59,1,8612,101,99,116,111,114,59,1,10586,105,97,110,103,108,101,4,3,59,66,69,2806,2808,2813,1,8882,97,114,59,1,10703,113,117,97,108,59,1,8884,112,4,3,68,84,86,2829,2841,2852,111,119,110,86,101,99,116,111,114,59,1,10577,101,101,86,101,99,116,111,114,59,1,10592,101,99,116,111,114,4,2,59,66,2863,2865,1,8639,97,114,59,1,10584,101,99,116,111,114,4,2,59,66,2881,2883,1,8636,97,114,59,1,10578,114,114,111,119,59,1,8656,105,103,104,116,97,114,114,111,119,59,1,8660,115,4,6,69,70,71,76,83,84,2922,2936,2947,2956,2962,2974,113,117,97,108,71,114,101,97,116,101,114,59,1,8922,117,108,108,69,113,117,97,108,59,1,8806,114,101,97,116,101,114,59,1,8822,101,115,115,59,1,10913,108,97,110,116,69,113,117,97,108,59,1,10877,105,108,100,101,59,1,8818,114,59,3,55349,56591,4,2,59,101,2992,2994,1,8920,102,116,97,114,114,111,119,59,1,8666,105,100,111,116,59,1,319,4,3,110,112,119,3019,3110,3115,103,4,4,76,82,108,114,3030,3058,3070,3098,101,102,116,4,2,65,82,3039,3046,114,114,111,119,59,1,10229,105,103,104,116,65,114,114,111,119,59,1,10231,105,103,104,116,65,114,114,111,119,59,1,10230,101,102,116,4,2,97,114,3079,3086,114,114,111,119,59,1,10232,105,103,104,116,97,114,114,111,119,59,1,10234,105,103,104,116,97,114,114,111,119,59,1,10233,102,59,3,55349,56643,101,114,4,2,76,82,3123,3134,101,102,116,65,114,114,111,119,59,1,8601,105,103,104,116,65,114,114,111,119,59,1,8600,4,3,99,104,116,3154,3158,3161,114,59,1,8466,59,1,8624,114,111,107,59,1,321,59,1,8810,4,8,97,99,101,102,105,111,115,117,3188,3192,3196,3222,3227,3237,3243,3248,112,59,1,10501,121,59,1,1052,4,2,100,108,3202,3213,105,117,109,83,112,97,99,101,59,1,8287,108,105,110,116,114,102,59,1,8499,114,59,3,55349,56592,110,117,115,80,108,117,115,59,1,8723,112,102,59,3,55349,56644,99,114,59,1,8499,59,1,924,4,9,74,97,99,101,102,111,115,116,117,3271,3276,3283,3306,3422,3427,4120,4126,4137,99,121,59,1,1034,99,117,116,101,59,1,323,4,3,97,101,121,3291,3297,3303,114,111,110,59,1,327,100,105,108,59,1,325,59,1,1053,4,3,103,115,119,3314,3380,3415,97,116,105,118,101,4,3,77,84,86,3327,3340,3365,101,100,105,117,109,83,112,97,99,101,59,1,8203,104,105,4,2,99,110,3348,3357,107,83,112,97,99,101,59,1,8203,83,112,97,99,101,59,1,8203,101,114,121,84,104,105,110,83,112,97,99,101,59,1,8203,116,101,100,4,2,71,76,3389,3405,114,101,97,116,101,114,71,114,101,97,116,101,114,59,1,8811,101,115,115,76,101,115,115,59,1,8810,76,105,110,101,59,1,10,114,59,3,55349,56593,4,4,66,110,112,116,3437,3444,3460,3464,114,101,97,107,59,1,8288,66,114,101,97,107,105,110,103,83,112,97,99,101,59,1,160,102,59,1,8469,4,13,59,67,68,69,71,72,76,78,80,82,83,84,86,3492,3494,3517,3536,3578,3657,3685,3784,3823,3860,3915,4066,4107,1,10988,4,2,111,117,3500,3510,110,103,114,117,101,110,116,59,1,8802,112,67,97,112,59,1,8813,111,117,98,108,101,86,101,114,116,105,99,97,108,66,97,114,59,1,8742,4,3,108,113,120,3544,3552,3571,101,109,101,110,116,59,1,8713,117,97,108,4,2,59,84,3561,3563,1,8800,105,108,100,101,59,3,8770,824,105,115,116,115,59,1,8708,114,101,97,116,101,114,4,7,59,69,70,71,76,83,84,3600,3602,3609,3621,3631,3637,3650,1,8815,113,117,97,108,59,1,8817,117,108,108,69,113,117,97,108,59,3,8807,824,114,101,97,116,101,114,59,3,8811,824,101,115,115,59,1,8825,108,97,110,116,69,113,117,97,108,59,3,10878,824,105,108,100,101,59,1,8821,117,109,112,4,2,68,69,3666,3677,111,119,110,72,117,109,112,59,3,8782,824,113,117,97,108,59,3,8783,824,101,4,2,102,115,3692,3724,116,84,114,105,97,110,103,108,101,4,3,59,66,69,3709,3711,3717,1,8938,97,114,59,3,10703,824,113,117,97,108,59,1,8940,115,4,6,59,69,71,76,83,84,3739,3741,3748,3757,3764,3777,1,8814,113,117,97,108,59,1,8816,114,101,97,116,101,114,59,1,8824,101,115,115,59,3,8810,824,108,97,110,116,69,113,117,97,108,59,3,10877,824,105,108,100,101,59,1,8820,101,115,116,101,100,4,2,71,76,3795,3812,114,101,97,116,101,114,71,114,101,97,116,101,114,59,3,10914,824,101,115,115,76,101,115,115,59,3,10913,824,114,101,99,101,100,101,115,4,3,59,69,83,3838,3840,3848,1,8832,113,117,97,108,59,3,10927,824,108,97,110,116,69,113,117,97,108,59,1,8928,4,2,101,105,3866,3881,118,101,114,115,101,69,108,101,109,101,110,116,59,1,8716,103,104,116,84,114,105,97,110,103,108,101,4,3,59,66,69,3900,3902,3908,1,8939,97,114,59,3,10704,824,113,117,97,108,59,1,8941,4,2,113,117,3921,3973,117,97,114,101,83,117,4,2,98,112,3933,3952,115,101,116,4,2,59,69,3942,3945,3,8847,824,113,117,97,108,59,1,8930,101,114,115,101,116,4,2,59,69,3963,3966,3,8848,824,113,117,97,108,59,1,8931,4,3,98,99,112,3981,4e3,4045,115,101,116,4,2,59,69,3990,3993,3,8834,8402,113,117,97,108,59,1,8840,99,101,101,100,115,4,4,59,69,83,84,4015,4017,4025,4037,1,8833,113,117,97,108,59,3,10928,824,108,97,110,116,69,113,117,97,108,59,1,8929,105,108,100,101,59,3,8831,824,101,114,115,101,116,4,2,59,69,4056,4059,3,8835,8402,113,117,97,108,59,1,8841,105,108,100,101,4,4,59,69,70,84,4080,4082,4089,4100,1,8769,113,117,97,108,59,1,8772,117,108,108,69,113,117,97,108,59,1,8775,105,108,100,101,59,1,8777,101,114,116,105,99,97,108,66,97,114,59,1,8740,99,114,59,3,55349,56489,105,108,100,101,5,209,1,59,4135,1,209,59,1,925,4,14,69,97,99,100,102,103,109,111,112,114,115,116,117,118,4170,4176,4187,4205,4212,4217,4228,4253,4259,4292,4295,4316,4337,4346,108,105,103,59,1,338,99,117,116,101,5,211,1,59,4185,1,211,4,2,105,121,4193,4202,114,99,5,212,1,59,4200,1,212,59,1,1054,98,108,97,99,59,1,336,114,59,3,55349,56594,114,97,118,101,5,210,1,59,4226,1,210,4,3,97,101,105,4236,4241,4246,99,114,59,1,332,103,97,59,1,937,99,114,111,110,59,1,927,112,102,59,3,55349,56646,101,110,67,117,114,108,121,4,2,68,81,4272,4285,111,117,98,108,101,81,117,111,116,101,59,1,8220,117,111,116,101,59,1,8216,59,1,10836,4,2,99,108,4301,4306,114,59,3,55349,56490,97,115,104,5,216,1,59,4314,1,216,105,4,2,108,109,4323,4332,100,101,5,213,1,59,4330,1,213,101,115,59,1,10807,109,108,5,214,1,59,4344,1,214,101,114,4,2,66,80,4354,4380,4,2,97,114,4360,4364,114,59,1,8254,97,99,4,2,101,107,4372,4375,59,1,9182,101,116,59,1,9140,97,114,101,110,116,104,101,115,105,115,59,1,9180,4,9,97,99,102,104,105,108,111,114,115,4413,4422,4426,4431,4435,4438,4448,4471,4561,114,116,105,97,108,68,59,1,8706,121,59,1,1055,114,59,3,55349,56595,105,59,1,934,59,1,928,117,115,77,105,110,117,115,59,1,177,4,2,105,112,4454,4467,110,99,97,114,101,112,108,97,110,101,59,1,8460,102,59,1,8473,4,4,59,101,105,111,4481,4483,4526,4531,1,10939,99,101,100,101,115,4,4,59,69,83,84,4498,4500,4507,4519,1,8826,113,117,97,108,59,1,10927,108,97,110,116,69,113,117,97,108,59,1,8828,105,108,100,101,59,1,8830,109,101,59,1,8243,4,2,100,112,4537,4543,117,99,116,59,1,8719,111,114,116,105,111,110,4,2,59,97,4555,4557,1,8759,108,59,1,8733,4,2,99,105,4567,4572,114,59,3,55349,56491,59,1,936,4,4,85,102,111,115,4585,4594,4599,4604,79,84,5,34,1,59,4592,1,34,114,59,3,55349,56596,112,102,59,1,8474,99,114,59,3,55349,56492,4,12,66,69,97,99,101,102,104,105,111,114,115,117,4636,4642,4650,4681,4704,4763,4767,4771,5047,5069,5081,5094,97,114,114,59,1,10512,71,5,174,1,59,4648,1,174,4,3,99,110,114,4658,4664,4668,117,116,101,59,1,340,103,59,1,10219,114,4,2,59,116,4675,4677,1,8608,108,59,1,10518,4,3,97,101,121,4689,4695,4701,114,111,110,59,1,344,100,105,108,59,1,342,59,1,1056,4,2,59,118,4710,4712,1,8476,101,114,115,101,4,2,69,85,4722,4748,4,2,108,113,4728,4736,101,109,101,110,116,59,1,8715,117,105,108,105,98,114,105,117,109,59,1,8651,112,69,113,117,105,108,105,98,114,105,117,109,59,1,10607,114,59,1,8476,111,59,1,929,103,104,116,4,8,65,67,68,70,84,85,86,97,4792,4840,4849,4905,4912,4972,5022,5040,4,2,110,114,4798,4811,103,108,101,66,114,97,99,107,101,116,59,1,10217,114,111,119,4,3,59,66,76,4822,4824,4829,1,8594,97,114,59,1,8677,101,102,116,65,114,114,111,119,59,1,8644,101,105,108,105,110,103,59,1,8969,111,4,2,117,119,4856,4869,98,108,101,66,114,97,99,107,101,116,59,1,10215,110,4,2,84,86,4876,4887,101,101,86,101,99,116,111,114,59,1,10589,101,99,116,111,114,4,2,59,66,4898,4900,1,8642,97,114,59,1,10581,108,111,111,114,59,1,8971,4,2,101,114,4918,4944,101,4,3,59,65,86,4927,4929,4936,1,8866,114,114,111,119,59,1,8614,101,99,116,111,114,59,1,10587,105,97,110,103,108,101,4,3,59,66,69,4958,4960,4965,1,8883,97,114,59,1,10704,113,117,97,108,59,1,8885,112,4,3,68,84,86,4981,4993,5004,111,119,110,86,101,99,116,111,114,59,1,10575,101,101,86,101,99,116,111,114,59,1,10588,101,99,116,111,114,4,2,59,66,5015,5017,1,8638,97,114,59,1,10580,101,99,116,111,114,4,2,59,66,5033,5035,1,8640,97,114,59,1,10579,114,114,111,119,59,1,8658,4,2,112,117,5053,5057,102,59,1,8477,110,100,73,109,112,108,105,101,115,59,1,10608,105,103,104,116,97,114,114,111,119,59,1,8667,4,2,99,104,5087,5091,114,59,1,8475,59,1,8625,108,101,68,101,108,97,121,101,100,59,1,10740,4,13,72,79,97,99,102,104,105,109,111,113,115,116,117,5134,5150,5157,5164,5198,5203,5259,5265,5277,5283,5374,5380,5385,4,2,67,99,5140,5146,72,99,121,59,1,1065,121,59,1,1064,70,84,99,121,59,1,1068,99,117,116,101,59,1,346,4,5,59,97,101,105,121,5176,5178,5184,5190,5195,1,10940,114,111,110,59,1,352,100,105,108,59,1,350,114,99,59,1,348,59,1,1057,114,59,3,55349,56598,111,114,116,4,4,68,76,82,85,5216,5227,5238,5250,111,119,110,65,114,114,111,119,59,1,8595,101,102,116,65,114,114,111,119,59,1,8592,105,103,104,116,65,114,114,111,119,59,1,8594,112,65,114,114,111,119,59,1,8593,103,109,97,59,1,931,97,108,108,67,105,114,99,108,101,59,1,8728,112,102,59,3,55349,56650,4,2,114,117,5289,5293,116,59,1,8730,97,114,101,4,4,59,73,83,85,5306,5308,5322,5367,1,9633,110,116,101,114,115,101,99,116,105,111,110,59,1,8851,117,4,2,98,112,5329,5347,115,101,116,4,2,59,69,5338,5340,1,8847,113,117,97,108,59,1,8849,101,114,115,101,116,4,2,59,69,5358,5360,1,8848,113,117,97,108,59,1,8850,110,105,111,110,59,1,8852,99,114,59,3,55349,56494,97,114,59,1,8902,4,4,98,99,109,112,5395,5420,5475,5478,4,2,59,115,5401,5403,1,8912,101,116,4,2,59,69,5411,5413,1,8912,113,117,97,108,59,1,8838,4,2,99,104,5426,5468,101,101,100,115,4,4,59,69,83,84,5440,5442,5449,5461,1,8827,113,117,97,108,59,1,10928,108,97,110,116,69,113,117,97,108,59,1,8829,105,108,100,101,59,1,8831,84,104,97,116,59,1,8715,59,1,8721,4,3,59,101,115,5486,5488,5507,1,8913,114,115,101,116,4,2,59,69,5498,5500,1,8835,113,117,97,108,59,1,8839,101,116,59,1,8913,4,11,72,82,83,97,99,102,104,105,111,114,115,5536,5546,5552,5567,5579,5602,5607,5655,5695,5701,5711,79,82,78,5,222,1,59,5544,1,222,65,68,69,59,1,8482,4,2,72,99,5558,5563,99,121,59,1,1035,121,59,1,1062,4,2,98,117,5573,5576,59,1,9,59,1,932,4,3,97,101,121,5587,5593,5599,114,111,110,59,1,356,100,105,108,59,1,354,59,1,1058,114,59,3,55349,56599,4,2,101,105,5613,5631,4,2,114,116,5619,5627,101,102,111,114,101,59,1,8756,97,59,1,920,4,2,99,110,5637,5647,107,83,112,97,99,101,59,3,8287,8202,83,112,97,99,101,59,1,8201,108,100,101,4,4,59,69,70,84,5668,5670,5677,5688,1,8764,113,117,97,108,59,1,8771,117,108,108,69,113,117,97,108,59,1,8773,105,108,100,101,59,1,8776,112,102,59,3,55349,56651,105,112,108,101,68,111,116,59,1,8411,4,2,99,116,5717,5722,114,59,3,55349,56495,114,111,107,59,1,358,4,14,97,98,99,100,102,103,109,110,111,112,114,115,116,117,5758,5789,5805,5823,5830,5835,5846,5852,5921,5937,6089,6095,6101,6108,4,2,99,114,5764,5774,117,116,101,5,218,1,59,5772,1,218,114,4,2,59,111,5781,5783,1,8607,99,105,114,59,1,10569,114,4,2,99,101,5796,5800,121,59,1,1038,118,101,59,1,364,4,2,105,121,5811,5820,114,99,5,219,1,59,5818,1,219,59,1,1059,98,108,97,99,59,1,368,114,59,3,55349,56600,114,97,118,101,5,217,1,59,5844,1,217,97,99,114,59,1,362,4,2,100,105,5858,5905,101,114,4,2,66,80,5866,5892,4,2,97,114,5872,5876,114,59,1,95,97,99,4,2,101,107,5884,5887,59,1,9183,101,116,59,1,9141,97,114,101,110,116,104,101,115,105,115,59,1,9181,111,110,4,2,59,80,5913,5915,1,8899,108,117,115,59,1,8846,4,2,103,112,5927,5932,111,110,59,1,370,102,59,3,55349,56652,4,8,65,68,69,84,97,100,112,115,5955,5985,5996,6009,6026,6033,6044,6075,114,114,111,119,4,3,59,66,68,5967,5969,5974,1,8593,97,114,59,1,10514,111,119,110,65,114,114,111,119,59,1,8645,111,119,110,65,114,114,111,119,59,1,8597,113,117,105,108,105,98,114,105,117,109,59,1,10606,101,101,4,2,59,65,6017,6019,1,8869,114,114,111,119,59,1,8613,114,114,111,119,59,1,8657,111,119,110,97,114,114,111,119,59,1,8661,101,114,4,2,76,82,6052,6063,101,102,116,65,114,114,111,119,59,1,8598,105,103,104,116,65,114,114,111,119,59,1,8599,105,4,2,59,108,6082,6084,1,978,111,110,59,1,933,105,110,103,59,1,366,99,114,59,3,55349,56496,105,108,100,101,59,1,360,109,108,5,220,1,59,6115,1,220,4,9,68,98,99,100,101,102,111,115,118,6137,6143,6148,6152,6166,6250,6255,6261,6267,97,115,104,59,1,8875,97,114,59,1,10987,121,59,1,1042,97,115,104,4,2,59,108,6161,6163,1,8873,59,1,10982,4,2,101,114,6172,6175,59,1,8897,4,3,98,116,121,6183,6188,6238,97,114,59,1,8214,4,2,59,105,6194,6196,1,8214,99,97,108,4,4,66,76,83,84,6209,6214,6220,6231,97,114,59,1,8739,105,110,101,59,1,124,101,112,97,114,97,116,111,114,59,1,10072,105,108,100,101,59,1,8768,84,104,105,110,83,112,97,99,101,59,1,8202,114,59,3,55349,56601,112,102,59,3,55349,56653,99,114,59,3,55349,56497,100,97,115,104,59,1,8874,4,5,99,101,102,111,115,6286,6292,6298,6303,6309,105,114,99,59,1,372,100,103,101,59,1,8896,114,59,3,55349,56602,112,102,59,3,55349,56654,99,114,59,3,55349,56498,4,4,102,105,111,115,6325,6330,6333,6339,114,59,3,55349,56603,59,1,926,112,102,59,3,55349,56655,99,114,59,3,55349,56499,4,9,65,73,85,97,99,102,111,115,117,6365,6370,6375,6380,6391,6405,6410,6416,6422,99,121,59,1,1071,99,121,59,1,1031,99,121,59,1,1070,99,117,116,101,5,221,1,59,6389,1,221,4,2,105,121,6397,6402,114,99,59,1,374,59,1,1067,114,59,3,55349,56604,112,102,59,3,55349,56656,99,114,59,3,55349,56500,109,108,59,1,376,4,8,72,97,99,100,101,102,111,115,6445,6450,6457,6472,6477,6501,6505,6510,99,121,59,1,1046,99,117,116,101,59,1,377,4,2,97,121,6463,6469,114,111,110,59,1,381,59,1,1047,111,116,59,1,379,4,2,114,116,6483,6497,111,87,105,100,116,104,83,112,97,99,101,59,1,8203,97,59,1,918,114,59,1,8488,112,102,59,1,8484,99,114,59,3,55349,56501,4,16,97,98,99,101,102,103,108,109,110,111,112,114,115,116,117,119,6550,6561,6568,6612,6622,6634,6645,6672,6699,6854,6870,6923,6933,6963,6974,6983,99,117,116,101,5,225,1,59,6559,1,225,114,101,118,101,59,1,259,4,6,59,69,100,105,117,121,6582,6584,6588,6591,6600,6609,1,8766,59,3,8766,819,59,1,8767,114,99,5,226,1,59,6598,1,226,116,101,5,180,1,59,6607,1,180,59,1,1072,108,105,103,5,230,1,59,6620,1,230,4,2,59,114,6628,6630,1,8289,59,3,55349,56606,114,97,118,101,5,224,1,59,6643,1,224,4,2,101,112,6651,6667,4,2,102,112,6657,6663,115,121,109,59,1,8501,104,59,1,8501,104,97,59,1,945,4,2,97,112,6678,6692,4,2,99,108,6684,6688,114,59,1,257,103,59,1,10815,5,38,1,59,6697,1,38,4,2,100,103,6705,6737,4,5,59,97,100,115,118,6717,6719,6724,6727,6734,1,8743,110,100,59,1,10837,59,1,10844,108,111,112,101,59,1,10840,59,1,10842,4,7,59,101,108,109,114,115,122,6753,6755,6758,6762,6814,6835,6848,1,8736,59,1,10660,101,59,1,8736,115,100,4,2,59,97,6770,6772,1,8737,4,8,97,98,99,100,101,102,103,104,6790,6793,6796,6799,6802,6805,6808,6811,59,1,10664,59,1,10665,59,1,10666,59,1,10667,59,1,10668,59,1,10669,59,1,10670,59,1,10671,116,4,2,59,118,6821,6823,1,8735,98,4,2,59,100,6830,6832,1,8894,59,1,10653,4,2,112,116,6841,6845,104,59,1,8738,59,1,197,97,114,114,59,1,9084,4,2,103,112,6860,6865,111,110,59,1,261,102,59,3,55349,56658,4,7,59,69,97,101,105,111,112,6886,6888,6891,6897,6900,6904,6908,1,8776,59,1,10864,99,105,114,59,1,10863,59,1,8778,100,59,1,8779,115,59,1,39,114,111,120,4,2,59,101,6917,6919,1,8776,113,59,1,8778,105,110,103,5,229,1,59,6931,1,229,4,3,99,116,121,6941,6946,6949,114,59,3,55349,56502,59,1,42,109,112,4,2,59,101,6957,6959,1,8776,113,59,1,8781,105,108,100,101,5,227,1,59,6972,1,227,109,108,5,228,1,59,6981,1,228,4,2,99,105,6989,6997,111,110,105,110,116,59,1,8755,110,116,59,1,10769,4,16,78,97,98,99,100,101,102,105,107,108,110,111,112,114,115,117,7036,7041,7119,7135,7149,7155,7219,7224,7347,7354,7463,7489,7786,7793,7814,7866,111,116,59,1,10989,4,2,99,114,7047,7094,107,4,4,99,101,112,115,7058,7064,7073,7080,111,110,103,59,1,8780,112,115,105,108,111,110,59,1,1014,114,105,109,101,59,1,8245,105,109,4,2,59,101,7088,7090,1,8765,113,59,1,8909,4,2,118,119,7100,7105,101,101,59,1,8893,101,100,4,2,59,103,7113,7115,1,8965,101,59,1,8965,114,107,4,2,59,116,7127,7129,1,9141,98,114,107,59,1,9142,4,2,111,121,7141,7146,110,103,59,1,8780,59,1,1073,113,117,111,59,1,8222,4,5,99,109,112,114,116,7167,7181,7188,7193,7199,97,117,115,4,2,59,101,7176,7178,1,8757,59,1,8757,112,116,121,118,59,1,10672,115,105,59,1,1014,110,111,117,59,1,8492,4,3,97,104,119,7207,7210,7213,59,1,946,59,1,8502,101,101,110,59,1,8812,114,59,3,55349,56607,103,4,7,99,111,115,116,117,118,119,7241,7262,7288,7305,7328,7335,7340,4,3,97,105,117,7249,7253,7258,112,59,1,8898,114,99,59,1,9711,112,59,1,8899,4,3,100,112,116,7270,7275,7281,111,116,59,1,10752,108,117,115,59,1,10753,105,109,101,115,59,1,10754,4,2,113,116,7294,7300,99,117,112,59,1,10758,97,114,59,1,9733,114,105,97,110,103,108,101,4,2,100,117,7318,7324,111,119,110,59,1,9661,112,59,1,9651,112,108,117,115,59,1,10756,101,101,59,1,8897,101,100,103,101,59,1,8896,97,114,111,119,59,1,10509,4,3,97,107,111,7362,7436,7458,4,2,99,110,7368,7432,107,4,3,108,115,116,7377,7386,7394,111,122,101,110,103,101,59,1,10731,113,117,97,114,101,59,1,9642,114,105,97,110,103,108,101,4,4,59,100,108,114,7411,7413,7419,7425,1,9652,111,119,110,59,1,9662,101,102,116,59,1,9666,105,103,104,116,59,1,9656,107,59,1,9251,4,2,49,51,7442,7454,4,2,50,52,7448,7451,59,1,9618,59,1,9617,52,59,1,9619,99,107,59,1,9608,4,2,101,111,7469,7485,4,2,59,113,7475,7478,3,61,8421,117,105,118,59,3,8801,8421,116,59,1,8976,4,4,112,116,119,120,7499,7504,7517,7523,102,59,3,55349,56659,4,2,59,116,7510,7512,1,8869,111,109,59,1,8869,116,105,101,59,1,8904,4,12,68,72,85,86,98,100,104,109,112,116,117,118,7549,7571,7597,7619,7655,7660,7682,7708,7715,7721,7728,7750,4,4,76,82,108,114,7559,7562,7565,7568,59,1,9559,59,1,9556,59,1,9558,59,1,9555,4,5,59,68,85,100,117,7583,7585,7588,7591,7594,1,9552,59,1,9574,59,1,9577,59,1,9572,59,1,9575,4,4,76,82,108,114,7607,7610,7613,7616,59,1,9565,59,1,9562,59,1,9564,59,1,9561,4,7,59,72,76,82,104,108,114,7635,7637,7640,7643,7646,7649,7652,1,9553,59,1,9580,59,1,9571,59,1,9568,59,1,9579,59,1,9570,59,1,9567,111,120,59,1,10697,4,4,76,82,108,114,7670,7673,7676,7679,59,1,9557,59,1,9554,59,1,9488,59,1,9484,4,5,59,68,85,100,117,7694,7696,7699,7702,7705,1,9472,59,1,9573,59,1,9576,59,1,9516,59,1,9524,105,110,117,115,59,1,8863,108,117,115,59,1,8862,105,109,101,115,59,1,8864,4,4,76,82,108,114,7738,7741,7744,7747,59,1,9563,59,1,9560,59,1,9496,59,1,9492,4,7,59,72,76,82,104,108,114,7766,7768,7771,7774,7777,7780,7783,1,9474,59,1,9578,59,1,9569,59,1,9566,59,1,9532,59,1,9508,59,1,9500,114,105,109,101,59,1,8245,4,2,101,118,7799,7804,118,101,59,1,728,98,97,114,5,166,1,59,7812,1,166,4,4,99,101,105,111,7824,7829,7834,7846,114,59,3,55349,56503,109,105,59,1,8271,109,4,2,59,101,7841,7843,1,8765,59,1,8909,108,4,3,59,98,104,7855,7857,7860,1,92,59,1,10693,115,117,98,59,1,10184,4,2,108,109,7872,7885,108,4,2,59,101,7879,7881,1,8226,116,59,1,8226,112,4,3,59,69,101,7894,7896,7899,1,8782,59,1,10926,4,2,59,113,7905,7907,1,8783,59,1,8783,4,15,97,99,100,101,102,104,105,108,111,114,115,116,117,119,121,7942,8021,8075,8080,8121,8126,8157,8279,8295,8430,8446,8485,8491,8707,8726,4,3,99,112,114,7950,7956,8007,117,116,101,59,1,263,4,6,59,97,98,99,100,115,7970,7972,7977,7984,7998,8003,1,8745,110,100,59,1,10820,114,99,117,112,59,1,10825,4,2,97,117,7990,7994,112,59,1,10827,112,59,1,10823,111,116,59,1,10816,59,3,8745,65024,4,2,101,111,8013,8017,116,59,1,8257,110,59,1,711,4,4,97,101,105,117,8031,8046,8056,8061,4,2,112,114,8037,8041,115,59,1,10829,111,110,59,1,269,100,105,108,5,231,1,59,8054,1,231,114,99,59,1,265,112,115,4,2,59,115,8069,8071,1,10828,109,59,1,10832,111,116,59,1,267,4,3,100,109,110,8088,8097,8104,105,108,5,184,1,59,8095,1,184,112,116,121,118,59,1,10674,116,5,162,2,59,101,8112,8114,1,162,114,100,111,116,59,1,183,114,59,3,55349,56608,4,3,99,101,105,8134,8138,8154,121,59,1,1095,99,107,4,2,59,109,8146,8148,1,10003,97,114,107,59,1,10003,59,1,967,114,4,7,59,69,99,101,102,109,115,8174,8176,8179,8258,8261,8268,8273,1,9675,59,1,10691,4,3,59,101,108,8187,8189,8193,1,710,113,59,1,8791,101,4,2,97,100,8200,8223,114,114,111,119,4,2,108,114,8210,8216,101,102,116,59,1,8634,105,103,104,116,59,1,8635,4,5,82,83,97,99,100,8235,8238,8241,8246,8252,59,1,174,59,1,9416,115,116,59,1,8859,105,114,99,59,1,8858,97,115,104,59,1,8861,59,1,8791,110,105,110,116,59,1,10768,105,100,59,1,10991,99,105,114,59,1,10690,117,98,115,4,2,59,117,8288,8290,1,9827,105,116,59,1,9827,4,4,108,109,110,112,8305,8326,8376,8400,111,110,4,2,59,101,8313,8315,1,58,4,2,59,113,8321,8323,1,8788,59,1,8788,4,2,109,112,8332,8344,97,4,2,59,116,8339,8341,1,44,59,1,64,4,3,59,102,108,8352,8354,8358,1,8705,110,59,1,8728,101,4,2,109,120,8365,8371,101,110,116,59,1,8705,101,115,59,1,8450,4,2,103,105,8382,8395,4,2,59,100,8388,8390,1,8773,111,116,59,1,10861,110,116,59,1,8750,4,3,102,114,121,8408,8412,8417,59,3,55349,56660,111,100,59,1,8720,5,169,2,59,115,8424,8426,1,169,114,59,1,8471,4,2,97,111,8436,8441,114,114,59,1,8629,115,115,59,1,10007,4,2,99,117,8452,8457,114,59,3,55349,56504,4,2,98,112,8463,8474,4,2,59,101,8469,8471,1,10959,59,1,10961,4,2,59,101,8480,8482,1,10960,59,1,10962,100,111,116,59,1,8943,4,7,100,101,108,112,114,118,119,8507,8522,8536,8550,8600,8697,8702,97,114,114,4,2,108,114,8516,8519,59,1,10552,59,1,10549,4,2,112,115,8528,8532,114,59,1,8926,99,59,1,8927,97,114,114,4,2,59,112,8545,8547,1,8630,59,1,10557,4,6,59,98,99,100,111,115,8564,8566,8573,8587,8592,8596,1,8746,114,99,97,112,59,1,10824,4,2,97,117,8579,8583,112,59,1,10822,112,59,1,10826,111,116,59,1,8845,114,59,1,10821,59,3,8746,65024,4,4,97,108,114,118,8610,8623,8663,8672,114,114,4,2,59,109,8618,8620,1,8631,59,1,10556,121,4,3,101,118,119,8632,8651,8656,113,4,2,112,115,8639,8645,114,101,99,59,1,8926,117,99,99,59,1,8927,101,101,59,1,8910,101,100,103,101,59,1,8911,101,110,5,164,1,59,8670,1,164,101,97,114,114,111,119,4,2,108,114,8684,8690,101,102,116,59,1,8630,105,103,104,116,59,1,8631,101,101,59,1,8910,101,100,59,1,8911,4,2,99,105,8713,8721,111,110,105,110,116,59,1,8754,110,116,59,1,8753,108,99,116,121,59,1,9005,4,19,65,72,97,98,99,100,101,102,104,105,106,108,111,114,115,116,117,119,122,8773,8778,8783,8821,8839,8854,8887,8914,8930,8944,9036,9041,9058,9197,9227,9258,9281,9297,9305,114,114,59,1,8659,97,114,59,1,10597,4,4,103,108,114,115,8793,8799,8805,8809,103,101,114,59,1,8224,101,116,104,59,1,8504,114,59,1,8595,104,4,2,59,118,8816,8818,1,8208,59,1,8867,4,2,107,108,8827,8834,97,114,111,119,59,1,10511,97,99,59,1,733,4,2,97,121,8845,8851,114,111,110,59,1,271,59,1,1076,4,3,59,97,111,8862,8864,8880,1,8518,4,2,103,114,8870,8876,103,101,114,59,1,8225,114,59,1,8650,116,115,101,113,59,1,10871,4,3,103,108,109,8895,8902,8907,5,176,1,59,8900,1,176,116,97,59,1,948,112,116,121,118,59,1,10673,4,2,105,114,8920,8926,115,104,116,59,1,10623,59,3,55349,56609,97,114,4,2,108,114,8938,8941,59,1,8643,59,1,8642,4,5,97,101,103,115,118,8956,8986,8989,8996,9001,109,4,3,59,111,115,8965,8967,8983,1,8900,110,100,4,2,59,115,8975,8977,1,8900,117,105,116,59,1,9830,59,1,9830,59,1,168,97,109,109,97,59,1,989,105,110,59,1,8946,4,3,59,105,111,9009,9011,9031,1,247,100,101,5,247,2,59,111,9020,9022,1,247,110,116,105,109,101,115,59,1,8903,110,120,59,1,8903,99,121,59,1,1106,99,4,2,111,114,9048,9053,114,110,59,1,8990,111,112,59,1,8973,4,5,108,112,116,117,119,9070,9076,9081,9130,9144,108,97,114,59,1,36,102,59,3,55349,56661,4,5,59,101,109,112,115,9093,9095,9109,9116,9122,1,729,113,4,2,59,100,9102,9104,1,8784,111,116,59,1,8785,105,110,117,115,59,1,8760,108,117,115,59,1,8724,113,117,97,114,101,59,1,8865,98,108,101,98,97,114,119,101,100,103,101,59,1,8966,110,4,3,97,100,104,9153,9160,9172,114,114,111,119,59,1,8595,111,119,110,97,114,114,111,119,115,59,1,8650,97,114,112,111,111,110,4,2,108,114,9184,9190,101,102,116,59,1,8643,105,103,104,116,59,1,8642,4,2,98,99,9203,9211,107,97,114,111,119,59,1,10512,4,2,111,114,9217,9222,114,110,59,1,8991,111,112,59,1,8972,4,3,99,111,116,9235,9248,9252,4,2,114,121,9241,9245,59,3,55349,56505,59,1,1109,108,59,1,10742,114,111,107,59,1,273,4,2,100,114,9264,9269,111,116,59,1,8945,105,4,2,59,102,9276,9278,1,9663,59,1,9662,4,2,97,104,9287,9292,114,114,59,1,8693,97,114,59,1,10607,97,110,103,108,101,59,1,10662,4,2,99,105,9311,9315,121,59,1,1119,103,114,97,114,114,59,1,10239,4,18,68,97,99,100,101,102,103,108,109,110,111,112,113,114,115,116,117,120,9361,9376,9398,9439,9444,9447,9462,9495,9531,9585,9598,9614,9659,9755,9771,9792,9808,9826,4,2,68,111,9367,9372,111,116,59,1,10871,116,59,1,8785,4,2,99,115,9382,9392,117,116,101,5,233,1,59,9390,1,233,116,101,114,59,1,10862,4,4,97,105,111,121,9408,9414,9430,9436,114,111,110,59,1,283,114,4,2,59,99,9421,9423,1,8790,5,234,1,59,9428,1,234,108,111,110,59,1,8789,59,1,1101,111,116,59,1,279,59,1,8519,4,2,68,114,9453,9458,111,116,59,1,8786,59,3,55349,56610,4,3,59,114,115,9470,9472,9482,1,10906,97,118,101,5,232,1,59,9480,1,232,4,2,59,100,9488,9490,1,10902,111,116,59,1,10904,4,4,59,105,108,115,9505,9507,9515,9518,1,10905,110,116,101,114,115,59,1,9191,59,1,8467,4,2,59,100,9524,9526,1,10901,111,116,59,1,10903,4,3,97,112,115,9539,9544,9564,99,114,59,1,275,116,121,4,3,59,115,118,9554,9556,9561,1,8709,101,116,59,1,8709,59,1,8709,112,4,2,49,59,9571,9583,4,2,51,52,9577,9580,59,1,8196,59,1,8197,1,8195,4,2,103,115,9591,9594,59,1,331,112,59,1,8194,4,2,103,112,9604,9609,111,110,59,1,281,102,59,3,55349,56662,4,3,97,108,115,9622,9635,9640,114,4,2,59,115,9629,9631,1,8917,108,59,1,10723,117,115,59,1,10865,105,4,3,59,108,118,9649,9651,9656,1,949,111,110,59,1,949,59,1,1013,4,4,99,115,117,118,9669,9686,9716,9747,4,2,105,111,9675,9680,114,99,59,1,8790,108,111,110,59,1,8789,4,2,105,108,9692,9696,109,59,1,8770,97,110,116,4,2,103,108,9705,9710,116,114,59,1,10902,101,115,115,59,1,10901,4,3,97,101,105,9724,9729,9734,108,115,59,1,61,115,116,59,1,8799,118,4,2,59,68,9741,9743,1,8801,68,59,1,10872,112,97,114,115,108,59,1,10725,4,2,68,97,9761,9766,111,116,59,1,8787,114,114,59,1,10609,4,3,99,100,105,9779,9783,9788,114,59,1,8495,111,116,59,1,8784,109,59,1,8770,4,2,97,104,9798,9801,59,1,951,5,240,1,59,9806,1,240,4,2,109,114,9814,9822,108,5,235,1,59,9820,1,235,111,59,1,8364,4,3,99,105,112,9834,9838,9843,108,59,1,33,115,116,59,1,8707,4,2,101,111,9849,9859,99,116,97,116,105,111,110,59,1,8496,110,101,110,116,105,97,108,101,59,1,8519,4,12,97,99,101,102,105,106,108,110,111,112,114,115,9896,9910,9914,9921,9954,9960,9967,9989,9994,10027,10036,10164,108,108,105,110,103,100,111,116,115,101,113,59,1,8786,121,59,1,1092,109,97,108,101,59,1,9792,4,3,105,108,114,9929,9935,9950,108,105,103,59,1,64259,4,2,105,108,9941,9945,103,59,1,64256,105,103,59,1,64260,59,3,55349,56611,108,105,103,59,1,64257,108,105,103,59,3,102,106,4,3,97,108,116,9975,9979,9984,116,59,1,9837,105,103,59,1,64258,110,115,59,1,9649,111,102,59,1,402,4,2,112,114,1e4,10005,102,59,3,55349,56663,4,2,97,107,10011,10016,108,108,59,1,8704,4,2,59,118,10022,10024,1,8916,59,1,10969,97,114,116,105,110,116,59,1,10765,4,2,97,111,10042,10159,4,2,99,115,10048,10155,4,6,49,50,51,52,53,55,10062,10102,10114,10135,10139,10151,4,6,50,51,52,53,54,56,10076,10083,10086,10093,10096,10099,5,189,1,59,10081,1,189,59,1,8531,5,188,1,59,10091,1,188,59,1,8533,59,1,8537,59,1,8539,4,2,51,53,10108,10111,59,1,8532,59,1,8534,4,3,52,53,56,10122,10129,10132,5,190,1,59,10127,1,190,59,1,8535,59,1,8540,53,59,1,8536,4,2,54,56,10145,10148,59,1,8538,59,1,8541,56,59,1,8542,108,59,1,8260,119,110,59,1,8994,99,114,59,3,55349,56507,4,17,69,97,98,99,100,101,102,103,105,106,108,110,111,114,115,116,118,10206,10217,10247,10254,10268,10273,10358,10363,10374,10380,10385,10406,10458,10464,10470,10497,10610,4,2,59,108,10212,10214,1,8807,59,1,10892,4,3,99,109,112,10225,10231,10244,117,116,101,59,1,501,109,97,4,2,59,100,10239,10241,1,947,59,1,989,59,1,10886,114,101,118,101,59,1,287,4,2,105,121,10260,10265,114,99,59,1,285,59,1,1075,111,116,59,1,289,4,4,59,108,113,115,10283,10285,10288,10308,1,8805,59,1,8923,4,3,59,113,115,10296,10298,10301,1,8805,59,1,8807,108,97,110,116,59,1,10878,4,4,59,99,100,108,10318,10320,10324,10345,1,10878,99,59,1,10921,111,116,4,2,59,111,10332,10334,1,10880,4,2,59,108,10340,10342,1,10882,59,1,10884,4,2,59,101,10351,10354,3,8923,65024,115,59,1,10900,114,59,3,55349,56612,4,2,59,103,10369,10371,1,8811,59,1,8921,109,101,108,59,1,8503,99,121,59,1,1107,4,4,59,69,97,106,10395,10397,10400,10403,1,8823,59,1,10898,59,1,10917,59,1,10916,4,4,69,97,101,115,10416,10419,10434,10453,59,1,8809,112,4,2,59,112,10426,10428,1,10890,114,111,120,59,1,10890,4,2,59,113,10440,10442,1,10888,4,2,59,113,10448,10450,1,10888,59,1,8809,105,109,59,1,8935,112,102,59,3,55349,56664,97,118,101,59,1,96,4,2,99,105,10476,10480,114,59,1,8458,109,4,3,59,101,108,10489,10491,10494,1,8819,59,1,10894,59,1,10896,5,62,6,59,99,100,108,113,114,10512,10514,10527,10532,10538,10545,1,62,4,2,99,105,10520,10523,59,1,10919,114,59,1,10874,111,116,59,1,8919,80,97,114,59,1,10645,117,101,115,116,59,1,10876,4,5,97,100,101,108,115,10557,10574,10579,10599,10605,4,2,112,114,10563,10570,112,114,111,120,59,1,10886,114,59,1,10616,111,116,59,1,8919,113,4,2,108,113,10586,10592,101,115,115,59,1,8923,108,101,115,115,59,1,10892,101,115,115,59,1,8823,105,109,59,1,8819,4,2,101,110,10616,10626,114,116,110,101,113,113,59,3,8809,65024,69,59,3,8809,65024,4,10,65,97,98,99,101,102,107,111,115,121,10653,10658,10713,10718,10724,10760,10765,10786,10850,10875,114,114,59,1,8660,4,4,105,108,109,114,10668,10674,10678,10684,114,115,112,59,1,8202,102,59,1,189,105,108,116,59,1,8459,4,2,100,114,10690,10695,99,121,59,1,1098,4,3,59,99,119,10703,10705,10710,1,8596,105,114,59,1,10568,59,1,8621,97,114,59,1,8463,105,114,99,59,1,293,4,3,97,108,114,10732,10748,10754,114,116,115,4,2,59,117,10741,10743,1,9829,105,116,59,1,9829,108,105,112,59,1,8230,99,111,110,59,1,8889,114,59,3,55349,56613,115,4,2,101,119,10772,10779,97,114,111,119,59,1,10533,97,114,111,119,59,1,10534,4,5,97,109,111,112,114,10798,10803,10809,10839,10844,114,114,59,1,8703,116,104,116,59,1,8763,107,4,2,108,114,10816,10827,101,102,116,97,114,114,111,119,59,1,8617,105,103,104,116,97,114,114,111,119,59,1,8618,102,59,3,55349,56665,98,97,114,59,1,8213,4,3,99,108,116,10858,10863,10869,114,59,3,55349,56509,97,115,104,59,1,8463,114,111,107,59,1,295,4,2,98,112,10881,10887,117,108,108,59,1,8259,104,101,110,59,1,8208,4,15,97,99,101,102,103,105,106,109,110,111,112,113,115,116,117,10925,10936,10958,10977,10990,11001,11039,11045,11101,11192,11220,11226,11237,11285,11299,99,117,116,101,5,237,1,59,10934,1,237,4,3,59,105,121,10944,10946,10955,1,8291,114,99,5,238,1,59,10953,1,238,59,1,1080,4,2,99,120,10964,10968,121,59,1,1077,99,108,5,161,1,59,10975,1,161,4,2,102,114,10983,10986,59,1,8660,59,3,55349,56614,114,97,118,101,5,236,1,59,10999,1,236,4,4,59,105,110,111,11011,11013,11028,11034,1,8520,4,2,105,110,11019,11024,110,116,59,1,10764,116,59,1,8749,102,105,110,59,1,10716,116,97,59,1,8489,108,105,103,59,1,307,4,3,97,111,112,11053,11092,11096,4,3,99,103,116,11061,11065,11088,114,59,1,299,4,3,101,108,112,11073,11076,11082,59,1,8465,105,110,101,59,1,8464,97,114,116,59,1,8465,104,59,1,305,102,59,1,8887,101,100,59,1,437,4,5,59,99,102,111,116,11113,11115,11121,11136,11142,1,8712,97,114,101,59,1,8453,105,110,4,2,59,116,11129,11131,1,8734,105,101,59,1,10717,100,111,116,59,1,305,4,5,59,99,101,108,112,11154,11156,11161,11179,11186,1,8747,97,108,59,1,8890,4,2,103,114,11167,11173,101,114,115,59,1,8484,99,97,108,59,1,8890,97,114,104,107,59,1,10775,114,111,100,59,1,10812,4,4,99,103,112,116,11202,11206,11211,11216,121,59,1,1105,111,110,59,1,303,102,59,3,55349,56666,97,59,1,953,114,111,100,59,1,10812,117,101,115,116,5,191,1,59,11235,1,191,4,2,99,105,11243,11248,114,59,3,55349,56510,110,4,5,59,69,100,115,118,11261,11263,11266,11271,11282,1,8712,59,1,8953,111,116,59,1,8949,4,2,59,118,11277,11279,1,8948,59,1,8947,59,1,8712,4,2,59,105,11291,11293,1,8290,108,100,101,59,1,297,4,2,107,109,11305,11310,99,121,59,1,1110,108,5,239,1,59,11316,1,239,4,6,99,102,109,111,115,117,11332,11346,11351,11357,11363,11380,4,2,105,121,11338,11343,114,99,59,1,309,59,1,1081,114,59,3,55349,56615,97,116,104,59,1,567,112,102,59,3,55349,56667,4,2,99,101,11369,11374,114,59,3,55349,56511,114,99,121,59,1,1112,107,99,121,59,1,1108,4,8,97,99,102,103,104,106,111,115,11404,11418,11433,11438,11445,11450,11455,11461,112,112,97,4,2,59,118,11413,11415,1,954,59,1,1008,4,2,101,121,11424,11430,100,105,108,59,1,311,59,1,1082,114,59,3,55349,56616,114,101,101,110,59,1,312,99,121,59,1,1093,99,121,59,1,1116,112,102,59,3,55349,56668,99,114,59,3,55349,56512,4,23,65,66,69,72,97,98,99,100,101,102,103,104,106,108,109,110,111,112,114,115,116,117,118,11515,11538,11544,11555,11560,11721,11780,11818,11868,12136,12160,12171,12203,12208,12246,12275,12327,12509,12523,12569,12641,12732,12752,4,3,97,114,116,11523,11528,11532,114,114,59,1,8666,114,59,1,8656,97,105,108,59,1,10523,97,114,114,59,1,10510,4,2,59,103,11550,11552,1,8806,59,1,10891,97,114,59,1,10594,4,9,99,101,103,109,110,112,113,114,116,11580,11586,11594,11600,11606,11624,11627,11636,11694,117,116,101,59,1,314,109,112,116,121,118,59,1,10676,114,97,110,59,1,8466,98,100,97,59,1,955,103,4,3,59,100,108,11615,11617,11620,1,10216,59,1,10641,101,59,1,10216,59,1,10885,117,111,5,171,1,59,11634,1,171,114,4,8,59,98,102,104,108,112,115,116,11655,11657,11669,11673,11677,11681,11685,11690,1,8592,4,2,59,102,11663,11665,1,8676,115,59,1,10527,115,59,1,10525,107,59,1,8617,112,59,1,8619,108,59,1,10553,105,109,59,1,10611,108,59,1,8610,4,3,59,97,101,11702,11704,11709,1,10923,105,108,59,1,10521,4,2,59,115,11715,11717,1,10925,59,3,10925,65024,4,3,97,98,114,11729,11734,11739,114,114,59,1,10508,114,107,59,1,10098,4,2,97,107,11745,11758,99,4,2,101,107,11752,11755,59,1,123,59,1,91,4,2,101,115,11764,11767,59,1,10635,108,4,2,100,117,11774,11777,59,1,10639,59,1,10637,4,4,97,101,117,121,11790,11796,11811,11815,114,111,110,59,1,318,4,2,100,105,11802,11807,105,108,59,1,316,108,59,1,8968,98,59,1,123,59,1,1083,4,4,99,113,114,115,11828,11832,11845,11864,97,59,1,10550,117,111,4,2,59,114,11840,11842,1,8220,59,1,8222,4,2,100,117,11851,11857,104,97,114,59,1,10599,115,104,97,114,59,1,10571,104,59,1,8626,4,5,59,102,103,113,115,11880,11882,12008,12011,12031,1,8804,116,4,5,97,104,108,114,116,11895,11913,11935,11947,11996,114,114,111,119,4,2,59,116,11905,11907,1,8592,97,105,108,59,1,8610,97,114,112,111,111,110,4,2,100,117,11925,11931,111,119,110,59,1,8637,112,59,1,8636,101,102,116,97,114,114,111,119,115,59,1,8647,105,103,104,116,4,3,97,104,115,11959,11974,11984,114,114,111,119,4,2,59,115,11969,11971,1,8596,59,1,8646,97,114,112,111,111,110,115,59,1,8651,113,117,105,103,97,114,114,111,119,59,1,8621,104,114,101,101,116,105,109,101,115,59,1,8907,59,1,8922,4,3,59,113,115,12019,12021,12024,1,8804,59,1,8806,108,97,110,116,59,1,10877,4,5,59,99,100,103,115,12043,12045,12049,12070,12083,1,10877,99,59,1,10920,111,116,4,2,59,111,12057,12059,1,10879,4,2,59,114,12065,12067,1,10881,59,1,10883,4,2,59,101,12076,12079,3,8922,65024,115,59,1,10899,4,5,97,100,101,103,115,12095,12103,12108,12126,12131,112,112,114,111,120,59,1,10885,111,116,59,1,8918,113,4,2,103,113,12115,12120,116,114,59,1,8922,103,116,114,59,1,10891,116,114,59,1,8822,105,109,59,1,8818,4,3,105,108,114,12144,12150,12156,115,104,116,59,1,10620,111,111,114,59,1,8970,59,3,55349,56617,4,2,59,69,12166,12168,1,8822,59,1,10897,4,2,97,98,12177,12198,114,4,2,100,117,12184,12187,59,1,8637,4,2,59,108,12193,12195,1,8636,59,1,10602,108,107,59,1,9604,99,121,59,1,1113,4,5,59,97,99,104,116,12220,12222,12227,12235,12241,1,8810,114,114,59,1,8647,111,114,110,101,114,59,1,8990,97,114,100,59,1,10603,114,105,59,1,9722,4,2,105,111,12252,12258,100,111,116,59,1,320,117,115,116,4,2,59,97,12267,12269,1,9136,99,104,101,59,1,9136,4,4,69,97,101,115,12285,12288,12303,12322,59,1,8808,112,4,2,59,112,12295,12297,1,10889,114,111,120,59,1,10889,4,2,59,113,12309,12311,1,10887,4,2,59,113,12317,12319,1,10887,59,1,8808,105,109,59,1,8934,4,8,97,98,110,111,112,116,119,122,12345,12359,12364,12421,12446,12467,12474,12490,4,2,110,114,12351,12355,103,59,1,10220,114,59,1,8701,114,107,59,1,10214,103,4,3,108,109,114,12373,12401,12409,101,102,116,4,2,97,114,12382,12389,114,114,111,119,59,1,10229,105,103,104,116,97,114,114,111,119,59,1,10231,97,112,115,116,111,59,1,10236,105,103,104,116,97,114,114,111,119,59,1,10230,112,97,114,114,111,119,4,2,108,114,12433,12439,101,102,116,59,1,8619,105,103,104,116,59,1,8620,4,3,97,102,108,12454,12458,12462,114,59,1,10629,59,3,55349,56669,117,115,59,1,10797,105,109,101,115,59,1,10804,4,2,97,98,12480,12485,115,116,59,1,8727,97,114,59,1,95,4,3,59,101,102,12498,12500,12506,1,9674,110,103,101,59,1,9674,59,1,10731,97,114,4,2,59,108,12517,12519,1,40,116,59,1,10643,4,5,97,99,104,109,116,12535,12540,12548,12561,12564,114,114,59,1,8646,111,114,110,101,114,59,1,8991,97,114,4,2,59,100,12556,12558,1,8651,59,1,10605,59,1,8206,114,105,59,1,8895,4,6,97,99,104,105,113,116,12583,12589,12594,12597,12614,12635,113,117,111,59,1,8249,114,59,3,55349,56513,59,1,8624,109,4,3,59,101,103,12606,12608,12611,1,8818,59,1,10893,59,1,10895,4,2,98,117,12620,12623,59,1,91,111,4,2,59,114,12630,12632,1,8216,59,1,8218,114,111,107,59,1,322,5,60,8,59,99,100,104,105,108,113,114,12660,12662,12675,12680,12686,12692,12698,12705,1,60,4,2,99,105,12668,12671,59,1,10918,114,59,1,10873,111,116,59,1,8918,114,101,101,59,1,8907,109,101,115,59,1,8905,97,114,114,59,1,10614,117,101,115,116,59,1,10875,4,2,80,105,12711,12716,97,114,59,1,10646,4,3,59,101,102,12724,12726,12729,1,9667,59,1,8884,59,1,9666,114,4,2,100,117,12739,12746,115,104,97,114,59,1,10570,104,97,114,59,1,10598,4,2,101,110,12758,12768,114,116,110,101,113,113,59,3,8808,65024,69,59,3,8808,65024,4,14,68,97,99,100,101,102,104,105,108,110,111,112,115,117,12803,12809,12893,12908,12914,12928,12933,12937,13011,13025,13032,13049,13052,13069,68,111,116,59,1,8762,4,4,99,108,112,114,12819,12827,12849,12887,114,5,175,1,59,12825,1,175,4,2,101,116,12833,12836,59,1,9794,4,2,59,101,12842,12844,1,10016,115,101,59,1,10016,4,2,59,115,12855,12857,1,8614,116,111,4,4,59,100,108,117,12869,12871,12877,12883,1,8614,111,119,110,59,1,8615,101,102,116,59,1,8612,112,59,1,8613,107,101,114,59,1,9646,4,2,111,121,12899,12905,109,109,97,59,1,10793,59,1,1084,97,115,104,59,1,8212,97,115,117,114,101,100,97,110,103,108,101,59,1,8737,114,59,3,55349,56618,111,59,1,8487,4,3,99,100,110,12945,12954,12985,114,111,5,181,1,59,12952,1,181,4,4,59,97,99,100,12964,12966,12971,12976,1,8739,115,116,59,1,42,105,114,59,1,10992,111,116,5,183,1,59,12983,1,183,117,115,4,3,59,98,100,12995,12997,13e3,1,8722,59,1,8863,4,2,59,117,13006,13008,1,8760,59,1,10794,4,2,99,100,13017,13021,112,59,1,10971,114,59,1,8230,112,108,117,115,59,1,8723,4,2,100,112,13038,13044,101,108,115,59,1,8871,102,59,3,55349,56670,59,1,8723,4,2,99,116,13058,13063,114,59,3,55349,56514,112,111,115,59,1,8766,4,3,59,108,109,13077,13079,13087,1,956,116,105,109,97,112,59,1,8888,97,112,59,1,8888,4,24,71,76,82,86,97,98,99,100,101,102,103,104,105,106,108,109,111,112,114,115,116,117,118,119,13142,13165,13217,13229,13247,13330,13359,13414,13420,13508,13513,13579,13602,13626,13631,13762,13767,13855,13936,13995,14214,14285,14312,14432,4,2,103,116,13148,13152,59,3,8921,824,4,2,59,118,13158,13161,3,8811,8402,59,3,8811,824,4,3,101,108,116,13173,13200,13204,102,116,4,2,97,114,13181,13188,114,114,111,119,59,1,8653,105,103,104,116,97,114,114,111,119,59,1,8654,59,3,8920,824,4,2,59,118,13210,13213,3,8810,8402,59,3,8810,824,105,103,104,116,97,114,114,111,119,59,1,8655,4,2,68,100,13235,13241,97,115,104,59,1,8879,97,115,104,59,1,8878,4,5,98,99,110,112,116,13259,13264,13270,13275,13308,108,97,59,1,8711,117,116,101,59,1,324,103,59,3,8736,8402,4,5,59,69,105,111,112,13287,13289,13293,13298,13302,1,8777,59,3,10864,824,100,59,3,8779,824,115,59,1,329,114,111,120,59,1,8777,117,114,4,2,59,97,13316,13318,1,9838,108,4,2,59,115,13325,13327,1,9838,59,1,8469,4,2,115,117,13336,13344,112,5,160,1,59,13342,1,160,109,112,4,2,59,101,13352,13355,3,8782,824,59,3,8783,824,4,5,97,101,111,117,121,13371,13385,13391,13407,13411,4,2,112,114,13377,13380,59,1,10819,111,110,59,1,328,100,105,108,59,1,326,110,103,4,2,59,100,13399,13401,1,8775,111,116,59,3,10861,824,112,59,1,10818,59,1,1085,97,115,104,59,1,8211,4,7,59,65,97,100,113,115,120,13436,13438,13443,13466,13472,13478,13494,1,8800,114,114,59,1,8663,114,4,2,104,114,13450,13454,107,59,1,10532,4,2,59,111,13460,13462,1,8599,119,59,1,8599,111,116,59,3,8784,824,117,105,118,59,1,8802,4,2,101,105,13484,13489,97,114,59,1,10536,109,59,3,8770,824,105,115,116,4,2,59,115,13503,13505,1,8708,59,1,8708,114,59,3,55349,56619,4,4,69,101,115,116,13523,13527,13563,13568,59,3,8807,824,4,3,59,113,115,13535,13537,13559,1,8817,4,3,59,113,115,13545,13547,13551,1,8817,59,3,8807,824,108,97,110,116,59,3,10878,824,59,3,10878,824,105,109,59,1,8821,4,2,59,114,13574,13576,1,8815,59,1,8815,4,3,65,97,112,13587,13592,13597,114,114,59,1,8654,114,114,59,1,8622,97,114,59,1,10994,4,3,59,115,118,13610,13612,13623,1,8715,4,2,59,100,13618,13620,1,8956,59,1,8954,59,1,8715,99,121,59,1,1114,4,7,65,69,97,100,101,115,116,13647,13652,13656,13661,13665,13737,13742,114,114,59,1,8653,59,3,8806,824,114,114,59,1,8602,114,59,1,8229,4,4,59,102,113,115,13675,13677,13703,13725,1,8816,116,4,2,97,114,13684,13691,114,114,111,119,59,1,8602,105,103,104,116,97,114,114,111,119,59,1,8622,4,3,59,113,115,13711,13713,13717,1,8816,59,3,8806,824,108,97,110,116,59,3,10877,824,4,2,59,115,13731,13734,3,10877,824,59,1,8814,105,109,59,1,8820,4,2,59,114,13748,13750,1,8814,105,4,2,59,101,13757,13759,1,8938,59,1,8940,105,100,59,1,8740,4,2,112,116,13773,13778,102,59,3,55349,56671,5,172,3,59,105,110,13787,13789,13829,1,172,110,4,4,59,69,100,118,13800,13802,13806,13812,1,8713,59,3,8953,824,111,116,59,3,8949,824,4,3,97,98,99,13820,13823,13826,59,1,8713,59,1,8951,59,1,8950,105,4,2,59,118,13836,13838,1,8716,4,3,97,98,99,13846,13849,13852,59,1,8716,59,1,8958,59,1,8957,4,3,97,111,114,13863,13892,13899,114,4,4,59,97,115,116,13874,13876,13883,13888,1,8742,108,108,101,108,59,1,8742,108,59,3,11005,8421,59,3,8706,824,108,105,110,116,59,1,10772,4,3,59,99,101,13907,13909,13914,1,8832,117,101,59,1,8928,4,2,59,99,13920,13923,3,10927,824,4,2,59,101,13929,13931,1,8832,113,59,3,10927,824,4,4,65,97,105,116,13946,13951,13971,13982,114,114,59,1,8655,114,114,4,3,59,99,119,13961,13963,13967,1,8603,59,3,10547,824,59,3,8605,824,103,104,116,97,114,114,111,119,59,1,8603,114,105,4,2,59,101,13990,13992,1,8939,59,1,8941,4,7,99,104,105,109,112,113,117,14011,14036,14060,14080,14085,14090,14106,4,4,59,99,101,114,14021,14023,14028,14032,1,8833,117,101,59,1,8929,59,3,10928,824,59,3,55349,56515,111,114,116,4,2,109,112,14045,14050,105,100,59,1,8740,97,114,97,108,108,101,108,59,1,8742,109,4,2,59,101,14067,14069,1,8769,4,2,59,113,14075,14077,1,8772,59,1,8772,105,100,59,1,8740,97,114,59,1,8742,115,117,4,2,98,112,14098,14102,101,59,1,8930,101,59,1,8931,4,3,98,99,112,14114,14157,14171,4,4,59,69,101,115,14124,14126,14130,14133,1,8836,59,3,10949,824,59,1,8840,101,116,4,2,59,101,14141,14144,3,8834,8402,113,4,2,59,113,14151,14153,1,8840,59,3,10949,824,99,4,2,59,101,14164,14166,1,8833,113,59,3,10928,824,4,4,59,69,101,115,14181,14183,14187,14190,1,8837,59,3,10950,824,59,1,8841,101,116,4,2,59,101,14198,14201,3,8835,8402,113,4,2,59,113,14208,14210,1,8841,59,3,10950,824,4,4,103,105,108,114,14224,14228,14238,14242,108,59,1,8825,108,100,101,5,241,1,59,14236,1,241,103,59,1,8824,105,97,110,103,108,101,4,2,108,114,14254,14269,101,102,116,4,2,59,101,14263,14265,1,8938,113,59,1,8940,105,103,104,116,4,2,59,101,14279,14281,1,8939,113,59,1,8941,4,2,59,109,14291,14293,1,957,4,3,59,101,115,14301,14303,14308,1,35,114,111,59,1,8470,112,59,1,8199,4,9,68,72,97,100,103,105,108,114,115,14332,14338,14344,14349,14355,14369,14376,14408,14426,97,115,104,59,1,8877,97,114,114,59,1,10500,112,59,3,8781,8402,97,115,104,59,1,8876,4,2,101,116,14361,14365,59,3,8805,8402,59,3,62,8402,110,102,105,110,59,1,10718,4,3,65,101,116,14384,14389,14393,114,114,59,1,10498,59,3,8804,8402,4,2,59,114,14399,14402,3,60,8402,105,101,59,3,8884,8402,4,2,65,116,14414,14419,114,114,59,1,10499,114,105,101,59,3,8885,8402,105,109,59,3,8764,8402,4,3,65,97,110,14440,14445,14468,114,114,59,1,8662,114,4,2,104,114,14452,14456,107,59,1,10531,4,2,59,111,14462,14464,1,8598,119,59,1,8598,101,97,114,59,1,10535,4,18,83,97,99,100,101,102,103,104,105,108,109,111,112,114,115,116,117,118,14512,14515,14535,14560,14597,14603,14618,14643,14657,14662,14701,14741,14747,14769,14851,14877,14907,14916,59,1,9416,4,2,99,115,14521,14531,117,116,101,5,243,1,59,14529,1,243,116,59,1,8859,4,2,105,121,14541,14557,114,4,2,59,99,14548,14550,1,8858,5,244,1,59,14555,1,244,59,1,1086,4,5,97,98,105,111,115,14572,14577,14583,14587,14591,115,104,59,1,8861,108,97,99,59,1,337,118,59,1,10808,116,59,1,8857,111,108,100,59,1,10684,108,105,103,59,1,339,4,2,99,114,14609,14614,105,114,59,1,10687,59,3,55349,56620,4,3,111,114,116,14626,14630,14640,110,59,1,731,97,118,101,5,242,1,59,14638,1,242,59,1,10689,4,2,98,109,14649,14654,97,114,59,1,10677,59,1,937,110,116,59,1,8750,4,4,97,99,105,116,14672,14677,14693,14698,114,114,59,1,8634,4,2,105,114,14683,14687,114,59,1,10686,111,115,115,59,1,10683,110,101,59,1,8254,59,1,10688,4,3,97,101,105,14709,14714,14719,99,114,59,1,333,103,97,59,1,969,4,3,99,100,110,14727,14733,14736,114,111,110,59,1,959,59,1,10678,117,115,59,1,8854,112,102,59,3,55349,56672,4,3,97,101,108,14755,14759,14764,114,59,1,10679,114,112,59,1,10681,117,115,59,1,8853,4,7,59,97,100,105,111,115,118,14785,14787,14792,14831,14837,14841,14848,1,8744,114,114,59,1,8635,4,4,59,101,102,109,14802,14804,14817,14824,1,10845,114,4,2,59,111,14811,14813,1,8500,102,59,1,8500,5,170,1,59,14822,1,170,5,186,1,59,14829,1,186,103,111,102,59,1,8886,114,59,1,10838,108,111,112,101,59,1,10839,59,1,10843,4,3,99,108,111,14859,14863,14873,114,59,1,8500,97,115,104,5,248,1,59,14871,1,248,108,59,1,8856,105,4,2,108,109,14884,14893,100,101,5,245,1,59,14891,1,245,101,115,4,2,59,97,14901,14903,1,8855,115,59,1,10806,109,108,5,246,1,59,14914,1,246,98,97,114,59,1,9021,4,12,97,99,101,102,104,105,108,109,111,114,115,117,14948,14992,14996,15033,15038,15068,15090,15189,15192,15222,15427,15441,114,4,4,59,97,115,116,14959,14961,14976,14989,1,8741,5,182,2,59,108,14968,14970,1,182,108,101,108,59,1,8741,4,2,105,108,14982,14986,109,59,1,10995,59,1,11005,59,1,8706,121,59,1,1087,114,4,5,99,105,109,112,116,15009,15014,15019,15024,15027,110,116,59,1,37,111,100,59,1,46,105,108,59,1,8240,59,1,8869,101,110,107,59,1,8241,114,59,3,55349,56621,4,3,105,109,111,15046,15057,15063,4,2,59,118,15052,15054,1,966,59,1,981,109,97,116,59,1,8499,110,101,59,1,9742,4,3,59,116,118,15076,15078,15087,1,960,99,104,102,111,114,107,59,1,8916,59,1,982,4,2,97,117,15096,15119,110,4,2,99,107,15103,15115,107,4,2,59,104,15110,15112,1,8463,59,1,8462,118,59,1,8463,115,4,9,59,97,98,99,100,101,109,115,116,15140,15142,15148,15151,15156,15168,15171,15179,15184,1,43,99,105,114,59,1,10787,59,1,8862,105,114,59,1,10786,4,2,111,117,15162,15165,59,1,8724,59,1,10789,59,1,10866,110,5,177,1,59,15177,1,177,105,109,59,1,10790,119,111,59,1,10791,59,1,177,4,3,105,112,117,15200,15208,15213,110,116,105,110,116,59,1,10773,102,59,3,55349,56673,110,100,5,163,1,59,15220,1,163,4,10,59,69,97,99,101,105,110,111,115,117,15244,15246,15249,15253,15258,15334,15347,15367,15416,15421,1,8826,59,1,10931,112,59,1,10935,117,101,59,1,8828,4,2,59,99,15264,15266,1,10927,4,6,59,97,99,101,110,115,15280,15282,15290,15299,15303,15329,1,8826,112,112,114,111,120,59,1,10935,117,114,108,121,101,113,59,1,8828,113,59,1,10927,4,3,97,101,115,15311,15319,15324,112,112,114,111,120,59,1,10937,113,113,59,1,10933,105,109,59,1,8936,105,109,59,1,8830,109,101,4,2,59,115,15342,15344,1,8242,59,1,8473,4,3,69,97,115,15355,15358,15362,59,1,10933,112,59,1,10937,105,109,59,1,8936,4,3,100,102,112,15375,15378,15404,59,1,8719,4,3,97,108,115,15386,15392,15398,108,97,114,59,1,9006,105,110,101,59,1,8978,117,114,102,59,1,8979,4,2,59,116,15410,15412,1,8733,111,59,1,8733,105,109,59,1,8830,114,101,108,59,1,8880,4,2,99,105,15433,15438,114,59,3,55349,56517,59,1,968,110,99,115,112,59,1,8200,4,6,102,105,111,112,115,117,15462,15467,15472,15478,15485,15491,114,59,3,55349,56622,110,116,59,1,10764,112,102,59,3,55349,56674,114,105,109,101,59,1,8279,99,114,59,3,55349,56518,4,3,97,101,111,15499,15520,15534,116,4,2,101,105,15506,15515,114,110,105,111,110,115,59,1,8461,110,116,59,1,10774,115,116,4,2,59,101,15528,15530,1,63,113,59,1,8799,116,5,34,1,59,15540,1,34,4,21,65,66,72,97,98,99,100,101,102,104,105,108,109,110,111,112,114,115,116,117,120,15586,15609,15615,15620,15796,15855,15893,15931,15977,16001,16039,16183,16204,16222,16228,16285,16312,16318,16363,16408,16416,4,3,97,114,116,15594,15599,15603,114,114,59,1,8667,114,59,1,8658,97,105,108,59,1,10524,97,114,114,59,1,10511,97,114,59,1,10596,4,7,99,100,101,110,113,114,116,15636,15651,15656,15664,15687,15696,15770,4,2,101,117,15642,15646,59,3,8765,817,116,101,59,1,341,105,99,59,1,8730,109,112,116,121,118,59,1,10675,103,4,4,59,100,101,108,15675,15677,15680,15683,1,10217,59,1,10642,59,1,10661,101,59,1,10217,117,111,5,187,1,59,15694,1,187,114,4,11,59,97,98,99,102,104,108,112,115,116,119,15721,15723,15727,15739,15742,15746,15750,15754,15758,15763,15767,1,8594,112,59,1,10613,4,2,59,102,15733,15735,1,8677,115,59,1,10528,59,1,10547,115,59,1,10526,107,59,1,8618,112,59,1,8620,108,59,1,10565,105,109,59,1,10612,108,59,1,8611,59,1,8605,4,2,97,105,15776,15781,105,108,59,1,10522,111,4,2,59,110,15788,15790,1,8758,97,108,115,59,1,8474,4,3,97,98,114,15804,15809,15814,114,114,59,1,10509,114,107,59,1,10099,4,2,97,107,15820,15833,99,4,2,101,107,15827,15830,59,1,125,59,1,93,4,2,101,115,15839,15842,59,1,10636,108,4,2,100,117,15849,15852,59,1,10638,59,1,10640,4,4,97,101,117,121,15865,15871,15886,15890,114,111,110,59,1,345,4,2,100,105,15877,15882,105,108,59,1,343,108,59,1,8969,98,59,1,125,59,1,1088,4,4,99,108,113,115,15903,15907,15914,15927,97,59,1,10551,100,104,97,114,59,1,10601,117,111,4,2,59,114,15922,15924,1,8221,59,1,8221,104,59,1,8627,4,3,97,99,103,15939,15966,15970,108,4,4,59,105,112,115,15950,15952,15957,15963,1,8476,110,101,59,1,8475,97,114,116,59,1,8476,59,1,8477,116,59,1,9645,5,174,1,59,15975,1,174,4,3,105,108,114,15985,15991,15997,115,104,116,59,1,10621,111,111,114,59,1,8971,59,3,55349,56623,4,2,97,111,16007,16028,114,4,2,100,117,16014,16017,59,1,8641,4,2,59,108,16023,16025,1,8640,59,1,10604,4,2,59,118,16034,16036,1,961,59,1,1009,4,3,103,110,115,16047,16167,16171,104,116,4,6,97,104,108,114,115,116,16063,16081,16103,16130,16143,16155,114,114,111,119,4,2,59,116,16073,16075,1,8594,97,105,108,59,1,8611,97,114,112,111,111,110,4,2,100,117,16093,16099,111,119,110,59,1,8641,112,59,1,8640,101,102,116,4,2,97,104,16112,16120,114,114,111,119,115,59,1,8644,97,114,112,111,111,110,115,59,1,8652,105,103,104,116,97,114,114,111,119,115,59,1,8649,113,117,105,103,97,114,114,111,119,59,1,8605,104,114,101,101,116,105,109,101,115,59,1,8908,103,59,1,730,105,110,103,100,111,116,115,101,113,59,1,8787,4,3,97,104,109,16191,16196,16201,114,114,59,1,8644,97,114,59,1,8652,59,1,8207,111,117,115,116,4,2,59,97,16214,16216,1,9137,99,104,101,59,1,9137,109,105,100,59,1,10990,4,4,97,98,112,116,16238,16252,16257,16278,4,2,110,114,16244,16248,103,59,1,10221,114,59,1,8702,114,107,59,1,10215,4,3,97,102,108,16265,16269,16273,114,59,1,10630,59,3,55349,56675,117,115,59,1,10798,105,109,101,115,59,1,10805,4,2,97,112,16291,16304,114,4,2,59,103,16298,16300,1,41,116,59,1,10644,111,108,105,110,116,59,1,10770,97,114,114,59,1,8649,4,4,97,99,104,113,16328,16334,16339,16342,113,117,111,59,1,8250,114,59,3,55349,56519,59,1,8625,4,2,98,117,16348,16351,59,1,93,111,4,2,59,114,16358,16360,1,8217,59,1,8217,4,3,104,105,114,16371,16377,16383,114,101,101,59,1,8908,109,101,115,59,1,8906,105,4,4,59,101,102,108,16394,16396,16399,16402,1,9657,59,1,8885,59,1,9656,116,114,105,59,1,10702,108,117,104,97,114,59,1,10600,59,1,8478,4,19,97,98,99,100,101,102,104,105,108,109,111,112,113,114,115,116,117,119,122,16459,16466,16472,16572,16590,16672,16687,16746,16844,16850,16924,16963,16988,17115,17121,17154,17206,17614,17656,99,117,116,101,59,1,347,113,117,111,59,1,8218,4,10,59,69,97,99,101,105,110,112,115,121,16494,16496,16499,16513,16518,16531,16536,16556,16564,16569,1,8827,59,1,10932,4,2,112,114,16505,16508,59,1,10936,111,110,59,1,353,117,101,59,1,8829,4,2,59,100,16524,16526,1,10928,105,108,59,1,351,114,99,59,1,349,4,3,69,97,115,16544,16547,16551,59,1,10934,112,59,1,10938,105,109,59,1,8937,111,108,105,110,116,59,1,10771,105,109,59,1,8831,59,1,1089,111,116,4,3,59,98,101,16582,16584,16587,1,8901,59,1,8865,59,1,10854,4,7,65,97,99,109,115,116,120,16606,16611,16634,16642,16646,16652,16668,114,114,59,1,8664,114,4,2,104,114,16618,16622,107,59,1,10533,4,2,59,111,16628,16630,1,8600,119,59,1,8600,116,5,167,1,59,16640,1,167,105,59,1,59,119,97,114,59,1,10537,109,4,2,105,110,16659,16665,110,117,115,59,1,8726,59,1,8726,116,59,1,10038,114,4,2,59,111,16679,16682,3,55349,56624,119,110,59,1,8994,4,4,97,99,111,121,16697,16702,16716,16739,114,112,59,1,9839,4,2,104,121,16708,16713,99,121,59,1,1097,59,1,1096,114,116,4,2,109,112,16724,16729,105,100,59,1,8739,97,114,97,108,108,101,108,59,1,8741,5,173,1,59,16744,1,173,4,2,103,109,16752,16770,109,97,4,3,59,102,118,16762,16764,16767,1,963,59,1,962,59,1,962,4,8,59,100,101,103,108,110,112,114,16788,16790,16795,16806,16817,16828,16832,16838,1,8764,111,116,59,1,10858,4,2,59,113,16801,16803,1,8771,59,1,8771,4,2,59,69,16812,16814,1,10910,59,1,10912,4,2,59,69,16823,16825,1,10909,59,1,10911,101,59,1,8774,108,117,115,59,1,10788,97,114,114,59,1,10610,97,114,114,59,1,8592,4,4,97,101,105,116,16860,16883,16891,16904,4,2,108,115,16866,16878,108,115,101,116,109,105,110,117,115,59,1,8726,104,112,59,1,10803,112,97,114,115,108,59,1,10724,4,2,100,108,16897,16900,59,1,8739,101,59,1,8995,4,2,59,101,16910,16912,1,10922,4,2,59,115,16918,16920,1,10924,59,3,10924,65024,4,3,102,108,112,16932,16938,16958,116,99,121,59,1,1100,4,2,59,98,16944,16946,1,47,4,2,59,97,16952,16954,1,10692,114,59,1,9023,102,59,3,55349,56676,97,4,2,100,114,16970,16985,101,115,4,2,59,117,16978,16980,1,9824,105,116,59,1,9824,59,1,8741,4,3,99,115,117,16996,17028,17089,4,2,97,117,17002,17015,112,4,2,59,115,17009,17011,1,8851,59,3,8851,65024,112,4,2,59,115,17022,17024,1,8852,59,3,8852,65024,117,4,2,98,112,17035,17062,4,3,59,101,115,17043,17045,17048,1,8847,59,1,8849,101,116,4,2,59,101,17056,17058,1,8847,113,59,1,8849,4,3,59,101,115,17070,17072,17075,1,8848,59,1,8850,101,116,4,2,59,101,17083,17085,1,8848,113,59,1,8850,4,3,59,97,102,17097,17099,17112,1,9633,114,4,2,101,102,17106,17109,59,1,9633,59,1,9642,59,1,9642,97,114,114,59,1,8594,4,4,99,101,109,116,17131,17136,17142,17148,114,59,3,55349,56520,116,109,110,59,1,8726,105,108,101,59,1,8995,97,114,102,59,1,8902,4,2,97,114,17160,17172,114,4,2,59,102,17167,17169,1,9734,59,1,9733,4,2,97,110,17178,17202,105,103,104,116,4,2,101,112,17188,17197,112,115,105,108,111,110,59,1,1013,104,105,59,1,981,115,59,1,175,4,5,98,99,109,110,112,17218,17351,17420,17423,17427,4,9,59,69,100,101,109,110,112,114,115,17238,17240,17243,17248,17261,17267,17279,17285,17291,1,8834,59,1,10949,111,116,59,1,10941,4,2,59,100,17254,17256,1,8838,111,116,59,1,10947,117,108,116,59,1,10945,4,2,69,101,17273,17276,59,1,10955,59,1,8842,108,117,115,59,1,10943,97,114,114,59,1,10617,4,3,101,105,117,17299,17335,17339,116,4,3,59,101,110,17308,17310,17322,1,8834,113,4,2,59,113,17317,17319,1,8838,59,1,10949,101,113,4,2,59,113,17330,17332,1,8842,59,1,10955,109,59,1,10951,4,2,98,112,17345,17348,59,1,10965,59,1,10963,99,4,6,59,97,99,101,110,115,17366,17368,17376,17385,17389,17415,1,8827,112,112,114,111,120,59,1,10936,117,114,108,121,101,113,59,1,8829,113,59,1,10928,4,3,97,101,115,17397,17405,17410,112,112,114,111,120,59,1,10938,113,113,59,1,10934,105,109,59,1,8937,105,109,59,1,8831,59,1,8721,103,59,1,9834,4,13,49,50,51,59,69,100,101,104,108,109,110,112,115,17455,17462,17469,17476,17478,17481,17496,17509,17524,17530,17536,17548,17554,5,185,1,59,17460,1,185,5,178,1,59,17467,1,178,5,179,1,59,17474,1,179,1,8835,59,1,10950,4,2,111,115,17487,17491,116,59,1,10942,117,98,59,1,10968,4,2,59,100,17502,17504,1,8839,111,116,59,1,10948,115,4,2,111,117,17516,17520,108,59,1,10185,98,59,1,10967,97,114,114,59,1,10619,117,108,116,59,1,10946,4,2,69,101,17542,17545,59,1,10956,59,1,8843,108,117,115,59,1,10944,4,3,101,105,117,17562,17598,17602,116,4,3,59,101,110,17571,17573,17585,1,8835,113,4,2,59,113,17580,17582,1,8839,59,1,10950,101,113,4,2,59,113,17593,17595,1,8843,59,1,10956,109,59,1,10952,4,2,98,112,17608,17611,59,1,10964,59,1,10966,4,3,65,97,110,17622,17627,17650,114,114,59,1,8665,114,4,2,104,114,17634,17638,107,59,1,10534,4,2,59,111,17644,17646,1,8601,119,59,1,8601,119,97,114,59,1,10538,108,105,103,5,223,1,59,17664,1,223,4,13,97,98,99,100,101,102,104,105,111,112,114,115,119,17694,17709,17714,17737,17742,17749,17754,17860,17905,17957,17964,18090,18122,4,2,114,117,17700,17706,103,101,116,59,1,8982,59,1,964,114,107,59,1,9140,4,3,97,101,121,17722,17728,17734,114,111,110,59,1,357,100,105,108,59,1,355,59,1,1090,111,116,59,1,8411,108,114,101,99,59,1,8981,114,59,3,55349,56625,4,4,101,105,107,111,17764,17805,17836,17851,4,2,114,116,17770,17786,101,4,2,52,102,17777,17780,59,1,8756,111,114,101,59,1,8756,97,4,3,59,115,118,17795,17797,17802,1,952,121,109,59,1,977,59,1,977,4,2,99,110,17811,17831,107,4,2,97,115,17818,17826,112,112,114,111,120,59,1,8776,105,109,59,1,8764,115,112,59,1,8201,4,2,97,115,17842,17846,112,59,1,8776,105,109,59,1,8764,114,110,5,254,1,59,17858,1,254,4,3,108,109,110,17868,17873,17901,100,101,59,1,732,101,115,5,215,3,59,98,100,17884,17886,17898,1,215,4,2,59,97,17892,17894,1,8864,114,59,1,10801,59,1,10800,116,59,1,8749,4,3,101,112,115,17913,17917,17953,97,59,1,10536,4,4,59,98,99,102,17927,17929,17934,17939,1,8868,111,116,59,1,9014,105,114,59,1,10993,4,2,59,111,17945,17948,3,55349,56677,114,107,59,1,10970,97,59,1,10537,114,105,109,101,59,1,8244,4,3,97,105,112,17972,17977,18082,100,101,59,1,8482,4,7,97,100,101,109,112,115,116,17993,18051,18056,18059,18066,18072,18076,110,103,108,101,4,5,59,100,108,113,114,18009,18011,18017,18032,18035,1,9653,111,119,110,59,1,9663,101,102,116,4,2,59,101,18026,18028,1,9667,113,59,1,8884,59,1,8796,105,103,104,116,4,2,59,101,18045,18047,1,9657,113,59,1,8885,111,116,59,1,9708,59,1,8796,105,110,117,115,59,1,10810,108,117,115,59,1,10809,98,59,1,10701,105,109,101,59,1,10811,101,122,105,117,109,59,1,9186,4,3,99,104,116,18098,18111,18116,4,2,114,121,18104,18108,59,3,55349,56521,59,1,1094,99,121,59,1,1115,114,111,107,59,1,359,4,2,105,111,18128,18133,120,116,59,1,8812,104,101,97,100,4,2,108,114,18143,18154,101,102,116,97,114,114,111,119,59,1,8606,105,103,104,116,97,114,114,111,119,59,1,8608,4,18,65,72,97,98,99,100,102,103,104,108,109,111,112,114,115,116,117,119,18204,18209,18214,18234,18250,18268,18292,18308,18319,18343,18379,18397,18413,18504,18547,18553,18584,18603,114,114,59,1,8657,97,114,59,1,10595,4,2,99,114,18220,18230,117,116,101,5,250,1,59,18228,1,250,114,59,1,8593,114,4,2,99,101,18241,18245,121,59,1,1118,118,101,59,1,365,4,2,105,121,18256,18265,114,99,5,251,1,59,18263,1,251,59,1,1091,4,3,97,98,104,18276,18281,18287,114,114,59,1,8645,108,97,99,59,1,369,97,114,59,1,10606,4,2,105,114,18298,18304,115,104,116,59,1,10622,59,3,55349,56626,114,97,118,101,5,249,1,59,18317,1,249,4,2,97,98,18325,18338,114,4,2,108,114,18332,18335,59,1,8639,59,1,8638,108,107,59,1,9600,4,2,99,116,18349,18374,4,2,111,114,18355,18369,114,110,4,2,59,101,18363,18365,1,8988,114,59,1,8988,111,112,59,1,8975,114,105,59,1,9720,4,2,97,108,18385,18390,99,114,59,1,363,5,168,1,59,18395,1,168,4,2,103,112,18403,18408,111,110,59,1,371,102,59,3,55349,56678,4,6,97,100,104,108,115,117,18427,18434,18445,18470,18475,18494,114,114,111,119,59,1,8593,111,119,110,97,114,114,111,119,59,1,8597,97,114,112,111,111,110,4,2,108,114,18457,18463,101,102,116,59,1,8639,105,103,104,116,59,1,8638,117,115,59,1,8846,105,4,3,59,104,108,18484,18486,18489,1,965,59,1,978,111,110,59,1,965,112,97,114,114,111,119,115,59,1,8648,4,3,99,105,116,18512,18537,18542,4,2,111,114,18518,18532,114,110,4,2,59,101,18526,18528,1,8989,114,59,1,8989,111,112,59,1,8974,110,103,59,1,367,114,105,59,1,9721,99,114,59,3,55349,56522,4,3,100,105,114,18561,18566,18572,111,116,59,1,8944,108,100,101,59,1,361,105,4,2,59,102,18579,18581,1,9653,59,1,9652,4,2,97,109,18590,18595,114,114,59,1,8648,108,5,252,1,59,18601,1,252,97,110,103,108,101,59,1,10663,4,15,65,66,68,97,99,100,101,102,108,110,111,112,114,115,122,18643,18648,18661,18667,18847,18851,18857,18904,18909,18915,18931,18937,18943,18949,18996,114,114,59,1,8661,97,114,4,2,59,118,18656,18658,1,10984,59,1,10985,97,115,104,59,1,8872,4,2,110,114,18673,18679,103,114,116,59,1,10652,4,7,101,107,110,112,114,115,116,18695,18704,18711,18720,18742,18754,18810,112,115,105,108,111,110,59,1,1013,97,112,112,97,59,1,1008,111,116,104,105,110,103,59,1,8709,4,3,104,105,114,18728,18732,18735,105,59,1,981,59,1,982,111,112,116,111,59,1,8733,4,2,59,104,18748,18750,1,8597,111,59,1,1009,4,2,105,117,18760,18766,103,109,97,59,1,962,4,2,98,112,18772,18791,115,101,116,110,101,113,4,2,59,113,18784,18787,3,8842,65024,59,3,10955,65024,115,101,116,110,101,113,4,2,59,113,18803,18806,3,8843,65024,59,3,10956,65024,4,2,104,114,18816,18822,101,116,97,59,1,977,105,97,110,103,108,101,4,2,108,114,18834,18840,101,102,116,59,1,8882,105,103,104,116,59,1,8883,121,59,1,1074,97,115,104,59,1,8866,4,3,101,108,114,18865,18884,18890,4,3,59,98,101,18873,18875,18880,1,8744,97,114,59,1,8891,113,59,1,8794,108,105,112,59,1,8942,4,2,98,116,18896,18901,97,114,59,1,124,59,1,124,114,59,3,55349,56627,116,114,105,59,1,8882,115,117,4,2,98,112,18923,18927,59,3,8834,8402,59,3,8835,8402,112,102,59,3,55349,56679,114,111,112,59,1,8733,116,114,105,59,1,8883,4,2,99,117,18955,18960,114,59,3,55349,56523,4,2,98,112,18966,18981,110,4,2,69,101,18973,18977,59,3,10955,65024,59,3,8842,65024,110,4,2,69,101,18988,18992,59,3,10956,65024,59,3,8843,65024,105,103,122,97,103,59,1,10650,4,7,99,101,102,111,112,114,115,19020,19026,19061,19066,19072,19075,19089,105,114,99,59,1,373,4,2,100,105,19032,19055,4,2,98,103,19038,19043,97,114,59,1,10847,101,4,2,59,113,19050,19052,1,8743,59,1,8793,101,114,112,59,1,8472,114,59,3,55349,56628,112,102,59,3,55349,56680,59,1,8472,4,2,59,101,19081,19083,1,8768,97,116,104,59,1,8768,99,114,59,3,55349,56524,4,14,99,100,102,104,105,108,109,110,111,114,115,117,118,119,19125,19146,19152,19157,19173,19176,19192,19197,19202,19236,19252,19269,19286,19291,4,3,97,105,117,19133,19137,19142,112,59,1,8898,114,99,59,1,9711,112,59,1,8899,116,114,105,59,1,9661,114,59,3,55349,56629,4,2,65,97,19163,19168,114,114,59,1,10234,114,114,59,1,10231,59,1,958,4,2,65,97,19182,19187,114,114,59,1,10232,114,114,59,1,10229,97,112,59,1,10236,105,115,59,1,8955,4,3,100,112,116,19210,19215,19230,111,116,59,1,10752,4,2,102,108,19221,19225,59,3,55349,56681,117,115,59,1,10753,105,109,101,59,1,10754,4,2,65,97,19242,19247,114,114,59,1,10233,114,114,59,1,10230,4,2,99,113,19258,19263,114,59,3,55349,56525,99,117,112,59,1,10758,4,2,112,116,19275,19281,108,117,115,59,1,10756,114,105,59,1,9651,101,101,59,1,8897,101,100,103,101,59,1,8896,4,8,97,99,101,102,105,111,115,117,19316,19335,19349,19357,19362,19367,19373,19379,99,4,2,117,121,19323,19332,116,101,5,253,1,59,19330,1,253,59,1,1103,4,2,105,121,19341,19346,114,99,59,1,375,59,1,1099,110,5,165,1,59,19355,1,165,114,59,3,55349,56630,99,121,59,1,1111,112,102,59,3,55349,56682,99,114,59,3,55349,56526,4,2,99,109,19385,19389,121,59,1,1102,108,5,255,1,59,19395,1,255,4,10,97,99,100,101,102,104,105,111,115,119,19419,19426,19441,19446,19462,19467,19472,19480,19486,19492,99,117,116,101,59,1,378,4,2,97,121,19432,19438,114,111,110,59,1,382,59,1,1079,111,116,59,1,380,4,2,101,116,19452,19458,116,114,102,59,1,8488,97,59,1,950,114,59,3,55349,56631,99,121,59,1,1078,103,114,97,114,114,59,1,8669,112,102,59,3,55349,56683,99,114,59,3,55349,56527,4,2,106,110,19498,19501,59,1,8205,106,59,1,8204]);const X_=Y_,xe=cn,Fr=q_,L=L1,N=xe.CODE_POINTS,vr=xe.CODE_POINT_SEQUENCES,Z_={128:8364,130:8218,131:402,132:8222,133:8230,134:8224,135:8225,136:710,137:8240,138:352,139:8249,140:338,142:381,145:8216,146:8217,147:8220,148:8221,149:8226,150:8211,151:8212,152:732,153:8482,154:353,155:8250,156:339,158:382,159:376},$y=1,zy=2,Wy=4,Q_=$y|zy|Wy,oe="DATA_STATE",ps="RCDATA_STATE",Li="RAWTEXT_STATE",Rn="SCRIPT_DATA_STATE",Vy="PLAINTEXT_STATE",kx="TAG_OPEN_STATE",Lx="END_TAG_OPEN_STATE",rd="TAG_NAME_STATE",Dx="RCDATA_LESS_THAN_SIGN_STATE",Mx="RCDATA_END_TAG_OPEN_STATE",Fx="RCDATA_END_TAG_NAME_STATE",Px="RAWTEXT_LESS_THAN_SIGN_STATE",Ux="RAWTEXT_END_TAG_OPEN_STATE",Bx="RAWTEXT_END_TAG_NAME_STATE",Hx="SCRIPT_DATA_LESS_THAN_SIGN_STATE",Gx="SCRIPT_DATA_END_TAG_OPEN_STATE",$x="SCRIPT_DATA_END_TAG_NAME_STATE",zx="SCRIPT_DATA_ESCAPE_START_STATE",Wx="SCRIPT_DATA_ESCAPE_START_DASH_STATE",Qt="SCRIPT_DATA_ESCAPED_STATE",Vx="SCRIPT_DATA_ESCAPED_DASH_STATE",sd="SCRIPT_DATA_ESCAPED_DASH_DASH_STATE",so="SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE",Kx="SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE",Yx="SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE",qx="SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE",Nn="SCRIPT_DATA_DOUBLE_ESCAPED_STATE",Xx="SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE",Zx="SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE",io="SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE",Qx="SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE",mn="BEFORE_ATTRIBUTE_NAME_STATE",ao="ATTRIBUTE_NAME_STATE",id="AFTER_ATTRIBUTE_NAME_STATE",ad="BEFORE_ATTRIBUTE_VALUE_STATE",oo="ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE",lo="ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE",co="ATTRIBUTE_VALUE_UNQUOTED_STATE",od="AFTER_ATTRIBUTE_VALUE_QUOTED_STATE",Kn="SELF_CLOSING_START_TAG_STATE",Ni="BOGUS_COMMENT_STATE",Jx="MARKUP_DECLARATION_OPEN_STATE",eE="COMMENT_START_STATE",tE="COMMENT_START_DASH_STATE",Yn="COMMENT_STATE",nE="COMMENT_LESS_THAN_SIGN_STATE",rE="COMMENT_LESS_THAN_SIGN_BANG_STATE",sE="COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE",iE="COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE",uo="COMMENT_END_DASH_STATE",ho="COMMENT_END_STATE",aE="COMMENT_END_BANG_STATE",oE="DOCTYPE_STATE",po="BEFORE_DOCTYPE_NAME_STATE",mo="DOCTYPE_NAME_STATE",lE="AFTER_DOCTYPE_NAME_STATE",cE="AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE",dE="BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE",ld="DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE",cd="DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE",dd="AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE",uE="BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE",hE="AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE",pE="BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE",ji="DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE",Ai="DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE",ud="AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE",jn="BOGUS_DOCTYPE_STATE",fo="CDATA_SECTION_STATE",mE="CDATA_SECTION_BRACKET_STATE",fE="CDATA_SECTION_END_STATE",ls="CHARACTER_REFERENCE_STATE",gE="NAMED_CHARACTER_REFERENCE_STATE",bE="AMBIGUOS_AMPERSAND_STATE",xE="NUMERIC_CHARACTER_REFERENCE_STATE",EE="HEXADEMICAL_CHARACTER_REFERENCE_START_STATE",TE="DECIMAL_CHARACTER_REFERENCE_START_STATE",yE="HEXADEMICAL_CHARACTER_REFERENCE_STATE",SE="DECIMAL_CHARACTER_REFERENCE_STATE",_i="NUMERIC_CHARACTER_REFERENCE_END_STATE";function je(t){return t===N.SPACE||t===N.LINE_FEED||t===N.TABULATION||t===N.FORM_FEED}function Vi(t){return t>=N.DIGIT_0&&t<=N.DIGIT_9}function Jt(t){return t>=N.LATIN_CAPITAL_A&&t<=N.LATIN_CAPITAL_Z}function Cr(t){return t>=N.LATIN_SMALL_A&&t<=N.LATIN_SMALL_Z}function Qn(t){return Cr(t)||Jt(t)}function hd(t){return Qn(t)||Vi(t)}function Ky(t){return t>=N.LATIN_CAPITAL_A&&t<=N.LATIN_CAPITAL_F}function Yy(t){return t>=N.LATIN_SMALL_A&&t<=N.LATIN_SMALL_F}function J_(t){return Vi(t)||Ky(t)||Yy(t)}function Fo(t){return t+32}function ke(t){return t<=65535?String.fromCharCode(t):(t-=65536,String.fromCharCode(t>>>10&1023|55296)+String.fromCharCode(56320|t&1023))}function qn(t){return String.fromCharCode(Fo(t))}function NE(t,n){const r=Fr[++t];let s=++t,i=s+r-1;for(;s<=i;){const a=s+i>>>1,o=Fr[a];if(o<n)s=a+1;else if(o>n)i=a-1;else return Fr[a+r]}return-1}let Yt=class Tt{constructor(){this.preprocessor=new X_,this.tokenQueue=[],this.allowCDATA=!1,this.state=oe,this.returnState="",this.charRefCode=-1,this.tempBuff=[],this.lastStartTagName="",this.consumedAfterSnapshot=-1,this.active=!1,this.currentCharacterToken=null,this.currentToken=null,this.currentAttr=null}_err(){}_errOnNextCodePoint(n){this._consume(),this._err(n),this._unconsume()}getNextToken(){for(;!this.tokenQueue.length&&this.active;){this.consumedAfterSnapshot=0;const n=this._consume();this._ensureHibernation()||this[this.state](n)}return this.tokenQueue.shift()}write(n,r){this.active=!0,this.preprocessor.write(n,r)}insertHtmlAtCurrentPos(n){this.active=!0,this.preprocessor.insertHtmlAtCurrentPos(n)}_ensureHibernation(){if(this.preprocessor.endOfChunkHit){for(;this.consumedAfterSnapshot>0;this.consumedAfterSnapshot--)this.preprocessor.retreat();return this.active=!1,this.tokenQueue.push({type:Tt.HIBERNATION_TOKEN}),!0}return!1}_consume(){return this.consumedAfterSnapshot++,this.preprocessor.advance()}_unconsume(){this.consumedAfterSnapshot--,this.preprocessor.retreat()}_reconsumeInState(n){this.state=n,this._unconsume()}_consumeSequenceIfMatch(n,r,s){let i=0,a=!0;const o=n.length;let l=0,c=r,d;for(;l<o;l++){if(l>0&&(c=this._consume(),i++),c===N.EOF){a=!1;break}if(d=n[l],c!==d&&(s||c!==Fo(d))){a=!1;break}}if(!a)for(;i--;)this._unconsume();return a}_isTempBufferEqualToScriptString(){if(this.tempBuff.length!==vr.SCRIPT_STRING.length)return!1;for(let n=0;n<this.tempBuff.length;n++)if(this.tempBuff[n]!==vr.SCRIPT_STRING[n])return!1;return!0}_createStartTagToken(){this.currentToken={type:Tt.START_TAG_TOKEN,tagName:"",selfClosing:!1,ackSelfClosing:!1,attrs:[]}}_createEndTagToken(){this.currentToken={type:Tt.END_TAG_TOKEN,tagName:"",selfClosing:!1,attrs:[]}}_createCommentToken(){this.currentToken={type:Tt.COMMENT_TOKEN,data:""}}_createDoctypeToken(n){this.currentToken={type:Tt.DOCTYPE_TOKEN,name:n,forceQuirks:!1,publicId:null,systemId:null}}_createCharacterToken(n,r){this.currentCharacterToken={type:n,chars:r}}_createEOFToken(){this.currentToken={type:Tt.EOF_TOKEN}}_createAttr(n){this.currentAttr={name:n,value:""}}_leaveAttrName(n){Tt.getTokenAttr(this.currentToken,this.currentAttr.name)===null?this.currentToken.attrs.push(this.currentAttr):this._err(L.duplicateAttribute),this.state=n}_leaveAttrValue(n){this.state=n}_emitCurrentToken(){this._emitCurrentCharacterToken();const n=this.currentToken;this.currentToken=null,n.type===Tt.START_TAG_TOKEN?this.lastStartTagName=n.tagName:n.type===Tt.END_TAG_TOKEN&&(n.attrs.length>0&&this._err(L.endTagWithAttributes),n.selfClosing&&this._err(L.endTagWithTrailingSolidus)),this.tokenQueue.push(n)}_emitCurrentCharacterToken(){this.currentCharacterToken&&(this.tokenQueue.push(this.currentCharacterToken),this.currentCharacterToken=null)}_emitEOFToken(){this._createEOFToken(),this._emitCurrentToken()}_appendCharToCurrentCharacterToken(n,r){this.currentCharacterToken&&this.currentCharacterToken.type!==n&&this._emitCurrentCharacterToken(),this.currentCharacterToken?this.currentCharacterToken.chars+=r:this._createCharacterToken(n,r)}_emitCodePoint(n){let r=Tt.CHARACTER_TOKEN;je(n)?r=Tt.WHITESPACE_CHARACTER_TOKEN:n===N.NULL&&(r=Tt.NULL_CHARACTER_TOKEN),this._appendCharToCurrentCharacterToken(r,ke(n))}_emitSeveralCodePoints(n){for(let r=0;r<n.length;r++)this._emitCodePoint(n[r])}_emitChars(n){this._appendCharToCurrentCharacterToken(Tt.CHARACTER_TOKEN,n)}_matchNamedCharacterReference(n){let r=null,s=1,i=NE(0,n);for(this.tempBuff.push(n);i>-1;){const a=Fr[i],o=a<Q_;o&&a&$y&&(r=a&zy?[Fr[++i],Fr[++i]]:[Fr[++i]],s=0);const c=this._consume();if(this.tempBuff.push(c),s++,c===N.EOF)break;o?i=a&Wy?NE(i,c):-1:i=c===a?++i:-1}for(;s--;)this.tempBuff.pop(),this._unconsume();return r}_isCharacterReferenceInAttribute(){return this.returnState===oo||this.returnState===lo||this.returnState===co}_isCharacterReferenceAttributeQuirk(n){if(!n&&this._isCharacterReferenceInAttribute()){const r=this._consume();return this._unconsume(),r===N.EQUALS_SIGN||hd(r)}return!1}_flushCodePointsConsumedAsCharacterReference(){if(this._isCharacterReferenceInAttribute())for(let n=0;n<this.tempBuff.length;n++)this.currentAttr.value+=ke(this.tempBuff[n]);else this._emitSeveralCodePoints(this.tempBuff);this.tempBuff=[]}[oe](n){this.preprocessor.dropParsedChunk(),n===N.LESS_THAN_SIGN?this.state=kx:n===N.AMPERSAND?(this.returnState=oe,this.state=ls):n===N.NULL?(this._err(L.unexpectedNullCharacter),this._emitCodePoint(n)):n===N.EOF?this._emitEOFToken():this._emitCodePoint(n)}[ps](n){this.preprocessor.dropParsedChunk(),n===N.AMPERSAND?(this.returnState=ps,this.state=ls):n===N.LESS_THAN_SIGN?this.state=Dx:n===N.NULL?(this._err(L.unexpectedNullCharacter),this._emitChars(xe.REPLACEMENT_CHARACTER)):n===N.EOF?this._emitEOFToken():this._emitCodePoint(n)}[Li](n){this.preprocessor.dropParsedChunk(),n===N.LESS_THAN_SIGN?this.state=Px:n===N.NULL?(this._err(L.unexpectedNullCharacter),this._emitChars(xe.REPLACEMENT_CHARACTER)):n===N.EOF?this._emitEOFToken():this._emitCodePoint(n)}[Rn](n){this.preprocessor.dropParsedChunk(),n===N.LESS_THAN_SIGN?this.state=Hx:n===N.NULL?(this._err(L.unexpectedNullCharacter),this._emitChars(xe.REPLACEMENT_CHARACTER)):n===N.EOF?this._emitEOFToken():this._emitCodePoint(n)}[Vy](n){this.preprocessor.dropParsedChunk(),n===N.NULL?(this._err(L.unexpectedNullCharacter),this._emitChars(xe.REPLACEMENT_CHARACTER)):n===N.EOF?this._emitEOFToken():this._emitCodePoint(n)}[kx](n){n===N.EXCLAMATION_MARK?this.state=Jx:n===N.SOLIDUS?this.state=Lx:Qn(n)?(this._createStartTagToken(),this._reconsumeInState(rd)):n===N.QUESTION_MARK?(this._err(L.unexpectedQuestionMarkInsteadOfTagName),this._createCommentToken(),this._reconsumeInState(Ni)):n===N.EOF?(this._err(L.eofBeforeTagName),this._emitChars("<"),this._emitEOFToken()):(this._err(L.invalidFirstCharacterOfTagName),this._emitChars("<"),this._reconsumeInState(oe))}[Lx](n){Qn(n)?(this._createEndTagToken(),this._reconsumeInState(rd)):n===N.GREATER_THAN_SIGN?(this._err(L.missingEndTagName),this.state=oe):n===N.EOF?(this._err(L.eofBeforeTagName),this._emitChars("</"),this._emitEOFToken()):(this._err(L.invalidFirstCharacterOfTagName),this._createCommentToken(),this._reconsumeInState(Ni))}[rd](n){je(n)?this.state=mn:n===N.SOLIDUS?this.state=Kn:n===N.GREATER_THAN_SIGN?(this.state=oe,this._emitCurrentToken()):Jt(n)?this.currentToken.tagName+=qn(n):n===N.NULL?(this._err(L.unexpectedNullCharacter),this.currentToken.tagName+=xe.REPLACEMENT_CHARACTER):n===N.EOF?(this._err(L.eofInTag),this._emitEOFToken()):this.currentToken.tagName+=ke(n)}[Dx](n){n===N.SOLIDUS?(this.tempBuff=[],this.state=Mx):(this._emitChars("<"),this._reconsumeInState(ps))}[Mx](n){Qn(n)?(this._createEndTagToken(),this._reconsumeInState(Fx)):(this._emitChars("</"),this._reconsumeInState(ps))}[Fx](n){if(Jt(n))this.currentToken.tagName+=qn(n),this.tempBuff.push(n);else if(Cr(n))this.currentToken.tagName+=ke(n),this.tempBuff.push(n);else{if(this.lastStartTagName===this.currentToken.tagName){if(je(n)){this.state=mn;return}if(n===N.SOLIDUS){this.state=Kn;return}if(n===N.GREATER_THAN_SIGN){this.state=oe,this._emitCurrentToken();return}}this._emitChars("</"),this._emitSeveralCodePoints(this.tempBuff),this._reconsumeInState(ps)}}[Px](n){n===N.SOLIDUS?(this.tempBuff=[],this.state=Ux):(this._emitChars("<"),this._reconsumeInState(Li))}[Ux](n){Qn(n)?(this._createEndTagToken(),this._reconsumeInState(Bx)):(this._emitChars("</"),this._reconsumeInState(Li))}[Bx](n){if(Jt(n))this.currentToken.tagName+=qn(n),this.tempBuff.push(n);else if(Cr(n))this.currentToken.tagName+=ke(n),this.tempBuff.push(n);else{if(this.lastStartTagName===this.currentToken.tagName){if(je(n)){this.state=mn;return}if(n===N.SOLIDUS){this.state=Kn;return}if(n===N.GREATER_THAN_SIGN){this._emitCurrentToken(),this.state=oe;return}}this._emitChars("</"),this._emitSeveralCodePoints(this.tempBuff),this._reconsumeInState(Li)}}[Hx](n){n===N.SOLIDUS?(this.tempBuff=[],this.state=Gx):n===N.EXCLAMATION_MARK?(this.state=zx,this._emitChars("<!")):(this._emitChars("<"),this._reconsumeInState(Rn))}[Gx](n){Qn(n)?(this._createEndTagToken(),this._reconsumeInState($x)):(this._emitChars("</"),this._reconsumeInState(Rn))}[$x](n){if(Jt(n))this.currentToken.tagName+=qn(n),this.tempBuff.push(n);else if(Cr(n))this.currentToken.tagName+=ke(n),this.tempBuff.push(n);else{if(this.lastStartTagName===this.currentToken.tagName){if(je(n)){this.state=mn;return}else if(n===N.SOLIDUS){this.state=Kn;return}else if(n===N.GREATER_THAN_SIGN){this._emitCurrentToken(),this.state=oe;return}}this._emitChars("</"),this._emitSeveralCodePoints(this.tempBuff),this._reconsumeInState(Rn)}}[zx](n){n===N.HYPHEN_MINUS?(this.state=Wx,this._emitChars("-")):this._reconsumeInState(Rn)}[Wx](n){n===N.HYPHEN_MINUS?(this.state=sd,this._emitChars("-")):this._reconsumeInState(Rn)}[Qt](n){n===N.HYPHEN_MINUS?(this.state=Vx,this._emitChars("-")):n===N.LESS_THAN_SIGN?this.state=so:n===N.NULL?(this._err(L.unexpectedNullCharacter),this._emitChars(xe.REPLACEMENT_CHARACTER)):n===N.EOF?(this._err(L.eofInScriptHtmlCommentLikeText),this._emitEOFToken()):this._emitCodePoint(n)}[Vx](n){n===N.HYPHEN_MINUS?(this.state=sd,this._emitChars("-")):n===N.LESS_THAN_SIGN?this.state=so:n===N.NULL?(this._err(L.unexpectedNullCharacter),this.state=Qt,this._emitChars(xe.REPLACEMENT_CHARACTER)):n===N.EOF?(this._err(L.eofInScriptHtmlCommentLikeText),this._emitEOFToken()):(this.state=Qt,this._emitCodePoint(n))}[sd](n){n===N.HYPHEN_MINUS?this._emitChars("-"):n===N.LESS_THAN_SIGN?this.state=so:n===N.GREATER_THAN_SIGN?(this.state=Rn,this._emitChars(">")):n===N.NULL?(this._err(L.unexpectedNullCharacter),this.state=Qt,this._emitChars(xe.REPLACEMENT_CHARACTER)):n===N.EOF?(this._err(L.eofInScriptHtmlCommentLikeText),this._emitEOFToken()):(this.state=Qt,this._emitCodePoint(n))}[so](n){n===N.SOLIDUS?(this.tempBuff=[],this.state=Kx):Qn(n)?(this.tempBuff=[],this._emitChars("<"),this._reconsumeInState(qx)):(this._emitChars("<"),this._reconsumeInState(Qt))}[Kx](n){Qn(n)?(this._createEndTagToken(),this._reconsumeInState(Yx)):(this._emitChars("</"),this._reconsumeInState(Qt))}[Yx](n){if(Jt(n))this.currentToken.tagName+=qn(n),this.tempBuff.push(n);else if(Cr(n))this.currentToken.tagName+=ke(n),this.tempBuff.push(n);else{if(this.lastStartTagName===this.currentToken.tagName){if(je(n)){this.state=mn;return}if(n===N.SOLIDUS){this.state=Kn;return}if(n===N.GREATER_THAN_SIGN){this._emitCurrentToken(),this.state=oe;return}}this._emitChars("</"),this._emitSeveralCodePoints(this.tempBuff),this._reconsumeInState(Qt)}}[qx](n){je(n)||n===N.SOLIDUS||n===N.GREATER_THAN_SIGN?(this.state=this._isTempBufferEqualToScriptString()?Nn:Qt,this._emitCodePoint(n)):Jt(n)?(this.tempBuff.push(Fo(n)),this._emitCodePoint(n)):Cr(n)?(this.tempBuff.push(n),this._emitCodePoint(n)):this._reconsumeInState(Qt)}[Nn](n){n===N.HYPHEN_MINUS?(this.state=Xx,this._emitChars("-")):n===N.LESS_THAN_SIGN?(this.state=io,this._emitChars("<")):n===N.NULL?(this._err(L.unexpectedNullCharacter),this._emitChars(xe.REPLACEMENT_CHARACTER)):n===N.EOF?(this._err(L.eofInScriptHtmlCommentLikeText),this._emitEOFToken()):this._emitCodePoint(n)}[Xx](n){n===N.HYPHEN_MINUS?(this.state=Zx,this._emitChars("-")):n===N.LESS_THAN_SIGN?(this.state=io,this._emitChars("<")):n===N.NULL?(this._err(L.unexpectedNullCharacter),this.state=Nn,this._emitChars(xe.REPLACEMENT_CHARACTER)):n===N.EOF?(this._err(L.eofInScriptHtmlCommentLikeText),this._emitEOFToken()):(this.state=Nn,this._emitCodePoint(n))}[Zx](n){n===N.HYPHEN_MINUS?this._emitChars("-"):n===N.LESS_THAN_SIGN?(this.state=io,this._emitChars("<")):n===N.GREATER_THAN_SIGN?(this.state=Rn,this._emitChars(">")):n===N.NULL?(this._err(L.unexpectedNullCharacter),this.state=Nn,this._emitChars(xe.REPLACEMENT_CHARACTER)):n===N.EOF?(this._err(L.eofInScriptHtmlCommentLikeText),this._emitEOFToken()):(this.state=Nn,this._emitCodePoint(n))}[io](n){n===N.SOLIDUS?(this.tempBuff=[],this.state=Qx,this._emitChars("/")):this._reconsumeInState(Nn)}[Qx](n){je(n)||n===N.SOLIDUS||n===N.GREATER_THAN_SIGN?(this.state=this._isTempBufferEqualToScriptString()?Qt:Nn,this._emitCodePoint(n)):Jt(n)?(this.tempBuff.push(Fo(n)),this._emitCodePoint(n)):Cr(n)?(this.tempBuff.push(n),this._emitCodePoint(n)):this._reconsumeInState(Nn)}[mn](n){je(n)||(n===N.SOLIDUS||n===N.GREATER_THAN_SIGN||n===N.EOF?this._reconsumeInState(id):n===N.EQUALS_SIGN?(this._err(L.unexpectedEqualsSignBeforeAttributeName),this._createAttr("="),this.state=ao):(this._createAttr(""),this._reconsumeInState(ao)))}[ao](n){je(n)||n===N.SOLIDUS||n===N.GREATER_THAN_SIGN||n===N.EOF?(this._leaveAttrName(id),this._unconsume()):n===N.EQUALS_SIGN?this._leaveAttrName(ad):Jt(n)?this.currentAttr.name+=qn(n):n===N.QUOTATION_MARK||n===N.APOSTROPHE||n===N.LESS_THAN_SIGN?(this._err(L.unexpectedCharacterInAttributeName),this.currentAttr.name+=ke(n)):n===N.NULL?(this._err(L.unexpectedNullCharacter),this.currentAttr.name+=xe.REPLACEMENT_CHARACTER):this.currentAttr.name+=ke(n)}[id](n){je(n)||(n===N.SOLIDUS?this.state=Kn:n===N.EQUALS_SIGN?this.state=ad:n===N.GREATER_THAN_SIGN?(this.state=oe,this._emitCurrentToken()):n===N.EOF?(this._err(L.eofInTag),this._emitEOFToken()):(this._createAttr(""),this._reconsumeInState(ao)))}[ad](n){je(n)||(n===N.QUOTATION_MARK?this.state=oo:n===N.APOSTROPHE?this.state=lo:n===N.GREATER_THAN_SIGN?(this._err(L.missingAttributeValue),this.state=oe,this._emitCurrentToken()):this._reconsumeInState(co))}[oo](n){n===N.QUOTATION_MARK?this.state=od:n===N.AMPERSAND?(this.returnState=oo,this.state=ls):n===N.NULL?(this._err(L.unexpectedNullCharacter),this.currentAttr.value+=xe.REPLACEMENT_CHARACTER):n===N.EOF?(this._err(L.eofInTag),this._emitEOFToken()):this.currentAttr.value+=ke(n)}[lo](n){n===N.APOSTROPHE?this.state=od:n===N.AMPERSAND?(this.returnState=lo,this.state=ls):n===N.NULL?(this._err(L.unexpectedNullCharacter),this.currentAttr.value+=xe.REPLACEMENT_CHARACTER):n===N.EOF?(this._err(L.eofInTag),this._emitEOFToken()):this.currentAttr.value+=ke(n)}[co](n){je(n)?this._leaveAttrValue(mn):n===N.AMPERSAND?(this.returnState=co,this.state=ls):n===N.GREATER_THAN_SIGN?(this._leaveAttrValue(oe),this._emitCurrentToken()):n===N.NULL?(this._err(L.unexpectedNullCharacter),this.currentAttr.value+=xe.REPLACEMENT_CHARACTER):n===N.QUOTATION_MARK||n===N.APOSTROPHE||n===N.LESS_THAN_SIGN||n===N.EQUALS_SIGN||n===N.GRAVE_ACCENT?(this._err(L.unexpectedCharacterInUnquotedAttributeValue),this.currentAttr.value+=ke(n)):n===N.EOF?(this._err(L.eofInTag),this._emitEOFToken()):this.currentAttr.value+=ke(n)}[od](n){je(n)?this._leaveAttrValue(mn):n===N.SOLIDUS?this._leaveAttrValue(Kn):n===N.GREATER_THAN_SIGN?(this._leaveAttrValue(oe),this._emitCurrentToken()):n===N.EOF?(this._err(L.eofInTag),this._emitEOFToken()):(this._err(L.missingWhitespaceBetweenAttributes),this._reconsumeInState(mn))}[Kn](n){n===N.GREATER_THAN_SIGN?(this.currentToken.selfClosing=!0,this.state=oe,this._emitCurrentToken()):n===N.EOF?(this._err(L.eofInTag),this._emitEOFToken()):(this._err(L.unexpectedSolidusInTag),this._reconsumeInState(mn))}[Ni](n){n===N.GREATER_THAN_SIGN?(this.state=oe,this._emitCurrentToken()):n===N.EOF?(this._emitCurrentToken(),this._emitEOFToken()):n===N.NULL?(this._err(L.unexpectedNullCharacter),this.currentToken.data+=xe.REPLACEMENT_CHARACTER):this.currentToken.data+=ke(n)}[Jx](n){this._consumeSequenceIfMatch(vr.DASH_DASH_STRING,n,!0)?(this._createCommentToken(),this.state=eE):this._consumeSequenceIfMatch(vr.DOCTYPE_STRING,n,!1)?this.state=oE:this._consumeSequenceIfMatch(vr.CDATA_START_STRING,n,!0)?this.allowCDATA?this.state=fo:(this._err(L.cdataInHtmlContent),this._createCommentToken(),this.currentToken.data="[CDATA[",this.state=Ni):this._ensureHibernation()||(this._err(L.incorrectlyOpenedComment),this._createCommentToken(),this._reconsumeInState(Ni))}[eE](n){n===N.HYPHEN_MINUS?this.state=tE:n===N.GREATER_THAN_SIGN?(this._err(L.abruptClosingOfEmptyComment),this.state=oe,this._emitCurrentToken()):this._reconsumeInState(Yn)}[tE](n){n===N.HYPHEN_MINUS?this.state=ho:n===N.GREATER_THAN_SIGN?(this._err(L.abruptClosingOfEmptyComment),this.state=oe,this._emitCurrentToken()):n===N.EOF?(this._err(L.eofInComment),this._emitCurrentToken(),this._emitEOFToken()):(this.currentToken.data+="-",this._reconsumeInState(Yn))}[Yn](n){n===N.HYPHEN_MINUS?this.state=uo:n===N.LESS_THAN_SIGN?(this.currentToken.data+="<",this.state=nE):n===N.NULL?(this._err(L.unexpectedNullCharacter),this.currentToken.data+=xe.REPLACEMENT_CHARACTER):n===N.EOF?(this._err(L.eofInComment),this._emitCurrentToken(),this._emitEOFToken()):this.currentToken.data+=ke(n)}[nE](n){n===N.EXCLAMATION_MARK?(this.currentToken.data+="!",this.state=rE):n===N.LESS_THAN_SIGN?this.currentToken.data+="!":this._reconsumeInState(Yn)}[rE](n){n===N.HYPHEN_MINUS?this.state=sE:this._reconsumeInState(Yn)}[sE](n){n===N.HYPHEN_MINUS?this.state=iE:this._reconsumeInState(uo)}[iE](n){n!==N.GREATER_THAN_SIGN&&n!==N.EOF&&this._err(L.nestedComment),this._reconsumeInState(ho)}[uo](n){n===N.HYPHEN_MINUS?this.state=ho:n===N.EOF?(this._err(L.eofInComment),this._emitCurrentToken(),this._emitEOFToken()):(this.currentToken.data+="-",this._reconsumeInState(Yn))}[ho](n){n===N.GREATER_THAN_SIGN?(this.state=oe,this._emitCurrentToken()):n===N.EXCLAMATION_MARK?this.state=aE:n===N.HYPHEN_MINUS?this.currentToken.data+="-":n===N.EOF?(this._err(L.eofInComment),this._emitCurrentToken(),this._emitEOFToken()):(this.currentToken.data+="--",this._reconsumeInState(Yn))}[aE](n){n===N.HYPHEN_MINUS?(this.currentToken.data+="--!",this.state=uo):n===N.GREATER_THAN_SIGN?(this._err(L.incorrectlyClosedComment),this.state=oe,this._emitCurrentToken()):n===N.EOF?(this._err(L.eofInComment),this._emitCurrentToken(),this._emitEOFToken()):(this.currentToken.data+="--!",this._reconsumeInState(Yn))}[oE](n){je(n)?this.state=po:n===N.GREATER_THAN_SIGN?this._reconsumeInState(po):n===N.EOF?(this._err(L.eofInDoctype),this._createDoctypeToken(null),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._err(L.missingWhitespaceBeforeDoctypeName),this._reconsumeInState(po))}[po](n){je(n)||(Jt(n)?(this._createDoctypeToken(qn(n)),this.state=mo):n===N.NULL?(this._err(L.unexpectedNullCharacter),this._createDoctypeToken(xe.REPLACEMENT_CHARACTER),this.state=mo):n===N.GREATER_THAN_SIGN?(this._err(L.missingDoctypeName),this._createDoctypeToken(null),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this.state=oe):n===N.EOF?(this._err(L.eofInDoctype),this._createDoctypeToken(null),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._createDoctypeToken(ke(n)),this.state=mo))}[mo](n){je(n)?this.state=lE:n===N.GREATER_THAN_SIGN?(this.state=oe,this._emitCurrentToken()):Jt(n)?this.currentToken.name+=qn(n):n===N.NULL?(this._err(L.unexpectedNullCharacter),this.currentToken.name+=xe.REPLACEMENT_CHARACTER):n===N.EOF?(this._err(L.eofInDoctype),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):this.currentToken.name+=ke(n)}[lE](n){je(n)||(n===N.GREATER_THAN_SIGN?(this.state=oe,this._emitCurrentToken()):n===N.EOF?(this._err(L.eofInDoctype),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):this._consumeSequenceIfMatch(vr.PUBLIC_STRING,n,!1)?this.state=cE:this._consumeSequenceIfMatch(vr.SYSTEM_STRING,n,!1)?this.state=hE:this._ensureHibernation()||(this._err(L.invalidCharacterSequenceAfterDoctypeName),this.currentToken.forceQuirks=!0,this._reconsumeInState(jn)))}[cE](n){je(n)?this.state=dE:n===N.QUOTATION_MARK?(this._err(L.missingWhitespaceAfterDoctypePublicKeyword),this.currentToken.publicId="",this.state=ld):n===N.APOSTROPHE?(this._err(L.missingWhitespaceAfterDoctypePublicKeyword),this.currentToken.publicId="",this.state=cd):n===N.GREATER_THAN_SIGN?(this._err(L.missingDoctypePublicIdentifier),this.currentToken.forceQuirks=!0,this.state=oe,this._emitCurrentToken()):n===N.EOF?(this._err(L.eofInDoctype),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._err(L.missingQuoteBeforeDoctypePublicIdentifier),this.currentToken.forceQuirks=!0,this._reconsumeInState(jn))}[dE](n){je(n)||(n===N.QUOTATION_MARK?(this.currentToken.publicId="",this.state=ld):n===N.APOSTROPHE?(this.currentToken.publicId="",this.state=cd):n===N.GREATER_THAN_SIGN?(this._err(L.missingDoctypePublicIdentifier),this.currentToken.forceQuirks=!0,this.state=oe,this._emitCurrentToken()):n===N.EOF?(this._err(L.eofInDoctype),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._err(L.missingQuoteBeforeDoctypePublicIdentifier),this.currentToken.forceQuirks=!0,this._reconsumeInState(jn)))}[ld](n){n===N.QUOTATION_MARK?this.state=dd:n===N.NULL?(this._err(L.unexpectedNullCharacter),this.currentToken.publicId+=xe.REPLACEMENT_CHARACTER):n===N.GREATER_THAN_SIGN?(this._err(L.abruptDoctypePublicIdentifier),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this.state=oe):n===N.EOF?(this._err(L.eofInDoctype),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):this.currentToken.publicId+=ke(n)}[cd](n){n===N.APOSTROPHE?this.state=dd:n===N.NULL?(this._err(L.unexpectedNullCharacter),this.currentToken.publicId+=xe.REPLACEMENT_CHARACTER):n===N.GREATER_THAN_SIGN?(this._err(L.abruptDoctypePublicIdentifier),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this.state=oe):n===N.EOF?(this._err(L.eofInDoctype),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):this.currentToken.publicId+=ke(n)}[dd](n){je(n)?this.state=uE:n===N.GREATER_THAN_SIGN?(this.state=oe,this._emitCurrentToken()):n===N.QUOTATION_MARK?(this._err(L.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers),this.currentToken.systemId="",this.state=ji):n===N.APOSTROPHE?(this._err(L.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers),this.currentToken.systemId="",this.state=Ai):n===N.EOF?(this._err(L.eofInDoctype),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._err(L.missingQuoteBeforeDoctypeSystemIdentifier),this.currentToken.forceQuirks=!0,this._reconsumeInState(jn))}[uE](n){je(n)||(n===N.GREATER_THAN_SIGN?(this._emitCurrentToken(),this.state=oe):n===N.QUOTATION_MARK?(this.currentToken.systemId="",this.state=ji):n===N.APOSTROPHE?(this.currentToken.systemId="",this.state=Ai):n===N.EOF?(this._err(L.eofInDoctype),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._err(L.missingQuoteBeforeDoctypeSystemIdentifier),this.currentToken.forceQuirks=!0,this._reconsumeInState(jn)))}[hE](n){je(n)?this.state=pE:n===N.QUOTATION_MARK?(this._err(L.missingWhitespaceAfterDoctypeSystemKeyword),this.currentToken.systemId="",this.state=ji):n===N.APOSTROPHE?(this._err(L.missingWhitespaceAfterDoctypeSystemKeyword),this.currentToken.systemId="",this.state=Ai):n===N.GREATER_THAN_SIGN?(this._err(L.missingDoctypeSystemIdentifier),this.currentToken.forceQuirks=!0,this.state=oe,this._emitCurrentToken()):n===N.EOF?(this._err(L.eofInDoctype),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._err(L.missingQuoteBeforeDoctypeSystemIdentifier),this.currentToken.forceQuirks=!0,this._reconsumeInState(jn))}[pE](n){je(n)||(n===N.QUOTATION_MARK?(this.currentToken.systemId="",this.state=ji):n===N.APOSTROPHE?(this.currentToken.systemId="",this.state=Ai):n===N.GREATER_THAN_SIGN?(this._err(L.missingDoctypeSystemIdentifier),this.currentToken.forceQuirks=!0,this.state=oe,this._emitCurrentToken()):n===N.EOF?(this._err(L.eofInDoctype),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._err(L.missingQuoteBeforeDoctypeSystemIdentifier),this.currentToken.forceQuirks=!0,this._reconsumeInState(jn)))}[ji](n){n===N.QUOTATION_MARK?this.state=ud:n===N.NULL?(this._err(L.unexpectedNullCharacter),this.currentToken.systemId+=xe.REPLACEMENT_CHARACTER):n===N.GREATER_THAN_SIGN?(this._err(L.abruptDoctypeSystemIdentifier),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this.state=oe):n===N.EOF?(this._err(L.eofInDoctype),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):this.currentToken.systemId+=ke(n)}[Ai](n){n===N.APOSTROPHE?this.state=ud:n===N.NULL?(this._err(L.unexpectedNullCharacter),this.currentToken.systemId+=xe.REPLACEMENT_CHARACTER):n===N.GREATER_THAN_SIGN?(this._err(L.abruptDoctypeSystemIdentifier),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this.state=oe):n===N.EOF?(this._err(L.eofInDoctype),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):this.currentToken.systemId+=ke(n)}[ud](n){je(n)||(n===N.GREATER_THAN_SIGN?(this._emitCurrentToken(),this.state=oe):n===N.EOF?(this._err(L.eofInDoctype),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._err(L.unexpectedCharacterAfterDoctypeSystemIdentifier),this._reconsumeInState(jn)))}[jn](n){n===N.GREATER_THAN_SIGN?(this._emitCurrentToken(),this.state=oe):n===N.NULL?this._err(L.unexpectedNullCharacter):n===N.EOF&&(this._emitCurrentToken(),this._emitEOFToken())}[fo](n){n===N.RIGHT_SQUARE_BRACKET?this.state=mE:n===N.EOF?(this._err(L.eofInCdata),this._emitEOFToken()):this._emitCodePoint(n)}[mE](n){n===N.RIGHT_SQUARE_BRACKET?this.state=fE:(this._emitChars("]"),this._reconsumeInState(fo))}[fE](n){n===N.GREATER_THAN_SIGN?this.state=oe:n===N.RIGHT_SQUARE_BRACKET?this._emitChars("]"):(this._emitChars("]]"),this._reconsumeInState(fo))}[ls](n){this.tempBuff=[N.AMPERSAND],n===N.NUMBER_SIGN?(this.tempBuff.push(n),this.state=xE):hd(n)?this._reconsumeInState(gE):(this._flushCodePointsConsumedAsCharacterReference(),this._reconsumeInState(this.returnState))}[gE](n){const r=this._matchNamedCharacterReference(n);if(this._ensureHibernation())this.tempBuff=[N.AMPERSAND];else if(r){const s=this.tempBuff[this.tempBuff.length-1]===N.SEMICOLON;this._isCharacterReferenceAttributeQuirk(s)||(s||this._errOnNextCodePoint(L.missingSemicolonAfterCharacterReference),this.tempBuff=r),this._flushCodePointsConsumedAsCharacterReference(),this.state=this.returnState}else this._flushCodePointsConsumedAsCharacterReference(),this.state=bE}[bE](n){hd(n)?this._isCharacterReferenceInAttribute()?this.currentAttr.value+=ke(n):this._emitCodePoint(n):(n===N.SEMICOLON&&this._err(L.unknownNamedCharacterReference),this._reconsumeInState(this.returnState))}[xE](n){this.charRefCode=0,n===N.LATIN_SMALL_X||n===N.LATIN_CAPITAL_X?(this.tempBuff.push(n),this.state=EE):this._reconsumeInState(TE)}[EE](n){J_(n)?this._reconsumeInState(yE):(this._err(L.absenceOfDigitsInNumericCharacterReference),this._flushCodePointsConsumedAsCharacterReference(),this._reconsumeInState(this.returnState))}[TE](n){Vi(n)?this._reconsumeInState(SE):(this._err(L.absenceOfDigitsInNumericCharacterReference),this._flushCodePointsConsumedAsCharacterReference(),this._reconsumeInState(this.returnState))}[yE](n){Ky(n)?this.charRefCode=this.charRefCode*16+n-55:Yy(n)?this.charRefCode=this.charRefCode*16+n-87:Vi(n)?this.charRefCode=this.charRefCode*16+n-48:n===N.SEMICOLON?this.state=_i:(this._err(L.missingSemicolonAfterCharacterReference),this._reconsumeInState(_i))}[SE](n){Vi(n)?this.charRefCode=this.charRefCode*10+n-48:n===N.SEMICOLON?this.state=_i:(this._err(L.missingSemicolonAfterCharacterReference),this._reconsumeInState(_i))}[_i](){if(this.charRefCode===N.NULL)this._err(L.nullCharacterReference),this.charRefCode=N.REPLACEMENT_CHARACTER;else if(this.charRefCode>1114111)this._err(L.characterReferenceOutsideUnicodeRange),this.charRefCode=N.REPLACEMENT_CHARACTER;else if(xe.isSurrogate(this.charRefCode))this._err(L.surrogateCharacterReference),this.charRefCode=N.REPLACEMENT_CHARACTER;else if(xe.isUndefinedCodePoint(this.charRefCode))this._err(L.noncharacterCharacterReference);else if(xe.isControlCodePoint(this.charRefCode)||this.charRefCode===N.CARRIAGE_RETURN){this._err(L.controlCharacterReference);const n=Z_[this.charRefCode];n&&(this.charRefCode=n)}this.tempBuff=[this.charRefCode],this._flushCodePointsConsumedAsCharacterReference(),this._reconsumeInState(this.returnState)}};Yt.CHARACTER_TOKEN="CHARACTER_TOKEN";Yt.NULL_CHARACTER_TOKEN="NULL_CHARACTER_TOKEN";Yt.WHITESPACE_CHARACTER_TOKEN="WHITESPACE_CHARACTER_TOKEN";Yt.START_TAG_TOKEN="START_TAG_TOKEN";Yt.END_TAG_TOKEN="END_TAG_TOKEN";Yt.COMMENT_TOKEN="COMMENT_TOKEN";Yt.DOCTYPE_TOKEN="DOCTYPE_TOKEN";Yt.EOF_TOKEN="EOF_TOKEN";Yt.HIBERNATION_TOKEN="HIBERNATION_TOKEN";Yt.MODE={DATA:oe,RCDATA:ps,RAWTEXT:Li,SCRIPT_DATA:Rn,PLAINTEXT:Vy};Yt.getTokenAttr=function(t,n){for(let r=t.attrs.length-1;r>=0;r--)if(t.attrs[r].name===n)return t.attrs[r].value;return null};var Hl=Yt,dn={};const pd=dn.NAMESPACES={HTML:"http://www.w3.org/1999/xhtml",MATHML:"http://www.w3.org/1998/Math/MathML",SVG:"http://www.w3.org/2000/svg",XLINK:"http://www.w3.org/1999/xlink",XML:"http://www.w3.org/XML/1998/namespace",XMLNS:"http://www.w3.org/2000/xmlns/"};dn.ATTRS={TYPE:"type",ACTION:"action",ENCODING:"encoding",PROMPT:"prompt",NAME:"name",COLOR:"color",FACE:"face",SIZE:"size"};dn.DOCUMENT_MODE={NO_QUIRKS:"no-quirks",QUIRKS:"quirks",LIMITED_QUIRKS:"limited-quirks"};const B=dn.TAG_NAMES={A:"a",ADDRESS:"address",ANNOTATION_XML:"annotation-xml",APPLET:"applet",AREA:"area",ARTICLE:"article",ASIDE:"aside",B:"b",BASE:"base",BASEFONT:"basefont",BGSOUND:"bgsound",BIG:"big",BLOCKQUOTE:"blockquote",BODY:"body",BR:"br",BUTTON:"button",CAPTION:"caption",CENTER:"center",CODE:"code",COL:"col",COLGROUP:"colgroup",DD:"dd",DESC:"desc",DETAILS:"details",DIALOG:"dialog",DIR:"dir",DIV:"div",DL:"dl",DT:"dt",EM:"em",EMBED:"embed",FIELDSET:"fieldset",FIGCAPTION:"figcaption",FIGURE:"figure",FONT:"font",FOOTER:"footer",FOREIGN_OBJECT:"foreignObject",FORM:"form",FRAME:"frame",FRAMESET:"frameset",H1:"h1",H2:"h2",H3:"h3",H4:"h4",H5:"h5",H6:"h6",HEAD:"head",HEADER:"header",HGROUP:"hgroup",HR:"hr",HTML:"html",I:"i",IMG:"img",IMAGE:"image",INPUT:"input",IFRAME:"iframe",KEYGEN:"keygen",LABEL:"label",LI:"li",LINK:"link",LISTING:"listing",MAIN:"main",MALIGNMARK:"malignmark",MARQUEE:"marquee",MATH:"math",MENU:"menu",META:"meta",MGLYPH:"mglyph",MI:"mi",MO:"mo",MN:"mn",MS:"ms",MTEXT:"mtext",NAV:"nav",NOBR:"nobr",NOFRAMES:"noframes",NOEMBED:"noembed",NOSCRIPT:"noscript",OBJECT:"object",OL:"ol",OPTGROUP:"optgroup",OPTION:"option",P:"p",PARAM:"param",PLAINTEXT:"plaintext",PRE:"pre",RB:"rb",RP:"rp",RT:"rt",RTC:"rtc",RUBY:"ruby",S:"s",SCRIPT:"script",SECTION:"section",SELECT:"select",SOURCE:"source",SMALL:"small",SPAN:"span",STRIKE:"strike",STRONG:"strong",STYLE:"style",SUB:"sub",SUMMARY:"summary",SUP:"sup",TABLE:"table",TBODY:"tbody",TEMPLATE:"template",TEXTAREA:"textarea",TFOOT:"tfoot",TD:"td",TH:"th",THEAD:"thead",TITLE:"title",TR:"tr",TRACK:"track",TT:"tt",U:"u",UL:"ul",SVG:"svg",VAR:"var",WBR:"wbr",XMP:"xmp"};dn.SPECIAL_ELEMENTS={[pd.HTML]:{[B.ADDRESS]:!0,[B.APPLET]:!0,[B.AREA]:!0,[B.ARTICLE]:!0,[B.ASIDE]:!0,[B.BASE]:!0,[B.BASEFONT]:!0,[B.BGSOUND]:!0,[B.BLOCKQUOTE]:!0,[B.BODY]:!0,[B.BR]:!0,[B.BUTTON]:!0,[B.CAPTION]:!0,[B.CENTER]:!0,[B.COL]:!0,[B.COLGROUP]:!0,[B.DD]:!0,[B.DETAILS]:!0,[B.DIR]:!0,[B.DIV]:!0,[B.DL]:!0,[B.DT]:!0,[B.EMBED]:!0,[B.FIELDSET]:!0,[B.FIGCAPTION]:!0,[B.FIGURE]:!0,[B.FOOTER]:!0,[B.FORM]:!0,[B.FRAME]:!0,[B.FRAMESET]:!0,[B.H1]:!0,[B.H2]:!0,[B.H3]:!0,[B.H4]:!0,[B.H5]:!0,[B.H6]:!0,[B.HEAD]:!0,[B.HEADER]:!0,[B.HGROUP]:!0,[B.HR]:!0,[B.HTML]:!0,[B.IFRAME]:!0,[B.IMG]:!0,[B.INPUT]:!0,[B.LI]:!0,[B.LINK]:!0,[B.LISTING]:!0,[B.MAIN]:!0,[B.MARQUEE]:!0,[B.MENU]:!0,[B.META]:!0,[B.NAV]:!0,[B.NOEMBED]:!0,[B.NOFRAMES]:!0,[B.NOSCRIPT]:!0,[B.OBJECT]:!0,[B.OL]:!0,[B.P]:!0,[B.PARAM]:!0,[B.PLAINTEXT]:!0,[B.PRE]:!0,[B.SCRIPT]:!0,[B.SECTION]:!0,[B.SELECT]:!0,[B.SOURCE]:!0,[B.STYLE]:!0,[B.SUMMARY]:!0,[B.TABLE]:!0,[B.TBODY]:!0,[B.TD]:!0,[B.TEMPLATE]:!0,[B.TEXTAREA]:!0,[B.TFOOT]:!0,[B.TH]:!0,[B.THEAD]:!0,[B.TITLE]:!0,[B.TR]:!0,[B.TRACK]:!0,[B.UL]:!0,[B.WBR]:!0,[B.XMP]:!0},[pd.MATHML]:{[B.MI]:!0,[B.MO]:!0,[B.MN]:!0,[B.MS]:!0,[B.MTEXT]:!0,[B.ANNOTATION_XML]:!0},[pd.SVG]:{[B.TITLE]:!0,[B.FOREIGN_OBJECT]:!0,[B.DESC]:!0}};const qy=dn,G=qy.TAG_NAMES,Ee=qy.NAMESPACES;function jE(t){switch(t.length){case 1:return t===G.P;case 2:return t===G.RB||t===G.RP||t===G.RT||t===G.DD||t===G.DT||t===G.LI;case 3:return t===G.RTC;case 6:return t===G.OPTION;case 8:return t===G.OPTGROUP}return!1}function e9(t){switch(t.length){case 1:return t===G.P;case 2:return t===G.RB||t===G.RP||t===G.RT||t===G.DD||t===G.DT||t===G.LI||t===G.TD||t===G.TH||t===G.TR;case 3:return t===G.RTC;case 5:return t===G.TBODY||t===G.TFOOT||t===G.THEAD;case 6:return t===G.OPTION;case 7:return t===G.CAPTION;case 8:return t===G.OPTGROUP||t===G.COLGROUP}return!1}function go(t,n){switch(t.length){case 2:if(t===G.TD||t===G.TH)return n===Ee.HTML;if(t===G.MI||t===G.MO||t===G.MN||t===G.MS)return n===Ee.MATHML;break;case 4:if(t===G.HTML)return n===Ee.HTML;if(t===G.DESC)return n===Ee.SVG;break;case 5:if(t===G.TABLE)return n===Ee.HTML;if(t===G.MTEXT)return n===Ee.MATHML;if(t===G.TITLE)return n===Ee.SVG;break;case 6:return(t===G.APPLET||t===G.OBJECT)&&n===Ee.HTML;case 7:return(t===G.CAPTION||t===G.MARQUEE)&&n===Ee.HTML;case 8:return t===G.TEMPLATE&&n===Ee.HTML;case 13:return t===G.FOREIGN_OBJECT&&n===Ee.SVG;case 14:return t===G.ANNOTATION_XML&&n===Ee.MATHML}return!1}let t9=class{constructor(n,r){this.stackTop=-1,this.items=[],this.current=n,this.currentTagName=null,this.currentTmplContent=null,this.tmplCount=0,this.treeAdapter=r}_indexOf(n){let r=-1;for(let s=this.stackTop;s>=0;s--)if(this.items[s]===n){r=s;break}return r}_isInTemplate(){return this.currentTagName===G.TEMPLATE&&this.treeAdapter.getNamespaceURI(this.current)===Ee.HTML}_updateCurrentElement(){this.current=this.items[this.stackTop],this.currentTagName=this.current&&this.treeAdapter.getTagName(this.current),this.currentTmplContent=this._isInTemplate()?this.treeAdapter.getTemplateContent(this.current):null}push(n){this.items[++this.stackTop]=n,this._updateCurrentElement(),this._isInTemplate()&&this.tmplCount++}pop(){this.stackTop--,this.tmplCount>0&&this._isInTemplate()&&this.tmplCount--,this._updateCurrentElement()}replace(n,r){const s=this._indexOf(n);this.items[s]=r,s===this.stackTop&&this._updateCurrentElement()}insertAfter(n,r){const s=this._indexOf(n)+1;this.items.splice(s,0,r),s===++this.stackTop&&this._updateCurrentElement()}popUntilTagNamePopped(n){for(;this.stackTop>-1;){const r=this.currentTagName,s=this.treeAdapter.getNamespaceURI(this.current);if(this.pop(),r===n&&s===Ee.HTML)break}}popUntilElementPopped(n){for(;this.stackTop>-1;){const r=this.current;if(this.pop(),r===n)break}}popUntilNumberedHeaderPopped(){for(;this.stackTop>-1;){const n=this.currentTagName,r=this.treeAdapter.getNamespaceURI(this.current);if(this.pop(),n===G.H1||n===G.H2||n===G.H3||n===G.H4||n===G.H5||n===G.H6&&r===Ee.HTML)break}}popUntilTableCellPopped(){for(;this.stackTop>-1;){const n=this.currentTagName,r=this.treeAdapter.getNamespaceURI(this.current);if(this.pop(),n===G.TD||n===G.TH&&r===Ee.HTML)break}}popAllUpToHtmlElement(){this.stackTop=0,this._updateCurrentElement()}clearBackToTableContext(){for(;this.currentTagName!==G.TABLE&&this.currentTagName!==G.TEMPLATE&&this.currentTagName!==G.HTML||this.treeAdapter.getNamespaceURI(this.current)!==Ee.HTML;)this.pop()}clearBackToTableBodyContext(){for(;this.currentTagName!==G.TBODY&&this.currentTagName!==G.TFOOT&&this.currentTagName!==G.THEAD&&this.currentTagName!==G.TEMPLATE&&this.currentTagName!==G.HTML||this.treeAdapter.getNamespaceURI(this.current)!==Ee.HTML;)this.pop()}clearBackToTableRowContext(){for(;this.currentTagName!==G.TR&&this.currentTagName!==G.TEMPLATE&&this.currentTagName!==G.HTML||this.treeAdapter.getNamespaceURI(this.current)!==Ee.HTML;)this.pop()}remove(n){for(let r=this.stackTop;r>=0;r--)if(this.items[r]===n){this.items.splice(r,1),this.stackTop--,this._updateCurrentElement();break}}tryPeekProperlyNestedBodyElement(){const n=this.items[1];return n&&this.treeAdapter.getTagName(n)===G.BODY?n:null}contains(n){return this._indexOf(n)>-1}getCommonAncestor(n){let r=this._indexOf(n);return--r>=0?this.items[r]:null}isRootHtmlElementCurrent(){return this.stackTop===0&&this.currentTagName===G.HTML}hasInScope(n){for(let r=this.stackTop;r>=0;r--){const s=this.treeAdapter.getTagName(this.items[r]),i=this.treeAdapter.getNamespaceURI(this.items[r]);if(s===n&&i===Ee.HTML)return!0;if(go(s,i))return!1}return!0}hasNumberedHeaderInScope(){for(let n=this.stackTop;n>=0;n--){const r=this.treeAdapter.getTagName(this.items[n]),s=this.treeAdapter.getNamespaceURI(this.items[n]);if((r===G.H1||r===G.H2||r===G.H3||r===G.H4||r===G.H5||r===G.H6)&&s===Ee.HTML)return!0;if(go(r,s))return!1}return!0}hasInListItemScope(n){for(let r=this.stackTop;r>=0;r--){const s=this.treeAdapter.getTagName(this.items[r]),i=this.treeAdapter.getNamespaceURI(this.items[r]);if(s===n&&i===Ee.HTML)return!0;if((s===G.UL||s===G.OL)&&i===Ee.HTML||go(s,i))return!1}return!0}hasInButtonScope(n){for(let r=this.stackTop;r>=0;r--){const s=this.treeAdapter.getTagName(this.items[r]),i=this.treeAdapter.getNamespaceURI(this.items[r]);if(s===n&&i===Ee.HTML)return!0;if(s===G.BUTTON&&i===Ee.HTML||go(s,i))return!1}return!0}hasInTableScope(n){for(let r=this.stackTop;r>=0;r--){const s=this.treeAdapter.getTagName(this.items[r]);if(this.treeAdapter.getNamespaceURI(this.items[r])===Ee.HTML){if(s===n)return!0;if(s===G.TABLE||s===G.TEMPLATE||s===G.HTML)return!1}}return!0}hasTableBodyContextInTableScope(){for(let n=this.stackTop;n>=0;n--){const r=this.treeAdapter.getTagName(this.items[n]);if(this.treeAdapter.getNamespaceURI(this.items[n])===Ee.HTML){if(r===G.TBODY||r===G.THEAD||r===G.TFOOT)return!0;if(r===G.TABLE||r===G.HTML)return!1}}return!0}hasInSelectScope(n){for(let r=this.stackTop;r>=0;r--){const s=this.treeAdapter.getTagName(this.items[r]);if(this.treeAdapter.getNamespaceURI(this.items[r])===Ee.HTML){if(s===n)return!0;if(s!==G.OPTION&&s!==G.OPTGROUP)return!1}}return!0}generateImpliedEndTags(){for(;jE(this.currentTagName);)this.pop()}generateImpliedEndTagsThoroughly(){for(;e9(this.currentTagName);)this.pop()}generateImpliedEndTagsWithExclusion(n){for(;jE(this.currentTagName)&&this.currentTagName!==n;)this.pop()}};var n9=t9;const bo=3;let D1=class Jn{constructor(n){this.length=0,this.entries=[],this.treeAdapter=n,this.bookmark=null}_getNoahArkConditionCandidates(n){const r=[];if(this.length>=bo){const s=this.treeAdapter.getAttrList(n).length,i=this.treeAdapter.getTagName(n),a=this.treeAdapter.getNamespaceURI(n);for(let o=this.length-1;o>=0;o--){const l=this.entries[o];if(l.type===Jn.MARKER_ENTRY)break;const c=l.element,d=this.treeAdapter.getAttrList(c);this.treeAdapter.getTagName(c)===i&&this.treeAdapter.getNamespaceURI(c)===a&&d.length===s&&r.push({idx:o,attrs:d})}}return r.length<bo?[]:r}_ensureNoahArkCondition(n){const r=this._getNoahArkConditionCandidates(n);let s=r.length;if(s){const i=this.treeAdapter.getAttrList(n),a=i.length,o=Object.create(null);for(let l=0;l<a;l++){const c=i[l];o[c.name]=c.value}for(let l=0;l<a;l++)for(let c=0;c<s;c++){const d=r[c].attrs[l];if(o[d.name]!==d.value&&(r.splice(c,1),s--),r.length<bo)return}for(let l=s-1;l>=bo-1;l--)this.entries.splice(r[l].idx,1),this.length--}}insertMarker(){this.entries.push({type:Jn.MARKER_ENTRY}),this.length++}pushElement(n,r){this._ensureNoahArkCondition(n),this.entries.push({type:Jn.ELEMENT_ENTRY,element:n,token:r}),this.length++}insertElementAfterBookmark(n,r){let s=this.length-1;for(;s>=0&&this.entries[s]!==this.bookmark;s--);this.entries.splice(s+1,0,{type:Jn.ELEMENT_ENTRY,element:n,token:r}),this.length++}removeEntry(n){for(let r=this.length-1;r>=0;r--)if(this.entries[r]===n){this.entries.splice(r,1),this.length--;break}}clearToLastMarker(){for(;this.length;){const n=this.entries.pop();if(this.length--,n.type===Jn.MARKER_ENTRY)break}}getElementEntryInScopeWithTagName(n){for(let r=this.length-1;r>=0;r--){const s=this.entries[r];if(s.type===Jn.MARKER_ENTRY)return null;if(this.treeAdapter.getTagName(s.element)===n)return s}return null}getElementEntry(n){for(let r=this.length-1;r>=0;r--){const s=this.entries[r];if(s.type===Jn.ELEMENT_ENTRY&&s.element===n)return s}return null}};D1.MARKER_ENTRY="MARKER_ENTRY";D1.ELEMENT_ENTRY="ELEMENT_ENTRY";var r9=D1;let Xy=class{constructor(n){const r={},s=this._getOverriddenMethods(this,r);for(const i of Object.keys(s))typeof s[i]=="function"&&(r[i]=n[i],n[i]=s[i])}_getOverriddenMethods(){throw new Error("Not implemented")}};Xy.install=function(t,n,r){t.__mixins||(t.__mixins=[]);for(let i=0;i<t.__mixins.length;i++)if(t.__mixins[i].constructor===n)return t.__mixins[i];const s=new n(t,r);return t.__mixins.push(s),s};var $n=Xy;const s9=$n;let i9=class extends s9{constructor(n){super(n),this.preprocessor=n,this.isEol=!1,this.lineStartPos=0,this.droppedBufferSize=0,this.offset=0,this.col=0,this.line=1}_getOverriddenMethods(n,r){return{advance(){const s=this.pos+1,i=this.html[s];return n.isEol&&(n.isEol=!1,n.line++,n.lineStartPos=s),(i===`
`||i==="\r"&&this.html[s+1]!==`
`)&&(n.isEol=!0),n.col=s-n.lineStartPos+1,n.offset=n.droppedBufferSize+s,r.advance.call(this)},retreat(){r.retreat.call(this),n.isEol=!1,n.col=this.pos-n.lineStartPos+1},dropParsedChunk(){const s=this.pos;r.dropParsedChunk.call(this);const i=s-this.pos;n.lineStartPos-=i,n.droppedBufferSize+=i,n.offset=n.droppedBufferSize+this.pos}}}};var Zy=i9;const AE=$n,md=Hl,a9=Zy;let o9=class extends AE{constructor(n){super(n),this.tokenizer=n,this.posTracker=AE.install(n.preprocessor,a9),this.currentAttrLocation=null,this.ctLoc=null}_getCurrentLocation(){return{startLine:this.posTracker.line,startCol:this.posTracker.col,startOffset:this.posTracker.offset,endLine:-1,endCol:-1,endOffset:-1}}_attachCurrentAttrLocationInfo(){this.currentAttrLocation.endLine=this.posTracker.line,this.currentAttrLocation.endCol=this.posTracker.col,this.currentAttrLocation.endOffset=this.posTracker.offset;const n=this.tokenizer.currentToken,r=this.tokenizer.currentAttr;n.location.attrs||(n.location.attrs=Object.create(null)),n.location.attrs[r.name]=this.currentAttrLocation}_getOverriddenMethods(n,r){const s={_createStartTagToken(){r._createStartTagToken.call(this),this.currentToken.location=n.ctLoc},_createEndTagToken(){r._createEndTagToken.call(this),this.currentToken.location=n.ctLoc},_createCommentToken(){r._createCommentToken.call(this),this.currentToken.location=n.ctLoc},_createDoctypeToken(i){r._createDoctypeToken.call(this,i),this.currentToken.location=n.ctLoc},_createCharacterToken(i,a){r._createCharacterToken.call(this,i,a),this.currentCharacterToken.location=n.ctLoc},_createEOFToken(){r._createEOFToken.call(this),this.currentToken.location=n._getCurrentLocation()},_createAttr(i){r._createAttr.call(this,i),n.currentAttrLocation=n._getCurrentLocation()},_leaveAttrName(i){r._leaveAttrName.call(this,i),n._attachCurrentAttrLocationInfo()},_leaveAttrValue(i){r._leaveAttrValue.call(this,i),n._attachCurrentAttrLocationInfo()},_emitCurrentToken(){const i=this.currentToken.location;this.currentCharacterToken&&(this.currentCharacterToken.location.endLine=i.startLine,this.currentCharacterToken.location.endCol=i.startCol,this.currentCharacterToken.location.endOffset=i.startOffset),this.currentToken.type===md.EOF_TOKEN?(i.endLine=i.startLine,i.endCol=i.startCol,i.endOffset=i.startOffset):(i.endLine=n.posTracker.line,i.endCol=n.posTracker.col+1,i.endOffset=n.posTracker.offset+1),r._emitCurrentToken.call(this)},_emitCurrentCharacterToken(){const i=this.currentCharacterToken&&this.currentCharacterToken.location;i&&i.endOffset===-1&&(i.endLine=n.posTracker.line,i.endCol=n.posTracker.col,i.endOffset=n.posTracker.offset),r._emitCurrentCharacterToken.call(this)}};return Object.keys(md.MODE).forEach(i=>{const a=md.MODE[i];s[a]=function(o){n.ctLoc=n._getCurrentLocation(),r[a].call(this,o)}}),s}};var Qy=o9;const l9=$n;let c9=class extends l9{constructor(n,r){super(n),this.onItemPop=r.onItemPop}_getOverriddenMethods(n,r){return{pop(){n.onItemPop(this.current),r.pop.call(this)},popAllUpToHtmlElement(){for(let s=this.stackTop;s>0;s--)n.onItemPop(this.items[s]);r.popAllUpToHtmlElement.call(this)},remove(s){n.onItemPop(this.current),r.remove.call(this,s)}}}};var d9=c9;const fd=$n,_E=Hl,u9=Qy,h9=d9,p9=dn,gd=p9.TAG_NAMES;let m9=class extends fd{constructor(n){super(n),this.parser=n,this.treeAdapter=this.parser.treeAdapter,this.posTracker=null,this.lastStartTagToken=null,this.lastFosterParentingLocation=null,this.currentToken=null}_setStartLocation(n){let r=null;this.lastStartTagToken&&(r=Object.assign({},this.lastStartTagToken.location),r.startTag=this.lastStartTagToken.location),this.treeAdapter.setNodeSourceCodeLocation(n,r)}_setEndLocation(n,r){if(this.treeAdapter.getNodeSourceCodeLocation(n)&&r.location){const i=r.location,a=this.treeAdapter.getTagName(n),o=r.type===_E.END_TAG_TOKEN&&a===r.tagName,l={};o?(l.endTag=Object.assign({},i),l.endLine=i.endLine,l.endCol=i.endCol,l.endOffset=i.endOffset):(l.endLine=i.startLine,l.endCol=i.startCol,l.endOffset=i.startOffset),this.treeAdapter.updateNodeSourceCodeLocation(n,l)}}_getOverriddenMethods(n,r){return{_bootstrap(s,i){r._bootstrap.call(this,s,i),n.lastStartTagToken=null,n.lastFosterParentingLocation=null,n.currentToken=null;const a=fd.install(this.tokenizer,u9);n.posTracker=a.posTracker,fd.install(this.openElements,h9,{onItemPop:function(o){n._setEndLocation(o,n.currentToken)}})},_runParsingLoop(s){r._runParsingLoop.call(this,s);for(let i=this.openElements.stackTop;i>=0;i--)n._setEndLocation(this.openElements.items[i],n.currentToken)},_processTokenInForeignContent(s){n.currentToken=s,r._processTokenInForeignContent.call(this,s)},_processToken(s){if(n.currentToken=s,r._processToken.call(this,s),s.type===_E.END_TAG_TOKEN&&(s.tagName===gd.HTML||s.tagName===gd.BODY&&this.openElements.hasInScope(gd.BODY)))for(let a=this.openElements.stackTop;a>=0;a--){const o=this.openElements.items[a];if(this.treeAdapter.getTagName(o)===s.tagName){n._setEndLocation(o,s);break}}},_setDocumentType(s){r._setDocumentType.call(this,s);const i=this.treeAdapter.getChildNodes(this.document),a=i.length;for(let o=0;o<a;o++){const l=i[o];if(this.treeAdapter.isDocumentTypeNode(l)){this.treeAdapter.setNodeSourceCodeLocation(l,s.location);break}}},_attachElementToTree(s){n._setStartLocation(s),n.lastStartTagToken=null,r._attachElementToTree.call(this,s)},_appendElement(s,i){n.lastStartTagToken=s,r._appendElement.call(this,s,i)},_insertElement(s,i){n.lastStartTagToken=s,r._insertElement.call(this,s,i)},_insertTemplate(s){n.lastStartTagToken=s,r._insertTemplate.call(this,s);const i=this.treeAdapter.getTemplateContent(this.openElements.current);this.treeAdapter.setNodeSourceCodeLocation(i,null)},_insertFakeRootElement(){r._insertFakeRootElement.call(this),this.treeAdapter.setNodeSourceCodeLocation(this.openElements.current,null)},_appendCommentNode(s,i){r._appendCommentNode.call(this,s,i);const a=this.treeAdapter.getChildNodes(i),o=a[a.length-1];this.treeAdapter.setNodeSourceCodeLocation(o,s.location)},_findFosterParentingLocation(){return n.lastFosterParentingLocation=r._findFosterParentingLocation.call(this),n.lastFosterParentingLocation},_insertCharacters(s){r._insertCharacters.call(this,s);const i=this._shouldFosterParentOnInsertion(),a=i&&n.lastFosterParentingLocation.parent||this.openElements.currentTmplContent||this.openElements.current,o=this.treeAdapter.getChildNodes(a),l=i&&n.lastFosterParentingLocation.beforeElement?o.indexOf(n.lastFosterParentingLocation.beforeElement)-1:o.length-1,c=o[l];if(this.treeAdapter.getNodeSourceCodeLocation(c)){const{endLine:h,endCol:x,endOffset:g}=s.location;this.treeAdapter.updateNodeSourceCodeLocation(c,{endLine:h,endCol:x,endOffset:g})}else this.treeAdapter.setNodeSourceCodeLocation(c,s.location)}}}};var f9=m9;const g9=$n;let b9=class extends g9{constructor(n,r){super(n),this.posTracker=null,this.onParseError=r.onParseError}_setErrorLocation(n){n.startLine=n.endLine=this.posTracker.line,n.startCol=n.endCol=this.posTracker.col,n.startOffset=n.endOffset=this.posTracker.offset}_reportError(n){const r={code:n,startLine:-1,startCol:-1,startOffset:-1,endLine:-1,endCol:-1,endOffset:-1};this._setErrorLocation(r),this.onParseError(r)}_getOverriddenMethods(n){return{_err(r){n._reportError(r)}}}};var M1=b9;const x9=M1,E9=Zy,T9=$n;let y9=class extends x9{constructor(n,r){super(n,r),this.posTracker=T9.install(n,E9),this.lastErrOffset=-1}_reportError(n){this.lastErrOffset!==this.posTracker.offset&&(this.lastErrOffset=this.posTracker.offset,super._reportError(n))}};var S9=y9;const N9=M1,j9=S9,A9=$n;let _9=class extends N9{constructor(n,r){super(n,r);const s=A9.install(n.preprocessor,j9,r);this.posTracker=s.posTracker}};var v9=_9;const R9=M1,w9=v9,I9=Qy,vE=$n;let C9=class extends R9{constructor(n,r){super(n,r),this.opts=r,this.ctLoc=null,this.locBeforeToken=!1}_setErrorLocation(n){this.ctLoc&&(n.startLine=this.ctLoc.startLine,n.startCol=this.ctLoc.startCol,n.startOffset=this.ctLoc.startOffset,n.endLine=this.locBeforeToken?this.ctLoc.startLine:this.ctLoc.endLine,n.endCol=this.locBeforeToken?this.ctLoc.startCol:this.ctLoc.endCol,n.endOffset=this.locBeforeToken?this.ctLoc.startOffset:this.ctLoc.endOffset)}_getOverriddenMethods(n,r){return{_bootstrap(s,i){r._bootstrap.call(this,s,i),vE.install(this.tokenizer,w9,n.opts),vE.install(this.tokenizer,I9)},_processInputToken(s){n.ctLoc=s.location,r._processInputToken.call(this,s)},_err(s,i){n.locBeforeToken=i&&i.beforeToken,n._reportError(s)}}}};var O9=C9,me={};const{DOCUMENT_MODE:k9}=dn;me.createDocument=function(){return{nodeName:"#document",mode:k9.NO_QUIRKS,childNodes:[]}};me.createDocumentFragment=function(){return{nodeName:"#document-fragment",childNodes:[]}};me.createElement=function(t,n,r){return{nodeName:t,tagName:t,attrs:r,namespaceURI:n,childNodes:[],parentNode:null}};me.createCommentNode=function(t){return{nodeName:"#comment",data:t,parentNode:null}};const Jy=function(t){return{nodeName:"#text",value:t,parentNode:null}},eS=me.appendChild=function(t,n){t.childNodes.push(n),n.parentNode=t},L9=me.insertBefore=function(t,n,r){const s=t.childNodes.indexOf(r);t.childNodes.splice(s,0,n),n.parentNode=t};me.setTemplateContent=function(t,n){t.content=n};me.getTemplateContent=function(t){return t.content};me.setDocumentType=function(t,n,r,s){let i=null;for(let a=0;a<t.childNodes.length;a++)if(t.childNodes[a].nodeName==="#documentType"){i=t.childNodes[a];break}i?(i.name=n,i.publicId=r,i.systemId=s):eS(t,{nodeName:"#documentType",name:n,publicId:r,systemId:s})};me.setDocumentMode=function(t,n){t.mode=n};me.getDocumentMode=function(t){return t.mode};me.detachNode=function(t){if(t.parentNode){const n=t.parentNode.childNodes.indexOf(t);t.parentNode.childNodes.splice(n,1),t.parentNode=null}};me.insertText=function(t,n){if(t.childNodes.length){const r=t.childNodes[t.childNodes.length-1];if(r.nodeName==="#text"){r.value+=n;return}}eS(t,Jy(n))};me.insertTextBefore=function(t,n,r){const s=t.childNodes[t.childNodes.indexOf(r)-1];s&&s.nodeName==="#text"?s.value+=n:L9(t,Jy(n),r)};me.adoptAttributes=function(t,n){const r=[];for(let s=0;s<t.attrs.length;s++)r.push(t.attrs[s].name);for(let s=0;s<n.length;s++)r.indexOf(n[s].name)===-1&&t.attrs.push(n[s])};me.getFirstChild=function(t){return t.childNodes[0]};me.getChildNodes=function(t){return t.childNodes};me.getParentNode=function(t){return t.parentNode};me.getAttrList=function(t){return t.attrs};me.getTagName=function(t){return t.tagName};me.getNamespaceURI=function(t){return t.namespaceURI};me.getTextNodeContent=function(t){return t.value};me.getCommentNodeContent=function(t){return t.data};me.getDocumentTypeNodeName=function(t){return t.name};me.getDocumentTypeNodePublicId=function(t){return t.publicId};me.getDocumentTypeNodeSystemId=function(t){return t.systemId};me.isTextNode=function(t){return t.nodeName==="#text"};me.isCommentNode=function(t){return t.nodeName==="#comment"};me.isDocumentTypeNode=function(t){return t.nodeName==="#documentType"};me.isElementNode=function(t){return!!t.tagName};me.setNodeSourceCodeLocation=function(t,n){t.sourceCodeLocation=n};me.getNodeSourceCodeLocation=function(t){return t.sourceCodeLocation};me.updateNodeSourceCodeLocation=function(t,n){t.sourceCodeLocation=Object.assign(t.sourceCodeLocation,n)};var D9=function(n,r){return r=r||Object.create(null),[n,r].reduce((s,i)=>(Object.keys(i).forEach(a=>{s[a]=i[a]}),s),Object.create(null))},Gl={};const{DOCUMENT_MODE:cs}=dn,tS="html",M9="about:legacy-compat",F9="http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd",nS=["+//silmaril//dtd html pro v0r11 19970101//","-//as//dtd html 3.0 aswedit + extensions//","-//advasoft ltd//dtd html 3.0 aswedit + extensions//","-//ietf//dtd html 2.0 level 1//","-//ietf//dtd html 2.0 level 2//","-//ietf//dtd html 2.0 strict level 1//","-//ietf//dtd html 2.0 strict level 2//","-//ietf//dtd html 2.0 strict//","-//ietf//dtd html 2.0//","-//ietf//dtd html 2.1e//","-//ietf//dtd html 3.0//","-//ietf//dtd html 3.2 final//","-//ietf//dtd html 3.2//","-//ietf//dtd html 3//","-//ietf//dtd html level 0//","-//ietf//dtd html level 1//","-//ietf//dtd html level 2//","-//ietf//dtd html level 3//","-//ietf//dtd html strict level 0//","-//ietf//dtd html strict level 1//","-//ietf//dtd html strict level 2//","-//ietf//dtd html strict level 3//","-//ietf//dtd html strict//","-//ietf//dtd html//","-//metrius//dtd metrius presentational//","-//microsoft//dtd internet explorer 2.0 html strict//","-//microsoft//dtd internet explorer 2.0 html//","-//microsoft//dtd internet explorer 2.0 tables//","-//microsoft//dtd internet explorer 3.0 html strict//","-//microsoft//dtd internet explorer 3.0 html//","-//microsoft//dtd internet explorer 3.0 tables//","-//netscape comm. corp.//dtd html//","-//netscape comm. corp.//dtd strict html//","-//o'reilly and associates//dtd html 2.0//","-//o'reilly and associates//dtd html extended 1.0//","-//o'reilly and associates//dtd html extended relaxed 1.0//","-//sq//dtd html 2.0 hotmetal + extensions//","-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//","-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//","-//spyglass//dtd html 2.0 extended//","-//sun microsystems corp.//dtd hotjava html//","-//sun microsystems corp.//dtd hotjava strict html//","-//w3c//dtd html 3 1995-03-24//","-//w3c//dtd html 3.2 draft//","-//w3c//dtd html 3.2 final//","-//w3c//dtd html 3.2//","-//w3c//dtd html 3.2s draft//","-//w3c//dtd html 4.0 frameset//","-//w3c//dtd html 4.0 transitional//","-//w3c//dtd html experimental 19960712//","-//w3c//dtd html experimental 970421//","-//w3c//dtd w3 html//","-//w3o//dtd w3 html 3.0//","-//webtechs//dtd mozilla html 2.0//","-//webtechs//dtd mozilla html//"],P9=nS.concat(["-//w3c//dtd html 4.01 frameset//","-//w3c//dtd html 4.01 transitional//"]),U9=["-//w3o//dtd w3 html strict 3.0//en//","-/w3c/dtd html 4.0 transitional/en","html"],rS=["-//w3c//dtd xhtml 1.0 frameset//","-//w3c//dtd xhtml 1.0 transitional//"],B9=rS.concat(["-//w3c//dtd html 4.01 frameset//","-//w3c//dtd html 4.01 transitional//"]);function RE(t){const n=t.indexOf('"')!==-1?"'":'"';return n+t+n}function wE(t,n){for(let r=0;r<n.length;r++)if(t.indexOf(n[r])===0)return!0;return!1}Gl.isConforming=function(t){return t.name===tS&&t.publicId===null&&(t.systemId===null||t.systemId===M9)};Gl.getDocumentMode=function(t){if(t.name!==tS)return cs.QUIRKS;const n=t.systemId;if(n&&n.toLowerCase()===F9)return cs.QUIRKS;let r=t.publicId;if(r!==null){if(r=r.toLowerCase(),U9.indexOf(r)>-1)return cs.QUIRKS;let s=n===null?P9:nS;if(wE(r,s))return cs.QUIRKS;if(s=n===null?rS:B9,wE(r,s))return cs.LIMITED_QUIRKS}return cs.NO_QUIRKS};Gl.serializeContent=function(t,n,r){let s="!DOCTYPE ";return t&&(s+=t),n?s+=" PUBLIC "+RE(n):r&&(s+=" SYSTEM"),r!==null&&(s+=" "+RE(r)),s};var yr={};const bd=Hl,F1=dn,Q=F1.TAG_NAMES,tt=F1.NAMESPACES,Po=F1.ATTRS,IE={TEXT_HTML:"text/html",APPLICATION_XML:"application/xhtml+xml"},H9="definitionurl",G9="definitionURL",$9={attributename:"attributeName",attributetype:"attributeType",basefrequency:"baseFrequency",baseprofile:"baseProfile",calcmode:"calcMode",clippathunits:"clipPathUnits",diffuseconstant:"diffuseConstant",edgemode:"edgeMode",filterunits:"filterUnits",glyphref:"glyphRef",gradienttransform:"gradientTransform",gradientunits:"gradientUnits",kernelmatrix:"kernelMatrix",kernelunitlength:"kernelUnitLength",keypoints:"keyPoints",keysplines:"keySplines",keytimes:"keyTimes",lengthadjust:"lengthAdjust",limitingconeangle:"limitingConeAngle",markerheight:"markerHeight",markerunits:"markerUnits",markerwidth:"markerWidth",maskcontentunits:"maskContentUnits",maskunits:"maskUnits",numoctaves:"numOctaves",pathlength:"pathLength",patterncontentunits:"patternContentUnits",patterntransform:"patternTransform",patternunits:"patternUnits",pointsatx:"pointsAtX",pointsaty:"pointsAtY",pointsatz:"pointsAtZ",preservealpha:"preserveAlpha",preserveaspectratio:"preserveAspectRatio",primitiveunits:"primitiveUnits",refx:"refX",refy:"refY",repeatcount:"repeatCount",repeatdur:"repeatDur",requiredextensions:"requiredExtensions",requiredfeatures:"requiredFeatures",specularconstant:"specularConstant",specularexponent:"specularExponent",spreadmethod:"spreadMethod",startoffset:"startOffset",stddeviation:"stdDeviation",stitchtiles:"stitchTiles",surfacescale:"surfaceScale",systemlanguage:"systemLanguage",tablevalues:"tableValues",targetx:"targetX",targety:"targetY",textlength:"textLength",viewbox:"viewBox",viewtarget:"viewTarget",xchannelselector:"xChannelSelector",ychannelselector:"yChannelSelector",zoomandpan:"zoomAndPan"},z9={"xlink:actuate":{prefix:"xlink",name:"actuate",namespace:tt.XLINK},"xlink:arcrole":{prefix:"xlink",name:"arcrole",namespace:tt.XLINK},"xlink:href":{prefix:"xlink",name:"href",namespace:tt.XLINK},"xlink:role":{prefix:"xlink",name:"role",namespace:tt.XLINK},"xlink:show":{prefix:"xlink",name:"show",namespace:tt.XLINK},"xlink:title":{prefix:"xlink",name:"title",namespace:tt.XLINK},"xlink:type":{prefix:"xlink",name:"type",namespace:tt.XLINK},"xml:base":{prefix:"xml",name:"base",namespace:tt.XML},"xml:lang":{prefix:"xml",name:"lang",namespace:tt.XML},"xml:space":{prefix:"xml",name:"space",namespace:tt.XML},xmlns:{prefix:"",name:"xmlns",namespace:tt.XMLNS},"xmlns:xlink":{prefix:"xmlns",name:"xlink",namespace:tt.XMLNS}},W9=yr.SVG_TAG_NAMES_ADJUSTMENT_MAP={altglyph:"altGlyph",altglyphdef:"altGlyphDef",altglyphitem:"altGlyphItem",animatecolor:"animateColor",animatemotion:"animateMotion",animatetransform:"animateTransform",clippath:"clipPath",feblend:"feBlend",fecolormatrix:"feColorMatrix",fecomponenttransfer:"feComponentTransfer",fecomposite:"feComposite",feconvolvematrix:"feConvolveMatrix",fediffuselighting:"feDiffuseLighting",fedisplacementmap:"feDisplacementMap",fedistantlight:"feDistantLight",feflood:"feFlood",fefunca:"feFuncA",fefuncb:"feFuncB",fefuncg:"feFuncG",fefuncr:"feFuncR",fegaussianblur:"feGaussianBlur",feimage:"feImage",femerge:"feMerge",femergenode:"feMergeNode",femorphology:"feMorphology",feoffset:"feOffset",fepointlight:"fePointLight",fespecularlighting:"feSpecularLighting",fespotlight:"feSpotLight",fetile:"feTile",feturbulence:"feTurbulence",foreignobject:"foreignObject",glyphref:"glyphRef",lineargradient:"linearGradient",radialgradient:"radialGradient",textpath:"textPath"},V9={[Q.B]:!0,[Q.BIG]:!0,[Q.BLOCKQUOTE]:!0,[Q.BODY]:!0,[Q.BR]:!0,[Q.CENTER]:!0,[Q.CODE]:!0,[Q.DD]:!0,[Q.DIV]:!0,[Q.DL]:!0,[Q.DT]:!0,[Q.EM]:!0,[Q.EMBED]:!0,[Q.H1]:!0,[Q.H2]:!0,[Q.H3]:!0,[Q.H4]:!0,[Q.H5]:!0,[Q.H6]:!0,[Q.HEAD]:!0,[Q.HR]:!0,[Q.I]:!0,[Q.IMG]:!0,[Q.LI]:!0,[Q.LISTING]:!0,[Q.MENU]:!0,[Q.META]:!0,[Q.NOBR]:!0,[Q.OL]:!0,[Q.P]:!0,[Q.PRE]:!0,[Q.RUBY]:!0,[Q.S]:!0,[Q.SMALL]:!0,[Q.SPAN]:!0,[Q.STRONG]:!0,[Q.STRIKE]:!0,[Q.SUB]:!0,[Q.SUP]:!0,[Q.TABLE]:!0,[Q.TT]:!0,[Q.U]:!0,[Q.UL]:!0,[Q.VAR]:!0};yr.causesExit=function(t){const n=t.tagName;return n===Q.FONT&&(bd.getTokenAttr(t,Po.COLOR)!==null||bd.getTokenAttr(t,Po.SIZE)!==null||bd.getTokenAttr(t,Po.FACE)!==null)?!0:V9[n]};yr.adjustTokenMathMLAttrs=function(t){for(let n=0;n<t.attrs.length;n++)if(t.attrs[n].name===H9){t.attrs[n].name=G9;break}};yr.adjustTokenSVGAttrs=function(t){for(let n=0;n<t.attrs.length;n++){const r=$9[t.attrs[n].name];r&&(t.attrs[n].name=r)}};yr.adjustTokenXMLAttrs=function(t){for(let n=0;n<t.attrs.length;n++){const r=z9[t.attrs[n].name];r&&(t.attrs[n].prefix=r.prefix,t.attrs[n].name=r.name,t.attrs[n].namespace=r.namespace)}};yr.adjustTokenSVGTagName=function(t){const n=W9[t.tagName];n&&(t.tagName=n)};function K9(t,n){return n===tt.MATHML&&(t===Q.MI||t===Q.MO||t===Q.MN||t===Q.MS||t===Q.MTEXT)}function Y9(t,n,r){if(n===tt.MATHML&&t===Q.ANNOTATION_XML){for(let s=0;s<r.length;s++)if(r[s].name===Po.ENCODING){const i=r[s].value.toLowerCase();return i===IE.TEXT_HTML||i===IE.APPLICATION_XML}}return n===tt.SVG&&(t===Q.FOREIGN_OBJECT||t===Q.DESC||t===Q.TITLE)}yr.isIntegrationPoint=function(t,n,r,s){return!!((!s||s===tt.HTML)&&Y9(t,n,r)||(!s||s===tt.MATHML)&&K9(t,n))};const j=Hl,q9=n9,CE=r9,X9=f9,Z9=O9,OE=$n,Q9=me,J9=D9,kE=Gl,xn=yr,rt=L1,ev=cn,Xr=dn,u=Xr.TAG_NAMES,V=Xr.NAMESPACES,sS=Xr.ATTRS,tv={scriptingEnabled:!0,sourceCodeLocationInfo:!1,onParseError:null,treeAdapter:Q9},iS="hidden",nv=8,rv=3,aS="INITIAL_MODE",P1="BEFORE_HTML_MODE",$l="BEFORE_HEAD_MODE",Qs="IN_HEAD_MODE",oS="IN_HEAD_NO_SCRIPT_MODE",zl="AFTER_HEAD_MODE",yn="IN_BODY_MODE",gl="TEXT_MODE",ut="IN_TABLE_MODE",lS="IN_TABLE_TEXT_MODE",Wl="IN_CAPTION_MODE",_a="IN_COLUMN_GROUP_MODE",zt="IN_TABLE_BODY_MODE",Un="IN_ROW_MODE",Vl="IN_CELL_MODE",U1="IN_SELECT_MODE",B1="IN_SELECT_IN_TABLE_MODE",bl="IN_TEMPLATE_MODE",H1="AFTER_BODY_MODE",Kl="IN_FRAMESET_MODE",cS="AFTER_FRAMESET_MODE",dS="AFTER_AFTER_BODY_MODE",uS="AFTER_AFTER_FRAMESET_MODE",sv={[u.TR]:Un,[u.TBODY]:zt,[u.THEAD]:zt,[u.TFOOT]:zt,[u.CAPTION]:Wl,[u.COLGROUP]:_a,[u.TABLE]:ut,[u.BODY]:yn,[u.FRAMESET]:Kl},iv={[u.CAPTION]:ut,[u.COLGROUP]:ut,[u.TBODY]:ut,[u.TFOOT]:ut,[u.THEAD]:ut,[u.COL]:_a,[u.TR]:zt,[u.TD]:Un,[u.TH]:Un},LE={[aS]:{[j.CHARACTER_TOKEN]:Ri,[j.NULL_CHARACTER_TOKEN]:Ri,[j.WHITESPACE_CHARACTER_TOKEN]:ce,[j.COMMENT_TOKEN]:ze,[j.DOCTYPE_TOKEN]:fv,[j.START_TAG_TOKEN]:Ri,[j.END_TAG_TOKEN]:Ri,[j.EOF_TOKEN]:Ri},[P1]:{[j.CHARACTER_TOKEN]:Ki,[j.NULL_CHARACTER_TOKEN]:Ki,[j.WHITESPACE_CHARACTER_TOKEN]:ce,[j.COMMENT_TOKEN]:ze,[j.DOCTYPE_TOKEN]:ce,[j.START_TAG_TOKEN]:gv,[j.END_TAG_TOKEN]:bv,[j.EOF_TOKEN]:Ki},[$l]:{[j.CHARACTER_TOKEN]:Yi,[j.NULL_CHARACTER_TOKEN]:Yi,[j.WHITESPACE_CHARACTER_TOKEN]:ce,[j.COMMENT_TOKEN]:ze,[j.DOCTYPE_TOKEN]:xo,[j.START_TAG_TOKEN]:xv,[j.END_TAG_TOKEN]:Ev,[j.EOF_TOKEN]:Yi},[Qs]:{[j.CHARACTER_TOKEN]:qi,[j.NULL_CHARACTER_TOKEN]:qi,[j.WHITESPACE_CHARACTER_TOKEN]:yt,[j.COMMENT_TOKEN]:ze,[j.DOCTYPE_TOKEN]:xo,[j.START_TAG_TOKEN]:qe,[j.END_TAG_TOKEN]:Zr,[j.EOF_TOKEN]:qi},[oS]:{[j.CHARACTER_TOKEN]:Xi,[j.NULL_CHARACTER_TOKEN]:Xi,[j.WHITESPACE_CHARACTER_TOKEN]:yt,[j.COMMENT_TOKEN]:ze,[j.DOCTYPE_TOKEN]:xo,[j.START_TAG_TOKEN]:Tv,[j.END_TAG_TOKEN]:yv,[j.EOF_TOKEN]:Xi},[zl]:{[j.CHARACTER_TOKEN]:Zi,[j.NULL_CHARACTER_TOKEN]:Zi,[j.WHITESPACE_CHARACTER_TOKEN]:yt,[j.COMMENT_TOKEN]:ze,[j.DOCTYPE_TOKEN]:xo,[j.START_TAG_TOKEN]:Sv,[j.END_TAG_TOKEN]:Nv,[j.EOF_TOKEN]:Zi},[yn]:{[j.CHARACTER_TOKEN]:Eo,[j.NULL_CHARACTER_TOKEN]:ce,[j.WHITESPACE_CHARACTER_TOKEN]:Rr,[j.COMMENT_TOKEN]:ze,[j.DOCTYPE_TOKEN]:ce,[j.START_TAG_TOKEN]:vt,[j.END_TAG_TOKEN]:G1,[j.EOF_TOKEN]:_n},[gl]:{[j.CHARACTER_TOKEN]:yt,[j.NULL_CHARACTER_TOKEN]:yt,[j.WHITESPACE_CHARACTER_TOKEN]:yt,[j.COMMENT_TOKEN]:ce,[j.DOCTYPE_TOKEN]:ce,[j.START_TAG_TOKEN]:ce,[j.END_TAG_TOKEN]:eR,[j.EOF_TOKEN]:tR},[ut]:{[j.CHARACTER_TOKEN]:vn,[j.NULL_CHARACTER_TOKEN]:vn,[j.WHITESPACE_CHARACTER_TOKEN]:vn,[j.COMMENT_TOKEN]:ze,[j.DOCTYPE_TOKEN]:ce,[j.START_TAG_TOKEN]:$1,[j.END_TAG_TOKEN]:z1,[j.EOF_TOKEN]:_n},[lS]:{[j.CHARACTER_TOKEN]:uR,[j.NULL_CHARACTER_TOKEN]:ce,[j.WHITESPACE_CHARACTER_TOKEN]:dR,[j.COMMENT_TOKEN]:wi,[j.DOCTYPE_TOKEN]:wi,[j.START_TAG_TOKEN]:wi,[j.END_TAG_TOKEN]:wi,[j.EOF_TOKEN]:wi},[Wl]:{[j.CHARACTER_TOKEN]:Eo,[j.NULL_CHARACTER_TOKEN]:ce,[j.WHITESPACE_CHARACTER_TOKEN]:Rr,[j.COMMENT_TOKEN]:ze,[j.DOCTYPE_TOKEN]:ce,[j.START_TAG_TOKEN]:hR,[j.END_TAG_TOKEN]:pR,[j.EOF_TOKEN]:_n},[_a]:{[j.CHARACTER_TOKEN]:xl,[j.NULL_CHARACTER_TOKEN]:xl,[j.WHITESPACE_CHARACTER_TOKEN]:yt,[j.COMMENT_TOKEN]:ze,[j.DOCTYPE_TOKEN]:ce,[j.START_TAG_TOKEN]:mR,[j.END_TAG_TOKEN]:fR,[j.EOF_TOKEN]:_n},[zt]:{[j.CHARACTER_TOKEN]:vn,[j.NULL_CHARACTER_TOKEN]:vn,[j.WHITESPACE_CHARACTER_TOKEN]:vn,[j.COMMENT_TOKEN]:ze,[j.DOCTYPE_TOKEN]:ce,[j.START_TAG_TOKEN]:gR,[j.END_TAG_TOKEN]:bR,[j.EOF_TOKEN]:_n},[Un]:{[j.CHARACTER_TOKEN]:vn,[j.NULL_CHARACTER_TOKEN]:vn,[j.WHITESPACE_CHARACTER_TOKEN]:vn,[j.COMMENT_TOKEN]:ze,[j.DOCTYPE_TOKEN]:ce,[j.START_TAG_TOKEN]:xR,[j.END_TAG_TOKEN]:ER,[j.EOF_TOKEN]:_n},[Vl]:{[j.CHARACTER_TOKEN]:Eo,[j.NULL_CHARACTER_TOKEN]:ce,[j.WHITESPACE_CHARACTER_TOKEN]:Rr,[j.COMMENT_TOKEN]:ze,[j.DOCTYPE_TOKEN]:ce,[j.START_TAG_TOKEN]:TR,[j.END_TAG_TOKEN]:yR,[j.EOF_TOKEN]:_n},[U1]:{[j.CHARACTER_TOKEN]:yt,[j.NULL_CHARACTER_TOKEN]:ce,[j.WHITESPACE_CHARACTER_TOKEN]:yt,[j.COMMENT_TOKEN]:ze,[j.DOCTYPE_TOKEN]:ce,[j.START_TAG_TOKEN]:hS,[j.END_TAG_TOKEN]:pS,[j.EOF_TOKEN]:_n},[B1]:{[j.CHARACTER_TOKEN]:yt,[j.NULL_CHARACTER_TOKEN]:ce,[j.WHITESPACE_CHARACTER_TOKEN]:yt,[j.COMMENT_TOKEN]:ze,[j.DOCTYPE_TOKEN]:ce,[j.START_TAG_TOKEN]:SR,[j.END_TAG_TOKEN]:NR,[j.EOF_TOKEN]:_n},[bl]:{[j.CHARACTER_TOKEN]:Eo,[j.NULL_CHARACTER_TOKEN]:ce,[j.WHITESPACE_CHARACTER_TOKEN]:Rr,[j.COMMENT_TOKEN]:ze,[j.DOCTYPE_TOKEN]:ce,[j.START_TAG_TOKEN]:jR,[j.END_TAG_TOKEN]:AR,[j.EOF_TOKEN]:mS},[H1]:{[j.CHARACTER_TOKEN]:El,[j.NULL_CHARACTER_TOKEN]:El,[j.WHITESPACE_CHARACTER_TOKEN]:Rr,[j.COMMENT_TOKEN]:mv,[j.DOCTYPE_TOKEN]:ce,[j.START_TAG_TOKEN]:_R,[j.END_TAG_TOKEN]:vR,[j.EOF_TOKEN]:vi},[Kl]:{[j.CHARACTER_TOKEN]:ce,[j.NULL_CHARACTER_TOKEN]:ce,[j.WHITESPACE_CHARACTER_TOKEN]:yt,[j.COMMENT_TOKEN]:ze,[j.DOCTYPE_TOKEN]:ce,[j.START_TAG_TOKEN]:RR,[j.END_TAG_TOKEN]:wR,[j.EOF_TOKEN]:vi},[cS]:{[j.CHARACTER_TOKEN]:ce,[j.NULL_CHARACTER_TOKEN]:ce,[j.WHITESPACE_CHARACTER_TOKEN]:yt,[j.COMMENT_TOKEN]:ze,[j.DOCTYPE_TOKEN]:ce,[j.START_TAG_TOKEN]:IR,[j.END_TAG_TOKEN]:CR,[j.EOF_TOKEN]:vi},[dS]:{[j.CHARACTER_TOKEN]:Uo,[j.NULL_CHARACTER_TOKEN]:Uo,[j.WHITESPACE_CHARACTER_TOKEN]:Rr,[j.COMMENT_TOKEN]:DE,[j.DOCTYPE_TOKEN]:ce,[j.START_TAG_TOKEN]:OR,[j.END_TAG_TOKEN]:Uo,[j.EOF_TOKEN]:vi},[uS]:{[j.CHARACTER_TOKEN]:ce,[j.NULL_CHARACTER_TOKEN]:ce,[j.WHITESPACE_CHARACTER_TOKEN]:Rr,[j.COMMENT_TOKEN]:DE,[j.DOCTYPE_TOKEN]:ce,[j.START_TAG_TOKEN]:kR,[j.END_TAG_TOKEN]:ce,[j.EOF_TOKEN]:vi}};class av{constructor(n){this.options=J9(tv,n),this.treeAdapter=this.options.treeAdapter,this.pendingScript=null,this.options.sourceCodeLocationInfo&&OE.install(this,X9),this.options.onParseError&&OE.install(this,Z9,{onParseError:this.options.onParseError})}parse(n){const r=this.treeAdapter.createDocument();return this._bootstrap(r,null),this.tokenizer.write(n,!0),this._runParsingLoop(null),r}parseFragment(n,r){r||(r=this.treeAdapter.createElement(u.TEMPLATE,V.HTML,[]));const s=this.treeAdapter.createElement("documentmock",V.HTML,[]);this._bootstrap(s,r),this.treeAdapter.getTagName(r)===u.TEMPLATE&&this._pushTmplInsertionMode(bl),this._initTokenizerForFragmentParsing(),this._insertFakeRootElement(),this._resetInsertionMode(),this._findFormInFragmentContext(),this.tokenizer.write(n,!0),this._runParsingLoop(null);const i=this.treeAdapter.getFirstChild(s),a=this.treeAdapter.createDocumentFragment();return this._adoptNodes(i,a),a}_bootstrap(n,r){this.tokenizer=new j(this.options),this.stopped=!1,this.insertionMode=aS,this.originalInsertionMode="",this.document=n,this.fragmentContext=r,this.headElement=null,this.formElement=null,this.openElements=new q9(this.document,this.treeAdapter),this.activeFormattingElements=new CE(this.treeAdapter),this.tmplInsertionModeStack=[],this.tmplInsertionModeStackTop=-1,this.currentTmplInsertionMode=null,this.pendingCharacterTokens=[],this.hasNonWhitespacePendingCharacterToken=!1,this.framesetOk=!0,this.skipNextNewLine=!1,this.fosterParentingEnabled=!1}_err(){}_runParsingLoop(n){for(;!this.stopped;){this._setupTokenizerCDATAMode();const r=this.tokenizer.getNextToken();if(r.type===j.HIBERNATION_TOKEN)break;if(this.skipNextNewLine&&(this.skipNextNewLine=!1,r.type===j.WHITESPACE_CHARACTER_TOKEN&&r.chars[0]===`
`)){if(r.chars.length===1)continue;r.chars=r.chars.substr(1)}if(this._processInputToken(r),n&&this.pendingScript)break}}runParsingLoopForCurrentChunk(n,r){if(this._runParsingLoop(r),r&&this.pendingScript){const s=this.pendingScript;this.pendingScript=null,r(s);return}n&&n()}_setupTokenizerCDATAMode(){const n=this._getAdjustedCurrentElement();this.tokenizer.allowCDATA=n&&n!==this.document&&this.treeAdapter.getNamespaceURI(n)!==V.HTML&&!this._isIntegrationPoint(n)}_switchToTextParsing(n,r){this._insertElement(n,V.HTML),this.tokenizer.state=r,this.originalInsertionMode=this.insertionMode,this.insertionMode=gl}switchToPlaintextParsing(){this.insertionMode=gl,this.originalInsertionMode=yn,this.tokenizer.state=j.MODE.PLAINTEXT}_getAdjustedCurrentElement(){return this.openElements.stackTop===0&&this.fragmentContext?this.fragmentContext:this.openElements.current}_findFormInFragmentContext(){let n=this.fragmentContext;do{if(this.treeAdapter.getTagName(n)===u.FORM){this.formElement=n;break}n=this.treeAdapter.getParentNode(n)}while(n)}_initTokenizerForFragmentParsing(){if(this.treeAdapter.getNamespaceURI(this.fragmentContext)===V.HTML){const n=this.treeAdapter.getTagName(this.fragmentContext);n===u.TITLE||n===u.TEXTAREA?this.tokenizer.state=j.MODE.RCDATA:n===u.STYLE||n===u.XMP||n===u.IFRAME||n===u.NOEMBED||n===u.NOFRAMES||n===u.NOSCRIPT?this.tokenizer.state=j.MODE.RAWTEXT:n===u.SCRIPT?this.tokenizer.state=j.MODE.SCRIPT_DATA:n===u.PLAINTEXT&&(this.tokenizer.state=j.MODE.PLAINTEXT)}}_setDocumentType(n){const r=n.name||"",s=n.publicId||"",i=n.systemId||"";this.treeAdapter.setDocumentType(this.document,r,s,i)}_attachElementToTree(n){if(this._shouldFosterParentOnInsertion())this._fosterParentElement(n);else{const r=this.openElements.currentTmplContent||this.openElements.current;this.treeAdapter.appendChild(r,n)}}_appendElement(n,r){const s=this.treeAdapter.createElement(n.tagName,r,n.attrs);this._attachElementToTree(s)}_insertElement(n,r){const s=this.treeAdapter.createElement(n.tagName,r,n.attrs);this._attachElementToTree(s),this.openElements.push(s)}_insertFakeElement(n){const r=this.treeAdapter.createElement(n,V.HTML,[]);this._attachElementToTree(r),this.openElements.push(r)}_insertTemplate(n){const r=this.treeAdapter.createElement(n.tagName,V.HTML,n.attrs),s=this.treeAdapter.createDocumentFragment();this.treeAdapter.setTemplateContent(r,s),this._attachElementToTree(r),this.openElements.push(r)}_insertFakeRootElement(){const n=this.treeAdapter.createElement(u.HTML,V.HTML,[]);this.treeAdapter.appendChild(this.openElements.current,n),this.openElements.push(n)}_appendCommentNode(n,r){const s=this.treeAdapter.createCommentNode(n.data);this.treeAdapter.appendChild(r,s)}_insertCharacters(n){if(this._shouldFosterParentOnInsertion())this._fosterParentText(n.chars);else{const r=this.openElements.currentTmplContent||this.openElements.current;this.treeAdapter.insertText(r,n.chars)}}_adoptNodes(n,r){for(let s=this.treeAdapter.getFirstChild(n);s;s=this.treeAdapter.getFirstChild(n))this.treeAdapter.detachNode(s),this.treeAdapter.appendChild(r,s)}_shouldProcessTokenInForeignContent(n){const r=this._getAdjustedCurrentElement();if(!r||r===this.document)return!1;const s=this.treeAdapter.getNamespaceURI(r);if(s===V.HTML||this.treeAdapter.getTagName(r)===u.ANNOTATION_XML&&s===V.MATHML&&n.type===j.START_TAG_TOKEN&&n.tagName===u.SVG)return!1;const i=n.type===j.CHARACTER_TOKEN||n.type===j.NULL_CHARACTER_TOKEN||n.type===j.WHITESPACE_CHARACTER_TOKEN;return(n.type===j.START_TAG_TOKEN&&n.tagName!==u.MGLYPH&&n.tagName!==u.MALIGNMARK||i)&&this._isIntegrationPoint(r,V.MATHML)||(n.type===j.START_TAG_TOKEN||i)&&this._isIntegrationPoint(r,V.HTML)?!1:n.type!==j.EOF_TOKEN}_processToken(n){LE[this.insertionMode][n.type](this,n)}_processTokenInBodyMode(n){LE[yn][n.type](this,n)}_processTokenInForeignContent(n){n.type===j.CHARACTER_TOKEN?DR(this,n):n.type===j.NULL_CHARACTER_TOKEN?LR(this,n):n.type===j.WHITESPACE_CHARACTER_TOKEN?yt(this,n):n.type===j.COMMENT_TOKEN?ze(this,n):n.type===j.START_TAG_TOKEN?MR(this,n):n.type===j.END_TAG_TOKEN&&FR(this,n)}_processInputToken(n){this._shouldProcessTokenInForeignContent(n)?this._processTokenInForeignContent(n):this._processToken(n),n.type===j.START_TAG_TOKEN&&n.selfClosing&&!n.ackSelfClosing&&this._err(rt.nonVoidHtmlElementStartTagWithTrailingSolidus)}_isIntegrationPoint(n,r){const s=this.treeAdapter.getTagName(n),i=this.treeAdapter.getNamespaceURI(n),a=this.treeAdapter.getAttrList(n);return xn.isIntegrationPoint(s,i,a,r)}_reconstructActiveFormattingElements(){const n=this.activeFormattingElements.length;if(n){let r=n,s=null;do if(r--,s=this.activeFormattingElements.entries[r],s.type===CE.MARKER_ENTRY||this.openElements.contains(s.element)){r++;break}while(r>0);for(let i=r;i<n;i++)s=this.activeFormattingElements.entries[i],this._insertElement(s.token,this.treeAdapter.getNamespaceURI(s.element)),s.element=this.openElements.current}}_closeTableCell(){this.openElements.generateImpliedEndTags(),this.openElements.popUntilTableCellPopped(),this.activeFormattingElements.clearToLastMarker(),this.insertionMode=Un}_closePElement(){this.openElements.generateImpliedEndTagsWithExclusion(u.P),this.openElements.popUntilTagNamePopped(u.P)}_resetInsertionMode(){for(let n=this.openElements.stackTop,r=!1;n>=0;n--){let s=this.openElements.items[n];n===0&&(r=!0,this.fragmentContext&&(s=this.fragmentContext));const i=this.treeAdapter.getTagName(s),a=sv[i];if(a){this.insertionMode=a;break}else if(!r&&(i===u.TD||i===u.TH)){this.insertionMode=Vl;break}else if(!r&&i===u.HEAD){this.insertionMode=Qs;break}else if(i===u.SELECT){this._resetInsertionModeForSelect(n);break}else if(i===u.TEMPLATE){this.insertionMode=this.currentTmplInsertionMode;break}else if(i===u.HTML){this.insertionMode=this.headElement?zl:$l;break}else if(r){this.insertionMode=yn;break}}}_resetInsertionModeForSelect(n){if(n>0)for(let r=n-1;r>0;r--){const s=this.openElements.items[r],i=this.treeAdapter.getTagName(s);if(i===u.TEMPLATE)break;if(i===u.TABLE){this.insertionMode=B1;return}}this.insertionMode=U1}_pushTmplInsertionMode(n){this.tmplInsertionModeStack.push(n),this.tmplInsertionModeStackTop++,this.currentTmplInsertionMode=n}_popTmplInsertionMode(){this.tmplInsertionModeStack.pop(),this.tmplInsertionModeStackTop--,this.currentTmplInsertionMode=this.tmplInsertionModeStack[this.tmplInsertionModeStackTop]}_isElementCausesFosterParenting(n){const r=this.treeAdapter.getTagName(n);return r===u.TABLE||r===u.TBODY||r===u.TFOOT||r===u.THEAD||r===u.TR}_shouldFosterParentOnInsertion(){return this.fosterParentingEnabled&&this._isElementCausesFosterParenting(this.openElements.current)}_findFosterParentingLocation(){const n={parent:null,beforeElement:null};for(let r=this.openElements.stackTop;r>=0;r--){const s=this.openElements.items[r],i=this.treeAdapter.getTagName(s),a=this.treeAdapter.getNamespaceURI(s);if(i===u.TEMPLATE&&a===V.HTML){n.parent=this.treeAdapter.getTemplateContent(s);break}else if(i===u.TABLE){n.parent=this.treeAdapter.getParentNode(s),n.parent?n.beforeElement=s:n.parent=this.openElements.items[r-1];break}}return n.parent||(n.parent=this.openElements.items[0]),n}_fosterParentElement(n){const r=this._findFosterParentingLocation();r.beforeElement?this.treeAdapter.insertBefore(r.parent,n,r.beforeElement):this.treeAdapter.appendChild(r.parent,n)}_fosterParentText(n){const r=this._findFosterParentingLocation();r.beforeElement?this.treeAdapter.insertTextBefore(r.parent,n,r.beforeElement):this.treeAdapter.insertText(r.parent,n)}_isSpecialElement(n){const r=this.treeAdapter.getTagName(n),s=this.treeAdapter.getNamespaceURI(n);return Xr.SPECIAL_ELEMENTS[s][r]}}var ov=av;function lv(t,n){let r=t.activeFormattingElements.getElementEntryInScopeWithTagName(n.tagName);return r?t.openElements.contains(r.element)?t.openElements.hasInScope(n.tagName)||(r=null):(t.activeFormattingElements.removeEntry(r),r=null):en(t,n),r}function cv(t,n){let r=null;for(let s=t.openElements.stackTop;s>=0;s--){const i=t.openElements.items[s];if(i===n.element)break;t._isSpecialElement(i)&&(r=i)}return r||(t.openElements.popUntilElementPopped(n.element),t.activeFormattingElements.removeEntry(n)),r}function dv(t,n,r){let s=n,i=t.openElements.getCommonAncestor(n);for(let a=0,o=i;o!==r;a++,o=i){i=t.openElements.getCommonAncestor(o);const l=t.activeFormattingElements.getElementEntry(o),c=l&&a>=rv;!l||c?(c&&t.activeFormattingElements.removeEntry(l),t.openElements.remove(o)):(o=uv(t,l),s===n&&(t.activeFormattingElements.bookmark=l),t.treeAdapter.detachNode(s),t.treeAdapter.appendChild(o,s),s=o)}return s}function uv(t,n){const r=t.treeAdapter.getNamespaceURI(n.element),s=t.treeAdapter.createElement(n.token.tagName,r,n.token.attrs);return t.openElements.replace(n.element,s),n.element=s,s}function hv(t,n,r){if(t._isElementCausesFosterParenting(n))t._fosterParentElement(r);else{const s=t.treeAdapter.getTagName(n),i=t.treeAdapter.getNamespaceURI(n);s===u.TEMPLATE&&i===V.HTML&&(n=t.treeAdapter.getTemplateContent(n)),t.treeAdapter.appendChild(n,r)}}function pv(t,n,r){const s=t.treeAdapter.getNamespaceURI(r.element),i=r.token,a=t.treeAdapter.createElement(i.tagName,s,i.attrs);t._adoptNodes(n,a),t.treeAdapter.appendChild(n,a),t.activeFormattingElements.insertElementAfterBookmark(a,r.token),t.activeFormattingElements.removeEntry(r),t.openElements.remove(r.element),t.openElements.insertAfter(n,a)}function nr(t,n){let r;for(let s=0;s<nv&&(r=lv(t,n),!!r);s++){const i=cv(t,r);if(!i)break;t.activeFormattingElements.bookmark=r;const a=dv(t,i,r.element),o=t.openElements.getCommonAncestor(r.element);t.treeAdapter.detachNode(a),hv(t,o,a),pv(t,i,r)}}function ce(){}function xo(t){t._err(rt.misplacedDoctype)}function ze(t,n){t._appendCommentNode(n,t.openElements.currentTmplContent||t.openElements.current)}function mv(t,n){t._appendCommentNode(n,t.openElements.items[0])}function DE(t,n){t._appendCommentNode(n,t.document)}function yt(t,n){t._insertCharacters(n)}function vi(t){t.stopped=!0}function fv(t,n){t._setDocumentType(n);const r=n.forceQuirks?Xr.DOCUMENT_MODE.QUIRKS:kE.getDocumentMode(n);kE.isConforming(n)||t._err(rt.nonConformingDoctype),t.treeAdapter.setDocumentMode(t.document,r),t.insertionMode=P1}function Ri(t,n){t._err(rt.missingDoctype,{beforeToken:!0}),t.treeAdapter.setDocumentMode(t.document,Xr.DOCUMENT_MODE.QUIRKS),t.insertionMode=P1,t._processToken(n)}function gv(t,n){n.tagName===u.HTML?(t._insertElement(n,V.HTML),t.insertionMode=$l):Ki(t,n)}function bv(t,n){const r=n.tagName;(r===u.HTML||r===u.HEAD||r===u.BODY||r===u.BR)&&Ki(t,n)}function Ki(t,n){t._insertFakeRootElement(),t.insertionMode=$l,t._processToken(n)}function xv(t,n){const r=n.tagName;r===u.HTML?vt(t,n):r===u.HEAD?(t._insertElement(n,V.HTML),t.headElement=t.openElements.current,t.insertionMode=Qs):Yi(t,n)}function Ev(t,n){const r=n.tagName;r===u.HEAD||r===u.BODY||r===u.HTML||r===u.BR?Yi(t,n):t._err(rt.endTagWithoutMatchingOpenElement)}function Yi(t,n){t._insertFakeElement(u.HEAD),t.headElement=t.openElements.current,t.insertionMode=Qs,t._processToken(n)}function qe(t,n){const r=n.tagName;r===u.HTML?vt(t,n):r===u.BASE||r===u.BASEFONT||r===u.BGSOUND||r===u.LINK||r===u.META?(t._appendElement(n,V.HTML),n.ackSelfClosing=!0):r===u.TITLE?t._switchToTextParsing(n,j.MODE.RCDATA):r===u.NOSCRIPT?t.options.scriptingEnabled?t._switchToTextParsing(n,j.MODE.RAWTEXT):(t._insertElement(n,V.HTML),t.insertionMode=oS):r===u.NOFRAMES||r===u.STYLE?t._switchToTextParsing(n,j.MODE.RAWTEXT):r===u.SCRIPT?t._switchToTextParsing(n,j.MODE.SCRIPT_DATA):r===u.TEMPLATE?(t._insertTemplate(n,V.HTML),t.activeFormattingElements.insertMarker(),t.framesetOk=!1,t.insertionMode=bl,t._pushTmplInsertionMode(bl)):r===u.HEAD?t._err(rt.misplacedStartTagForHeadElement):qi(t,n)}function Zr(t,n){const r=n.tagName;r===u.HEAD?(t.openElements.pop(),t.insertionMode=zl):r===u.BODY||r===u.BR||r===u.HTML?qi(t,n):r===u.TEMPLATE&&t.openElements.tmplCount>0?(t.openElements.generateImpliedEndTagsThoroughly(),t.openElements.currentTagName!==u.TEMPLATE&&t._err(rt.closingOfElementWithOpenChildElements),t.openElements.popUntilTagNamePopped(u.TEMPLATE),t.activeFormattingElements.clearToLastMarker(),t._popTmplInsertionMode(),t._resetInsertionMode()):t._err(rt.endTagWithoutMatchingOpenElement)}function qi(t,n){t.openElements.pop(),t.insertionMode=zl,t._processToken(n)}function Tv(t,n){const r=n.tagName;r===u.HTML?vt(t,n):r===u.BASEFONT||r===u.BGSOUND||r===u.HEAD||r===u.LINK||r===u.META||r===u.NOFRAMES||r===u.STYLE?qe(t,n):r===u.NOSCRIPT?t._err(rt.nestedNoscriptInHead):Xi(t,n)}function yv(t,n){const r=n.tagName;r===u.NOSCRIPT?(t.openElements.pop(),t.insertionMode=Qs):r===u.BR?Xi(t,n):t._err(rt.endTagWithoutMatchingOpenElement)}function Xi(t,n){const r=n.type===j.EOF_TOKEN?rt.openElementsLeftAfterEof:rt.disallowedContentInNoscriptInHead;t._err(r),t.openElements.pop(),t.insertionMode=Qs,t._processToken(n)}function Sv(t,n){const r=n.tagName;r===u.HTML?vt(t,n):r===u.BODY?(t._insertElement(n,V.HTML),t.framesetOk=!1,t.insertionMode=yn):r===u.FRAMESET?(t._insertElement(n,V.HTML),t.insertionMode=Kl):r===u.BASE||r===u.BASEFONT||r===u.BGSOUND||r===u.LINK||r===u.META||r===u.NOFRAMES||r===u.SCRIPT||r===u.STYLE||r===u.TEMPLATE||r===u.TITLE?(t._err(rt.abandonedHeadElementChild),t.openElements.push(t.headElement),qe(t,n),t.openElements.remove(t.headElement)):r===u.HEAD?t._err(rt.misplacedStartTagForHeadElement):Zi(t,n)}function Nv(t,n){const r=n.tagName;r===u.BODY||r===u.HTML||r===u.BR?Zi(t,n):r===u.TEMPLATE?Zr(t,n):t._err(rt.endTagWithoutMatchingOpenElement)}function Zi(t,n){t._insertFakeElement(u.BODY),t.insertionMode=yn,t._processToken(n)}function Rr(t,n){t._reconstructActiveFormattingElements(),t._insertCharacters(n)}function Eo(t,n){t._reconstructActiveFormattingElements(),t._insertCharacters(n),t.framesetOk=!1}function jv(t,n){t.openElements.tmplCount===0&&t.treeAdapter.adoptAttributes(t.openElements.items[0],n.attrs)}function Av(t,n){const r=t.openElements.tryPeekProperlyNestedBodyElement();r&&t.openElements.tmplCount===0&&(t.framesetOk=!1,t.treeAdapter.adoptAttributes(r,n.attrs))}function _v(t,n){const r=t.openElements.tryPeekProperlyNestedBodyElement();t.framesetOk&&r&&(t.treeAdapter.detachNode(r),t.openElements.popAllUpToHtmlElement(),t._insertElement(n,V.HTML),t.insertionMode=Kl)}function An(t,n){t.openElements.hasInButtonScope(u.P)&&t._closePElement(),t._insertElement(n,V.HTML)}function vv(t,n){t.openElements.hasInButtonScope(u.P)&&t._closePElement();const r=t.openElements.currentTagName;(r===u.H1||r===u.H2||r===u.H3||r===u.H4||r===u.H5||r===u.H6)&&t.openElements.pop(),t._insertElement(n,V.HTML)}function ME(t,n){t.openElements.hasInButtonScope(u.P)&&t._closePElement(),t._insertElement(n,V.HTML),t.skipNextNewLine=!0,t.framesetOk=!1}function Rv(t,n){const r=t.openElements.tmplCount>0;(!t.formElement||r)&&(t.openElements.hasInButtonScope(u.P)&&t._closePElement(),t._insertElement(n,V.HTML),r||(t.formElement=t.openElements.current))}function wv(t,n){t.framesetOk=!1;const r=n.tagName;for(let s=t.openElements.stackTop;s>=0;s--){const i=t.openElements.items[s],a=t.treeAdapter.getTagName(i);let o=null;if(r===u.LI&&a===u.LI?o=u.LI:(r===u.DD||r===u.DT)&&(a===u.DD||a===u.DT)&&(o=a),o){t.openElements.generateImpliedEndTagsWithExclusion(o),t.openElements.popUntilTagNamePopped(o);break}if(a!==u.ADDRESS&&a!==u.DIV&&a!==u.P&&t._isSpecialElement(i))break}t.openElements.hasInButtonScope(u.P)&&t._closePElement(),t._insertElement(n,V.HTML)}function Iv(t,n){t.openElements.hasInButtonScope(u.P)&&t._closePElement(),t._insertElement(n,V.HTML),t.tokenizer.state=j.MODE.PLAINTEXT}function Cv(t,n){t.openElements.hasInScope(u.BUTTON)&&(t.openElements.generateImpliedEndTags(),t.openElements.popUntilTagNamePopped(u.BUTTON)),t._reconstructActiveFormattingElements(),t._insertElement(n,V.HTML),t.framesetOk=!1}function Ov(t,n){const r=t.activeFormattingElements.getElementEntryInScopeWithTagName(u.A);r&&(nr(t,n),t.openElements.remove(r.element),t.activeFormattingElements.removeEntry(r)),t._reconstructActiveFormattingElements(),t._insertElement(n,V.HTML),t.activeFormattingElements.pushElement(t.openElements.current,n)}function ds(t,n){t._reconstructActiveFormattingElements(),t._insertElement(n,V.HTML),t.activeFormattingElements.pushElement(t.openElements.current,n)}function kv(t,n){t._reconstructActiveFormattingElements(),t.openElements.hasInScope(u.NOBR)&&(nr(t,n),t._reconstructActiveFormattingElements()),t._insertElement(n,V.HTML),t.activeFormattingElements.pushElement(t.openElements.current,n)}function FE(t,n){t._reconstructActiveFormattingElements(),t._insertElement(n,V.HTML),t.activeFormattingElements.insertMarker(),t.framesetOk=!1}function Lv(t,n){t.treeAdapter.getDocumentMode(t.document)!==Xr.DOCUMENT_MODE.QUIRKS&&t.openElements.hasInButtonScope(u.P)&&t._closePElement(),t._insertElement(n,V.HTML),t.framesetOk=!1,t.insertionMode=ut}function ms(t,n){t._reconstructActiveFormattingElements(),t._appendElement(n,V.HTML),t.framesetOk=!1,n.ackSelfClosing=!0}function Dv(t,n){t._reconstructActiveFormattingElements(),t._appendElement(n,V.HTML);const r=j.getTokenAttr(n,sS.TYPE);(!r||r.toLowerCase()!==iS)&&(t.framesetOk=!1),n.ackSelfClosing=!0}function PE(t,n){t._appendElement(n,V.HTML),n.ackSelfClosing=!0}function Mv(t,n){t.openElements.hasInButtonScope(u.P)&&t._closePElement(),t._appendElement(n,V.HTML),t.framesetOk=!1,n.ackSelfClosing=!0}function Fv(t,n){n.tagName=u.IMG,ms(t,n)}function Pv(t,n){t._insertElement(n,V.HTML),t.skipNextNewLine=!0,t.tokenizer.state=j.MODE.RCDATA,t.originalInsertionMode=t.insertionMode,t.framesetOk=!1,t.insertionMode=gl}function Uv(t,n){t.openElements.hasInButtonScope(u.P)&&t._closePElement(),t._reconstructActiveFormattingElements(),t.framesetOk=!1,t._switchToTextParsing(n,j.MODE.RAWTEXT)}function Bv(t,n){t.framesetOk=!1,t._switchToTextParsing(n,j.MODE.RAWTEXT)}function UE(t,n){t._switchToTextParsing(n,j.MODE.RAWTEXT)}function Hv(t,n){t._reconstructActiveFormattingElements(),t._insertElement(n,V.HTML),t.framesetOk=!1,t.insertionMode===ut||t.insertionMode===Wl||t.insertionMode===zt||t.insertionMode===Un||t.insertionMode===Vl?t.insertionMode=B1:t.insertionMode=U1}function BE(t,n){t.openElements.currentTagName===u.OPTION&&t.openElements.pop(),t._reconstructActiveFormattingElements(),t._insertElement(n,V.HTML)}function HE(t,n){t.openElements.hasInScope(u.RUBY)&&t.openElements.generateImpliedEndTags(),t._insertElement(n,V.HTML)}function Gv(t,n){t.openElements.hasInScope(u.RUBY)&&t.openElements.generateImpliedEndTagsWithExclusion(u.RTC),t._insertElement(n,V.HTML)}function $v(t,n){t.openElements.hasInButtonScope(u.P)&&t._closePElement(),t._insertElement(n,V.HTML)}function zv(t,n){t._reconstructActiveFormattingElements(),xn.adjustTokenMathMLAttrs(n),xn.adjustTokenXMLAttrs(n),n.selfClosing?t._appendElement(n,V.MATHML):t._insertElement(n,V.MATHML),n.ackSelfClosing=!0}function Wv(t,n){t._reconstructActiveFormattingElements(),xn.adjustTokenSVGAttrs(n),xn.adjustTokenXMLAttrs(n),n.selfClosing?t._appendElement(n,V.SVG):t._insertElement(n,V.SVG),n.ackSelfClosing=!0}function Ft(t,n){t._reconstructActiveFormattingElements(),t._insertElement(n,V.HTML)}function vt(t,n){const r=n.tagName;switch(r.length){case 1:r===u.I||r===u.S||r===u.B||r===u.U?ds(t,n):r===u.P?An(t,n):r===u.A?Ov(t,n):Ft(t,n);break;case 2:r===u.DL||r===u.OL||r===u.UL?An(t,n):r===u.H1||r===u.H2||r===u.H3||r===u.H4||r===u.H5||r===u.H6?vv(t,n):r===u.LI||r===u.DD||r===u.DT?wv(t,n):r===u.EM||r===u.TT?ds(t,n):r===u.BR?ms(t,n):r===u.HR?Mv(t,n):r===u.RB?HE(t,n):r===u.RT||r===u.RP?Gv(t,n):r!==u.TH&&r!==u.TD&&r!==u.TR&&Ft(t,n);break;case 3:r===u.DIV||r===u.DIR||r===u.NAV?An(t,n):r===u.PRE?ME(t,n):r===u.BIG?ds(t,n):r===u.IMG||r===u.WBR?ms(t,n):r===u.XMP?Uv(t,n):r===u.SVG?Wv(t,n):r===u.RTC?HE(t,n):r!==u.COL&&Ft(t,n);break;case 4:r===u.HTML?jv(t,n):r===u.BASE||r===u.LINK||r===u.META?qe(t,n):r===u.BODY?Av(t,n):r===u.MAIN||r===u.MENU?An(t,n):r===u.FORM?Rv(t,n):r===u.CODE||r===u.FONT?ds(t,n):r===u.NOBR?kv(t,n):r===u.AREA?ms(t,n):r===u.MATH?zv(t,n):r===u.MENU?$v(t,n):r!==u.HEAD&&Ft(t,n);break;case 5:r===u.STYLE||r===u.TITLE?qe(t,n):r===u.ASIDE?An(t,n):r===u.SMALL?ds(t,n):r===u.TABLE?Lv(t,n):r===u.EMBED?ms(t,n):r===u.INPUT?Dv(t,n):r===u.PARAM||r===u.TRACK?PE(t,n):r===u.IMAGE?Fv(t,n):r!==u.FRAME&&r!==u.TBODY&&r!==u.TFOOT&&r!==u.THEAD&&Ft(t,n);break;case 6:r===u.SCRIPT?qe(t,n):r===u.CENTER||r===u.FIGURE||r===u.FOOTER||r===u.HEADER||r===u.HGROUP||r===u.DIALOG?An(t,n):r===u.BUTTON?Cv(t,n):r===u.STRIKE||r===u.STRONG?ds(t,n):r===u.APPLET||r===u.OBJECT?FE(t,n):r===u.KEYGEN?ms(t,n):r===u.SOURCE?PE(t,n):r===u.IFRAME?Bv(t,n):r===u.SELECT?Hv(t,n):r===u.OPTION?BE(t,n):Ft(t,n);break;case 7:r===u.BGSOUND?qe(t,n):r===u.DETAILS||r===u.ADDRESS||r===u.ARTICLE||r===u.SECTION||r===u.SUMMARY?An(t,n):r===u.LISTING?ME(t,n):r===u.MARQUEE?FE(t,n):r===u.NOEMBED?UE(t,n):r!==u.CAPTION&&Ft(t,n);break;case 8:r===u.BASEFONT?qe(t,n):r===u.FRAMESET?_v(t,n):r===u.FIELDSET?An(t,n):r===u.TEXTAREA?Pv(t,n):r===u.TEMPLATE?qe(t,n):r===u.NOSCRIPT?t.options.scriptingEnabled?UE(t,n):Ft(t,n):r===u.OPTGROUP?BE(t,n):r!==u.COLGROUP&&Ft(t,n);break;case 9:r===u.PLAINTEXT?Iv(t,n):Ft(t,n);break;case 10:r===u.BLOCKQUOTE||r===u.FIGCAPTION?An(t,n):Ft(t,n);break;default:Ft(t,n)}}function Vv(t){t.openElements.hasInScope(u.BODY)&&(t.insertionMode=H1)}function Kv(t,n){t.openElements.hasInScope(u.BODY)&&(t.insertionMode=H1,t._processToken(n))}function Xn(t,n){const r=n.tagName;t.openElements.hasInScope(r)&&(t.openElements.generateImpliedEndTags(),t.openElements.popUntilTagNamePopped(r))}function Yv(t){const n=t.openElements.tmplCount>0,r=t.formElement;n||(t.formElement=null),(r||n)&&t.openElements.hasInScope(u.FORM)&&(t.openElements.generateImpliedEndTags(),n?t.openElements.popUntilTagNamePopped(u.FORM):t.openElements.remove(r))}function qv(t){t.openElements.hasInButtonScope(u.P)||t._insertFakeElement(u.P),t._closePElement()}function Xv(t){t.openElements.hasInListItemScope(u.LI)&&(t.openElements.generateImpliedEndTagsWithExclusion(u.LI),t.openElements.popUntilTagNamePopped(u.LI))}function Zv(t,n){const r=n.tagName;t.openElements.hasInScope(r)&&(t.openElements.generateImpliedEndTagsWithExclusion(r),t.openElements.popUntilTagNamePopped(r))}function Qv(t){t.openElements.hasNumberedHeaderInScope()&&(t.openElements.generateImpliedEndTags(),t.openElements.popUntilNumberedHeaderPopped())}function GE(t,n){const r=n.tagName;t.openElements.hasInScope(r)&&(t.openElements.generateImpliedEndTags(),t.openElements.popUntilTagNamePopped(r),t.activeFormattingElements.clearToLastMarker())}function Jv(t){t._reconstructActiveFormattingElements(),t._insertFakeElement(u.BR),t.openElements.pop(),t.framesetOk=!1}function en(t,n){const r=n.tagName;for(let s=t.openElements.stackTop;s>0;s--){const i=t.openElements.items[s];if(t.treeAdapter.getTagName(i)===r){t.openElements.generateImpliedEndTagsWithExclusion(r),t.openElements.popUntilElementPopped(i);break}if(t._isSpecialElement(i))break}}function G1(t,n){const r=n.tagName;switch(r.length){case 1:r===u.A||r===u.B||r===u.I||r===u.S||r===u.U?nr(t,n):r===u.P?qv(t):en(t,n);break;case 2:r===u.DL||r===u.UL||r===u.OL?Xn(t,n):r===u.LI?Xv(t):r===u.DD||r===u.DT?Zv(t,n):r===u.H1||r===u.H2||r===u.H3||r===u.H4||r===u.H5||r===u.H6?Qv(t):r===u.BR?Jv(t):r===u.EM||r===u.TT?nr(t,n):en(t,n);break;case 3:r===u.BIG?nr(t,n):r===u.DIR||r===u.DIV||r===u.NAV||r===u.PRE?Xn(t,n):en(t,n);break;case 4:r===u.BODY?Vv(t):r===u.HTML?Kv(t,n):r===u.FORM?Yv(t):r===u.CODE||r===u.FONT||r===u.NOBR?nr(t,n):r===u.MAIN||r===u.MENU?Xn(t,n):en(t,n);break;case 5:r===u.ASIDE?Xn(t,n):r===u.SMALL?nr(t,n):en(t,n);break;case 6:r===u.CENTER||r===u.FIGURE||r===u.FOOTER||r===u.HEADER||r===u.HGROUP||r===u.DIALOG?Xn(t,n):r===u.APPLET||r===u.OBJECT?GE(t,n):r===u.STRIKE||r===u.STRONG?nr(t,n):en(t,n);break;case 7:r===u.ADDRESS||r===u.ARTICLE||r===u.DETAILS||r===u.SECTION||r===u.SUMMARY||r===u.LISTING?Xn(t,n):r===u.MARQUEE?GE(t,n):en(t,n);break;case 8:r===u.FIELDSET?Xn(t,n):r===u.TEMPLATE?Zr(t,n):en(t,n);break;case 10:r===u.BLOCKQUOTE||r===u.FIGCAPTION?Xn(t,n):en(t,n);break;default:en(t,n)}}function _n(t,n){t.tmplInsertionModeStackTop>-1?mS(t,n):t.stopped=!0}function eR(t,n){n.tagName===u.SCRIPT&&(t.pendingScript=t.openElements.current),t.openElements.pop(),t.insertionMode=t.originalInsertionMode}function tR(t,n){t._err(rt.eofInElementThatCanContainOnlyText),t.openElements.pop(),t.insertionMode=t.originalInsertionMode,t._processToken(n)}function vn(t,n){const r=t.openElements.currentTagName;r===u.TABLE||r===u.TBODY||r===u.TFOOT||r===u.THEAD||r===u.TR?(t.pendingCharacterTokens=[],t.hasNonWhitespacePendingCharacterToken=!1,t.originalInsertionMode=t.insertionMode,t.insertionMode=lS,t._processToken(n)):Ut(t,n)}function nR(t,n){t.openElements.clearBackToTableContext(),t.activeFormattingElements.insertMarker(),t._insertElement(n,V.HTML),t.insertionMode=Wl}function rR(t,n){t.openElements.clearBackToTableContext(),t._insertElement(n,V.HTML),t.insertionMode=_a}function sR(t,n){t.openElements.clearBackToTableContext(),t._insertFakeElement(u.COLGROUP),t.insertionMode=_a,t._processToken(n)}function iR(t,n){t.openElements.clearBackToTableContext(),t._insertElement(n,V.HTML),t.insertionMode=zt}function aR(t,n){t.openElements.clearBackToTableContext(),t._insertFakeElement(u.TBODY),t.insertionMode=zt,t._processToken(n)}function oR(t,n){t.openElements.hasInTableScope(u.TABLE)&&(t.openElements.popUntilTagNamePopped(u.TABLE),t._resetInsertionMode(),t._processToken(n))}function lR(t,n){const r=j.getTokenAttr(n,sS.TYPE);r&&r.toLowerCase()===iS?t._appendElement(n,V.HTML):Ut(t,n),n.ackSelfClosing=!0}function cR(t,n){!t.formElement&&t.openElements.tmplCount===0&&(t._insertElement(n,V.HTML),t.formElement=t.openElements.current,t.openElements.pop())}function $1(t,n){const r=n.tagName;switch(r.length){case 2:r===u.TD||r===u.TH||r===u.TR?aR(t,n):Ut(t,n);break;case 3:r===u.COL?sR(t,n):Ut(t,n);break;case 4:r===u.FORM?cR(t,n):Ut(t,n);break;case 5:r===u.TABLE?oR(t,n):r===u.STYLE?qe(t,n):r===u.TBODY||r===u.TFOOT||r===u.THEAD?iR(t,n):r===u.INPUT?lR(t,n):Ut(t,n);break;case 6:r===u.SCRIPT?qe(t,n):Ut(t,n);break;case 7:r===u.CAPTION?nR(t,n):Ut(t,n);break;case 8:r===u.COLGROUP?rR(t,n):r===u.TEMPLATE?qe(t,n):Ut(t,n);break;default:Ut(t,n)}}function z1(t,n){const r=n.tagName;r===u.TABLE?t.openElements.hasInTableScope(u.TABLE)&&(t.openElements.popUntilTagNamePopped(u.TABLE),t._resetInsertionMode()):r===u.TEMPLATE?Zr(t,n):r!==u.BODY&&r!==u.CAPTION&&r!==u.COL&&r!==u.COLGROUP&&r!==u.HTML&&r!==u.TBODY&&r!==u.TD&&r!==u.TFOOT&&r!==u.TH&&r!==u.THEAD&&r!==u.TR&&Ut(t,n)}function Ut(t,n){const r=t.fosterParentingEnabled;t.fosterParentingEnabled=!0,t._processTokenInBodyMode(n),t.fosterParentingEnabled=r}function dR(t,n){t.pendingCharacterTokens.push(n)}function uR(t,n){t.pendingCharacterTokens.push(n),t.hasNonWhitespacePendingCharacterToken=!0}function wi(t,n){let r=0;if(t.hasNonWhitespacePendingCharacterToken)for(;r<t.pendingCharacterTokens.length;r++)Ut(t,t.pendingCharacterTokens[r]);else for(;r<t.pendingCharacterTokens.length;r++)t._insertCharacters(t.pendingCharacterTokens[r]);t.insertionMode=t.originalInsertionMode,t._processToken(n)}function hR(t,n){const r=n.tagName;r===u.CAPTION||r===u.COL||r===u.COLGROUP||r===u.TBODY||r===u.TD||r===u.TFOOT||r===u.TH||r===u.THEAD||r===u.TR?t.openElements.hasInTableScope(u.CAPTION)&&(t.openElements.generateImpliedEndTags(),t.openElements.popUntilTagNamePopped(u.CAPTION),t.activeFormattingElements.clearToLastMarker(),t.insertionMode=ut,t._processToken(n)):vt(t,n)}function pR(t,n){const r=n.tagName;r===u.CAPTION||r===u.TABLE?t.openElements.hasInTableScope(u.CAPTION)&&(t.openElements.generateImpliedEndTags(),t.openElements.popUntilTagNamePopped(u.CAPTION),t.activeFormattingElements.clearToLastMarker(),t.insertionMode=ut,r===u.TABLE&&t._processToken(n)):r!==u.BODY&&r!==u.COL&&r!==u.COLGROUP&&r!==u.HTML&&r!==u.TBODY&&r!==u.TD&&r!==u.TFOOT&&r!==u.TH&&r!==u.THEAD&&r!==u.TR&&G1(t,n)}function mR(t,n){const r=n.tagName;r===u.HTML?vt(t,n):r===u.COL?(t._appendElement(n,V.HTML),n.ackSelfClosing=!0):r===u.TEMPLATE?qe(t,n):xl(t,n)}function fR(t,n){const r=n.tagName;r===u.COLGROUP?t.openElements.currentTagName===u.COLGROUP&&(t.openElements.pop(),t.insertionMode=ut):r===u.TEMPLATE?Zr(t,n):r!==u.COL&&xl(t,n)}function xl(t,n){t.openElements.currentTagName===u.COLGROUP&&(t.openElements.pop(),t.insertionMode=ut,t._processToken(n))}function gR(t,n){const r=n.tagName;r===u.TR?(t.openElements.clearBackToTableBodyContext(),t._insertElement(n,V.HTML),t.insertionMode=Un):r===u.TH||r===u.TD?(t.openElements.clearBackToTableBodyContext(),t._insertFakeElement(u.TR),t.insertionMode=Un,t._processToken(n)):r===u.CAPTION||r===u.COL||r===u.COLGROUP||r===u.TBODY||r===u.TFOOT||r===u.THEAD?t.openElements.hasTableBodyContextInTableScope()&&(t.openElements.clearBackToTableBodyContext(),t.openElements.pop(),t.insertionMode=ut,t._processToken(n)):$1(t,n)}function bR(t,n){const r=n.tagName;r===u.TBODY||r===u.TFOOT||r===u.THEAD?t.openElements.hasInTableScope(r)&&(t.openElements.clearBackToTableBodyContext(),t.openElements.pop(),t.insertionMode=ut):r===u.TABLE?t.openElements.hasTableBodyContextInTableScope()&&(t.openElements.clearBackToTableBodyContext(),t.openElements.pop(),t.insertionMode=ut,t._processToken(n)):(r!==u.BODY&&r!==u.CAPTION&&r!==u.COL&&r!==u.COLGROUP||r!==u.HTML&&r!==u.TD&&r!==u.TH&&r!==u.TR)&&z1(t,n)}function xR(t,n){const r=n.tagName;r===u.TH||r===u.TD?(t.openElements.clearBackToTableRowContext(),t._insertElement(n,V.HTML),t.insertionMode=Vl,t.activeFormattingElements.insertMarker()):r===u.CAPTION||r===u.COL||r===u.COLGROUP||r===u.TBODY||r===u.TFOOT||r===u.THEAD||r===u.TR?t.openElements.hasInTableScope(u.TR)&&(t.openElements.clearBackToTableRowContext(),t.openElements.pop(),t.insertionMode=zt,t._processToken(n)):$1(t,n)}function ER(t,n){const r=n.tagName;r===u.TR?t.openElements.hasInTableScope(u.TR)&&(t.openElements.clearBackToTableRowContext(),t.openElements.pop(),t.insertionMode=zt):r===u.TABLE?t.openElements.hasInTableScope(u.TR)&&(t.openElements.clearBackToTableRowContext(),t.openElements.pop(),t.insertionMode=zt,t._processToken(n)):r===u.TBODY||r===u.TFOOT||r===u.THEAD?(t.openElements.hasInTableScope(r)||t.openElements.hasInTableScope(u.TR))&&(t.openElements.clearBackToTableRowContext(),t.openElements.pop(),t.insertionMode=zt,t._processToken(n)):(r!==u.BODY&&r!==u.CAPTION&&r!==u.COL&&r!==u.COLGROUP||r!==u.HTML&&r!==u.TD&&r!==u.TH)&&z1(t,n)}function TR(t,n){const r=n.tagName;r===u.CAPTION||r===u.COL||r===u.COLGROUP||r===u.TBODY||r===u.TD||r===u.TFOOT||r===u.TH||r===u.THEAD||r===u.TR?(t.openElements.hasInTableScope(u.TD)||t.openElements.hasInTableScope(u.TH))&&(t._closeTableCell(),t._processToken(n)):vt(t,n)}function yR(t,n){const r=n.tagName;r===u.TD||r===u.TH?t.openElements.hasInTableScope(r)&&(t.openElements.generateImpliedEndTags(),t.openElements.popUntilTagNamePopped(r),t.activeFormattingElements.clearToLastMarker(),t.insertionMode=Un):r===u.TABLE||r===u.TBODY||r===u.TFOOT||r===u.THEAD||r===u.TR?t.openElements.hasInTableScope(r)&&(t._closeTableCell(),t._processToken(n)):r!==u.BODY&&r!==u.CAPTION&&r!==u.COL&&r!==u.COLGROUP&&r!==u.HTML&&G1(t,n)}function hS(t,n){const r=n.tagName;r===u.HTML?vt(t,n):r===u.OPTION?(t.openElements.currentTagName===u.OPTION&&t.openElements.pop(),t._insertElement(n,V.HTML)):r===u.OPTGROUP?(t.openElements.currentTagName===u.OPTION&&t.openElements.pop(),t.openElements.currentTagName===u.OPTGROUP&&t.openElements.pop(),t._insertElement(n,V.HTML)):r===u.INPUT||r===u.KEYGEN||r===u.TEXTAREA||r===u.SELECT?t.openElements.hasInSelectScope(u.SELECT)&&(t.openElements.popUntilTagNamePopped(u.SELECT),t._resetInsertionMode(),r!==u.SELECT&&t._processToken(n)):(r===u.SCRIPT||r===u.TEMPLATE)&&qe(t,n)}function pS(t,n){const r=n.tagName;if(r===u.OPTGROUP){const s=t.openElements.items[t.openElements.stackTop-1],i=s&&t.treeAdapter.getTagName(s);t.openElements.currentTagName===u.OPTION&&i===u.OPTGROUP&&t.openElements.pop(),t.openElements.currentTagName===u.OPTGROUP&&t.openElements.pop()}else r===u.OPTION?t.openElements.currentTagName===u.OPTION&&t.openElements.pop():r===u.SELECT&&t.openElements.hasInSelectScope(u.SELECT)?(t.openElements.popUntilTagNamePopped(u.SELECT),t._resetInsertionMode()):r===u.TEMPLATE&&Zr(t,n)}function SR(t,n){const r=n.tagName;r===u.CAPTION||r===u.TABLE||r===u.TBODY||r===u.TFOOT||r===u.THEAD||r===u.TR||r===u.TD||r===u.TH?(t.openElements.popUntilTagNamePopped(u.SELECT),t._resetInsertionMode(),t._processToken(n)):hS(t,n)}function NR(t,n){const r=n.tagName;r===u.CAPTION||r===u.TABLE||r===u.TBODY||r===u.TFOOT||r===u.THEAD||r===u.TR||r===u.TD||r===u.TH?t.openElements.hasInTableScope(r)&&(t.openElements.popUntilTagNamePopped(u.SELECT),t._resetInsertionMode(),t._processToken(n)):pS(t,n)}function jR(t,n){const r=n.tagName;if(r===u.BASE||r===u.BASEFONT||r===u.BGSOUND||r===u.LINK||r===u.META||r===u.NOFRAMES||r===u.SCRIPT||r===u.STYLE||r===u.TEMPLATE||r===u.TITLE)qe(t,n);else{const s=iv[r]||yn;t._popTmplInsertionMode(),t._pushTmplInsertionMode(s),t.insertionMode=s,t._processToken(n)}}function AR(t,n){n.tagName===u.TEMPLATE&&Zr(t,n)}function mS(t,n){t.openElements.tmplCount>0?(t.openElements.popUntilTagNamePopped(u.TEMPLATE),t.activeFormattingElements.clearToLastMarker(),t._popTmplInsertionMode(),t._resetInsertionMode(),t._processToken(n)):t.stopped=!0}function _R(t,n){n.tagName===u.HTML?vt(t,n):El(t,n)}function vR(t,n){n.tagName===u.HTML?t.fragmentContext||(t.insertionMode=dS):El(t,n)}function El(t,n){t.insertionMode=yn,t._processToken(n)}function RR(t,n){const r=n.tagName;r===u.HTML?vt(t,n):r===u.FRAMESET?t._insertElement(n,V.HTML):r===u.FRAME?(t._appendElement(n,V.HTML),n.ackSelfClosing=!0):r===u.NOFRAMES&&qe(t,n)}function wR(t,n){n.tagName===u.FRAMESET&&!t.openElements.isRootHtmlElementCurrent()&&(t.openElements.pop(),!t.fragmentContext&&t.openElements.currentTagName!==u.FRAMESET&&(t.insertionMode=cS))}function IR(t,n){const r=n.tagName;r===u.HTML?vt(t,n):r===u.NOFRAMES&&qe(t,n)}function CR(t,n){n.tagName===u.HTML&&(t.insertionMode=uS)}function OR(t,n){n.tagName===u.HTML?vt(t,n):Uo(t,n)}function Uo(t,n){t.insertionMode=yn,t._processToken(n)}function kR(t,n){const r=n.tagName;r===u.HTML?vt(t,n):r===u.NOFRAMES&&qe(t,n)}function LR(t,n){n.chars=ev.REPLACEMENT_CHARACTER,t._insertCharacters(n)}function DR(t,n){t._insertCharacters(n),t.framesetOk=!1}function MR(t,n){if(xn.causesExit(n)&&!t.fragmentContext){for(;t.treeAdapter.getNamespaceURI(t.openElements.current)!==V.HTML&&!t._isIntegrationPoint(t.openElements.current);)t.openElements.pop();t._processToken(n)}else{const r=t._getAdjustedCurrentElement(),s=t.treeAdapter.getNamespaceURI(r);s===V.MATHML?xn.adjustTokenMathMLAttrs(n):s===V.SVG&&(xn.adjustTokenSVGTagName(n),xn.adjustTokenSVGAttrs(n)),xn.adjustTokenXMLAttrs(n),n.selfClosing?t._appendElement(n,s):t._insertElement(n,s),n.ackSelfClosing=!0}}function FR(t,n){for(let r=t.openElements.stackTop;r>0;r--){const s=t.openElements.items[r];if(t.treeAdapter.getNamespaceURI(s)===V.HTML){t._processToken(n);break}if(t.treeAdapter.getTagName(s).toLowerCase()===n.tagName){t.openElements.popUntilElementPopped(s);break}}}const PR=Vs(ov);class va{constructor(n,r,s){this.property=n,this.normal=r,s&&(this.space=s)}}va.prototype.property={};va.prototype.normal={};va.prototype.space=null;function fS(t,n){const r={},s={};let i=-1;for(;++i<t.length;)Object.assign(r,t[i].property),Object.assign(s,t[i].normal);return new va(r,s,n)}function xa(t){return t.toLowerCase()}class qt{constructor(n,r){this.property=n,this.attribute=r}}qt.prototype.space=null;qt.prototype.boolean=!1;qt.prototype.booleanish=!1;qt.prototype.overloadedBoolean=!1;qt.prototype.number=!1;qt.prototype.commaSeparated=!1;qt.prototype.spaceSeparated=!1;qt.prototype.commaOrSpaceSeparated=!1;qt.prototype.mustUseProperty=!1;qt.prototype.defined=!1;let UR=0;const ne=Qr(),He=Qr(),gS=Qr(),U=Qr(),Se=Qr(),Ms=Qr(),wt=Qr();function Qr(){return 2**++UR}const _u=Object.freeze(Object.defineProperty({__proto__:null,boolean:ne,booleanish:He,commaOrSpaceSeparated:wt,commaSeparated:Ms,number:U,overloadedBoolean:gS,spaceSeparated:Se},Symbol.toStringTag,{value:"Module"})),xd=Object.keys(_u);class W1 extends qt{constructor(n,r,s,i){let a=-1;if(super(n,r),$E(this,"space",i),typeof s=="number")for(;++a<xd.length;){const o=xd[a];$E(this,xd[a],(s&_u[o])===_u[o])}}}W1.prototype.defined=!0;function $E(t,n,r){r&&(t[n]=r)}const BR={}.hasOwnProperty;function Js(t){const n={},r={};let s;for(s in t.properties)if(BR.call(t.properties,s)){const i=t.properties[s],a=new W1(s,t.transform(t.attributes||{},s),i,t.space);t.mustUseProperty&&t.mustUseProperty.includes(s)&&(a.mustUseProperty=!0),n[s]=a,r[xa(s)]=s,r[xa(a.attribute)]=s}return new va(n,r,t.space)}const bS=Js({space:"xlink",transform(t,n){return"xlink:"+n.slice(5).toLowerCase()},properties:{xLinkActuate:null,xLinkArcRole:null,xLinkHref:null,xLinkRole:null,xLinkShow:null,xLinkTitle:null,xLinkType:null}}),xS=Js({space:"xml",transform(t,n){return"xml:"+n.slice(3).toLowerCase()},properties:{xmlLang:null,xmlBase:null,xmlSpace:null}});function ES(t,n){return n in t?t[n]:n}function TS(t,n){return ES(t,n.toLowerCase())}const yS=Js({space:"xmlns",attributes:{xmlnsxlink:"xmlns:xlink"},transform:TS,properties:{xmlns:null,xmlnsXLink:null}}),SS=Js({transform(t,n){return n==="role"?n:"aria-"+n.slice(4).toLowerCase()},properties:{ariaActiveDescendant:null,ariaAtomic:He,ariaAutoComplete:null,ariaBusy:He,ariaChecked:He,ariaColCount:U,ariaColIndex:U,ariaColSpan:U,ariaControls:Se,ariaCurrent:null,ariaDescribedBy:Se,ariaDetails:null,ariaDisabled:He,ariaDropEffect:Se,ariaErrorMessage:null,ariaExpanded:He,ariaFlowTo:Se,ariaGrabbed:He,ariaHasPopup:null,ariaHidden:He,ariaInvalid:null,ariaKeyShortcuts:null,ariaLabel:null,ariaLabelledBy:Se,ariaLevel:U,ariaLive:null,ariaModal:He,ariaMultiLine:He,ariaMultiSelectable:He,ariaOrientation:null,ariaOwns:Se,ariaPlaceholder:null,ariaPosInSet:U,ariaPressed:He,ariaReadOnly:He,ariaRelevant:null,ariaRequired:He,ariaRoleDescription:Se,ariaRowCount:U,ariaRowIndex:U,ariaRowSpan:U,ariaSelected:He,ariaSetSize:U,ariaSort:null,ariaValueMax:U,ariaValueMin:U,ariaValueNow:U,ariaValueText:null,role:null}}),HR=Js({space:"html",attributes:{acceptcharset:"accept-charset",classname:"class",htmlfor:"for",httpequiv:"http-equiv"},transform:TS,mustUseProperty:["checked","multiple","muted","selected"],properties:{abbr:null,accept:Ms,acceptCharset:Se,accessKey:Se,action:null,allow:null,allowFullScreen:ne,allowPaymentRequest:ne,allowUserMedia:ne,alt:null,as:null,async:ne,autoCapitalize:null,autoComplete:Se,autoFocus:ne,autoPlay:ne,blocking:Se,capture:ne,charSet:null,checked:ne,cite:null,className:Se,cols:U,colSpan:null,content:null,contentEditable:He,controls:ne,controlsList:Se,coords:U|Ms,crossOrigin:null,data:null,dateTime:null,decoding:null,default:ne,defer:ne,dir:null,dirName:null,disabled:ne,download:gS,draggable:He,encType:null,enterKeyHint:null,fetchPriority:null,form:null,formAction:null,formEncType:null,formMethod:null,formNoValidate:ne,formTarget:null,headers:Se,height:U,hidden:ne,high:U,href:null,hrefLang:null,htmlFor:Se,httpEquiv:Se,id:null,imageSizes:null,imageSrcSet:null,inert:ne,inputMode:null,integrity:null,is:null,isMap:ne,itemId:null,itemProp:Se,itemRef:Se,itemScope:ne,itemType:Se,kind:null,label:null,lang:null,language:null,list:null,loading:null,loop:ne,low:U,manifest:null,max:null,maxLength:U,media:null,method:null,min:null,minLength:U,multiple:ne,muted:ne,name:null,nonce:null,noModule:ne,noValidate:ne,onAbort:null,onAfterPrint:null,onAuxClick:null,onBeforeMatch:null,onBeforePrint:null,onBeforeToggle:null,onBeforeUnload:null,onBlur:null,onCancel:null,onCanPlay:null,onCanPlayThrough:null,onChange:null,onClick:null,onClose:null,onContextLost:null,onContextMenu:null,onContextRestored:null,onCopy:null,onCueChange:null,onCut:null,onDblClick:null,onDrag:null,onDragEnd:null,onDragEnter:null,onDragExit:null,onDragLeave:null,onDragOver:null,onDragStart:null,onDrop:null,onDurationChange:null,onEmptied:null,onEnded:null,onError:null,onFocus:null,onFormData:null,onHashChange:null,onInput:null,onInvalid:null,onKeyDown:null,onKeyPress:null,onKeyUp:null,onLanguageChange:null,onLoad:null,onLoadedData:null,onLoadedMetadata:null,onLoadEnd:null,onLoadStart:null,onMessage:null,onMessageError:null,onMouseDown:null,onMouseEnter:null,onMouseLeave:null,onMouseMove:null,onMouseOut:null,onMouseOver:null,onMouseUp:null,onOffline:null,onOnline:null,onPageHide:null,onPageShow:null,onPaste:null,onPause:null,onPlay:null,onPlaying:null,onPopState:null,onProgress:null,onRateChange:null,onRejectionHandled:null,onReset:null,onResize:null,onScroll:null,onScrollEnd:null,onSecurityPolicyViolation:null,onSeeked:null,onSeeking:null,onSelect:null,onSlotChange:null,onStalled:null,onStorage:null,onSubmit:null,onSuspend:null,onTimeUpdate:null,onToggle:null,onUnhandledRejection:null,onUnload:null,onVolumeChange:null,onWaiting:null,onWheel:null,open:ne,optimum:U,pattern:null,ping:Se,placeholder:null,playsInline:ne,popover:null,popoverTarget:null,popoverTargetAction:null,poster:null,preload:null,readOnly:ne,referrerPolicy:null,rel:Se,required:ne,reversed:ne,rows:U,rowSpan:U,sandbox:Se,scope:null,scoped:ne,seamless:ne,selected:ne,shadowRootDelegatesFocus:ne,shadowRootMode:null,shape:null,size:U,sizes:null,slot:null,span:U,spellCheck:He,src:null,srcDoc:null,srcLang:null,srcSet:null,start:U,step:null,style:null,tabIndex:U,target:null,title:null,translate:null,type:null,typeMustMatch:ne,useMap:null,value:He,width:U,wrap:null,align:null,aLink:null,archive:Se,axis:null,background:null,bgColor:null,border:U,borderColor:null,bottomMargin:U,cellPadding:null,cellSpacing:null,char:null,charOff:null,classId:null,clear:null,code:null,codeBase:null,codeType:null,color:null,compact:ne,declare:ne,event:null,face:null,frame:null,frameBorder:null,hSpace:U,leftMargin:U,link:null,longDesc:null,lowSrc:null,marginHeight:U,marginWidth:U,noResize:ne,noHref:ne,noShade:ne,noWrap:ne,object:null,profile:null,prompt:null,rev:null,rightMargin:U,rules:null,scheme:null,scrolling:He,standby:null,summary:null,text:null,topMargin:U,valueType:null,version:null,vAlign:null,vLink:null,vSpace:U,allowTransparency:null,autoCorrect:null,autoSave:null,disablePictureInPicture:ne,disableRemotePlayback:ne,prefix:null,property:null,results:U,security:null,unselectable:null}}),GR=Js({space:"svg",attributes:{accentHeight:"accent-height",alignmentBaseline:"alignment-baseline",arabicForm:"arabic-form",baselineShift:"baseline-shift",capHeight:"cap-height",className:"class",clipPath:"clip-path",clipRule:"clip-rule",colorInterpolation:"color-interpolation",colorInterpolationFilters:"color-interpolation-filters",colorProfile:"color-profile",colorRendering:"color-rendering",crossOrigin:"crossorigin",dataType:"datatype",dominantBaseline:"dominant-baseline",enableBackground:"enable-background",fillOpacity:"fill-opacity",fillRule:"fill-rule",floodColor:"flood-color",floodOpacity:"flood-opacity",fontFamily:"font-family",fontSize:"font-size",fontSizeAdjust:"font-size-adjust",fontStretch:"font-stretch",fontStyle:"font-style",fontVariant:"font-variant",fontWeight:"font-weight",glyphName:"glyph-name",glyphOrientationHorizontal:"glyph-orientation-horizontal",glyphOrientationVertical:"glyph-orientation-vertical",hrefLang:"hreflang",horizAdvX:"horiz-adv-x",horizOriginX:"horiz-origin-x",horizOriginY:"horiz-origin-y",imageRendering:"image-rendering",letterSpacing:"letter-spacing",lightingColor:"lighting-color",markerEnd:"marker-end",markerMid:"marker-mid",markerStart:"marker-start",navDown:"nav-down",navDownLeft:"nav-down-left",navDownRight:"nav-down-right",navLeft:"nav-left",navNext:"nav-next",navPrev:"nav-prev",navRight:"nav-right",navUp:"nav-up",navUpLeft:"nav-up-left",navUpRight:"nav-up-right",onAbort:"onabort",onActivate:"onactivate",onAfterPrint:"onafterprint",onBeforePrint:"onbeforeprint",onBegin:"onbegin",onCancel:"oncancel",onCanPlay:"oncanplay",onCanPlayThrough:"oncanplaythrough",onChange:"onchange",onClick:"onclick",onClose:"onclose",onCopy:"oncopy",onCueChange:"oncuechange",onCut:"oncut",onDblClick:"ondblclick",onDrag:"ondrag",onDragEnd:"ondragend",onDragEnter:"ondragenter",onDragExit:"ondragexit",onDragLeave:"ondragleave",onDragOver:"ondragover",onDragStart:"ondragstart",onDrop:"ondrop",onDurationChange:"ondurationchange",onEmptied:"onemptied",onEnd:"onend",onEnded:"onended",onError:"onerror",onFocus:"onfocus",onFocusIn:"onfocusin",onFocusOut:"onfocusout",onHashChange:"onhashchange",onInput:"oninput",onInvalid:"oninvalid",onKeyDown:"onkeydown",onKeyPress:"onkeypress",onKeyUp:"onkeyup",onLoad:"onload",onLoadedData:"onloadeddata",onLoadedMetadata:"onloadedmetadata",onLoadStart:"onloadstart",onMessage:"onmessage",onMouseDown:"onmousedown",onMouseEnter:"onmouseenter",onMouseLeave:"onmouseleave",onMouseMove:"onmousemove",onMouseOut:"onmouseout",onMouseOver:"onmouseover",onMouseUp:"onmouseup",onMouseWheel:"onmousewheel",onOffline:"onoffline",onOnline:"ononline",onPageHide:"onpagehide",onPageShow:"onpageshow",onPaste:"onpaste",onPause:"onpause",onPlay:"onplay",onPlaying:"onplaying",onPopState:"onpopstate",onProgress:"onprogress",onRateChange:"onratechange",onRepeat:"onrepeat",onReset:"onreset",onResize:"onresize",onScroll:"onscroll",onSeeked:"onseeked",onSeeking:"onseeking",onSelect:"onselect",onShow:"onshow",onStalled:"onstalled",onStorage:"onstorage",onSubmit:"onsubmit",onSuspend:"onsuspend",onTimeUpdate:"ontimeupdate",onToggle:"ontoggle",onUnload:"onunload",onVolumeChange:"onvolumechange",onWaiting:"onwaiting",onZoom:"onzoom",overlinePosition:"overline-position",overlineThickness:"overline-thickness",paintOrder:"paint-order",panose1:"panose-1",pointerEvents:"pointer-events",referrerPolicy:"referrerpolicy",renderingIntent:"rendering-intent",shapeRendering:"shape-rendering",stopColor:"stop-color",stopOpacity:"stop-opacity",strikethroughPosition:"strikethrough-position",strikethroughThickness:"strikethrough-thickness",strokeDashArray:"stroke-dasharray",strokeDashOffset:"stroke-dashoffset",strokeLineCap:"stroke-linecap",strokeLineJoin:"stroke-linejoin",strokeMiterLimit:"stroke-miterlimit",strokeOpacity:"stroke-opacity",strokeWidth:"stroke-width",tabIndex:"tabindex",textAnchor:"text-anchor",textDecoration:"text-decoration",textRendering:"text-rendering",transformOrigin:"transform-origin",typeOf:"typeof",underlinePosition:"underline-position",underlineThickness:"underline-thickness",unicodeBidi:"unicode-bidi",unicodeRange:"unicode-range",unitsPerEm:"units-per-em",vAlphabetic:"v-alphabetic",vHanging:"v-hanging",vIdeographic:"v-ideographic",vMathematical:"v-mathematical",vectorEffect:"vector-effect",vertAdvY:"vert-adv-y",vertOriginX:"vert-origin-x",vertOriginY:"vert-origin-y",wordSpacing:"word-spacing",writingMode:"writing-mode",xHeight:"x-height",playbackOrder:"playbackorder",timelineBegin:"timelinebegin"},transform:ES,properties:{about:wt,accentHeight:U,accumulate:null,additive:null,alignmentBaseline:null,alphabetic:U,amplitude:U,arabicForm:null,ascent:U,attributeName:null,attributeType:null,azimuth:U,bandwidth:null,baselineShift:null,baseFrequency:null,baseProfile:null,bbox:null,begin:null,bias:U,by:null,calcMode:null,capHeight:U,className:Se,clip:null,clipPath:null,clipPathUnits:null,clipRule:null,color:null,colorInterpolation:null,colorInterpolationFilters:null,colorProfile:null,colorRendering:null,content:null,contentScriptType:null,contentStyleType:null,crossOrigin:null,cursor:null,cx:null,cy:null,d:null,dataType:null,defaultAction:null,descent:U,diffuseConstant:U,direction:null,display:null,dur:null,divisor:U,dominantBaseline:null,download:ne,dx:null,dy:null,edgeMode:null,editable:null,elevation:U,enableBackground:null,end:null,event:null,exponent:U,externalResourcesRequired:null,fill:null,fillOpacity:U,fillRule:null,filter:null,filterRes:null,filterUnits:null,floodColor:null,floodOpacity:null,focusable:null,focusHighlight:null,fontFamily:null,fontSize:null,fontSizeAdjust:null,fontStretch:null,fontStyle:null,fontVariant:null,fontWeight:null,format:null,fr:null,from:null,fx:null,fy:null,g1:Ms,g2:Ms,glyphName:Ms,glyphOrientationHorizontal:null,glyphOrientationVertical:null,glyphRef:null,gradientTransform:null,gradientUnits:null,handler:null,hanging:U,hatchContentUnits:null,hatchUnits:null,height:null,href:null,hrefLang:null,horizAdvX:U,horizOriginX:U,horizOriginY:U,id:null,ideographic:U,imageRendering:null,initialVisibility:null,in:null,in2:null,intercept:U,k:U,k1:U,k2:U,k3:U,k4:U,kernelMatrix:wt,kernelUnitLength:null,keyPoints:null,keySplines:null,keyTimes:null,kerning:null,lang:null,lengthAdjust:null,letterSpacing:null,lightingColor:null,limitingConeAngle:U,local:null,markerEnd:null,markerMid:null,markerStart:null,markerHeight:null,markerUnits:null,markerWidth:null,mask:null,maskContentUnits:null,maskUnits:null,mathematical:null,max:null,media:null,mediaCharacterEncoding:null,mediaContentEncodings:null,mediaSize:U,mediaTime:null,method:null,min:null,mode:null,name:null,navDown:null,navDownLeft:null,navDownRight:null,navLeft:null,navNext:null,navPrev:null,navRight:null,navUp:null,navUpLeft:null,navUpRight:null,numOctaves:null,observer:null,offset:null,onAbort:null,onActivate:null,onAfterPrint:null,onBeforePrint:null,onBegin:null,onCancel:null,onCanPlay:null,onCanPlayThrough:null,onChange:null,onClick:null,onClose:null,onCopy:null,onCueChange:null,onCut:null,onDblClick:null,onDrag:null,onDragEnd:null,onDragEnter:null,onDragExit:null,onDragLeave:null,onDragOver:null,onDragStart:null,onDrop:null,onDurationChange:null,onEmptied:null,onEnd:null,onEnded:null,onError:null,onFocus:null,onFocusIn:null,onFocusOut:null,onHashChange:null,onInput:null,onInvalid:null,onKeyDown:null,onKeyPress:null,onKeyUp:null,onLoad:null,onLoadedData:null,onLoadedMetadata:null,onLoadStart:null,onMessage:null,onMouseDown:null,onMouseEnter:null,onMouseLeave:null,onMouseMove:null,onMouseOut:null,onMouseOver:null,onMouseUp:null,onMouseWheel:null,onOffline:null,onOnline:null,onPageHide:null,onPageShow:null,onPaste:null,onPause:null,onPlay:null,onPlaying:null,onPopState:null,onProgress:null,onRateChange:null,onRepeat:null,onReset:null,onResize:null,onScroll:null,onSeeked:null,onSeeking:null,onSelect:null,onShow:null,onStalled:null,onStorage:null,onSubmit:null,onSuspend:null,onTimeUpdate:null,onToggle:null,onUnload:null,onVolumeChange:null,onWaiting:null,onZoom:null,opacity:null,operator:null,order:null,orient:null,orientation:null,origin:null,overflow:null,overlay:null,overlinePosition:U,overlineThickness:U,paintOrder:null,panose1:null,path:null,pathLength:U,patternContentUnits:null,patternTransform:null,patternUnits:null,phase:null,ping:Se,pitch:null,playbackOrder:null,pointerEvents:null,points:null,pointsAtX:U,pointsAtY:U,pointsAtZ:U,preserveAlpha:null,preserveAspectRatio:null,primitiveUnits:null,propagate:null,property:wt,r:null,radius:null,referrerPolicy:null,refX:null,refY:null,rel:wt,rev:wt,renderingIntent:null,repeatCount:null,repeatDur:null,requiredExtensions:wt,requiredFeatures:wt,requiredFonts:wt,requiredFormats:wt,resource:null,restart:null,result:null,rotate:null,rx:null,ry:null,scale:null,seed:null,shapeRendering:null,side:null,slope:null,snapshotTime:null,specularConstant:U,specularExponent:U,spreadMethod:null,spacing:null,startOffset:null,stdDeviation:null,stemh:null,stemv:null,stitchTiles:null,stopColor:null,stopOpacity:null,strikethroughPosition:U,strikethroughThickness:U,string:null,stroke:null,strokeDashArray:wt,strokeDashOffset:null,strokeLineCap:null,strokeLineJoin:null,strokeMiterLimit:U,strokeOpacity:U,strokeWidth:null,style:null,surfaceScale:U,syncBehavior:null,syncBehaviorDefault:null,syncMaster:null,syncTolerance:null,syncToleranceDefault:null,systemLanguage:wt,tabIndex:U,tableValues:null,target:null,targetX:U,targetY:U,textAnchor:null,textDecoration:null,textRendering:null,textLength:null,timelineBegin:null,title:null,transformBehavior:null,type:null,typeOf:wt,to:null,transform:null,transformOrigin:null,u1:null,u2:null,underlinePosition:U,underlineThickness:U,unicode:null,unicodeBidi:null,unicodeRange:null,unitsPerEm:U,values:null,vAlphabetic:U,vMathematical:U,vectorEffect:null,vHanging:U,vIdeographic:U,version:null,vertAdvY:U,vertOriginX:U,vertOriginY:U,viewBox:null,viewTarget:null,visibility:null,width:null,widths:null,wordSpacing:null,writingMode:null,x:null,x1:null,x2:null,xChannelSelector:null,xHeight:U,y:null,y1:null,y2:null,yChannelSelector:null,z:null,zoomAndPan:null}}),$R=/^data[-\w.:]+$/i,zE=/-[a-z]/g,zR=/[A-Z]/g;function V1(t,n){const r=xa(n);let s=n,i=qt;if(r in t.normal)return t.property[t.normal[r]];if(r.length>4&&r.slice(0,4)==="data"&&$R.test(n)){if(n.charAt(4)==="-"){const a=n.slice(5).replace(zE,VR);s="data"+a.charAt(0).toUpperCase()+a.slice(1)}else{const a=n.slice(4);if(!zE.test(a)){let o=a.replace(zR,WR);o.charAt(0)!=="-"&&(o="-"+o),n="data"+o}}i=W1}return new i(s,n)}function WR(t){return"-"+t.toLowerCase()}function VR(t){return t.charAt(1).toUpperCase()}const Yl=fS([xS,bS,yS,SS,HR],"html"),Ra=fS([xS,bS,yS,SS,GR],"svg"),WE=/[#.]/g;function KR(t,n){const r=t||"",s={};let i=0,a,o;for(;i<r.length;){WE.lastIndex=i;const l=WE.exec(r),c=r.slice(i,l?l.index:r.length);c&&(a?a==="#"?s.id=c:Array.isArray(s.className)?s.className.push(c):s.className=[c]:o=c,i+=c.length),l&&(a=l[0],i++)}return{type:"element",tagName:o||n||"div",properties:s,children:[]}}function VE(t){const n=String(t||"").trim();return n?n.split(/[ \t\n\r\f]+/g):[]}function YR(t){return t.join(" ").trim()}function KE(t){const n=[],r=String(t||"");let s=r.indexOf(","),i=0,a=!1;for(;!a;){s===-1&&(s=r.length,a=!0);const o=r.slice(i,s).trim();(o||!a)&&n.push(o),i=s+1,s=r.indexOf(",",i)}return n}function qR(t,n){const r=n||{};return(t[t.length-1]===""?[...t,""]:t).join((r.padRight?" ":"")+","+(r.padLeft===!1?"":" ")).trim()}const XR=new Set(["menu","submit","reset","button"]),vu={}.hasOwnProperty;function NS(t,n,r){const s=r&&ew(r);return function(a,o,...l){let c=-1,d;if(a==null)d={type:"root",children:[]},l.unshift(o);else if(d=KR(a,n),d.tagName=d.tagName.toLowerCase(),s&&vu.call(s,d.tagName)&&(d.tagName=s[d.tagName]),ZR(o,d.tagName)){let h;for(h in o)vu.call(o,h)&&QR(t,d.properties,h,o[h])}else l.unshift(o);for(;++c<l.length;)Ru(d.children,l[c]);return d.type==="element"&&d.tagName==="template"&&(d.content={type:"root",children:d.children},d.children=[]),d}}function ZR(t,n){return t==null||typeof t!="object"||Array.isArray(t)?!1:n==="input"||!t.type||typeof t.type!="string"?!0:"children"in t&&Array.isArray(t.children)?!1:n==="button"?XR.has(t.type.toLowerCase()):!("value"in t)}function QR(t,n,r,s){const i=V1(t,r);let a=-1,o;if(s!=null){if(typeof s=="number"){if(Number.isNaN(s))return;o=s}else typeof s=="boolean"?o=s:typeof s=="string"?i.spaceSeparated?o=VE(s):i.commaSeparated?o=KE(s):i.commaOrSpaceSeparated?o=VE(KE(s).join(" ")):o=YE(i,i.property,s):Array.isArray(s)?o=s.concat():o=i.property==="style"?JR(s):String(s);if(Array.isArray(o)){const l=[];for(;++a<o.length;)l[a]=YE(i,i.property,o[a]);o=l}i.property==="className"&&Array.isArray(n.className)&&(o=n.className.concat(o)),n[i.property]=o}}function Ru(t,n){let r=-1;if(n!=null)if(typeof n=="string"||typeof n=="number")t.push({type:"text",value:String(n)});else if(Array.isArray(n))for(;++r<n.length;)Ru(t,n[r]);else if(typeof n=="object"&&"type"in n)n.type==="root"?Ru(t,n.children):t.push(n);else throw new Error("Expected node, nodes, or string, got `"+n+"`")}function YE(t,n,r){if(typeof r=="string"){if(t.number&&r&&!Number.isNaN(Number(r)))return Number(r);if((t.boolean||t.overloadedBoolean)&&(r===""||xa(r)===xa(n)))return!0}return r}function JR(t){const n=[];let r;for(r in t)vu.call(t,r)&&n.push([r,t[r]].join(": "));return n.join("; ")}function ew(t){const n={};let r=-1;for(;++r<t.length;)n[t[r].toLowerCase()]=t[r];return n}const jS=NS(Yl,"div"),tw=["altGlyph","altGlyphDef","altGlyphItem","animateColor","animateMotion","animateTransform","clipPath","feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feDropShadow","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence","foreignObject","glyphRef","linearGradient","radialGradient","solidColor","textArea","textPath"],nw=NS(Ra,"g",tw);function rw(t){const n=String(t),r=[],s=/\r?\n|\r/g;for(;s.test(n);)r.push(s.lastIndex);return r.push(n.length+1),{toPoint:i,toOffset:a};function i(o){let l=-1;if(typeof o=="number"&&o>-1&&o<r[r.length-1]){for(;++l<r.length;)if(r[l]>o)return{line:l+1,column:o-(l>0?r[l-1]:0)+1,offset:o}}return{line:void 0,column:void 0,offset:void 0}}function a(o){const l=o&&o.line,c=o&&o.column;if(typeof l=="number"&&typeof c=="number"&&!Number.isNaN(l)&&!Number.isNaN(c)&&l-1 in r){const d=(r[l-2]||0)+c-1||0;if(d>-1&&d<r[r.length-1])return d}return-1}}const sw={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},AS={}.hasOwnProperty,iw=Object.prototype;function aw(t,n){const r=n||{};let s,i;return cw(r)?(i=r,s={}):(i=r.file||void 0,s=r),K1({schema:s.space==="svg"?Ra:Yl,file:i,verbose:s.verbose,location:!1},t)}function K1(t,n){let r;switch(n.nodeName){case"#comment":{const s=n;return r={type:"comment",value:s.data},Bo(t,s,r),r}case"#document":case"#document-fragment":{const s=n,i="mode"in s?s.mode==="quirks"||s.mode==="limited-quirks":!1;if(r={type:"root",children:_S(t,n.childNodes),data:{quirksMode:i}},t.file&&t.location){const a=String(t.file),o=rw(a),l=o.toPoint(0),c=o.toPoint(a.length);r.position={start:l,end:c}}return r}case"#documentType":{const s=n;return r={type:"doctype"},Bo(t,s,r),r}case"#text":{const s=n;return r={type:"text",value:s.value},Bo(t,s,r),r}default:return r=ow(t,n),r}}function _S(t,n){let r=-1;const s=[];for(;++r<n.length;)s[r]=K1(t,n[r]);return s}function ow(t,n){const r=t.schema;t.schema=n.namespaceURI===sw.svg?Ra:Yl;let s=-1;const i={};for(;++s<n.attrs.length;){const l=n.attrs[s],c=(l.prefix?l.prefix+":":"")+l.name;AS.call(iw,c)||(i[c]=l.value)}const o=(t.schema.space==="svg"?nw:jS)(n.tagName,i,_S(t,n.childNodes));if(Bo(t,n,o),o.tagName==="template"){const l=n,c=l.sourceCodeLocation,d=c&&c.startTag&&Rs(c.startTag),h=c&&c.endTag&&Rs(c.endTag),x=K1(t,l.content);d&&h&&t.file&&(x.position={start:d.end,end:h.start}),o.content=x}return t.schema=r,o}function Bo(t,n,r){if("sourceCodeLocation"in n&&n.sourceCodeLocation&&t.file){const s=lw(t,r,n.sourceCodeLocation);s&&(t.location=!0,r.position=s)}}function lw(t,n,r){const s=Rs(r);if(n.type==="element"){const i=n.children[n.children.length-1];if(s&&!r.endTag&&i&&i.position&&i.position.end&&(s.end=Object.assign({},i.position.end)),t.verbose){const a={};let o;if(r.attrs)for(o in r.attrs)AS.call(r.attrs,o)&&(a[V1(t.schema,o).property]=Rs(r.attrs[o]));n.data={position:{opening:Rs(r.startTag),closing:r.endTag?Rs(r.endTag):null,properties:a}}}}return s}function Rs(t){const n=qE({line:t.startLine,column:t.startCol,offset:t.startOffset}),r=qE({line:t.endLine,column:t.endCol,offset:t.endOffset});return n||r?{start:n,end:r}:void 0}function qE(t){return t.line&&t.column?t:void 0}function cw(t){return"messages"in t}const dw={abandonedHeadElementChild:{reason:"Unexpected metadata element after head",description:"Unexpected element after head. Expected the element before `</head>`",url:!1},abruptClosingOfEmptyComment:{reason:"Unexpected abruptly closed empty comment",description:"Unexpected `>` or `->`. Expected `-->` to close comments"},abruptDoctypePublicIdentifier:{reason:"Unexpected abruptly closed public identifier",description:"Unexpected `>`. Expected a closing `\"` or `'` after the public identifier"},abruptDoctypeSystemIdentifier:{reason:"Unexpected abruptly closed system identifier",description:"Unexpected `>`. Expected a closing `\"` or `'` after the identifier identifier"},absenceOfDigitsInNumericCharacterReference:{reason:"Unexpected non-digit at start of numeric character reference",description:"Unexpected `%c`. Expected `[0-9]` for decimal references or `[0-9a-fA-F]` for hexadecimal references"},cdataInHtmlContent:{reason:"Unexpected CDATA section in HTML",description:"Unexpected `<![CDATA[` in HTML. Remove it, use a comment, or encode special characters instead"},characterReferenceOutsideUnicodeRange:{reason:"Unexpected too big numeric character reference",description:"Unexpectedly high character reference. Expected character references to be at most hexadecimal 10ffff (or decimal 1114111)"},closingOfElementWithOpenChildElements:{reason:"Unexpected closing tag with open child elements",description:"Unexpectedly closing tag. Expected other tags to be closed first",url:!1},controlCharacterInInputStream:{reason:"Unexpected control character",description:"Unexpected control character `%x`. Expected a non-control code point, 0x00, or ASCII whitespace"},controlCharacterReference:{reason:"Unexpected control character reference",description:"Unexpectedly control character in reference. Expected a non-control code point, 0x00, or ASCII whitespace"},disallowedContentInNoscriptInHead:{reason:"Disallowed content inside `<noscript>` in `<head>`",description:"Unexpected text character `%c`. Only use text in `<noscript>`s in `<body>`",url:!1},duplicateAttribute:{reason:"Unexpected duplicate attribute",description:"Unexpectedly double attribute. Expected attributes to occur only once"},endTagWithAttributes:{reason:"Unexpected attribute on closing tag",description:"Unexpected attribute. Expected `>` instead"},endTagWithTrailingSolidus:{reason:"Unexpected slash at end of closing tag",description:"Unexpected `%c-1`. Expected `>` instead"},endTagWithoutMatchingOpenElement:{reason:"Unexpected unopened end tag",description:"Unexpected end tag. Expected no end tag or another end tag",url:!1},eofBeforeTagName:{reason:"Unexpected end of file",description:"Unexpected end of file. Expected tag name instead"},eofInCdata:{reason:"Unexpected end of file in CDATA",description:"Unexpected end of file. Expected `]]>` to close the CDATA"},eofInComment:{reason:"Unexpected end of file in comment",description:"Unexpected end of file. Expected `-->` to close the comment"},eofInDoctype:{reason:"Unexpected end of file in doctype",description:"Unexpected end of file. Expected a valid doctype (such as `<!doctype html>`)"},eofInElementThatCanContainOnlyText:{reason:"Unexpected end of file in element that can only contain text",description:"Unexpected end of file. Expected text or a closing tag",url:!1},eofInScriptHtmlCommentLikeText:{reason:"Unexpected end of file in comment inside script",description:"Unexpected end of file. Expected `-->` to close the comment"},eofInTag:{reason:"Unexpected end of file in tag",description:"Unexpected end of file. Expected `>` to close the tag"},incorrectlyClosedComment:{reason:"Incorrectly closed comment",description:"Unexpected `%c-1`. Expected `-->` to close the comment"},incorrectlyOpenedComment:{reason:"Incorrectly opened comment",description:"Unexpected `%c`. Expected `<!--` to open the comment"},invalidCharacterSequenceAfterDoctypeName:{reason:"Invalid sequence after doctype name",description:"Unexpected sequence at `%c`. Expected `public` or `system`"},invalidFirstCharacterOfTagName:{reason:"Invalid first character in tag name",description:"Unexpected `%c`. Expected an ASCII letter instead"},misplacedDoctype:{reason:"Misplaced doctype",description:"Unexpected doctype. Expected doctype before head",url:!1},misplacedStartTagForHeadElement:{reason:"Misplaced `<head>` start tag",description:"Unexpected start tag `<head>`. Expected `<head>` directly after doctype",url:!1},missingAttributeValue:{reason:"Missing attribute value",description:"Unexpected `%c-1`. Expected an attribute value or no `%c-1` instead"},missingDoctype:{reason:"Missing doctype before other content",description:"Expected a `<!doctype html>` before anything else",url:!1},missingDoctypeName:{reason:"Missing doctype name",description:"Unexpected doctype end at `%c`. Expected `html` instead"},missingDoctypePublicIdentifier:{reason:"Missing public identifier in doctype",description:"Unexpected `%c`. Expected identifier for `public` instead"},missingDoctypeSystemIdentifier:{reason:"Missing system identifier in doctype",description:'Unexpected `%c`. Expected identifier for `system` instead (suggested: `"about:legacy-compat"`)'},missingEndTagName:{reason:"Missing name in end tag",description:"Unexpected `%c`. Expected an ASCII letter instead"},missingQuoteBeforeDoctypePublicIdentifier:{reason:"Missing quote before public identifier in doctype",description:"Unexpected `%c`. Expected `\"` or `'` instead"},missingQuoteBeforeDoctypeSystemIdentifier:{reason:"Missing quote before system identifier in doctype",description:"Unexpected `%c`. Expected `\"` or `'` instead"},missingSemicolonAfterCharacterReference:{reason:"Missing semicolon after character reference",description:"Unexpected `%c`. Expected `;` instead"},missingWhitespaceAfterDoctypePublicKeyword:{reason:"Missing whitespace after public identifier in doctype",description:"Unexpected `%c`. Expected ASCII whitespace instead"},missingWhitespaceAfterDoctypeSystemKeyword:{reason:"Missing whitespace after system identifier in doctype",description:"Unexpected `%c`. Expected ASCII whitespace instead"},missingWhitespaceBeforeDoctypeName:{reason:"Missing whitespace before doctype name",description:"Unexpected `%c`. Expected ASCII whitespace instead"},missingWhitespaceBetweenAttributes:{reason:"Missing whitespace between attributes",description:"Unexpected `%c`. Expected ASCII whitespace instead"},missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers:{reason:"Missing whitespace between public and system identifiers in doctype",description:"Unexpected `%c`. Expected ASCII whitespace instead"},nestedComment:{reason:"Unexpected nested comment",description:"Unexpected `<!--`. Expected `-->`"},nestedNoscriptInHead:{reason:"Unexpected nested `<noscript>` in `<head>`",description:"Unexpected `<noscript>`. Expected a closing tag or a meta element",url:!1},nonConformingDoctype:{reason:"Unexpected non-conforming doctype declaration",description:'Expected `<!doctype html>` or `<!doctype html system "about:legacy-compat">`',url:!1},nonVoidHtmlElementStartTagWithTrailingSolidus:{reason:"Unexpected trailing slash on start tag of non-void element",description:"Unexpected `/`. Expected `>` instead"},noncharacterCharacterReference:{reason:"Unexpected noncharacter code point referenced by character reference",description:"Unexpected code point. Do not use noncharacters in HTML"},noncharacterInInputStream:{reason:"Unexpected noncharacter character",description:"Unexpected code point `%x`. Do not use noncharacters in HTML"},nullCharacterReference:{reason:"Unexpected NULL character referenced by character reference",description:"Unexpected code point. Do not use NULL characters in HTML"},openElementsLeftAfterEof:{reason:"Unexpected end of file",description:"Unexpected end of file. Expected closing tag instead",url:!1},surrogateCharacterReference:{reason:"Unexpected surrogate character referenced by character reference",description:"Unexpected code point. Do not use lone surrogate characters in HTML"},surrogateInInputStream:{reason:"Unexpected surrogate character",description:"Unexpected code point `%x`. Do not use lone surrogate characters in HTML"},unexpectedCharacterAfterDoctypeSystemIdentifier:{reason:"Invalid character after system identifier in doctype",description:"Unexpected character at `%c`. Expected `>`"},unexpectedCharacterInAttributeName:{reason:"Unexpected character in attribute name",description:"Unexpected `%c`. Expected whitespace, `/`, `>`, `=`, or probably an ASCII letter"},unexpectedCharacterInUnquotedAttributeValue:{reason:"Unexpected character in unquoted attribute value",description:"Unexpected `%c`. Quote the attribute value to include it"},unexpectedEqualsSignBeforeAttributeName:{reason:"Unexpected equals sign before attribute name",description:"Unexpected `%c`. Add an attribute name before it"},unexpectedNullCharacter:{reason:"Unexpected NULL character",description:"Unexpected code point `%x`. Do not use NULL characters in HTML"},unexpectedQuestionMarkInsteadOfTagName:{reason:"Unexpected question mark instead of tag name",description:"Unexpected `%c`. Expected an ASCII letter instead"},unexpectedSolidusInTag:{reason:"Unexpected slash in tag",description:"Unexpected `%c-1`. Expected it followed by `>` or in a quoted attribute value"},unknownNamedCharacterReference:{reason:"Unexpected unknown named character reference",description:"Unexpected character reference. Expected known named character references"}},uw="https://html.spec.whatwg.org/multipage/parsing.html#parse-error-",hw={2:!0,1:!1,0:null};function pw(t){const n=this.data("settings"),r=Object.assign({},n,t);Object.assign(this,{Parser:s});function s(i,a){const o=r.fragment?"parseFragment":"parse",l=r.emitParseErrors?d:null,c=new PR({sourceCodeLocationInfo:!0,onParseError:l,scriptingEnabled:!1});return aw(c[o](i),{space:r.space,file:a,verbose:r.verbose});function d(h){const x=h.code,g=mw(x),A=r[g],S=A??!0,y=typeof S=="number"?S:S?1:0,_={line:h.startLine,column:h.startCol,offset:h.startOffset},f={line:h.endLine,column:h.endCol,offset:h.endOffset};if(y){const T=dw[g]||{reason:"",description:"",url:""},E=a.message(b(T.reason),{start:_,end:f});E.source="parse-error",E.ruleId=x,E.fatal=hw[y],E.note=b(T.description),E.url="url"in T&&T.url===!1?null:uw+x}function b(T){return T.replace(/%c(?:-(\d+))?/g,(E,R)=>{const I=R?-Number.parseInt(R,10):0,v=i.charAt(h.startOffset+I);return v==="`"?"` ` `":v}).replace(/%x/g,()=>"0x"+i.charCodeAt(h.startOffset).toString(16).toUpperCase())}}}}function mw(t){return t.replace(/-[a-z]/g,n=>n.charAt(1).toUpperCase())}const fw=["area","base","basefont","bgsound","br","col","command","embed","frame","hr","image","img","input","isindex","keygen","link","menuitem","meta","nextid","param","source","track","wbr"],XE={}.hasOwnProperty;function gw(t,n){const r=n||{};function s(i,...a){let o=s.invalid;const l=s.handlers;if(i&&XE.call(i,t)){const c=String(i[t]);o=XE.call(l,c)?l[c]:s.unknown}if(o)return o.call(this,i,...a)}return s.handlers=r.handlers||{},s.invalid=r.invalid,s.unknown=r.unknown,s}function bw(t,n){if(t=t.replace(n.subset?xw(n.subset):/["&'<>`]/g,s),n.subset||n.escapeOnly)return t;return t.replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,r).replace(/[\x01-\t\v\f\x0E-\x1F\x7F\x81\x8D\x8F\x90\x9D\xA0-\uFFFF]/g,s);function r(i,a,o){return n.format((i.charCodeAt(0)-55296)*1024+i.charCodeAt(1)-56320+65536,o.charCodeAt(a+2),n)}function s(i,a,o){return n.format(i.charCodeAt(0),o.charCodeAt(a+1),n)}}function xw(t){const n=[];let r=-1;for(;++r<t.length;)n.push(t[r].replace(/[|\\{}()[\]^$+*?.]/g,"\\$&"));return new RegExp("(?:"+n.join("|")+")","g")}function Ew(t,n,r){const s="&#x"+t.toString(16).toUpperCase();return r&&n&&!/[\dA-Fa-f]/.test(String.fromCharCode(n))?s:s+";"}function Tw(t,n,r){const s="&#"+String(t);return r&&n&&!/\d/.test(String.fromCharCode(n))?s:s+";"}const vS=["AElig","AMP","Aacute","Acirc","Agrave","Aring","Atilde","Auml","COPY","Ccedil","ETH","Eacute","Ecirc","Egrave","Euml","GT","Iacute","Icirc","Igrave","Iuml","LT","Ntilde","Oacute","Ocirc","Ograve","Oslash","Otilde","Ouml","QUOT","REG","THORN","Uacute","Ucirc","Ugrave","Uuml","Yacute","aacute","acirc","acute","aelig","agrave","amp","aring","atilde","auml","brvbar","ccedil","cedil","cent","copy","curren","deg","divide","eacute","ecirc","egrave","eth","euml","frac12","frac14","frac34","gt","iacute","icirc","iexcl","igrave","iquest","iuml","laquo","lt","macr","micro","middot","nbsp","not","ntilde","oacute","ocirc","ograve","ordf","ordm","oslash","otilde","ouml","para","plusmn","pound","quot","raquo","reg","sect","shy","sup1","sup2","sup3","szlig","thorn","times","uacute","ucirc","ugrave","uml","uuml","yacute","yen","yuml"],Ed={nbsp:" ",iexcl:"¡",cent:"¢",pound:"£",curren:"¤",yen:"¥",brvbar:"¦",sect:"§",uml:"¨",copy:"©",ordf:"ª",laquo:"«",not:"¬",shy:"­",reg:"®",macr:"¯",deg:"°",plusmn:"±",sup2:"²",sup3:"³",acute:"´",micro:"µ",para:"¶",middot:"·",cedil:"¸",sup1:"¹",ordm:"º",raquo:"»",frac14:"¼",frac12:"½",frac34:"¾",iquest:"¿",Agrave:"À",Aacute:"Á",Acirc:"Â",Atilde:"Ã",Auml:"Ä",Aring:"Å",AElig:"Æ",Ccedil:"Ç",Egrave:"È",Eacute:"É",Ecirc:"Ê",Euml:"Ë",Igrave:"Ì",Iacute:"Í",Icirc:"Î",Iuml:"Ï",ETH:"Ð",Ntilde:"Ñ",Ograve:"Ò",Oacute:"Ó",Ocirc:"Ô",Otilde:"Õ",Ouml:"Ö",times:"×",Oslash:"Ø",Ugrave:"Ù",Uacute:"Ú",Ucirc:"Û",Uuml:"Ü",Yacute:"Ý",THORN:"Þ",szlig:"ß",agrave:"à",aacute:"á",acirc:"â",atilde:"ã",auml:"ä",aring:"å",aelig:"æ",ccedil:"ç",egrave:"è",eacute:"é",ecirc:"ê",euml:"ë",igrave:"ì",iacute:"í",icirc:"î",iuml:"ï",eth:"ð",ntilde:"ñ",ograve:"ò",oacute:"ó",ocirc:"ô",otilde:"õ",ouml:"ö",divide:"÷",oslash:"ø",ugrave:"ù",uacute:"ú",ucirc:"û",uuml:"ü",yacute:"ý",thorn:"þ",yuml:"ÿ",fnof:"ƒ",Alpha:"Α",Beta:"Β",Gamma:"Γ",Delta:"Δ",Epsilon:"Ε",Zeta:"Ζ",Eta:"Η",Theta:"Θ",Iota:"Ι",Kappa:"Κ",Lambda:"Λ",Mu:"Μ",Nu:"Ν",Xi:"Ξ",Omicron:"Ο",Pi:"Π",Rho:"Ρ",Sigma:"Σ",Tau:"Τ",Upsilon:"Υ",Phi:"Φ",Chi:"Χ",Psi:"Ψ",Omega:"Ω",alpha:"α",beta:"β",gamma:"γ",delta:"δ",epsilon:"ε",zeta:"ζ",eta:"η",theta:"θ",iota:"ι",kappa:"κ",lambda:"λ",mu:"μ",nu:"ν",xi:"ξ",omicron:"ο",pi:"π",rho:"ρ",sigmaf:"ς",sigma:"σ",tau:"τ",upsilon:"υ",phi:"φ",chi:"χ",psi:"ψ",omega:"ω",thetasym:"ϑ",upsih:"ϒ",piv:"ϖ",bull:"•",hellip:"…",prime:"′",Prime:"″",oline:"‾",frasl:"⁄",weierp:"℘",image:"ℑ",real:"ℜ",trade:"™",alefsym:"ℵ",larr:"←",uarr:"↑",rarr:"→",darr:"↓",harr:"↔",crarr:"↵",lArr:"⇐",uArr:"⇑",rArr:"⇒",dArr:"⇓",hArr:"⇔",forall:"∀",part:"∂",exist:"∃",empty:"∅",nabla:"∇",isin:"∈",notin:"∉",ni:"∋",prod:"∏",sum:"∑",minus:"−",lowast:"∗",radic:"√",prop:"∝",infin:"∞",ang:"∠",and:"∧",or:"∨",cap:"∩",cup:"∪",int:"∫",there4:"∴",sim:"∼",cong:"≅",asymp:"≈",ne:"≠",equiv:"≡",le:"≤",ge:"≥",sub:"⊂",sup:"⊃",nsub:"⊄",sube:"⊆",supe:"⊇",oplus:"⊕",otimes:"⊗",perp:"⊥",sdot:"⋅",lceil:"⌈",rceil:"⌉",lfloor:"⌊",rfloor:"⌋",lang:"〈",rang:"〉",loz:"◊",spades:"♠",clubs:"♣",hearts:"♥",diams:"♦",quot:'"',amp:"&",lt:"<",gt:">",OElig:"Œ",oelig:"œ",Scaron:"Š",scaron:"š",Yuml:"Ÿ",circ:"ˆ",tilde:"˜",ensp:" ",emsp:" ",thinsp:" ",zwnj:"‌",zwj:"‍",lrm:"‎",rlm:"‏",ndash:"–",mdash:"—",lsquo:"‘",rsquo:"’",sbquo:"‚",ldquo:"“",rdquo:"”",bdquo:"„",dagger:"†",Dagger:"‡",permil:"‰",lsaquo:"‹",rsaquo:"›",euro:"€"},yw=["cent","copy","divide","gt","lt","not","para","times"],RS={}.hasOwnProperty,wu={};let To;for(To in Ed)RS.call(Ed,To)&&(wu[Ed[To]]=To);function Sw(t,n,r,s){const i=String.fromCharCode(t);if(RS.call(wu,i)){const a=wu[i],o="&"+a;return r&&vS.includes(a)&&!yw.includes(a)&&(!s||n&&n!==61&&/[^\da-z]/i.test(String.fromCharCode(n)))?o:o+";"}return""}function Nw(t,n,r){let s=Ew(t,n,r.omitOptionalSemicolons),i;if((r.useNamedReferences||r.useShortestReferences)&&(i=Sw(t,n,r.omitOptionalSemicolons,r.attribute)),(r.useShortestReferences||!i)&&r.useShortestReferences){const a=Tw(t,n,r.omitOptionalSemicolons);a.length<s.length&&(s=a)}return i&&(!r.useShortestReferences||i.length<s.length)?i:s}function Fs(t,n){return bw(t,Object.assign({format:Nw},n))}function jw(t,n,r,s){return s.settings.bogusComments?"<?"+Fs(t.value,Object.assign({},s.settings.characterReferences,{subset:[">"]}))+">":"<!--"+t.value.replace(/^>|^->|<!--|-->|--!>|<!-$/g,i)+"-->";function i(a){return Fs(a,Object.assign({},s.settings.characterReferences,{subset:["<",">"]}))}}function Aw(t,n,r,s){return"<!"+(s.settings.upperDoctype?"DOCTYPE":"doctype")+(s.settings.tightDoctype?"":" ")+"html>"}function ZE(t,n){const r=String(t);if(typeof n!="string")throw new TypeError("Expected character");let s=0,i=r.indexOf(n);for(;i!==-1;)s++,i=r.indexOf(n,i+n.length);return s}function Y1(t){const n=t&&typeof t=="object"&&t.type==="text"?t.value||"":t;return typeof n=="string"&&n.replace(/[ \t\n\f\r]/g,"")===""}const $e=IS(1),wS=IS(-1);function IS(t){return n;function n(r,s,i){const a=r?r.children:[];let o=(s||0)+t,l=a&&a[o];if(!i)for(;l&&Y1(l);)o+=t,l=a[o];return l}}const _w={}.hasOwnProperty;function CS(t){return n;function n(r,s,i){return _w.call(t,r.tagName)&&t[r.tagName](r,s,i)}}const q1=CS({html:vw,head:Td,body:Rw,p:ww,li:Iw,dt:Cw,dd:Ow,rt:QE,rp:QE,optgroup:kw,option:Lw,menuitem:Dw,colgroup:Td,caption:Td,thead:Mw,tbody:Fw,tfoot:Pw,tr:Uw,td:JE,th:JE});function Td(t,n,r){const s=$e(r,n,!0);return!s||s.type!=="comment"&&!(s.type==="text"&&Y1(s.value.charAt(0)))}function vw(t,n,r){const s=$e(r,n);return!s||s.type!=="comment"}function Rw(t,n,r){const s=$e(r,n);return!s||s.type!=="comment"}function ww(t,n,r){const s=$e(r,n);return s?s.type==="element"&&(s.tagName==="address"||s.tagName==="article"||s.tagName==="aside"||s.tagName==="blockquote"||s.tagName==="details"||s.tagName==="div"||s.tagName==="dl"||s.tagName==="fieldset"||s.tagName==="figcaption"||s.tagName==="figure"||s.tagName==="footer"||s.tagName==="form"||s.tagName==="h1"||s.tagName==="h2"||s.tagName==="h3"||s.tagName==="h4"||s.tagName==="h5"||s.tagName==="h6"||s.tagName==="header"||s.tagName==="hgroup"||s.tagName==="hr"||s.tagName==="main"||s.tagName==="menu"||s.tagName==="nav"||s.tagName==="ol"||s.tagName==="p"||s.tagName==="pre"||s.tagName==="section"||s.tagName==="table"||s.tagName==="ul"):!r||!(r.type==="element"&&(r.tagName==="a"||r.tagName==="audio"||r.tagName==="del"||r.tagName==="ins"||r.tagName==="map"||r.tagName==="noscript"||r.tagName==="video"))}function Iw(t,n,r){const s=$e(r,n);return!s||s.type==="element"&&s.tagName==="li"}function Cw(t,n,r){const s=$e(r,n);return s&&s.type==="element"&&(s.tagName==="dt"||s.tagName==="dd")}function Ow(t,n,r){const s=$e(r,n);return!s||s.type==="element"&&(s.tagName==="dt"||s.tagName==="dd")}function QE(t,n,r){const s=$e(r,n);return!s||s.type==="element"&&(s.tagName==="rp"||s.tagName==="rt")}function kw(t,n,r){const s=$e(r,n);return!s||s.type==="element"&&s.tagName==="optgroup"}function Lw(t,n,r){const s=$e(r,n);return!s||s.type==="element"&&(s.tagName==="option"||s.tagName==="optgroup")}function Dw(t,n,r){const s=$e(r,n);return!s||s.type==="element"&&(s.tagName==="menuitem"||s.tagName==="hr"||s.tagName==="menu")}function Mw(t,n,r){const s=$e(r,n);return s&&s.type==="element"&&(s.tagName==="tbody"||s.tagName==="tfoot")}function Fw(t,n,r){const s=$e(r,n);return!s||s.type==="element"&&(s.tagName==="tbody"||s.tagName==="tfoot")}function Pw(t,n,r){return!$e(r,n)}function Uw(t,n,r){const s=$e(r,n);return!s||s.type==="element"&&s.tagName==="tr"}function JE(t,n,r){const s=$e(r,n);return!s||s.type==="element"&&(s.tagName==="td"||s.tagName==="th")}const Bw=CS({html:Hw,head:Gw,body:$w,colgroup:zw,tbody:Ww});function Hw(t){const n=$e(t,-1);return!n||n.type!=="comment"}function Gw(t){const n=t.children,r=[];let s=-1;for(;++s<n.length;){const i=n[s];if(i.type==="element"&&(i.tagName==="title"||i.tagName==="base")){if(r.includes(i.tagName))return!1;r.push(i.tagName)}}return n.length>0}function $w(t){const n=$e(t,-1,!0);return!n||n.type!=="comment"&&!(n.type==="text"&&Y1(n.value.charAt(0)))&&!(n.type==="element"&&(n.tagName==="meta"||n.tagName==="link"||n.tagName==="script"||n.tagName==="style"||n.tagName==="template"))}function zw(t,n,r){const s=wS(r,n),i=$e(t,-1,!0);return r&&s&&s.type==="element"&&s.tagName==="colgroup"&&q1(s,r.children.indexOf(s),r)?!1:i&&i.type==="element"&&i.tagName==="col"}function Ww(t,n,r){const s=wS(r,n),i=$e(t,-1);return r&&s&&s.type==="element"&&(s.tagName==="thead"||s.tagName==="tbody")&&q1(s,r.children.indexOf(s),r)?!1:i&&i.type==="element"&&i.tagName==="tr"}const yo={name:[[`	
\f\r &/=>`.split(""),`	
\f\r "&'/=>\``.split("")],[`\0	
\f\r "&'/<=>`.split(""),`\0	
\f\r "&'/<=>\``.split("")]],unquoted:[[`	
\f\r &>`.split(""),`\0	
\f\r "&'<=>\``.split("")],[`\0	
\f\r "&'<=>\``.split(""),`\0	
\f\r "&'<=>\``.split("")]],single:[["&'".split(""),"\"&'`".split("")],["\0&'".split(""),"\0\"&'`".split("")]],double:[['"&'.split(""),"\"&'`".split("")],['\0"&'.split(""),"\0\"&'`".split("")]]};function Vw(t,n,r,s){const i=s.schema,a=i.space==="svg"?!1:s.settings.omitOptionalTags;let o=i.space==="svg"?s.settings.closeEmptyElements:s.settings.voids.includes(t.tagName.toLowerCase());const l=[];let c;i.space==="html"&&t.tagName==="svg"&&(s.schema=Ra);const d=Kw(s,t.properties),h=s.all(i.space==="html"&&t.tagName==="template"?t.content:t);return s.schema=i,h&&(o=!1),(d||!a||!Bw(t,n,r))&&(l.push("<",t.tagName,d?" "+d:""),o&&(i.space==="svg"||s.settings.closeSelfClosing)&&(c=d.charAt(d.length-1),(!s.settings.tightSelfClosing||c==="/"||c&&c!=='"'&&c!=="'")&&l.push(" "),l.push("/")),l.push(">")),l.push(h),!o&&(!a||!q1(t,n,r))&&l.push("</"+t.tagName+">"),l.join("")}function Kw(t,n){const r=[];let s=-1,i;if(n){for(i in n)if(n[i]!==void 0&&n[i]!==null){const a=Yw(t,i,n[i]);a&&r.push(a)}}for(;++s<r.length;){const a=t.settings.tightAttributes?r[s].charAt(r[s].length-1):null;s!==r.length-1&&a!=='"'&&a!=="'"&&(r[s]+=" ")}return r.join("")}function Yw(t,n,r){const s=V1(t.schema,n),i=t.settings.allowParseErrors&&t.schema.space==="html"?0:1,a=t.settings.allowDangerousCharacters?0:1;let o=t.quote,l;if(s.overloadedBoolean&&(r===s.attribute||r==="")?r=!0:(s.boolean||s.overloadedBoolean&&typeof r!="string")&&(r=!!r),r==null||r===!1||typeof r=="number"&&Number.isNaN(r))return"";const c=Fs(s.attribute,Object.assign({},t.settings.characterReferences,{subset:yo.name[i][a]}));return r===!0||(r=Array.isArray(r)?(s.commaSeparated?qR:YR)(r,{padLeft:!t.settings.tightCommaSeparatedLists}):String(r),t.settings.collapseEmptyAttributes&&!r)?c:(t.settings.preferUnquoted&&(l=Fs(r,Object.assign({},t.settings.characterReferences,{subset:yo.unquoted[i][a],attribute:!0}))),l!==r&&(t.settings.quoteSmart&&ZE(r,o)>ZE(r,t.alternative)&&(o=t.alternative),l=o+Fs(r,Object.assign({},t.settings.characterReferences,{subset:(o==="'"?yo.single:yo.double)[i][a],attribute:!0}))+o),c+(l&&"="+l))}function OS(t,n,r,s){return r&&r.type==="element"&&(r.tagName==="script"||r.tagName==="style")?t.value:Fs(t.value,Object.assign({},s.settings.characterReferences,{subset:["<","&"]}))}function qw(t,n,r,s){return s.settings.allowDangerousHtml?t.value:OS(t,n,r,s)}function Xw(t,n,r,s){return s.all(t)}const Zw=gw("type",{invalid:Qw,unknown:Jw,handlers:{comment:jw,doctype:Aw,element:Vw,raw:qw,root:Xw,text:OS}});function Qw(t){throw new Error("Expected node, not `"+t+"`")}function Jw(t){throw new Error("Cannot compile unknown node `"+t.type+"`")}function eI(t,n){const r=n||{},s=r.quote||'"',i=s==='"'?"'":'"';if(s!=='"'&&s!=="'")throw new Error("Invalid quote `"+s+"`, expected `'` or `\"`");return{one:tI,all:nI,settings:{omitOptionalTags:r.omitOptionalTags||!1,allowParseErrors:r.allowParseErrors||!1,allowDangerousCharacters:r.allowDangerousCharacters||!1,quoteSmart:r.quoteSmart||!1,preferUnquoted:r.preferUnquoted||!1,tightAttributes:r.tightAttributes||!1,upperDoctype:r.upperDoctype||!1,tightDoctype:r.tightDoctype||!1,bogusComments:r.bogusComments||!1,tightCommaSeparatedLists:r.tightCommaSeparatedLists||!1,tightSelfClosing:r.tightSelfClosing||!1,collapseEmptyAttributes:r.collapseEmptyAttributes||!1,allowDangerousHtml:r.allowDangerousHtml||!1,voids:r.voids||fw,characterReferences:r.characterReferences||r.entities||{},closeSelfClosing:r.closeSelfClosing||!1,closeEmptyElements:r.closeEmptyElements||!1},schema:r.space==="svg"?Ra:Yl,quote:s,alternative:i}.one(Array.isArray(t)?{type:"root",children:t}:t,void 0,void 0)}function tI(t,n,r){return Zw(t,n,r,this)}function nI(t){const n=[],r=t&&t.children||[];let s=-1;for(;++s<r.length;)n[s]=this.one(r[s],s,t);return n.join("")}function rI(t){const n=this.data("settings"),r=Object.assign({},n,t);Object.assign(this,{Compiler:s});function s(i){return eI(i,r)}}const sI=H_().use(pw).use(rI).freeze(),X1=function(t){if(t==null)return lI;if(typeof t=="string")return oI(t);if(typeof t=="object")return Array.isArray(t)?iI(t):aI(t);if(typeof t=="function")return ql(t);throw new Error("Expected function, string, or object as test")};function iI(t){const n=[];let r=-1;for(;++r<t.length;)n[r]=X1(t[r]);return ql(s);function s(...i){let a=-1;for(;++a<n.length;)if(n[a].call(this,...i))return!0;return!1}}function aI(t){return ql(n);function n(r){let s;for(s in t)if(r[s]!==t[s])return!1;return!0}}function oI(t){return ql(n);function n(r){return r&&r.type===t}}function ql(t){return n;function n(r,...s){return!!(r&&typeof r=="object"&&"type"in r&&t.call(this,r,...s))}}function lI(){return!0}const cI=!0,e0=!1,dI="skip",uI=function(t,n,r,s){typeof n=="function"&&typeof r!="function"&&(s=r,r=n,n=null);const i=X1(n),a=s?-1:1;o(t,void 0,[])();function o(l,c,d){const h=l&&typeof l=="object"?l:{};if(typeof h.type=="string"){const g=typeof h.tagName=="string"?h.tagName:typeof h.name=="string"?h.name:void 0;Object.defineProperty(x,"name",{value:"node ("+(l.type+(g?"<"+g+">":""))+")"})}return x;function x(){let g=[],A,S,y;if((!n||i(l,c,d[d.length-1]||null))&&(g=hI(r(l,d)),g[0]===e0))return g;if(l.children&&g[0]!==dI)for(S=(s?l.children.length:-1)+a,y=d.concat(l);S>-1&&S<l.children.length;){if(A=o(l.children[S],S,y)(),A[0]===e0)return A;S=typeof A[1]=="number"?A[1]:S+a}return g}}};function hI(t){return Array.isArray(t)?t:typeof t=="number"?[cI,t]:[t]}const pI=function(t,n,r,s){typeof n=="function"&&typeof r!="function"&&(s=r,r=n,n=null),uI(t,n,i,s);function i(a,o){const l=o[o.length-1];return r(a,l?l.children.indexOf(a):null,l)}};function So(t){return"children"in t?kS(t):"value"in t?t.value:""}function mI(t){return t.type==="text"?t.value:"children"in t?kS(t):""}function kS(t){let n=-1;const r=[];for(;++n<t.children.length;)r[n]=mI(t.children[n]);return r.join("")}const fI={}.hasOwnProperty,gI=function(t,n,r){const s=X1(r||n),i=n&&typeof n=="object"&&"cascade"in n?n.cascade:void 0,a=i??!0;return o(t);function o(l,c,d){const h=[];if(!s(l,c,d))return null;if(l.children){let A=-1;for(;++A<l.children.length;){const S=o(l.children[A],A,l);S&&h.push(S)}if(a&&l.children.length>0&&h.length===0)return null}const x={};let g;for(g in l)fI.call(l,g)&&(x[g]=g==="children"?h:l[g]);return x}};var Iu={exports:{}};(function(t,n){function r(s){let i=[],a;for(let o of s.split(",").map(l=>l.trim()))if(/^-?\d+$/.test(o))i.push(parseInt(o,10));else if(a=o.match(/^(-?\d+)(-|\.\.\.?|\u2025|\u2026|\u22EF)(-?\d+)$/)){let[l,c,d,h]=a;if(c&&h){c=parseInt(c),h=parseInt(h);const x=c<h?1:-1;(d==="-"||d===".."||d==="‥")&&(h+=x);for(let g=c;g!==h;g+=x)i.push(g)}}return i}n.default=r,t.exports=r})(Iu,Iu.exports);var bI=Iu.exports;const xI=Vs(bI);le.displayName="clike";le.aliases=[];function le(t){t.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/(\b(?:class|extends|implements|instanceof|interface|new|trait)\s+|\bcatch\s+\()[\w.\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\b/,boolean:/\b(?:false|true)\b/,function:/\b\w+(?=\()/,number:/\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,punctuation:/[{}[\];(),.:]/}}un.displayName="c";un.aliases=[];function un(t){t.register(le),t.languages.c=t.languages.extend("clike",{comment:{pattern:/\/\/(?:[^\r\n\\]|\\(?:\r\n?|\n|(?![\r\n])))*|\/\*[\s\S]*?(?:\*\/|$)/,greedy:!0},string:{pattern:/"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,greedy:!0},"class-name":{pattern:/(\b(?:enum|struct)\s+(?:__attribute__\s*\(\([\s\S]*?\)\)\s*)?)\w+|\b[a-z]\w*_t\b/,lookbehind:!0},keyword:/\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\b/,function:/\b[a-z_]\w*(?=\s*\()/i,number:/(?:\b0x(?:[\da-f]+(?:\.[\da-f]*)?|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[ful]{0,4}/i,operator:/>>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?/}),t.languages.insertBefore("c","string",{char:{pattern:/'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n]){0,32}'/,greedy:!0}}),t.languages.insertBefore("c","string",{macro:{pattern:/(^[\t ]*)#\s*[a-z](?:[^\r\n\\/]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|\\(?:\r\n|[\s\S]))*/im,lookbehind:!0,greedy:!0,alias:"property",inside:{string:[{pattern:/^(#\s*include\s*)<[^>]+>/,lookbehind:!0},t.languages.c.string],char:t.languages.c.char,comment:t.languages.c.comment,"macro-name":[{pattern:/(^#\s*define\s+)\w+\b(?!\()/i,lookbehind:!0},{pattern:/(^#\s*define\s+)\w+\b(?=\()/i,lookbehind:!0,alias:"function"}],directive:{pattern:/^(#\s*)[a-z]+/,lookbehind:!0,alias:"keyword"},"directive-hash":/^#/,punctuation:/##|\\(?=[\r\n])/,expression:{pattern:/\S[\s\S]*/,inside:t.languages.c}}}}),t.languages.insertBefore("c","function",{constant:/\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\b/}),delete t.languages.c.boolean}Jr.displayName="cpp";Jr.aliases=[];function Jr(t){t.register(un),function(n){var r=/\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\b/,s=/\b(?!<keyword>)\w+(?:\s*\.\s*\w+)*\b/.source.replace(/<keyword>/g,function(){return r.source});n.languages.cpp=n.languages.extend("c",{"class-name":[{pattern:RegExp(/(\b(?:class|concept|enum|struct|typename)\s+)(?!<keyword>)\w+/.source.replace(/<keyword>/g,function(){return r.source})),lookbehind:!0},/\b[A-Z]\w*(?=\s*::\s*\w+\s*\()/,/\b[A-Z_]\w*(?=\s*::\s*~\w+\s*\()/i,/\b\w+(?=\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\s*::\s*\w+\s*\()/],keyword:r,number:{pattern:/(?:\b0b[01']+|\b0x(?:[\da-f']+(?:\.[\da-f']*)?|\.[\da-f']+)(?:p[+-]?[\d']+)?|(?:\b[\d']+(?:\.[\d']*)?|\B\.[\d']+)(?:e[+-]?[\d']+)?)[ful]{0,4}/i,greedy:!0},operator:/>>=?|<<=?|->|--|\+\+|&&|\|\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/,boolean:/\b(?:false|true)\b/}),n.languages.insertBefore("cpp","string",{module:{pattern:RegExp(/(\b(?:import|module)\s+)/.source+"(?:"+/"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|<[^<>\r\n]*>/.source+"|"+/<mod-name>(?:\s*:\s*<mod-name>)?|:\s*<mod-name>/.source.replace(/<mod-name>/g,function(){return s})+")"),lookbehind:!0,greedy:!0,inside:{string:/^[<"][\s\S]+/,operator:/:/,punctuation:/\./}},"raw-string":{pattern:/R"([^()\\ ]{0,16})\([\s\S]*?\)\1"/,alias:"string",greedy:!0}}),n.languages.insertBefore("cpp","keyword",{"generic-function":{pattern:/\b(?!operator\b)[a-z_]\w*\s*<(?:[^<>]|<[^<>]*>)*>(?=\s*\()/i,inside:{function:/^\w+/,generic:{pattern:/<[\s\S]+/,alias:"class-name",inside:n.languages.cpp}}}}),n.languages.insertBefore("cpp","operator",{"double-colon":{pattern:/::/,alias:"punctuation"}}),n.languages.insertBefore("cpp","class-name",{"base-clause":{pattern:/(\b(?:class|struct)\s+\w+\s*:\s*)[^;{}"'\s]+(?:\s+[^;{}"'\s]+)*(?=\s*[;{])/,lookbehind:!0,greedy:!0,inside:n.languages.extend("cpp",{})}}),n.languages.insertBefore("inside","double-colon",{"class-name":/\b[a-z_]\w*\b(?!\s*::)/i},n.languages.cpp["base-clause"])}(t)}Xl.displayName="arduino";Xl.aliases=["ino"];function Xl(t){t.register(Jr),t.languages.arduino=t.languages.extend("cpp",{keyword:/\b(?:String|array|bool|boolean|break|byte|case|catch|continue|default|do|double|else|finally|for|function|goto|if|in|instanceof|int|integer|long|loop|new|null|return|setup|string|switch|throw|try|void|while|word)\b/,constant:/\b(?:ANALOG_MESSAGE|DEFAULT|DIGITAL_MESSAGE|EXTERNAL|FIRMATA_STRING|HIGH|INPUT|INPUT_PULLUP|INTERNAL|INTERNAL1V1|INTERNAL2V56|LED_BUILTIN|LOW|OUTPUT|REPORT_ANALOG|REPORT_DIGITAL|SET_PIN_MODE|SYSEX_START|SYSTEM_RESET)\b/,builtin:/\b(?:Audio|BSSID|Bridge|Client|Console|EEPROM|Esplora|EsploraTFT|Ethernet|EthernetClient|EthernetServer|EthernetUDP|File|FileIO|FileSystem|Firmata|GPRS|GSM|GSMBand|GSMClient|GSMModem|GSMPIN|GSMScanner|GSMServer|GSMVoiceCall|GSM_SMS|HttpClient|IPAddress|IRread|Keyboard|KeyboardController|LiquidCrystal|LiquidCrystal_I2C|Mailbox|Mouse|MouseController|PImage|Process|RSSI|RobotControl|RobotMotor|SD|SPI|SSID|Scheduler|Serial|Server|Servo|SoftwareSerial|Stepper|Stream|TFT|Task|USBHost|WiFi|WiFiClient|WiFiServer|WiFiUDP|Wire|YunClient|YunServer|abs|addParameter|analogRead|analogReadResolution|analogReference|analogWrite|analogWriteResolution|answerCall|attach|attachGPRS|attachInterrupt|attached|autoscroll|available|background|beep|begin|beginPacket|beginSD|beginSMS|beginSpeaker|beginTFT|beginTransmission|beginWrite|bit|bitClear|bitRead|bitSet|bitWrite|blink|blinkVersion|buffer|changePIN|checkPIN|checkPUK|checkReg|circle|cityNameRead|cityNameWrite|clear|clearScreen|click|close|compassRead|config|connect|connected|constrain|cos|countryNameRead|countryNameWrite|createChar|cursor|debugPrint|delay|delayMicroseconds|detach|detachInterrupt|digitalRead|digitalWrite|disconnect|display|displayLogos|drawBMP|drawCompass|encryptionType|end|endPacket|endSMS|endTransmission|endWrite|exists|exitValue|fill|find|findUntil|flush|gatewayIP|get|getAsynchronously|getBand|getButton|getCurrentCarrier|getIMEI|getKey|getModifiers|getOemKey|getPINUsed|getResult|getSignalStrength|getSocket|getVoiceCallStatus|getXChange|getYChange|hangCall|height|highByte|home|image|interrupts|isActionDone|isDirectory|isListening|isPIN|isPressed|isValid|keyPressed|keyReleased|keyboardRead|knobRead|leftToRight|line|lineFollowConfig|listen|listenOnLocalhost|loadImage|localIP|lowByte|macAddress|maintain|map|max|messageAvailable|micros|millis|min|mkdir|motorsStop|motorsWrite|mouseDragged|mouseMoved|mousePressed|mouseReleased|move|noAutoscroll|noBlink|noBuffer|noCursor|noDisplay|noFill|noInterrupts|noListenOnLocalhost|noStroke|noTone|onReceive|onRequest|open|openNextFile|overflow|parseCommand|parseFloat|parseInt|parsePacket|pauseMode|peek|pinMode|playFile|playMelody|point|pointTo|position|pow|prepare|press|print|printFirmwareVersion|printVersion|println|process|processInput|pulseIn|put|random|randomSeed|read|readAccelerometer|readBlue|readButton|readBytes|readBytesUntil|readGreen|readJoystickButton|readJoystickSwitch|readJoystickX|readJoystickY|readLightSensor|readMessage|readMicrophone|readNetworks|readRed|readSlider|readString|readStringUntil|readTemperature|ready|rect|release|releaseAll|remoteIP|remoteNumber|remotePort|remove|requestFrom|retrieveCallingNumber|rewindDirectory|rightToLeft|rmdir|robotNameRead|robotNameWrite|run|runAsynchronously|runShellCommand|runShellCommandAsynchronously|running|scanNetworks|scrollDisplayLeft|scrollDisplayRight|seek|sendAnalog|sendDigitalPortPair|sendDigitalPorts|sendString|sendSysex|serialEvent|setBand|setBitOrder|setClockDivider|setCursor|setDNS|setDataMode|setFirmwareVersion|setMode|setPINUsed|setSpeed|setTextSize|setTimeout|shiftIn|shiftOut|shutdown|sin|size|sqrt|startLoop|step|stop|stroke|subnetMask|switchPIN|tan|tempoWrite|text|tone|transfer|tuneWrite|turn|updateIR|userNameRead|userNameWrite|voiceCall|waitContinue|width|write|writeBlue|writeGreen|writeJSON|writeMessage|writeMicroseconds|writeRGB|writeRed|yield)\b/}),t.languages.ino=t.languages.arduino}wa.displayName="bash";wa.aliases=["sh","shell"];function wa(t){(function(n){var r="\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\b",s={pattern:/(^(["']?)\w+\2)[ \t]+\S.*/,lookbehind:!0,alias:"punctuation",inside:null},i={bash:s,environment:{pattern:RegExp("\\$"+r),alias:"constant"},variable:[{pattern:/\$?\(\([\s\S]+?\)\)/,greedy:!0,inside:{variable:[{pattern:/(^\$\(\([\s\S]+)\)\)/,lookbehind:!0},/^\$\(\(/],number:/\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,operator:/--|\+\+|\*\*=?|<<=?|>>=?|&&|\|\||[=!+\-*/%<>^&|]=?|[?~:]/,punctuation:/\(\(?|\)\)?|,|;/}},{pattern:/\$\((?:\([^)]+\)|[^()])+\)|`[^`]+`/,greedy:!0,inside:{variable:/^\$\(|^`|\)$|`$/}},{pattern:/\$\{[^}]+\}/,greedy:!0,inside:{operator:/:[-=?+]?|[!\/]|##?|%%?|\^\^?|,,?/,punctuation:/[\[\]]/,environment:{pattern:RegExp("(\\{)"+r),lookbehind:!0,alias:"constant"}}},/\$(?:\w+|[#?*!@$])/],entity:/\\(?:[abceEfnrtv\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/};n.languages.bash={shebang:{pattern:/^#!\s*\/.*/,alias:"important"},comment:{pattern:/(^|[^"{\\$])#.*/,lookbehind:!0},"function-name":[{pattern:/(\bfunction\s+)[\w-]+(?=(?:\s*\(?:\s*\))?\s*\{)/,lookbehind:!0,alias:"function"},{pattern:/\b[\w-]+(?=\s*\(\s*\)\s*\{)/,alias:"function"}],"for-or-select":{pattern:/(\b(?:for|select)\s+)\w+(?=\s+in\s)/,alias:"variable",lookbehind:!0},"assign-left":{pattern:/(^|[\s;|&]|[<>]\()\w+(?:\.\w+)*(?=\+?=)/,inside:{environment:{pattern:RegExp("(^|[\\s;|&]|[<>]\\()"+r),lookbehind:!0,alias:"constant"}},alias:"variable",lookbehind:!0},parameter:{pattern:/(^|\s)-{1,2}(?:\w+:[+-]?)?\w+(?:\.\w+)*(?=[=\s]|$)/,alias:"variable",lookbehind:!0},string:[{pattern:/((?:^|[^<])<<-?\s*)(\w+)\s[\s\S]*?(?:\r?\n|\r)\2/,lookbehind:!0,greedy:!0,inside:i},{pattern:/((?:^|[^<])<<-?\s*)(["'])(\w+)\2\s[\s\S]*?(?:\r?\n|\r)\3/,lookbehind:!0,greedy:!0,inside:{bash:s}},{pattern:/(^|[^\\](?:\\\\)*)"(?:\\[\s\S]|\$\([^)]+\)|\$(?!\()|`[^`]+`|[^"\\`$])*"/,lookbehind:!0,greedy:!0,inside:i},{pattern:/(^|[^$\\])'[^']*'/,lookbehind:!0,greedy:!0},{pattern:/\$'(?:[^'\\]|\\[\s\S])*'/,greedy:!0,inside:{entity:i.entity}}],environment:{pattern:RegExp("\\$?"+r),alias:"constant"},variable:i.variable,function:{pattern:/(^|[\s;|&]|[<>]\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cargo|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|java|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|sysctl|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\s;|&])/,lookbehind:!0},keyword:{pattern:/(^|[\s;|&]|[<>]\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\s;|&])/,lookbehind:!0},builtin:{pattern:/(^|[\s;|&]|[<>]\()(?:\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\s;|&])/,lookbehind:!0,alias:"class-name"},boolean:{pattern:/(^|[\s;|&]|[<>]\()(?:false|true)(?=$|[)\s;|&])/,lookbehind:!0},"file-descriptor":{pattern:/\B&\d\b/,alias:"important"},operator:{pattern:/\d?<>|>\||\+=|=[=~]?|!=?|<<[<-]?|[&\d]?>>|\d[<>]&?|[<>][&=]?|&[>&]?|\|[&|]?/,inside:{"file-descriptor":{pattern:/^\d/,alias:"important"}}},punctuation:/\$?\(\(?|\)\)?|\.\.|[{}[\];\\]/,number:{pattern:/(^|\s)(?:[1-9]\d*|0)(?:[.,]\d+)?\b/,lookbehind:!0}},s.inside=n.languages.bash;for(var a=["comment","function-name","for-or-select","assign-left","parameter","string","environment","function","keyword","builtin","boolean","file-descriptor","operator","punctuation","number"],o=i.variable[1].inside,l=0;l<a.length;l++)o[a[l]]=n.languages.bash[a[l]];n.languages.sh=n.languages.bash,n.languages.shell=n.languages.bash})(t)}es.displayName="csharp";es.aliases=["cs","dotnet"];function es(t){t.register(le),function(n){function r(q,he){return q.replace(/<<(\d+)>>/g,function(ge,Et){return"(?:"+he[+Et]+")"})}function s(q,he,ge){return RegExp(r(q,he),ge||"")}function i(q,he){for(var ge=0;ge<he;ge++)q=q.replace(/<<self>>/g,function(){return"(?:"+q+")"});return q.replace(/<<self>>/g,"[^\\s\\S]")}var a={type:"bool byte char decimal double dynamic float int long object sbyte short string uint ulong ushort var void",typeDeclaration:"class enum interface record struct",contextual:"add alias and ascending async await by descending from(?=\\s*(?:\\w|$)) get global group into init(?=\\s*;) join let nameof not notnull on or orderby partial remove select set unmanaged value when where with(?=\\s*{)",other:"abstract as base break case catch checked const continue default delegate do else event explicit extern finally fixed for foreach goto if implicit in internal is lock namespace new null operator out override params private protected public readonly ref return sealed sizeof stackalloc static switch this throw try typeof unchecked unsafe using virtual volatile while yield"};function o(q){return"\\b(?:"+q.trim().replace(/ /g,"|")+")\\b"}var l=o(a.typeDeclaration),c=RegExp(o(a.type+" "+a.typeDeclaration+" "+a.contextual+" "+a.other)),d=o(a.typeDeclaration+" "+a.contextual+" "+a.other),h=o(a.type+" "+a.typeDeclaration+" "+a.other),x=i(/<(?:[^<>;=+\-*/%&|^]|<<self>>)*>/.source,2),g=i(/\((?:[^()]|<<self>>)*\)/.source,2),A=/@?\b[A-Za-z_]\w*\b/.source,S=r(/<<0>>(?:\s*<<1>>)?/.source,[A,x]),y=r(/(?!<<0>>)<<1>>(?:\s*\.\s*<<1>>)*/.source,[d,S]),_=/\[\s*(?:,\s*)*\]/.source,f=r(/<<0>>(?:\s*(?:\?\s*)?<<1>>)*(?:\s*\?)?/.source,[y,_]),b=r(/[^,()<>[\];=+\-*/%&|^]|<<0>>|<<1>>|<<2>>/.source,[x,g,_]),T=r(/\(<<0>>+(?:,<<0>>+)+\)/.source,[b]),E=r(/(?:<<0>>|<<1>>)(?:\s*(?:\?\s*)?<<2>>)*(?:\s*\?)?/.source,[T,y,_]),R={keyword:c,punctuation:/[<>()?,.:[\]]/},I=/'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'/.source,v=/"(?:\\.|[^\\"\r\n])*"/.source,O=/@"(?:""|\\[\s\S]|[^\\"])*"(?!")/.source;n.languages.csharp=n.languages.extend("clike",{string:[{pattern:s(/(^|[^$\\])<<0>>/.source,[O]),lookbehind:!0,greedy:!0},{pattern:s(/(^|[^@$\\])<<0>>/.source,[v]),lookbehind:!0,greedy:!0}],"class-name":[{pattern:s(/(\busing\s+static\s+)<<0>>(?=\s*;)/.source,[y]),lookbehind:!0,inside:R},{pattern:s(/(\busing\s+<<0>>\s*=\s*)<<1>>(?=\s*;)/.source,[A,E]),lookbehind:!0,inside:R},{pattern:s(/(\busing\s+)<<0>>(?=\s*=)/.source,[A]),lookbehind:!0},{pattern:s(/(\b<<0>>\s+)<<1>>/.source,[l,S]),lookbehind:!0,inside:R},{pattern:s(/(\bcatch\s*\(\s*)<<0>>/.source,[y]),lookbehind:!0,inside:R},{pattern:s(/(\bwhere\s+)<<0>>/.source,[A]),lookbehind:!0},{pattern:s(/(\b(?:is(?:\s+not)?|as)\s+)<<0>>/.source,[f]),lookbehind:!0,inside:R},{pattern:s(/\b<<0>>(?=\s+(?!<<1>>|with\s*\{)<<2>>(?:\s*[=,;:{)\]]|\s+(?:in|when)\b))/.source,[E,h,A]),inside:R}],keyword:c,number:/(?:\b0(?:x[\da-f_]*[\da-f]|b[01_]*[01])|(?:\B\.\d+(?:_+\d+)*|\b\d+(?:_+\d+)*(?:\.\d+(?:_+\d+)*)?)(?:e[-+]?\d+(?:_+\d+)*)?)(?:[dflmu]|lu|ul)?\b/i,operator:/>>=?|<<=?|[-=]>|([-+&|])\1|~|\?\?=?|[-+*/%&|^!=<>]=?/,punctuation:/\?\.?|::|[{}[\];(),.:]/}),n.languages.insertBefore("csharp","number",{range:{pattern:/\.\./,alias:"operator"}}),n.languages.insertBefore("csharp","punctuation",{"named-parameter":{pattern:s(/([(,]\s*)<<0>>(?=\s*:)/.source,[A]),lookbehind:!0,alias:"punctuation"}}),n.languages.insertBefore("csharp","class-name",{namespace:{pattern:s(/(\b(?:namespace|using)\s+)<<0>>(?:\s*\.\s*<<0>>)*(?=\s*[;{])/.source,[A]),lookbehind:!0,inside:{punctuation:/\./}},"type-expression":{pattern:s(/(\b(?:default|sizeof|typeof)\s*\(\s*(?!\s))(?:[^()\s]|\s(?!\s)|<<0>>)*(?=\s*\))/.source,[g]),lookbehind:!0,alias:"class-name",inside:R},"return-type":{pattern:s(/<<0>>(?=\s+(?:<<1>>\s*(?:=>|[({]|\.\s*this\s*\[)|this\s*\[))/.source,[E,y]),inside:R,alias:"class-name"},"constructor-invocation":{pattern:s(/(\bnew\s+)<<0>>(?=\s*[[({])/.source,[E]),lookbehind:!0,inside:R,alias:"class-name"},"generic-method":{pattern:s(/<<0>>\s*<<1>>(?=\s*\()/.source,[A,x]),inside:{function:s(/^<<0>>/.source,[A]),generic:{pattern:RegExp(x),alias:"class-name",inside:R}}},"type-list":{pattern:s(/\b((?:<<0>>\s+<<1>>|record\s+<<1>>\s*<<5>>|where\s+<<2>>)\s*:\s*)(?:<<3>>|<<4>>|<<1>>\s*<<5>>|<<6>>)(?:\s*,\s*(?:<<3>>|<<4>>|<<6>>))*(?=\s*(?:where|[{;]|=>|$))/.source,[l,S,A,E,c.source,g,/\bnew\s*\(\s*\)/.source]),lookbehind:!0,inside:{"record-arguments":{pattern:s(/(^(?!new\s*\()<<0>>\s*)<<1>>/.source,[S,g]),lookbehind:!0,greedy:!0,inside:n.languages.csharp},keyword:c,"class-name":{pattern:RegExp(E),greedy:!0,inside:R},punctuation:/[,()]/}},preprocessor:{pattern:/(^[\t ]*)#.*/m,lookbehind:!0,alias:"property",inside:{directive:{pattern:/(#)\b(?:define|elif|else|endif|endregion|error|if|line|nullable|pragma|region|undef|warning)\b/,lookbehind:!0,alias:"keyword"}}}});var F=v+"|"+I,H=r(/\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|<<0>>/.source,[F]),J=i(r(/[^"'/()]|<<0>>|\(<<self>>*\)/.source,[H]),2),X=/\b(?:assembly|event|field|method|module|param|property|return|type)\b/.source,ie=r(/<<0>>(?:\s*\(<<1>>*\))?/.source,[y,J]);n.languages.insertBefore("csharp","class-name",{attribute:{pattern:s(/((?:^|[^\s\w>)?])\s*\[\s*)(?:<<0>>\s*:\s*)?<<1>>(?:\s*,\s*<<1>>)*(?=\s*\])/.source,[X,ie]),lookbehind:!0,greedy:!0,inside:{target:{pattern:s(/^<<0>>(?=\s*:)/.source,[X]),alias:"keyword"},"attribute-arguments":{pattern:s(/\(<<0>>*\)/.source,[J]),inside:n.languages.csharp},"class-name":{pattern:RegExp(y),inside:{punctuation:/\./}},punctuation:/[:,]/}}});var Me=/:[^}\r\n]+/.source,ue=i(r(/[^"'/()]|<<0>>|\(<<self>>*\)/.source,[H]),2),Qe=r(/\{(?!\{)(?:(?![}:])<<0>>)*<<1>>?\}/.source,[ue,Me]),Oe=i(r(/[^"'/()]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|<<0>>|\(<<self>>*\)/.source,[F]),2),$=r(/\{(?!\{)(?:(?![}:])<<0>>)*<<1>>?\}/.source,[Oe,Me]);function Y(q,he){return{interpolation:{pattern:s(/((?:^|[^{])(?:\{\{)*)<<0>>/.source,[q]),lookbehind:!0,inside:{"format-string":{pattern:s(/(^\{(?:(?![}:])<<0>>)*)<<1>>(?=\}$)/.source,[he,Me]),lookbehind:!0,inside:{punctuation:/^:/}},punctuation:/^\{|\}$/,expression:{pattern:/[\s\S]+/,alias:"language-csharp",inside:n.languages.csharp}}},string:/[\s\S]+/}}n.languages.insertBefore("csharp","string",{"interpolation-string":[{pattern:s(/(^|[^\\])(?:\$@|@\$)"(?:""|\\[\s\S]|\{\{|<<0>>|[^\\{"])*"/.source,[Qe]),lookbehind:!0,greedy:!0,inside:Y(Qe,ue)},{pattern:s(/(^|[^@\\])\$"(?:\\.|\{\{|<<0>>|[^\\"{])*"/.source,[$]),lookbehind:!0,greedy:!0,inside:Y($,Oe)}],char:{pattern:RegExp(I),greedy:!0}}),n.languages.dotnet=n.languages.cs=n.languages.csharp}(t)}Ze.displayName="markup";Ze.aliases=["atom","html","mathml","rss","ssml","svg","xml"];function Ze(t){t.languages.markup={comment:{pattern:/<!--(?:(?!<!--)[\s\S])*?-->/,greedy:!0},prolog:{pattern:/<\?[\s\S]+?\?>/,greedy:!0},doctype:{pattern:/<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,greedy:!0,inside:{"internal-subset":{pattern:/(^[^\[]*\[)[\s\S]+(?=\]>$)/,lookbehind:!0,greedy:!0,inside:null},string:{pattern:/"[^"]*"|'[^']*'/,greedy:!0},punctuation:/^<!|>$|[[\]]/,"doctype-tag":/^DOCTYPE/i,name:/[^\s<>'"]+/}},cdata:{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,greedy:!0},tag:{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,greedy:!0,inside:{tag:{pattern:/^<\/?[^\s>\/]+/,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"special-attr":[],"attr-value":{pattern:/=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,inside:{punctuation:[{pattern:/^=/,alias:"attr-equals"},{pattern:/^(\s*)["']|["']$/,lookbehind:!0}]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:[{pattern:/&[\da-z]{1,8};/i,alias:"named-entity"},/&#x?[\da-f]{1,8};/i]},t.languages.markup.tag.inside["attr-value"].inside.entity=t.languages.markup.entity,t.languages.markup.doctype.inside["internal-subset"].inside=t.languages.markup,t.hooks.add("wrap",function(n){n.type==="entity"&&(n.attributes.title=n.content.value.replace(/&amp;/,"&"))}),Object.defineProperty(t.languages.markup.tag,"addInlined",{value:function(r,s){var i={};i["language-"+s]={pattern:/(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,lookbehind:!0,inside:t.languages[s]},i.cdata=/^<!\[CDATA\[|\]\]>$/i;var a={"included-cdata":{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,inside:i}};a["language-"+s]={pattern:/[\s\S]+/,inside:t.languages[s]};var o={};o[r]={pattern:RegExp(/(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(/__/g,function(){return r}),"i"),lookbehind:!0,greedy:!0,inside:a},t.languages.insertBefore("markup","cdata",o)}}),Object.defineProperty(t.languages.markup.tag,"addAttribute",{value:function(n,r){t.languages.markup.tag.inside["special-attr"].push({pattern:RegExp(/(^|["'\s])/.source+"(?:"+n+")"+/\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))/.source,"i"),lookbehind:!0,inside:{"attr-name":/^[^\s=]+/,"attr-value":{pattern:/=[\s\S]+/,inside:{value:{pattern:/(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,lookbehind:!0,alias:[r,"language-"+r],inside:t.languages[r]},punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}}}})}}),t.languages.html=t.languages.markup,t.languages.mathml=t.languages.markup,t.languages.svg=t.languages.markup,t.languages.xml=t.languages.extend("markup",{}),t.languages.ssml=t.languages.xml,t.languages.atom=t.languages.xml,t.languages.rss=t.languages.xml}Sr.displayName="css";Sr.aliases=[];function Sr(t){(function(n){var r=/(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;n.languages.css={comment:/\/\*[\s\S]*?\*\//,atrule:{pattern:RegExp("@[\\w-](?:"+/[^;{\s"']|\s+(?!\s)/.source+"|"+r.source+")*?"+/(?:;|(?=\s*\{))/.source),inside:{rule:/^@[\w-]+/,"selector-function-argument":{pattern:/(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,lookbehind:!0,alias:"selector"},keyword:{pattern:/(^|[^\w-])(?:and|not|only|or)(?![\w-])/,lookbehind:!0}}},url:{pattern:RegExp("\\burl\\((?:"+r.source+"|"+/(?:[^\\\r\n()"']|\\[\s\S])*/.source+")\\)","i"),greedy:!0,inside:{function:/^url/i,punctuation:/^\(|\)$/,string:{pattern:RegExp("^"+r.source+"$"),alias:"url"}}},selector:{pattern:RegExp(`(^|[{}\\s])[^{}\\s](?:[^{};"'\\s]|\\s+(?![\\s{])|`+r.source+")*(?=\\s*\\{)"),lookbehind:!0},string:{pattern:r,greedy:!0},property:{pattern:/(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,lookbehind:!0},important:/!important\b/i,function:{pattern:/(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,lookbehind:!0},punctuation:/[(){};:,]/},n.languages.css.atrule.inside.rest=n.languages.css;var s=n.languages.markup;s&&(s.tag.addInlined("style","css"),s.tag.addAttribute("style","css"))})(t)}Zl.displayName="diff";Zl.aliases=[];function Zl(t){(function(n){n.languages.diff={coord:[/^(?:\*{3}|-{3}|\+{3}).*$/m,/^@@.*@@$/m,/^\d.*$/m]};var r={"deleted-sign":"-","deleted-arrow":"<","inserted-sign":"+","inserted-arrow":">",unchanged:" ",diff:"!"};Object.keys(r).forEach(function(s){var i=r[s],a=[];/^\w+$/.test(s)||a.push(/\w+/.exec(s)[0]),s==="diff"&&a.push("bold"),n.languages.diff[s]={pattern:RegExp("^(?:["+i+`].*(?:\r
?|
|(?![\\s\\S])))+`,"m"),alias:a,inside:{line:{pattern:/(.)(?=[\s\S]).*(?:\r\n?|\n)?/,lookbehind:!0},prefix:{pattern:/[\s\S]/,alias:/\w+/.exec(s)[0]}}}}),Object.defineProperty(n.languages.diff,"PREFIXES",{value:r})})(t)}Ql.displayName="go";Ql.aliases=[];function Ql(t){t.register(le),t.languages.go=t.languages.extend("clike",{string:{pattern:/(^|[^\\])"(?:\\.|[^"\\\r\n])*"|`[^`]*`/,lookbehind:!0,greedy:!0},keyword:/\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\b/,boolean:/\b(?:_|false|iota|nil|true)\b/,number:[/\b0(?:b[01_]+|o[0-7_]+)i?\b/i,/\b0x(?:[a-f\d_]+(?:\.[a-f\d_]*)?|\.[a-f\d_]+)(?:p[+-]?\d+(?:_\d+)*)?i?(?!\w)/i,/(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?[\d_]+)?i?(?!\w)/i],operator:/[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\./,builtin:/\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\b/}),t.languages.insertBefore("go","string",{char:{pattern:/'(?:\\.|[^'\\\r\n]){0,10}'/,greedy:!0}}),delete t.languages.go["class-name"]}Jl.displayName="ini";Jl.aliases=[];function Jl(t){t.languages.ini={comment:{pattern:/(^[ \f\t\v]*)[#;][^\n\r]*/m,lookbehind:!0},section:{pattern:/(^[ \f\t\v]*)\[[^\n\r\]]*\]?/m,lookbehind:!0,inside:{"section-name":{pattern:/(^\[[ \f\t\v]*)[^ \f\t\v\]]+(?:[ \f\t\v]+[^ \f\t\v\]]+)*/,lookbehind:!0,alias:"selector"},punctuation:/\[|\]/}},key:{pattern:/(^[ \f\t\v]*)[^ \f\n\r\t\v=]+(?:[ \f\t\v]+[^ \f\n\r\t\v=]+)*(?=[ \f\t\v]*=)/m,lookbehind:!0,alias:"attr-name"},value:{pattern:/(=[ \f\t\v]*)[^ \f\n\r\t\v]+(?:[ \f\t\v]+[^ \f\n\r\t\v]+)*/,lookbehind:!0,alias:"attr-value",inside:{"inner-value":{pattern:/^("|').+(?=\1$)/,lookbehind:!0}}},punctuation:/=/}}ts.displayName="java";ts.aliases=[];function ts(t){t.register(le),function(n){var r=/\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record(?!\s*[(){}[\]<>=%~.:,;?+\-*/&|^])|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\b/,s=/(?:[a-z]\w*\s*\.\s*)*(?:[A-Z]\w*\s*\.\s*)*/.source,i={pattern:RegExp(/(^|[^\w.])/.source+s+/[A-Z](?:[\d_A-Z]*[a-z]\w*)?\b/.source),lookbehind:!0,inside:{namespace:{pattern:/^[a-z]\w*(?:\s*\.\s*[a-z]\w*)*(?:\s*\.)?/,inside:{punctuation:/\./}},punctuation:/\./}};n.languages.java=n.languages.extend("clike",{string:{pattern:/(^|[^\\])"(?:\\.|[^"\\\r\n])*"/,lookbehind:!0,greedy:!0},"class-name":[i,{pattern:RegExp(/(^|[^\w.])/.source+s+/[A-Z]\w*(?=\s+\w+\s*[;,=()]|\s*(?:\[[\s,]*\]\s*)?::\s*new\b)/.source),lookbehind:!0,inside:i.inside},{pattern:RegExp(/(\b(?:class|enum|extends|implements|instanceof|interface|new|record|throws)\s+)/.source+s+/[A-Z]\w*\b/.source),lookbehind:!0,inside:i.inside}],keyword:r,function:[n.languages.clike.function,{pattern:/(::\s*)[a-z_]\w*/,lookbehind:!0}],number:/\b0b[01][01_]*L?\b|\b0x(?:\.[\da-f_p+-]+|[\da-f_]+(?:\.[\da-f_p+-]+)?)\b|(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?\d[\d_]*)?[dfl]?/i,operator:{pattern:/(^|[^.])(?:<<=?|>>>?=?|->|--|\+\+|&&|\|\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,lookbehind:!0},constant:/\b[A-Z][A-Z_\d]+\b/}),n.languages.insertBefore("java","string",{"triple-quoted-string":{pattern:/"""[ \t]*[\r\n](?:(?:"|"")?(?:\\.|[^"\\]))*"""/,greedy:!0,alias:"string"},char:{pattern:/'(?:\\.|[^'\\\r\n]){1,6}'/,greedy:!0}}),n.languages.insertBefore("java","class-name",{annotation:{pattern:/(^|[^.])@\w+(?:\s*\.\s*\w+)*/,lookbehind:!0,alias:"punctuation"},generics:{pattern:/<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&))*>)*>)*>)*>/,inside:{"class-name":i,keyword:r,punctuation:/[<>(),.:]/,operator:/[?&|]/}},import:[{pattern:RegExp(/(\bimport\s+)/.source+s+/(?:[A-Z]\w*|\*)(?=\s*;)/.source),lookbehind:!0,inside:{namespace:i.inside.namespace,punctuation:/\./,operator:/\*/,"class-name":/\w+/}},{pattern:RegExp(/(\bimport\s+static\s+)/.source+s+/(?:\w+|\*)(?=\s*;)/.source),lookbehind:!0,alias:"static",inside:{namespace:i.inside.namespace,static:/\b\w+$/,punctuation:/\./,operator:/\*/,"class-name":/\w+/}}],namespace:{pattern:RegExp(/(\b(?:exports|import(?:\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\s+)(?!<keyword>)[a-z]\w*(?:\.[a-z]\w*)*\.?/.source.replace(/<keyword>/g,function(){return r.source})),lookbehind:!0,inside:{punctuation:/\./}}})}(t)}ec.displayName="regex";ec.aliases=[];function ec(t){(function(n){var r={pattern:/\\[\\(){}[\]^$+*?|.]/,alias:"escape"},s=/\\(?:x[\da-fA-F]{2}|u[\da-fA-F]{4}|u\{[\da-fA-F]+\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)/,i={pattern:/\.|\\[wsd]|\\p\{[^{}]+\}/i,alias:"class-name"},a={pattern:/\\[wsd]|\\p\{[^{}]+\}/i,alias:"class-name"},o="(?:[^\\\\-]|"+s.source+")",l=RegExp(o+"-"+o),c={pattern:/(<|')[^<>']+(?=[>']$)/,lookbehind:!0,alias:"variable"};n.languages.regex={"char-class":{pattern:/((?:^|[^\\])(?:\\\\)*)\[(?:[^\\\]]|\\[\s\S])*\]/,lookbehind:!0,inside:{"char-class-negation":{pattern:/(^\[)\^/,lookbehind:!0,alias:"operator"},"char-class-punctuation":{pattern:/^\[|\]$/,alias:"punctuation"},range:{pattern:l,inside:{escape:s,"range-punctuation":{pattern:/-/,alias:"operator"}}},"special-escape":r,"char-set":a,escape:s}},"special-escape":r,"char-set":i,backreference:[{pattern:/\\(?![123][0-7]{2})[1-9]/,alias:"keyword"},{pattern:/\\k<[^<>']+>/,alias:"keyword",inside:{"group-name":c}}],anchor:{pattern:/[$^]|\\[ABbGZz]/,alias:"function"},escape:s,group:[{pattern:/\((?:\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,alias:"punctuation",inside:{"group-name":c}},{pattern:/\)/,alias:"punctuation"}],quantifier:{pattern:/(?:[+*?]|\{\d+(?:,\d*)?\})[?+]?/,alias:"number"},alternation:{pattern:/\|/,alias:"keyword"}}})(t)}at.displayName="javascript";at.aliases=["js"];function at(t){t.register(le),t.languages.javascript=t.languages.extend("clike",{"class-name":[t.languages.clike["class-name"],{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/,lookbehind:!0}],keyword:[{pattern:/((?:^|\})\s*)catch\b/,lookbehind:!0},{pattern:/(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,lookbehind:!0}],function:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,number:{pattern:RegExp(/(^|[^\w$])/.source+"(?:"+(/NaN|Infinity/.source+"|"+/0[bB][01]+(?:_[01]+)*n?/.source+"|"+/0[oO][0-7]+(?:_[0-7]+)*n?/.source+"|"+/0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?/.source+"|"+/\d+(?:_\d+)*n/.source+"|"+/(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?/.source)+")"+/(?![\w$])/.source),lookbehind:!0},operator:/--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/}),t.languages.javascript["class-name"][0].pattern=/(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/,t.languages.insertBefore("javascript","keyword",{regex:{pattern:RegExp(/((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)/.source+/\//.source+"(?:"+/(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}/.source+"|"+/(?:\[(?:[^[\]\\\r\n]|\\.|\[(?:[^[\]\\\r\n]|\\.|\[(?:[^[\]\\\r\n]|\\.)*\])*\])*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source+")"+/(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/.source),lookbehind:!0,greedy:!0,inside:{"regex-source":{pattern:/^(\/)[\s\S]+(?=\/[a-z]*$)/,lookbehind:!0,alias:"language-regex",inside:t.languages.regex},"regex-delimiter":/^\/|\/$/,"regex-flags":/^[a-z]+$/}},"function-variable":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,alias:"function"},parameter:[{pattern:/(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,lookbehind:!0,inside:t.languages.javascript},{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,lookbehind:!0,inside:t.languages.javascript},{pattern:/(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,lookbehind:!0,inside:t.languages.javascript},{pattern:/((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,lookbehind:!0,inside:t.languages.javascript}],constant:/\b[A-Z](?:[A-Z_]|\dx?)*\b/}),t.languages.insertBefore("javascript","string",{hashbang:{pattern:/^#!.*/,greedy:!0,alias:"comment"},"template-string":{pattern:/`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\$\{|\}$/,alias:"punctuation"},rest:t.languages.javascript}},string:/[\s\S]+/}},"string-property":{pattern:/((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m,lookbehind:!0,greedy:!0,alias:"property"}}),t.languages.insertBefore("javascript","operator",{"literal-property":{pattern:/((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m,lookbehind:!0,alias:"property"}}),t.languages.markup&&(t.languages.markup.tag.addInlined("script","javascript"),t.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,"javascript")),t.languages.js=t.languages.javascript}ei.displayName="json";ei.aliases=["webmanifest"];function ei(t){t.languages.json={property:{pattern:/(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?=\s*:)/,lookbehind:!0,greedy:!0},string:{pattern:/(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?!\s*:)/,lookbehind:!0,greedy:!0},comment:{pattern:/\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,greedy:!0},number:/-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,punctuation:/[{}[\],]/,operator:/:/,boolean:/\b(?:false|true)\b/,null:{pattern:/\bnull\b/,alias:"keyword"}},t.languages.webmanifest=t.languages.json}tc.displayName="kotlin";tc.aliases=["kt","kts"];function tc(t){t.register(le),function(n){n.languages.kotlin=n.languages.extend("clike",{keyword:{pattern:/(^|[^.])\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\b/,lookbehind:!0},function:[{pattern:/(?:`[^\r\n`]+`|\b\w+)(?=\s*\()/,greedy:!0},{pattern:/(\.)(?:`[^\r\n`]+`|\w+)(?=\s*\{)/,lookbehind:!0,greedy:!0}],number:/\b(?:0[xX][\da-fA-F]+(?:_[\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\d+(?:_\d+)*(?:\.\d+(?:_\d+)*)?(?:[eE][+-]?\d+(?:_\d+)*)?[fFL]?)\b/,operator:/\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\/*%<>]=?|[?:]:?|\.\.|&&|\|\||\b(?:and|inv|or|shl|shr|ushr|xor)\b/}),delete n.languages.kotlin["class-name"];var r={"interpolation-punctuation":{pattern:/^\$\{?|\}$/,alias:"punctuation"},expression:{pattern:/[\s\S]+/,inside:n.languages.kotlin}};n.languages.insertBefore("kotlin","string",{"string-literal":[{pattern:/"""(?:[^$]|\$(?:(?!\{)|\{[^{}]*\}))*?"""/,alias:"multiline",inside:{interpolation:{pattern:/\$(?:[a-z_]\w*|\{[^{}]*\})/i,inside:r},string:/[\s\S]+/}},{pattern:/"(?:[^"\\\r\n$]|\\.|\$(?:(?!\{)|\{[^{}]*\}))*"/,alias:"singleline",inside:{interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\$(?:[a-z_]\w*|\{[^{}]*\})/i,lookbehind:!0,inside:r},string:/[\s\S]+/}}],char:{pattern:/'(?:[^'\\\r\n]|\\(?:.|u[a-fA-F0-9]{0,4}))'/,greedy:!0}}),delete n.languages.kotlin.string,n.languages.insertBefore("kotlin","keyword",{annotation:{pattern:/\B@(?:\w+:)?(?:[A-Z]\w*|\[[^\]]+\])/,alias:"builtin"}}),n.languages.insertBefore("kotlin","function",{label:{pattern:/\b\w+@|@\w+\b/,alias:"symbol"}}),n.languages.kt=n.languages.kotlin,n.languages.kts=n.languages.kotlin}(t)}nc.displayName="less";nc.aliases=[];function nc(t){t.register(Sr),t.languages.less=t.languages.extend("css",{comment:[/\/\*[\s\S]*?\*\//,{pattern:/(^|[^\\])\/\/.*/,lookbehind:!0}],atrule:{pattern:/@[\w-](?:\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};\s]|\s+(?!\s))*?(?=\s*\{)/,inside:{punctuation:/[:()]/}},selector:{pattern:/(?:@\{[\w-]+\}|[^{};\s@])(?:@\{[\w-]+\}|\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};@\s]|\s+(?!\s))*?(?=\s*\{)/,inside:{variable:/@+[\w-]+/}},property:/(?:@\{[\w-]+\}|[\w-])+(?:\+_?)?(?=\s*:)/,operator:/[+\-*\/]/}),t.languages.insertBefore("less","property",{variable:[{pattern:/@[\w-]+\s*:/,inside:{punctuation:/:/}},/@@?[\w-]+/],"mixin-usage":{pattern:/([{;]\s*)[.#](?!\d)[\w-].*?(?=[(;])/,lookbehind:!0,alias:"function"}})}Ia.displayName="lua";Ia.aliases=[];function Ia(t){t.languages.lua={comment:/^#!.+|--(?:\[(=*)\[[\s\S]*?\]\1\]|.*)/m,string:{pattern:/(["'])(?:(?!\1)[^\\\r\n]|\\z(?:\r\n|\s)|\\(?:\r\n|[^z]))*\1|\[(=*)\[[\s\S]*?\]\2\]/,greedy:!0},number:/\b0x[a-f\d]+(?:\.[a-f\d]*)?(?:p[+-]?\d+)?\b|\b\d+(?:\.\B|(?:\.\d*)?(?:e[+-]?\d+)?\b)|\B\.\d+(?:e[+-]?\d+)?\b/i,keyword:/\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\b/,function:/(?!\d)\w+(?=\s*(?:[({]))/,operator:[/[-+*%^&|#]|\/\/?|<[<=]?|>[>=]?|[=~]=?/,{pattern:/(^|[^.])\.\.(?!\.)/,lookbehind:!0}],punctuation:/[\[\](){},;]|\.+|:+/}}rc.displayName="makefile";rc.aliases=[];function rc(t){t.languages.makefile={comment:{pattern:/(^|[^\\])#(?:\\(?:\r\n|[\s\S])|[^\\\r\n])*/,lookbehind:!0},string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"builtin-target":{pattern:/\.[A-Z][^:#=\s]+(?=\s*:(?!=))/,alias:"builtin"},target:{pattern:/^(?:[^:=\s]|[ \t]+(?![\s:]))+(?=\s*:(?!=))/m,alias:"symbol",inside:{variable:/\$+(?:(?!\$)[^(){}:#=\s]+|(?=[({]))/}},variable:/\$+(?:(?!\$)[^(){}:#=\s]+|\([@*%<^+?][DF]\)|(?=[({]))/,keyword:/-include\b|\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\b/,function:{pattern:/(\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \t])/,lookbehind:!0},operator:/(?:::|[?:+!])?=|[|@]/,punctuation:/[:;(){}]/}}Ca.displayName="yaml";Ca.aliases=["yml"];function Ca(t){(function(n){var r=/[*&][^\s[\]{},]+/,s=/!(?:<[\w\-%#;/?:@&=+$,.!~*'()[\]]+>|(?:[a-zA-Z\d-]*!)?[\w\-%#;/?:@&=+$.~*'()]+)?/,i="(?:"+s.source+"(?:[ 	]+"+r.source+")?|"+r.source+"(?:[ 	]+"+s.source+")?)",a=/(?:[^\s\x00-\x08\x0e-\x1f!"#%&'*,\-:>?@[\]`{|}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]|[?:-]<PLAIN>)(?:[ \t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g,function(){return/[^\s\x00-\x08\x0e-\x1f,[\]{}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]/.source}),o=/"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\\\r\n]|\\.)*'/.source;function l(c,d){d=(d||"").replace(/m/g,"")+"m";var h=/([:\-,[{]\s*(?:\s<<prop>>[ \t]+)?)(?:<<value>>)(?=[ \t]*(?:$|,|\]|\}|(?:[\r\n]\s*)?#))/.source.replace(/<<prop>>/g,function(){return i}).replace(/<<value>>/g,function(){return c});return RegExp(h,d)}n.languages.yaml={scalar:{pattern:RegExp(/([\-:]\s*(?:\s<<prop>>[ \t]+)?[|>])[ \t]*(?:((?:\r?\n|\r)[ \t]+)\S[^\r\n]*(?:\2[^\r\n]+)*)/.source.replace(/<<prop>>/g,function(){return i})),lookbehind:!0,alias:"string"},comment:/#.*/,key:{pattern:RegExp(/((?:^|[:\-,[{\r\n?])[ \t]*(?:<<prop>>[ \t]+)?)<<key>>(?=\s*:\s)/.source.replace(/<<prop>>/g,function(){return i}).replace(/<<key>>/g,function(){return"(?:"+a+"|"+o+")"})),lookbehind:!0,greedy:!0,alias:"atrule"},directive:{pattern:/(^[ \t]*)%.+/m,lookbehind:!0,alias:"important"},datetime:{pattern:l(/\d{4}-\d\d?-\d\d?(?:[tT]|[ \t]+)\d\d?:\d{2}:\d{2}(?:\.\d*)?(?:[ \t]*(?:Z|[-+]\d\d?(?::\d{2})?))?|\d{4}-\d{2}-\d{2}|\d\d?:\d{2}(?::\d{2}(?:\.\d*)?)?/.source),lookbehind:!0,alias:"number"},boolean:{pattern:l(/false|true/.source,"i"),lookbehind:!0,alias:"important"},null:{pattern:l(/null|~/.source,"i"),lookbehind:!0,alias:"important"},string:{pattern:l(o),lookbehind:!0,greedy:!0},number:{pattern:l(/[+-]?(?:0x[\da-f]+|0o[0-7]+|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?|\.inf|\.nan)/.source,"i"),lookbehind:!0},tag:s,important:r,punctuation:/---|[:[\]{}\-,|>?]|\.\.\./},n.languages.yml=n.languages.yaml})(t)}sc.displayName="markdown";sc.aliases=["md"];function sc(t){t.register(Ze),function(n){var r=/(?:\\.|[^\\\n\r]|(?:\n|\r\n?)(?![\r\n]))/.source;function s(l){return l=l.replace(/<inner>/g,function(){return r}),RegExp(/((?:^|[^\\])(?:\\{2})*)/.source+"(?:"+l+")")}var i=/(?:\\.|``(?:[^`\r\n]|`(?!`))+``|`[^`\r\n]+`|[^\\|\r\n`])+/.source,a=/\|?__(?:\|__)+\|?(?:(?:\n|\r\n?)|(?![\s\S]))/.source.replace(/__/g,function(){return i}),o=/\|?[ \t]*:?-{3,}:?[ \t]*(?:\|[ \t]*:?-{3,}:?[ \t]*)+\|?(?:\n|\r\n?)/.source;n.languages.markdown=n.languages.extend("markup",{}),n.languages.insertBefore("markdown","prolog",{"front-matter-block":{pattern:/(^(?:\s*[\r\n])?)---(?!.)[\s\S]*?[\r\n]---(?!.)/,lookbehind:!0,greedy:!0,inside:{punctuation:/^---|---$/,"front-matter":{pattern:/\S+(?:\s+\S+)*/,alias:["yaml","language-yaml"],inside:n.languages.yaml}}},blockquote:{pattern:/^>(?:[\t ]*>)*/m,alias:"punctuation"},table:{pattern:RegExp("^"+a+o+"(?:"+a+")*","m"),inside:{"table-data-rows":{pattern:RegExp("^("+a+o+")(?:"+a+")*$"),lookbehind:!0,inside:{"table-data":{pattern:RegExp(i),inside:n.languages.markdown},punctuation:/\|/}},"table-line":{pattern:RegExp("^("+a+")"+o+"$"),lookbehind:!0,inside:{punctuation:/\||:?-{3,}:?/}},"table-header-row":{pattern:RegExp("^"+a+"$"),inside:{"table-header":{pattern:RegExp(i),alias:"important",inside:n.languages.markdown},punctuation:/\|/}}}},code:[{pattern:/((?:^|\n)[ \t]*\n|(?:^|\r\n?)[ \t]*\r\n?)(?: {4}|\t).+(?:(?:\n|\r\n?)(?: {4}|\t).+)*/,lookbehind:!0,alias:"keyword"},{pattern:/^```[\s\S]*?^```$/m,greedy:!0,inside:{"code-block":{pattern:/^(```.*(?:\n|\r\n?))[\s\S]+?(?=(?:\n|\r\n?)^```$)/m,lookbehind:!0},"code-language":{pattern:/^(```).+/,lookbehind:!0},punctuation:/```/}}],title:[{pattern:/\S.*(?:\n|\r\n?)(?:==+|--+)(?=[ \t]*$)/m,alias:"important",inside:{punctuation:/==+$|--+$/}},{pattern:/(^\s*)#.+/m,lookbehind:!0,alias:"important",inside:{punctuation:/^#+|#+$/}}],hr:{pattern:/(^\s*)([*-])(?:[\t ]*\2){2,}(?=\s*$)/m,lookbehind:!0,alias:"punctuation"},list:{pattern:/(^\s*)(?:[*+-]|\d+\.)(?=[\t ].)/m,lookbehind:!0,alias:"punctuation"},"url-reference":{pattern:/!?\[[^\]]+\]:[\t ]+(?:\S+|<(?:\\.|[^>\\])+>)(?:[\t ]+(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\)))?/,inside:{variable:{pattern:/^(!?\[)[^\]]+/,lookbehind:!0},string:/(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\))$/,punctuation:/^[\[\]!:]|[<>]/},alias:"url"},bold:{pattern:s(/\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\b|\*\*(?:(?!\*)<inner>|\*(?:(?!\*)<inner>)+\*)+\*\*/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^..)[\s\S]+(?=..$)/,lookbehind:!0,inside:{}},punctuation:/\*\*|__/}},italic:{pattern:s(/\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\b|\*(?:(?!\*)<inner>|\*\*(?:(?!\*)<inner>)+\*\*)+\*/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^.)[\s\S]+(?=.$)/,lookbehind:!0,inside:{}},punctuation:/[*_]/}},strike:{pattern:s(/(~~?)(?:(?!~)<inner>)+\2/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^~~?)[\s\S]+(?=\1$)/,lookbehind:!0,inside:{}},punctuation:/~~?/}},"code-snippet":{pattern:/(^|[^\\`])(?:``[^`\r\n]+(?:`[^`\r\n]+)*``(?!`)|`[^`\r\n]+`(?!`))/,lookbehind:!0,greedy:!0,alias:["code","keyword"]},url:{pattern:s(/!?\[(?:(?!\])<inner>)+\](?:\([^\s)]+(?:[\t ]+"(?:\\.|[^"\\])*")?\)|[ \t]?\[(?:(?!\])<inner>)+\])/.source),lookbehind:!0,greedy:!0,inside:{operator:/^!/,content:{pattern:/(^\[)[^\]]+(?=\])/,lookbehind:!0,inside:{}},variable:{pattern:/(^\][ \t]?\[)[^\]]+(?=\]$)/,lookbehind:!0},url:{pattern:/(^\]\()[^\s)]+/,lookbehind:!0},string:{pattern:/(^[ \t]+)"(?:\\.|[^"\\])*"(?=\)$)/,lookbehind:!0}}}}),["url","bold","italic","strike"].forEach(function(l){["url","bold","italic","strike","code-snippet"].forEach(function(c){l!==c&&(n.languages.markdown[l].inside.content.inside[c]=n.languages.markdown[c])})}),n.hooks.add("after-tokenize",function(l){if(l.language!=="markdown"&&l.language!=="md")return;function c(d){if(!(!d||typeof d=="string"))for(var h=0,x=d.length;h<x;h++){var g=d[h];if(g.type!=="code"){c(g.content);continue}var A=g.content[1],S=g.content[3];if(A&&S&&A.type==="code-language"&&S.type==="code-block"&&typeof A.content=="string"){var y=A.content.replace(/\b#/g,"sharp").replace(/\b\+\+/g,"pp");y=(/[a-z][\w-]*/i.exec(y)||[""])[0].toLowerCase();var _="language-"+y;S.alias?typeof S.alias=="string"?S.alias=[S.alias,_]:S.alias.push(_):S.alias=[_]}}}c(l.tokens)}),n.hooks.add("wrap",function(l){if(l.type==="code-block"){for(var c="",d=0,h=l.classes.length;d<h;d++){var x=l.classes[d],g=/language-(.+)/.exec(x);if(g){c=g[1];break}}var A=n.languages[c];if(A)l.content=n.highlight(l.content.value,A,c);else if(c&&c!=="none"&&n.plugins.autoloader){var S="md-"+new Date().valueOf()+"-"+Math.floor(Math.random()*1e16);l.attributes.id=S,n.plugins.autoloader.loadLanguages(c,function(){var y=document.getElementById(S);y&&(y.innerHTML=n.highlight(y.textContent,n.languages[c],c))})}}}),RegExp(n.languages.markup.tag.pattern.source,"gi"),n.languages.md=n.languages.markdown}(t)}ic.displayName="objectivec";ic.aliases=["objc"];function ic(t){t.register(un),t.languages.objectivec=t.languages.extend("c",{string:{pattern:/@?"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,greedy:!0},keyword:/\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\b/,operator:/-[->]?|\+\+?|!=?|<<?=?|>>?=?|==?|&&?|\|\|?|[~^%?*\/@]/}),delete t.languages.objectivec["class-name"],t.languages.objc=t.languages.objectivec}ac.displayName="perl";ac.aliases=[];function ac(t){(function(n){var r=/(?:\((?:[^()\\]|\\[\s\S])*\)|\{(?:[^{}\\]|\\[\s\S])*\}|\[(?:[^[\]\\]|\\[\s\S])*\]|<(?:[^<>\\]|\\[\s\S])*>)/.source;n.languages.perl={comment:[{pattern:/(^\s*)=\w[\s\S]*?=cut.*/m,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\$])#.*/,lookbehind:!0,greedy:!0}],string:[{pattern:RegExp(/\b(?:q|qq|qw|qx)(?![a-zA-Z0-9])\s*/.source+"(?:"+[/([^a-zA-Z0-9\s{(\[<])(?:(?!\1)[^\\]|\\[\s\S])*\1/.source,/([a-zA-Z0-9])(?:(?!\2)[^\\]|\\[\s\S])*\2/.source,r].join("|")+")"),greedy:!0},{pattern:/("|`)(?:(?!\1)[^\\]|\\[\s\S])*\1/,greedy:!0},{pattern:/'(?:[^'\\\r\n]|\\.)*'/,greedy:!0}],regex:[{pattern:RegExp(/\b(?:m|qr)(?![a-zA-Z0-9])\s*/.source+"(?:"+[/([^a-zA-Z0-9\s{(\[<])(?:(?!\1)[^\\]|\\[\s\S])*\1/.source,/([a-zA-Z0-9])(?:(?!\2)[^\\]|\\[\s\S])*\2/.source,r].join("|")+")"+/[msixpodualngc]*/.source),greedy:!0},{pattern:RegExp(/(^|[^-])\b(?:s|tr|y)(?![a-zA-Z0-9])\s*/.source+"(?:"+[/([^a-zA-Z0-9\s{(\[<])(?:(?!\2)[^\\]|\\[\s\S])*\2(?:(?!\2)[^\\]|\\[\s\S])*\2/.source,/([a-zA-Z0-9])(?:(?!\3)[^\\]|\\[\s\S])*\3(?:(?!\3)[^\\]|\\[\s\S])*\3/.source,r+/\s*/.source+r].join("|")+")"+/[msixpodualngcer]*/.source),lookbehind:!0,greedy:!0},{pattern:/\/(?:[^\/\\\r\n]|\\.)*\/[msixpodualngc]*(?=\s*(?:$|[\r\n,.;})&|\-+*~<>!?^]|(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|x|xor)\b))/,greedy:!0}],variable:[/[&*$@%]\{\^[A-Z]+\}/,/[&*$@%]\^[A-Z_]/,/[&*$@%]#?(?=\{)/,/[&*$@%]#?(?:(?:::)*'?(?!\d)[\w$]+(?![\w$]))+(?:::)*/,/[&*$@%]\d+/,/(?!%=)[$@%][!"#$%&'()*+,\-.\/:;<=>?@[\\\]^_`{|}~]/],filehandle:{pattern:/<(?![<=])\S*?>|\b_\b/,alias:"symbol"},"v-string":{pattern:/v\d+(?:\.\d+)*|\d+(?:\.\d+){2,}/,alias:"string"},function:{pattern:/(\bsub[ \t]+)\w+/,lookbehind:!0},keyword:/\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|return|say|state|sub|switch|undef|unless|until|use|when|while)\b/,number:/\b(?:0x[\dA-Fa-f](?:_?[\dA-Fa-f])*|0b[01](?:_?[01])*|(?:(?:\d(?:_?\d)*)?\.)?\d(?:_?\d)*(?:[Ee][+-]?\d+)?)\b/,operator:/-[rwxoRWXOezsfdlpSbctugkTBMAC]\b|\+[+=]?|-[-=>]?|\*\*?=?|\/\/?=?|=[=~>]?|~[~=]?|\|\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\.(?:=|\.\.?)?|[\\?]|\bx(?:=|\b)|\b(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|xor)\b/,punctuation:/[{}[\];(),:]/}})(t)}ot.displayName="markup-templating";ot.aliases=[];function ot(t){t.register(Ze),function(n){function r(s,i){return"___"+s.toUpperCase()+i+"___"}Object.defineProperties(n.languages["markup-templating"]={},{buildPlaceholders:{value:function(s,i,a,o){if(s.language===i){var l=s.tokenStack=[];s.code=s.code.replace(a,function(c){if(typeof o=="function"&&!o(c))return c;for(var d=l.length,h;s.code.indexOf(h=r(i,d))!==-1;)++d;return l[d]=c,h}),s.grammar=n.languages.markup}}},tokenizePlaceholders:{value:function(s,i){if(s.language!==i||!s.tokenStack)return;s.grammar=n.languages[i];var a=0,o=Object.keys(s.tokenStack);function l(c){for(var d=0;d<c.length&&!(a>=o.length);d++){var h=c[d];if(typeof h=="string"||h.content&&typeof h.content=="string"){var x=o[a],g=s.tokenStack[x],A=typeof h=="string"?h:h.content,S=r(i,x),y=A.indexOf(S);if(y>-1){++a;var _=A.substring(0,y),f=new n.Token(i,n.tokenize(g,s.grammar),"language-"+i,g),b=A.substring(y+S.length),T=[];_&&T.push.apply(T,l([_])),T.push(f),b&&T.push.apply(T,l([b])),typeof h=="string"?c.splice.apply(c,[d,1].concat(T)):h.content=T}}else h.content&&l(h.content)}return c}l(s.tokens)}}})}(t)}ns.displayName="php";ns.aliases=[];function ns(t){t.register(ot),function(n){var r=/\/\*[\s\S]*?\*\/|\/\/.*|#(?!\[).*/,s=[{pattern:/\b(?:false|true)\b/i,alias:"boolean"},{pattern:/(::\s*)\b[a-z_]\w*\b(?!\s*\()/i,greedy:!0,lookbehind:!0},{pattern:/(\b(?:case|const)\s+)\b[a-z_]\w*(?=\s*[;=])/i,greedy:!0,lookbehind:!0},/\b(?:null)\b/i,/\b[A-Z_][A-Z0-9_]*\b(?!\s*\()/],i=/\b0b[01]+(?:_[01]+)*\b|\b0o[0-7]+(?:_[0-7]+)*\b|\b0x[\da-f]+(?:_[\da-f]+)*\b|(?:\b\d+(?:_\d+)*\.?(?:\d+(?:_\d+)*)?|\B\.\d+)(?:e[+-]?\d+)?/i,a=/<?=>|\?\?=?|\.{3}|\??->|[!=]=?=?|::|\*\*=?|--|\+\+|&&|\|\||<<|>>|[?~]|[/^|%*&<>.+-]=?/,o=/[{}\[\](),:;]/;n.languages.php={delimiter:{pattern:/\?>$|^<\?(?:php(?=\s)|=)?/i,alias:"important"},comment:r,variable:/\$+(?:\w+\b|(?=\{))/,package:{pattern:/(namespace\s+|use\s+(?:function\s+)?)(?:\\?\b[a-z_]\w*)+\b(?!\\)/i,lookbehind:!0,inside:{punctuation:/\\/}},"class-name-definition":{pattern:/(\b(?:class|enum|interface|trait)\s+)\b[a-z_]\w*(?!\\)\b/i,lookbehind:!0,alias:"class-name"},"function-definition":{pattern:/(\bfunction\s+)[a-z_]\w*(?=\s*\()/i,lookbehind:!0,alias:"function"},keyword:[{pattern:/(\(\s*)\b(?:array|bool|boolean|float|int|integer|object|string)\b(?=\s*\))/i,alias:"type-casting",greedy:!0,lookbehind:!0},{pattern:/([(,?]\s*)\b(?:array(?!\s*\()|bool|callable|(?:false|null)(?=\s*\|)|float|int|iterable|mixed|object|self|static|string)\b(?=\s*\$)/i,alias:"type-hint",greedy:!0,lookbehind:!0},{pattern:/(\)\s*:\s*(?:\?\s*)?)\b(?:array(?!\s*\()|bool|callable|(?:false|null)(?=\s*\|)|float|int|iterable|mixed|never|object|self|static|string|void)\b/i,alias:"return-type",greedy:!0,lookbehind:!0},{pattern:/\b(?:array(?!\s*\()|bool|float|int|iterable|mixed|object|string|void)\b/i,alias:"type-declaration",greedy:!0},{pattern:/(\|\s*)(?:false|null)\b|\b(?:false|null)(?=\s*\|)/i,alias:"type-declaration",greedy:!0,lookbehind:!0},{pattern:/\b(?:parent|self|static)(?=\s*::)/i,alias:"static-context",greedy:!0},{pattern:/(\byield\s+)from\b/i,lookbehind:!0},/\bclass\b/i,{pattern:/((?:^|[^\s>:]|(?:^|[^-])>|(?:^|[^:]):)\s*)\b(?:abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|match|namespace|never|new|or|parent|print|private|protected|public|readonly|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield|__halt_compiler)\b/i,lookbehind:!0}],"argument-name":{pattern:/([(,]\s*)\b[a-z_]\w*(?=\s*:(?!:))/i,lookbehind:!0},"class-name":[{pattern:/(\b(?:extends|implements|instanceof|new(?!\s+self|\s+static))\s+|\bcatch\s*\()\b[a-z_]\w*(?!\\)\b/i,greedy:!0,lookbehind:!0},{pattern:/(\|\s*)\b[a-z_]\w*(?!\\)\b/i,greedy:!0,lookbehind:!0},{pattern:/\b[a-z_]\w*(?!\\)\b(?=\s*\|)/i,greedy:!0},{pattern:/(\|\s*)(?:\\?\b[a-z_]\w*)+\b/i,alias:"class-name-fully-qualified",greedy:!0,lookbehind:!0,inside:{punctuation:/\\/}},{pattern:/(?:\\?\b[a-z_]\w*)+\b(?=\s*\|)/i,alias:"class-name-fully-qualified",greedy:!0,inside:{punctuation:/\\/}},{pattern:/(\b(?:extends|implements|instanceof|new(?!\s+self\b|\s+static\b))\s+|\bcatch\s*\()(?:\\?\b[a-z_]\w*)+\b(?!\\)/i,alias:"class-name-fully-qualified",greedy:!0,lookbehind:!0,inside:{punctuation:/\\/}},{pattern:/\b[a-z_]\w*(?=\s*\$)/i,alias:"type-declaration",greedy:!0},{pattern:/(?:\\?\b[a-z_]\w*)+(?=\s*\$)/i,alias:["class-name-fully-qualified","type-declaration"],greedy:!0,inside:{punctuation:/\\/}},{pattern:/\b[a-z_]\w*(?=\s*::)/i,alias:"static-context",greedy:!0},{pattern:/(?:\\?\b[a-z_]\w*)+(?=\s*::)/i,alias:["class-name-fully-qualified","static-context"],greedy:!0,inside:{punctuation:/\\/}},{pattern:/([(,?]\s*)[a-z_]\w*(?=\s*\$)/i,alias:"type-hint",greedy:!0,lookbehind:!0},{pattern:/([(,?]\s*)(?:\\?\b[a-z_]\w*)+(?=\s*\$)/i,alias:["class-name-fully-qualified","type-hint"],greedy:!0,lookbehind:!0,inside:{punctuation:/\\/}},{pattern:/(\)\s*:\s*(?:\?\s*)?)\b[a-z_]\w*(?!\\)\b/i,alias:"return-type",greedy:!0,lookbehind:!0},{pattern:/(\)\s*:\s*(?:\?\s*)?)(?:\\?\b[a-z_]\w*)+\b(?!\\)/i,alias:["class-name-fully-qualified","return-type"],greedy:!0,lookbehind:!0,inside:{punctuation:/\\/}}],constant:s,function:{pattern:/(^|[^\\\w])\\?[a-z_](?:[\w\\]*\w)?(?=\s*\()/i,lookbehind:!0,inside:{punctuation:/\\/}},property:{pattern:/(->\s*)\w+/,lookbehind:!0},number:i,operator:a,punctuation:o};var l={pattern:/\{\$(?:\{(?:\{[^{}]+\}|[^{}]+)\}|[^{}])+\}|(^|[^\\{])\$+(?:\w+(?:\[[^\r\n\[\]]+\]|->\w+)?)/,lookbehind:!0,inside:n.languages.php},c=[{pattern:/<<<'([^']+)'[\r\n](?:.*[\r\n])*?\1;/,alias:"nowdoc-string",greedy:!0,inside:{delimiter:{pattern:/^<<<'[^']+'|[a-z_]\w*;$/i,alias:"symbol",inside:{punctuation:/^<<<'?|[';]$/}}}},{pattern:/<<<(?:"([^"]+)"[\r\n](?:.*[\r\n])*?\1;|([a-z_]\w*)[\r\n](?:.*[\r\n])*?\2;)/i,alias:"heredoc-string",greedy:!0,inside:{delimiter:{pattern:/^<<<(?:"[^"]+"|[a-z_]\w*)|[a-z_]\w*;$/i,alias:"symbol",inside:{punctuation:/^<<<"?|[";]$/}},interpolation:l}},{pattern:/`(?:\\[\s\S]|[^\\`])*`/,alias:"backtick-quoted-string",greedy:!0},{pattern:/'(?:\\[\s\S]|[^\\'])*'/,alias:"single-quoted-string",greedy:!0},{pattern:/"(?:\\[\s\S]|[^\\"])*"/,alias:"double-quoted-string",greedy:!0,inside:{interpolation:l}}];n.languages.insertBefore("php","variable",{string:c,attribute:{pattern:/#\[(?:[^"'\/#]|\/(?![*/])|\/\/.*$|#(?!\[).*$|\/\*(?:[^*]|\*(?!\/))*\*\/|"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*')+\](?=\s*[a-z$#])/im,greedy:!0,inside:{"attribute-content":{pattern:/^(#\[)[\s\S]+(?=\]$)/,lookbehind:!0,inside:{comment:r,string:c,"attribute-class-name":[{pattern:/([^:]|^)\b[a-z_]\w*(?!\\)\b/i,alias:"class-name",greedy:!0,lookbehind:!0},{pattern:/([^:]|^)(?:\\?\b[a-z_]\w*)+/i,alias:["class-name","class-name-fully-qualified"],greedy:!0,lookbehind:!0,inside:{punctuation:/\\/}}],constant:s,number:i,operator:a,punctuation:o}},delimiter:{pattern:/^#\[|\]$/,alias:"punctuation"}}}}),n.hooks.add("before-tokenize",function(d){if(/<\?/.test(d.code)){var h=/<\?(?:[^"'/#]|\/(?![*/])|("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|(?:\/\/|#(?!\[))(?:[^?\n\r]|\?(?!>))*(?=$|\?>|[\r\n])|#\[|\/\*(?:[^*]|\*(?!\/))*(?:\*\/|$))*?(?:\?>|$)/g;n.languages["markup-templating"].buildPlaceholders(d,"php",h)}}),n.hooks.add("after-tokenize",function(d){n.languages["markup-templating"].tokenizePlaceholders(d,"php")})}(t)}Oa.displayName="python";Oa.aliases=["py"];function Oa(t){t.languages.python={comment:{pattern:/(^|[^\\])#.*/,lookbehind:!0,greedy:!0},"string-interpolation":{pattern:/(?:f|fr|rf)(?:("""|''')[\s\S]*?\1|("|')(?:\\.|(?!\2)[^\\\r\n])*\2)/i,greedy:!0,inside:{interpolation:{pattern:/((?:^|[^{])(?:\{\{)*)\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}])+\})+\})+\}/,lookbehind:!0,inside:{"format-spec":{pattern:/(:)[^:(){}]+(?=\}$)/,lookbehind:!0},"conversion-option":{pattern:/![sra](?=[:}]$)/,alias:"punctuation"},rest:null}},string:/[\s\S]+/}},"triple-quoted-string":{pattern:/(?:[rub]|br|rb)?("""|''')[\s\S]*?\1/i,greedy:!0,alias:"string"},string:{pattern:/(?:[rub]|br|rb)?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/i,greedy:!0},function:{pattern:/((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g,lookbehind:!0},"class-name":{pattern:/(\bclass\s+)\w+/i,lookbehind:!0},decorator:{pattern:/(^[\t ]*)@\w+(?:\.\w+)*/m,lookbehind:!0,alias:["annotation","punctuation"],inside:{punctuation:/\./}},keyword:/\b(?:_(?=\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\b/,builtin:/\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/,boolean:/\b(?:False|None|True)\b/,number:/\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\b|(?:\b\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\B\.\d+(?:_\d+)*)(?:e[+-]?\d+(?:_\d+)*)?j?(?!\w)/i,operator:/[-+%=]=?|!=|:=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,punctuation:/[{}[\];(),.:]/},t.languages.python["string-interpolation"].inside.interpolation.inside.rest=t.languages.python,t.languages.py=t.languages.python}oc.displayName="r";oc.aliases=[];function oc(t){t.languages.r={comment:/#.*/,string:{pattern:/(['"])(?:\\.|(?!\1)[^\\\r\n])*\1/,greedy:!0},"percent-operator":{pattern:/%[^%\s]*%/,alias:"operator"},boolean:/\b(?:FALSE|TRUE)\b/,ellipsis:/\.\.(?:\.|\d+)/,number:[/\b(?:Inf|NaN)\b/,/(?:\b0x[\dA-Fa-f]+(?:\.\d*)?|\b\d+(?:\.\d*)?|\B\.\d+)(?:[EePp][+-]?\d+)?[iL]?/],keyword:/\b(?:NA|NA_character_|NA_complex_|NA_integer_|NA_real_|NULL|break|else|for|function|if|in|next|repeat|while)\b/,operator:/->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\|\|?|[+*\/^$@~]/,punctuation:/[(){}\[\],;]/}}rs.displayName="ruby";rs.aliases=["rb"];function rs(t){t.register(le),function(n){n.languages.ruby=n.languages.extend("clike",{comment:{pattern:/#.*|^=begin\s[\s\S]*?^=end/m,greedy:!0},"class-name":{pattern:/(\b(?:class|module)\s+|\bcatch\s+\()[\w.\\]+|\b[A-Z_]\w*(?=\s*\.\s*new\b)/,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\b/,operator:/\.{2,3}|&\.|===|<?=>|[!=]?~|(?:&&|\|\||<<|>>|\*\*|[+\-*/%<>!^&|=])=?|[?:]/,punctuation:/[(){}[\].,;]/}),n.languages.insertBefore("ruby","operator",{"double-colon":{pattern:/::/,alias:"punctuation"}});var r={pattern:/((?:^|[^\\])(?:\\{2})*)#\{(?:[^{}]|\{[^{}]*\})*\}/,lookbehind:!0,inside:{content:{pattern:/^(#\{)[\s\S]+(?=\}$)/,lookbehind:!0,inside:n.languages.ruby},delimiter:{pattern:/^#\{|\}$/,alias:"punctuation"}}};delete n.languages.ruby.function;var s="(?:"+[/([^a-zA-Z0-9\s{(\[<=])(?:(?!\1)[^\\]|\\[\s\S])*\1/.source,/\((?:[^()\\]|\\[\s\S]|\((?:[^()\\]|\\[\s\S])*\))*\)/.source,/\{(?:[^{}\\]|\\[\s\S]|\{(?:[^{}\\]|\\[\s\S])*\})*\}/.source,/\[(?:[^\[\]\\]|\\[\s\S]|\[(?:[^\[\]\\]|\\[\s\S])*\])*\]/.source,/<(?:[^<>\\]|\\[\s\S]|<(?:[^<>\\]|\\[\s\S])*>)*>/.source].join("|")+")",i=/(?:"(?:\\.|[^"\\\r\n])*"|(?:\b[a-zA-Z_]\w*|[^\s\0-\x7F]+)[?!]?|\$.)/.source;n.languages.insertBefore("ruby","keyword",{"regex-literal":[{pattern:RegExp(/%r/.source+s+/[egimnosux]{0,6}/.source),greedy:!0,inside:{interpolation:r,regex:/[\s\S]+/}},{pattern:/(^|[^/])\/(?!\/)(?:\[[^\r\n\]]+\]|\\.|[^[/\\\r\n])+\/[egimnosux]{0,6}(?=\s*(?:$|[\r\n,.;})#]))/,lookbehind:!0,greedy:!0,inside:{interpolation:r,regex:/[\s\S]+/}}],variable:/[@$]+[a-zA-Z_]\w*(?:[?!]|\b)/,symbol:[{pattern:RegExp(/(^|[^:]):/.source+i),lookbehind:!0,greedy:!0},{pattern:RegExp(/([\r\n{(,][ \t]*)/.source+i+/(?=:(?!:))/.source),lookbehind:!0,greedy:!0}],"method-definition":{pattern:/(\bdef\s+)\w+(?:\s*\.\s*\w+)?/,lookbehind:!0,inside:{function:/\b\w+$/,keyword:/^self\b/,"class-name":/^\w+/,punctuation:/\./}}}),n.languages.insertBefore("ruby","string",{"string-literal":[{pattern:RegExp(/%[qQiIwWs]?/.source+s),greedy:!0,inside:{interpolation:r,string:/[\s\S]+/}},{pattern:/("|')(?:#\{[^}]+\}|#(?!\{)|\\(?:\r\n|[\s\S])|(?!\1)[^\\#\r\n])*\1/,greedy:!0,inside:{interpolation:r,string:/[\s\S]+/}},{pattern:/<<[-~]?([a-z_]\w*)[\r\n](?:.*[\r\n])*?[\t ]*\1/i,alias:"heredoc-string",greedy:!0,inside:{delimiter:{pattern:/^<<[-~]?[a-z_]\w*|\b[a-z_]\w*$/i,inside:{symbol:/\b\w+/,punctuation:/^<<[-~]?/}},interpolation:r,string:/[\s\S]+/}},{pattern:/<<[-~]?'([a-z_]\w*)'[\r\n](?:.*[\r\n])*?[\t ]*\1/i,alias:"heredoc-string",greedy:!0,inside:{delimiter:{pattern:/^<<[-~]?'[a-z_]\w*'|\b[a-z_]\w*$/i,inside:{symbol:/\b\w+/,punctuation:/^<<[-~]?'|'$/}},string:/[\s\S]+/}}],"command-literal":[{pattern:RegExp(/%x/.source+s),greedy:!0,inside:{interpolation:r,command:{pattern:/[\s\S]+/,alias:"string"}}},{pattern:/`(?:#\{[^}]+\}|#(?!\{)|\\(?:\r\n|[\s\S])|[^\\`#\r\n])*`/,greedy:!0,inside:{interpolation:r,command:{pattern:/[\s\S]+/,alias:"string"}}}]}),delete n.languages.ruby.string,n.languages.insertBefore("ruby","number",{builtin:/\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\b/,constant:/\b[A-Z][A-Z0-9_]*(?:[?!]|\b)/}),n.languages.rb=n.languages.ruby}(t)}lc.displayName="rust";lc.aliases=[];function lc(t){(function(n){for(var r=/\/\*(?:[^*/]|\*(?!\/)|\/(?!\*)|<self>)*\*\//.source,s=0;s<2;s++)r=r.replace(/<self>/g,function(){return r});r=r.replace(/<self>/g,function(){return/[^\s\S]/.source}),n.languages.rust={comment:[{pattern:RegExp(/(^|[^\\])/.source+r),lookbehind:!0,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/b?"(?:\\[\s\S]|[^\\"])*"|b?r(#*)"(?:[^"]|"(?!\1))*"\1/,greedy:!0},char:{pattern:/b?'(?:\\(?:x[0-7][\da-fA-F]|u\{(?:[\da-fA-F]_*){1,6}\}|.)|[^\\\r\n\t'])'/,greedy:!0},attribute:{pattern:/#!?\[(?:[^\[\]"]|"(?:\\[\s\S]|[^\\"])*")*\]/,greedy:!0,alias:"attr-name",inside:{string:null}},"closure-params":{pattern:/([=(,:]\s*|\bmove\s*)\|[^|]*\||\|[^|]*\|(?=\s*(?:\{|->))/,lookbehind:!0,greedy:!0,inside:{"closure-punctuation":{pattern:/^\||\|$/,alias:"punctuation"},rest:null}},"lifetime-annotation":{pattern:/'\w+/,alias:"symbol"},"fragment-specifier":{pattern:/(\$\w+:)[a-z]+/,lookbehind:!0,alias:"punctuation"},variable:/\$\w+/,"function-definition":{pattern:/(\bfn\s+)\w+/,lookbehind:!0,alias:"function"},"type-definition":{pattern:/(\b(?:enum|struct|trait|type|union)\s+)\w+/,lookbehind:!0,alias:"class-name"},"module-declaration":[{pattern:/(\b(?:crate|mod)\s+)[a-z][a-z_\d]*/,lookbehind:!0,alias:"namespace"},{pattern:/(\b(?:crate|self|super)\s*)::\s*[a-z][a-z_\d]*\b(?:\s*::(?:\s*[a-z][a-z_\d]*\s*::)*)?/,lookbehind:!0,alias:"namespace",inside:{punctuation:/::/}}],keyword:[/\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\b/,/\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\b/],function:/\b[a-z_]\w*(?=\s*(?:::\s*<|\())/,macro:{pattern:/\b\w+!/,alias:"property"},constant:/\b[A-Z_][A-Z_\d]+\b/,"class-name":/\b[A-Z]\w*\b/,namespace:{pattern:/(?:\b[a-z][a-z_\d]*\s*::\s*)*\b[a-z][a-z_\d]*\s*::(?!\s*<)/,inside:{punctuation:/::/}},number:/\b(?:0x[\dA-Fa-f](?:_?[\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\d(?:_?\d)*)?\.)?\d(?:_?\d)*(?:[Ee][+-]?\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\b/,boolean:/\b(?:false|true)\b/,punctuation:/->|\.\.=|\.{1,3}|::|[{}[\];(),:]/,operator:/[-+*\/%!^]=?|=[=>]?|&[&=]?|\|[|=]?|<<?=?|>>?=?|[@?]/},n.languages.rust["closure-params"].inside.rest=n.languages.rust,n.languages.rust.attribute.inside.string=n.languages.rust.string})(t)}cc.displayName="sass";cc.aliases=[];function cc(t){t.register(Sr),function(n){n.languages.sass=n.languages.extend("css",{comment:{pattern:/^([ \t]*)\/[\/*].*(?:(?:\r?\n|\r)\1[ \t].+)*/m,lookbehind:!0,greedy:!0}}),n.languages.insertBefore("sass","atrule",{"atrule-line":{pattern:/^(?:[ \t]*)[@+=].+/m,greedy:!0,inside:{atrule:/(?:@[\w-]+|[+=])/}}}),delete n.languages.sass.atrule;var r=/\$[-\w]+|#\{\$[-\w]+\}/,s=[/[+*\/%]|[=!]=|<=?|>=?|\b(?:and|not|or)\b/,{pattern:/(\s)-(?=\s)/,lookbehind:!0}];n.languages.insertBefore("sass","property",{"variable-line":{pattern:/^[ \t]*\$.+/m,greedy:!0,inside:{punctuation:/:/,variable:r,operator:s}},"property-line":{pattern:/^[ \t]*(?:[^:\s]+ *:.*|:[^:\s].*)/m,greedy:!0,inside:{property:[/[^:\s]+(?=\s*:)/,{pattern:/(:)[^:\s]+/,lookbehind:!0}],punctuation:/:/,variable:r,operator:s,important:n.languages.sass.important}}}),delete n.languages.sass.property,delete n.languages.sass.important,n.languages.insertBefore("sass","punctuation",{selector:{pattern:/^([ \t]*)\S(?:,[^,\r\n]+|[^,\r\n]*)(?:,[^,\r\n]+)*(?:,(?:\r?\n|\r)\1[ \t]+\S(?:,[^,\r\n]+|[^,\r\n]*)(?:,[^,\r\n]+)*)*/m,lookbehind:!0,greedy:!0}})}(t)}dc.displayName="scss";dc.aliases=[];function dc(t){t.register(Sr),t.languages.scss=t.languages.extend("css",{comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,lookbehind:!0},atrule:{pattern:/@[\w-](?:\([^()]+\)|[^()\s]|\s+(?!\s))*?(?=\s+[{;])/,inside:{rule:/@[\w-]+/}},url:/(?:[-a-z]+-)?url(?=\()/i,selector:{pattern:/(?=\S)[^@;{}()]?(?:[^@;{}()\s]|\s+(?!\s)|#\{\$[-\w]+\})+(?=\s*\{(?:\}|\s|[^}][^:{}]*[:{][^}]))/,inside:{parent:{pattern:/&/,alias:"important"},placeholder:/%[-\w]+/,variable:/\$[-\w]+|#\{\$[-\w]+\}/}},property:{pattern:/(?:[-\w]|\$[-\w]|#\{\$[-\w]+\})+(?=\s*:)/,inside:{variable:/\$[-\w]+|#\{\$[-\w]+\}/}}}),t.languages.insertBefore("scss","atrule",{keyword:[/@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\b/i,{pattern:/( )(?:from|through)(?= )/,lookbehind:!0}]}),t.languages.insertBefore("scss","important",{variable:/\$[-\w]+|#\{\$[-\w]+\}/}),t.languages.insertBefore("scss","function",{"module-modifier":{pattern:/\b(?:as|hide|show|with)\b/i,alias:"keyword"},placeholder:{pattern:/%[-\w]+/,alias:"selector"},statement:{pattern:/\B!(?:default|optional)\b/i,alias:"keyword"},boolean:/\b(?:false|true)\b/,null:{pattern:/\bnull\b/,alias:"keyword"},operator:{pattern:/(\s)(?:[-+*\/%]|[=!]=|<=?|>=?|and|not|or)(?=\s)/,lookbehind:!0}}),t.languages.scss.atrule.inside.rest=t.languages.scss}ti.displayName="sql";ti.aliases=[];function ti(t){t.languages.sql={comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/,lookbehind:!0},variable:[{pattern:/@(["'`])(?:\\[\s\S]|(?!\1)[^\\])+\1/,greedy:!0},/@[\w.$]+/],string:{pattern:/(^|[^@\\])("|')(?:\\[\s\S]|(?!\2)[^\\]|\2\2)*\2/,greedy:!0,lookbehind:!0},identifier:{pattern:/(^|[^@\\])`(?:\\[\s\S]|[^`\\]|``)*`/,greedy:!0,lookbehind:!0,inside:{punctuation:/^`|`$/}},function:/\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\s*\()/i,keyword:/\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\b/i,boolean:/\b(?:FALSE|NULL|TRUE)\b/i,number:/\b0x[\da-f]+\b|\b\d+(?:\.\d*)?|\B\.\d+\b/i,operator:/[-+*\/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\b/i,punctuation:/[;[\]()`,.]/}}uc.displayName="swift";uc.aliases=[];function uc(t){t.languages.swift={comment:{pattern:/(^|[^\\:])(?:\/\/.*|\/\*(?:[^/*]|\/(?!\*)|\*(?!\/)|\/\*(?:[^*]|\*(?!\/))*\*\/)*\*\/)/,lookbehind:!0,greedy:!0},"string-literal":[{pattern:RegExp(/(^|[^"#])/.source+"(?:"+/"(?:\\(?:\((?:[^()]|\([^()]*\))*\)|\r\n|[^(])|[^\\\r\n"])*"/.source+"|"+/"""(?:\\(?:\((?:[^()]|\([^()]*\))*\)|[^(])|[^\\"]|"(?!""))*"""/.source+")"+/(?!["#])/.source),lookbehind:!0,greedy:!0,inside:{interpolation:{pattern:/(\\\()(?:[^()]|\([^()]*\))*(?=\))/,lookbehind:!0,inside:null},"interpolation-punctuation":{pattern:/^\)|\\\($/,alias:"punctuation"},punctuation:/\\(?=[\r\n])/,string:/[\s\S]+/}},{pattern:RegExp(/(^|[^"#])(#+)/.source+"(?:"+/"(?:\\(?:#+\((?:[^()]|\([^()]*\))*\)|\r\n|[^#])|[^\\\r\n])*?"/.source+"|"+/"""(?:\\(?:#+\((?:[^()]|\([^()]*\))*\)|[^#])|[^\\])*?"""/.source+")\\2"),lookbehind:!0,greedy:!0,inside:{interpolation:{pattern:/(\\#+\()(?:[^()]|\([^()]*\))*(?=\))/,lookbehind:!0,inside:null},"interpolation-punctuation":{pattern:/^\)|\\#+\($/,alias:"punctuation"},string:/[\s\S]+/}}],directive:{pattern:RegExp(/#/.source+"(?:"+(/(?:elseif|if)\b/.source+"(?:[ 	]*"+/(?:![ \t]*)?(?:\b\w+\b(?:[ \t]*\((?:[^()]|\([^()]*\))*\))?|\((?:[^()]|\([^()]*\))*\))(?:[ \t]*(?:&&|\|\|))?/.source+")+")+"|"+/(?:else|endif)\b/.source+")"),alias:"property",inside:{"directive-name":/^#\w+/,boolean:/\b(?:false|true)\b/,number:/\b\d+(?:\.\d+)*\b/,operator:/!|&&|\|\||[<>]=?/,punctuation:/[(),]/}},literal:{pattern:/#(?:colorLiteral|column|dsohandle|file(?:ID|Literal|Path)?|function|imageLiteral|line)\b/,alias:"constant"},"other-directive":{pattern:/#\w+\b/,alias:"property"},attribute:{pattern:/@\w+/,alias:"atrule"},"function-definition":{pattern:/(\bfunc\s+)\w+/,lookbehind:!0,alias:"function"},label:{pattern:/\b(break|continue)\s+\w+|\b[a-zA-Z_]\w*(?=\s*:\s*(?:for|repeat|while)\b)/,lookbehind:!0,alias:"important"},keyword:/\b(?:Any|Protocol|Self|Type|actor|as|assignment|associatedtype|associativity|async|await|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|higherThan|if|import|in|indirect|infix|init|inout|internal|is|isolated|lazy|left|let|lowerThan|mutating|none|nonisolated|nonmutating|open|operator|optional|override|postfix|precedencegroup|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|set|some|static|struct|subscript|super|switch|throw|throws|try|typealias|unowned|unsafe|var|weak|where|while|willSet)\b/,boolean:/\b(?:false|true)\b/,nil:{pattern:/\bnil\b/,alias:"constant"},"short-argument":/\$\d+\b/,omit:{pattern:/\b_\b/,alias:"keyword"},number:/\b(?:[\d_]+(?:\.[\de_]+)?|0x[a-f0-9_]+(?:\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\b/i,"class-name":/\b[A-Z](?:[A-Z_\d]*[a-z]\w*)?\b/,function:/\b[a-z_]\w*(?=\s*\()/i,constant:/\b(?:[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\b/,operator:/[-+*/%=!<>&|^~?]+|\.[.\-+*/%=!<>&|^~?]+/,punctuation:/[{}[\]();,.:\\]/},t.languages.swift["string-literal"].forEach(function(n){n.inside.interpolation.inside=t.languages.swift})}ni.displayName="typescript";ni.aliases=["ts"];function ni(t){t.register(at),function(n){n.languages.typescript=n.languages.extend("javascript",{"class-name":{pattern:/(\b(?:class|extends|implements|instanceof|interface|new|type)\s+)(?!keyof\b)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?:\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,lookbehind:!0,greedy:!0,inside:null},builtin:/\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\b/}),n.languages.typescript.keyword.push(/\b(?:abstract|declare|is|keyof|readonly|require)\b/,/\b(?:asserts|infer|interface|module|namespace|type)\b(?=\s*(?:[{_$a-zA-Z\xA0-\uFFFF]|$))/,/\btype\b(?=\s*(?:[\{*]|$))/),delete n.languages.typescript.parameter,delete n.languages.typescript["literal-property"];var r=n.languages.extend("typescript",{});delete r["class-name"],n.languages.typescript["class-name"].inside=r,n.languages.insertBefore("typescript","function",{decorator:{pattern:/@[$\w\xA0-\uFFFF]+/,inside:{at:{pattern:/^@/,alias:"operator"},function:/^[\s\S]+/}},"generic-function":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\s*\()/,greedy:!0,inside:{function:/^#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/,generic:{pattern:/<[\s\S]+/,alias:"class-name",inside:r}}}}),n.languages.ts=n.languages.typescript}(t)}ka.displayName="basic";ka.aliases=[];function ka(t){t.languages.basic={comment:{pattern:/(?:!|REM\b).+/i,inside:{keyword:/^REM/i}},string:{pattern:/"(?:""|[!#$%&'()*,\/:;<=>?^\w +\-.])*"/,greedy:!0},number:/(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:E[+-]?\d+)?/i,keyword:/\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SELECT CASE|SHARED|SHELL|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\$|\b)/i,function:/\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\$|\b)/i,operator:/<[=>]?|>=?|[+\-*\/^=&]|\b(?:AND|EQV|IMP|NOT|OR|XOR)\b/i,punctuation:/[,;:()]/}}La.displayName="vbnet";La.aliases=[];function La(t){t.register(ka),t.languages.vbnet=t.languages.extend("basic",{comment:[{pattern:/(?:!|REM\b).+/i,inside:{keyword:/^REM/i}},{pattern:/(^|[^\\:])'.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(^|[^"])"(?:""|[^"])*"(?!")/,lookbehind:!0,greedy:!0},keyword:/(?:\b(?:ADDHANDLER|ADDRESSOF|ALIAS|AND|ANDALSO|AS|BEEP|BLOAD|BOOLEAN|BSAVE|BYREF|BYTE|BYVAL|CALL(?: ABSOLUTE)?|CASE|CATCH|CBOOL|CBYTE|CCHAR|CDATE|CDBL|CDEC|CHAIN|CHAR|CHDIR|CINT|CLASS|CLEAR|CLNG|CLOSE|CLS|COBJ|COM|COMMON|CONST|CONTINUE|CSBYTE|CSHORT|CSNG|CSTR|CTYPE|CUINT|CULNG|CUSHORT|DATA|DATE|DECIMAL|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DEFAULT|DELEGATE|DIM|DIRECTCAST|DO|DOUBLE|ELSE|ELSEIF|END|ENUM|ENVIRON|ERASE|ERROR|EVENT|EXIT|FALSE|FIELD|FILES|FINALLY|FOR(?: EACH)?|FRIEND|FUNCTION|GET|GETTYPE|GETXMLNAMESPACE|GLOBAL|GOSUB|GOTO|HANDLES|IF|IMPLEMENTS|IMPORTS|IN|INHERITS|INPUT|INTEGER|INTERFACE|IOCTL|IS|ISNOT|KEY|KILL|LET|LIB|LIKE|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|ME|MKDIR|MOD|MODULE|MUSTINHERIT|MUSTOVERRIDE|MYBASE|MYCLASS|NAME|NAMESPACE|NARROWING|NEW|NEXT|NOT|NOTHING|NOTINHERITABLE|NOTOVERRIDABLE|OBJECT|OF|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPERATOR|OPTION(?: BASE)?|OPTIONAL|OR|ORELSE|OUT|OVERLOADS|OVERRIDABLE|OVERRIDES|PARAMARRAY|PARTIAL|POKE|PRIVATE|PROPERTY|PROTECTED|PUBLIC|PUT|RAISEEVENT|READ|READONLY|REDIM|REM|REMOVEHANDLER|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SBYTE|SELECT(?: CASE)?|SET|SHADOWS|SHARED|SHELL|SHORT|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|STRUCTURE|SUB|SWAP|SYNCLOCK|SYSTEM|THEN|THROW|TIMER|TO|TROFF|TRON|TRUE|TRY|TRYCAST|TYPE|TYPEOF|UINTEGER|ULONG|UNLOCK|UNTIL|USHORT|USING|VIEW PRINT|WAIT|WEND|WHEN|WHILE|WIDENING|WITH|WITHEVENTS|WRITE|WRITEONLY|XOR)|\B(?:#CONST|#ELSE|#ELSEIF|#END|#IF))(?:\$|\b)/i,punctuation:/[,;:(){}]/})}const t0={0:"�",128:"€",130:"‚",131:"ƒ",132:"„",133:"…",134:"†",135:"‡",136:"ˆ",137:"‰",138:"Š",139:"‹",140:"Œ",142:"Ž",145:"‘",146:"’",147:"“",148:"”",149:"•",150:"–",151:"—",152:"˜",153:"™",154:"š",155:"›",156:"œ",158:"ž",159:"Ÿ"};function LS(t){const n=typeof t=="string"?t.charCodeAt(0):t;return n>=48&&n<=57}function EI(t){const n=typeof t=="string"?t.charCodeAt(0):t;return n>=97&&n<=102||n>=65&&n<=70||n>=48&&n<=57}function TI(t){const n=typeof t=="string"?t.charCodeAt(0):t;return n>=97&&n<=122||n>=65&&n<=90}function n0(t){return TI(t)||LS(t)}const r0=document.createElement("i");function s0(t){const n="&"+t+";";r0.innerHTML=n;const r=r0.textContent;return r.charCodeAt(r.length-1)===59&&t!=="semi"||r===n?!1:r}const us=String.fromCharCode,yI=["","Named character references must be terminated by a semicolon","Numeric character references must be terminated by a semicolon","Named character references cannot be empty","Numeric character references cannot be empty","Named character references must be known","Numeric character references cannot be disallowed","Numeric character references cannot be outside the permissible Unicode range"];function SI(t,n={}){const r=typeof n.additional=="string"?n.additional.charCodeAt(0):n.additional,s=[];let i=0,a=-1,o="",l,c;n.position&&("start"in n.position||"indent"in n.position?(c=n.position.indent,l=n.position.start):l=n.position);let d=(l?l.line:0)||1,h=(l?l.column:0)||1,x=A(),g;for(i--;++i<=t.length;)if(g===10&&(h=(c?c[a]:0)||1),g=t.charCodeAt(i),g===38){const _=t.charCodeAt(i+1);if(_===9||_===10||_===12||_===32||_===38||_===60||Number.isNaN(_)||r&&_===r){o+=us(g),h++;continue}const f=i+1;let b=f,T=f,E;if(_===35){T=++b;const X=t.charCodeAt(T);X===88||X===120?(E="hexadecimal",T=++b):E="decimal"}else E="named";let R="",I="",v="";const O=E==="named"?n0:E==="decimal"?LS:EI;for(T--;++T<=t.length;){const X=t.charCodeAt(T);if(!O(X))break;v+=us(X),E==="named"&&vS.includes(v)&&(R=v,I=s0(v))}let F=t.charCodeAt(T)===59;if(F){T++;const X=E==="named"?s0(v):!1;X&&(R=v,I=X)}let H=1+T-f,J="";if(!(!F&&n.nonTerminated===!1))if(!v)E!=="named"&&S(4,H);else if(E==="named"){if(F&&!I)S(5,1);else if(R!==v&&(T=b+R.length,H=1+T-b,F=!1),!F){const X=R?1:3;if(n.attribute){const ie=t.charCodeAt(T);ie===61?(S(X,H),I=""):n0(ie)?I="":S(X,H)}else S(X,H)}J=I}else{F||S(2,H);let X=Number.parseInt(v,E==="hexadecimal"?16:10);if(NI(X))S(7,H),J=us(65533);else if(X in t0)S(6,H),J=t0[X];else{let ie="";jI(X)&&S(6,H),X>65535&&(X-=65536,ie+=us(X>>>10|55296),X=56320|X&1023),J=ie+us(X)}}if(J){y(),x=A(),i=T-1,h+=T-f+1,s.push(J);const X=A();X.offset++,n.reference&&n.reference.call(n.referenceContext,J,{start:x,end:X},t.slice(f-1,T)),x=X}else v=t.slice(f-1,T),o+=v,h+=v.length,i=T-1}else g===10&&(d++,a++,h=0),Number.isNaN(g)?y():(o+=us(g),h++);return s.join("");function A(){return{line:d,column:h,offset:i+((l?l.offset:0)||0)}}function S(_,f){let b;n.warning&&(b=A(),b.column+=f,b.offset+=f,n.warning.call(n.warningContext,yI[_],b,_))}function y(){o&&(s.push(o),n.text&&n.text.call(n.textContext,o,{start:x,end:A()}),o="")}}function NI(t){return t>=55296&&t<=57343||t>1114111}function jI(t){return t>=1&&t<=8||t===11||t>=13&&t<=31||t>=127&&t<=159||t>=64976&&t<=65007||(t&65535)===65535||(t&65535)===65534}var AI=0,No={},Ke={util:{type:function(t){return Object.prototype.toString.call(t).slice(8,-1)},objId:function(t){return t.__id||Object.defineProperty(t,"__id",{value:++AI}),t.__id},clone:function t(n,r){r=r||{};var s,i;switch(Ke.util.type(n)){case"Object":if(i=Ke.util.objId(n),r[i])return r[i];s={},r[i]=s;for(var a in n)n.hasOwnProperty(a)&&(s[a]=t(n[a],r));return s;case"Array":return i=Ke.util.objId(n),r[i]?r[i]:(s=[],r[i]=s,n.forEach(function(o,l){s[l]=t(o,r)}),s);default:return n}}},languages:{plain:No,plaintext:No,text:No,txt:No,extend:function(t,n){var r=Ke.util.clone(Ke.languages[t]);for(var s in n)r[s]=n[s];return r},insertBefore:function(t,n,r,s){s=s||Ke.languages;var i=s[t],a={};for(var o in i)if(i.hasOwnProperty(o)){if(o==n)for(var l in r)r.hasOwnProperty(l)&&(a[l]=r[l]);r.hasOwnProperty(o)||(a[o]=i[o])}var c=s[t];return s[t]=a,Ke.languages.DFS(Ke.languages,function(d,h){h===c&&d!=t&&(this[d]=a)}),a},DFS:function t(n,r,s,i){i=i||{};var a=Ke.util.objId;for(var o in n)if(n.hasOwnProperty(o)){r.call(n,o,n[o],s||o);var l=n[o],c=Ke.util.type(l);c==="Object"&&!i[a(l)]?(i[a(l)]=!0,t(l,r,null,i)):c==="Array"&&!i[a(l)]&&(i[a(l)]=!0,t(l,r,o,i))}}},plugins:{},highlight:function(t,n,r){var s={code:t,grammar:n,language:r};if(Ke.hooks.run("before-tokenize",s),!s.grammar)throw new Error('The language "'+s.language+'" has no grammar.');return s.tokens=Ke.tokenize(s.code,s.grammar),Ke.hooks.run("after-tokenize",s),Qi.stringify(Ke.util.encode(s.tokens),s.language)},tokenize:function(t,n){var r=n.rest;if(r){for(var s in r)n[s]=r[s];delete n.rest}var i=new _I;return Ho(i,i.head,t),DS(t,i,n,i.head,0),RI(i)},hooks:{all:{},add:function(t,n){var r=Ke.hooks.all;r[t]=r[t]||[],r[t].push(n)},run:function(t,n){var r=Ke.hooks.all[t];if(!(!r||!r.length))for(var s=0,i;i=r[s++];)i(n)}},Token:Qi};function Qi(t,n,r,s){this.type=t,this.content=n,this.alias=r,this.length=(s||"").length|0}function i0(t,n,r,s){t.lastIndex=n;var i=t.exec(r);if(i&&s&&i[1]){var a=i[1].length;i.index+=a,i[0]=i[0].slice(a)}return i}function DS(t,n,r,s,i,a){for(var o in r)if(!(!r.hasOwnProperty(o)||!r[o])){var l=r[o];l=Array.isArray(l)?l:[l];for(var c=0;c<l.length;++c){if(a&&a.cause==o+","+c)return;var d=l[c],h=d.inside,x=!!d.lookbehind,g=!!d.greedy,A=d.alias;if(g&&!d.pattern.global){var S=d.pattern.toString().match(/[imsuy]*$/)[0];d.pattern=RegExp(d.pattern.source,S+"g")}for(var y=d.pattern||d,_=s.next,f=i;_!==n.tail&&!(a&&f>=a.reach);f+=_.value.length,_=_.next){var b=_.value;if(n.length>t.length)return;if(!(b instanceof Qi)){var T=1,E;if(g){if(E=i0(y,f,t,x),!E||E.index>=t.length)break;var O=E.index,R=E.index+E[0].length,I=f;for(I+=_.value.length;O>=I;)_=_.next,I+=_.value.length;if(I-=_.value.length,f=I,_.value instanceof Qi)continue;for(var v=_;v!==n.tail&&(I<R||typeof v.value=="string");v=v.next)T++,I+=v.value.length;T--,b=t.slice(f,I),E.index-=f}else if(E=i0(y,0,b,x),!E)continue;var O=E.index,F=E[0],H=b.slice(0,O),J=b.slice(O+F.length),X=f+b.length;a&&X>a.reach&&(a.reach=X);var ie=_.prev;H&&(ie=Ho(n,ie,H),f+=H.length),vI(n,ie,T);var Me=new Qi(o,h?Ke.tokenize(F,h):F,A,F);if(_=Ho(n,ie,Me),J&&Ho(n,_,J),T>1){var ue={cause:o+","+c,reach:X};DS(t,n,r,_.prev,f,ue),a&&ue.reach>a.reach&&(a.reach=ue.reach)}}}}}}function _I(){var t={value:null,prev:null,next:null},n={value:null,prev:t,next:null};t.next=n,this.head=t,this.tail=n,this.length=0}function Ho(t,n,r){var s=n.next,i={value:r,prev:n,next:s};return n.next=i,s.prev=i,t.length++,i}function vI(t,n,r){for(var s=n.next,i=0;i<r&&s!==t.tail;i++)s=s.next;n.next=s,s.prev=n,t.length-=i}function RI(t){for(var n=[],r=t.head.next;r!==t.tail;)n.push(r.value),r=r.next;return n}const MS=Ke,ri={}.hasOwnProperty;function FS(){}FS.prototype=MS;const m=new FS;m.highlight=wI;m.register=II;m.alias=CI;m.registered=OI;m.listLanguages=kI;m.util.encode=LI;m.Token.stringify=Cu;function wI(t,n){if(typeof t!="string")throw new TypeError("Expected `string` for `value`, got `"+t+"`");let r,s;if(n&&typeof n=="object")r=n;else{if(s=n,typeof s!="string")throw new TypeError("Expected `string` for `name`, got `"+s+"`");if(ri.call(m.languages,s))r=m.languages[s];else throw new Error("Unknown language: `"+s+"` is not registered")}return{type:"root",children:MS.highlight.call(m,t,r,s)}}function II(t){if(typeof t!="function"||!t.displayName)throw new Error("Expected `function` for `syntax`, got `"+t+"`");ri.call(m.languages,t.displayName)||t(m)}function CI(t,n){const r=m.languages;let s={};typeof t=="string"?n&&(s[t]=n):s=t;let i;for(i in s)if(ri.call(s,i)){const a=s[i],o=typeof a=="string"?[a]:a;let l=-1;for(;++l<o.length;)r[o[l]]=r[i]}}function OI(t){if(typeof t!="string")throw new TypeError("Expected `string` for `aliasOrLanguage`, got `"+t+"`");return ri.call(m.languages,t)}function kI(){const t=m.languages,n=[];let r;for(r in t)ri.call(t,r)&&typeof t[r]=="object"&&n.push(r);return n}function Cu(t,n){if(typeof t=="string")return{type:"text",value:t};if(Array.isArray(t)){const s=[];let i=-1;for(;++i<t.length;)t[i]!==""&&t[i]!==null&&t[i]!==void 0&&s.push(Cu(t[i],n));return s}const r={type:t.type,content:Cu(t.content,n),tag:"span",classes:["token",t.type],attributes:{},language:n};return t.alias&&r.classes.push(...typeof t.alias=="string"?[t.alias]:t.alias),m.hooks.run("wrap",r),jS(r.tag+"."+r.classes.join("."),DI(r.attributes),r.content)}function LI(t){return t}function DI(t){let n;for(n in t)ri.call(t,n)&&(t[n]=SI(t[n]));return t}m.register(le);m.register(un);m.register(Jr);m.register(Xl);m.register(wa);m.register(es);m.register(Ze);m.register(Sr);m.register(Zl);m.register(Ql);m.register(Jl);m.register(ts);m.register(ec);m.register(at);m.register(ei);m.register(tc);m.register(nc);m.register(Ia);m.register(rc);m.register(Ca);m.register(sc);m.register(ic);m.register(ac);m.register(ot);m.register(ns);m.register(Oa);m.register(oc);m.register(rs);m.register(lc);m.register(cc);m.register(dc);m.register(ti);m.register(uc);m.register(ni);m.register(ka);m.register(La);Z1.displayName="abap";Z1.aliases=[];function Z1(t){t.languages.abap={comment:/^\*.*/m,string:/(`|')(?:\\.|(?!\1)[^\\\r\n])*\1/,"string-template":{pattern:/([|}])(?:\\.|[^\\|{\r\n])*(?=[|{])/,lookbehind:!0,alias:"string"},"eol-comment":{pattern:/(^|\s)".*/m,lookbehind:!0,alias:"comment"},keyword:{pattern:/(\s|\.|^)(?:\*-INPUT|\?TO|ABAP-SOURCE|ABBREVIATED|ABS|ABSTRACT|ACCEPT|ACCEPTING|ACCESSPOLICY|ACCORDING|ACOS|ACTIVATION|ACTUAL|ADD|ADD-CORRESPONDING|ADJACENT|AFTER|ALIAS|ALIASES|ALIGN|ALL|ALLOCATE|ALPHA|ANALYSIS|ANALYZER|AND|ANY|APPEND|APPENDAGE|APPENDING|APPLICATION|ARCHIVE|AREA|ARITHMETIC|AS|ASCENDING|ASIN|ASPECT|ASSERT|ASSIGN|ASSIGNED|ASSIGNING|ASSOCIATION|ASYNCHRONOUS|AT|ATAN|ATTRIBUTES|AUTHORITY|AUTHORITY-CHECK|AVG|BACK|BACKGROUND|BACKUP|BACKWARD|BADI|BASE|BEFORE|BEGIN|BETWEEN|BIG|BINARY|BINDING|BIT|BIT-AND|BIT-NOT|BIT-OR|BIT-XOR|BLACK|BLANK|BLANKS|BLOB|BLOCK|BLOCKS|BLUE|BOUND|BOUNDARIES|BOUNDS|BOXED|BREAK-POINT|BT|BUFFER|BY|BYPASSING|BYTE|BYTE-CA|BYTE-CN|BYTE-CO|BYTE-CS|BYTE-NA|BYTE-NS|BYTE-ORDER|C|CA|CALL|CALLING|CASE|CAST|CASTING|CATCH|CEIL|CENTER|CENTERED|CHAIN|CHAIN-INPUT|CHAIN-REQUEST|CHANGE|CHANGING|CHANNELS|CHAR-TO-HEX|CHARACTER|CHARLEN|CHECK|CHECKBOX|CIRCULAR|CI_|CLASS|CLASS-CODING|CLASS-DATA|CLASS-EVENTS|CLASS-METHODS|CLASS-POOL|CLEANUP|CLEAR|CLIENT|CLOB|CLOCK|CLOSE|CN|CNT|CO|COALESCE|CODE|CODING|COLLECT|COLOR|COLUMN|COLUMNS|COL_BACKGROUND|COL_GROUP|COL_HEADING|COL_KEY|COL_NEGATIVE|COL_NORMAL|COL_POSITIVE|COL_TOTAL|COMMENT|COMMENTS|COMMIT|COMMON|COMMUNICATION|COMPARING|COMPONENT|COMPONENTS|COMPRESSION|COMPUTE|CONCAT|CONCATENATE|COND|CONDENSE|CONDITION|CONNECT|CONNECTION|CONSTANTS|CONTEXT|CONTEXTS|CONTINUE|CONTROL|CONTROLS|CONV|CONVERSION|CONVERT|COPIES|COPY|CORRESPONDING|COS|COSH|COUNT|COUNTRY|COVER|CP|CPI|CREATE|CREATING|CRITICAL|CS|CURRENCY|CURRENCY_CONVERSION|CURRENT|CURSOR|CURSOR-SELECTION|CUSTOMER|CUSTOMER-FUNCTION|DANGEROUS|DATA|DATABASE|DATAINFO|DATASET|DATE|DAYLIGHT|DBMAXLEN|DD\/MM\/YY|DD\/MM\/YYYY|DDMMYY|DEALLOCATE|DECIMALS|DECIMAL_SHIFT|DECLARATIONS|DEEP|DEFAULT|DEFERRED|DEFINE|DEFINING|DEFINITION|DELETE|DELETING|DEMAND|DEPARTMENT|DESCENDING|DESCRIBE|DESTINATION|DETAIL|DIALOG|DIRECTORY|DISCONNECT|DISPLAY|DISPLAY-MODE|DISTANCE|DISTINCT|DIV|DIVIDE|DIVIDE-CORRESPONDING|DIVISION|DO|DUMMY|DUPLICATE|DUPLICATES|DURATION|DURING|DYNAMIC|DYNPRO|E|EACH|EDIT|EDITOR-CALL|ELSE|ELSEIF|EMPTY|ENABLED|ENABLING|ENCODING|END|END-ENHANCEMENT-SECTION|END-LINES|END-OF-DEFINITION|END-OF-FILE|END-OF-PAGE|END-OF-SELECTION|ENDAT|ENDCASE|ENDCATCH|ENDCHAIN|ENDCLASS|ENDDO|ENDENHANCEMENT|ENDEXEC|ENDFOR|ENDFORM|ENDFUNCTION|ENDIAN|ENDIF|ENDING|ENDINTERFACE|ENDLOOP|ENDMETHOD|ENDMODULE|ENDON|ENDPROVIDE|ENDSELECT|ENDTRY|ENDWHILE|ENGINEERING|ENHANCEMENT|ENHANCEMENT-POINT|ENHANCEMENT-SECTION|ENHANCEMENTS|ENTRIES|ENTRY|ENVIRONMENT|EQ|EQUAL|EQUIV|ERRORMESSAGE|ERRORS|ESCAPE|ESCAPING|EVENT|EVENTS|EXACT|EXCEPT|EXCEPTION|EXCEPTION-TABLE|EXCEPTIONS|EXCLUDE|EXCLUDING|EXEC|EXECUTE|EXISTS|EXIT|EXIT-COMMAND|EXP|EXPAND|EXPANDING|EXPIRATION|EXPLICIT|EXPONENT|EXPORT|EXPORTING|EXTEND|EXTENDED|EXTENSION|EXTRACT|FAIL|FETCH|FIELD|FIELD-GROUPS|FIELD-SYMBOL|FIELD-SYMBOLS|FIELDS|FILE|FILTER|FILTER-TABLE|FILTERS|FINAL|FIND|FIRST|FIRST-LINE|FIXED-POINT|FKEQ|FKGE|FLOOR|FLUSH|FONT|FOR|FORM|FORMAT|FORWARD|FOUND|FRAC|FRAME|FRAMES|FREE|FRIENDS|FROM|FUNCTION|FUNCTION-POOL|FUNCTIONALITY|FURTHER|GAPS|GE|GENERATE|GET|GIVING|GKEQ|GKGE|GLOBAL|GRANT|GREATER|GREEN|GROUP|GROUPS|GT|HANDLE|HANDLER|HARMLESS|HASHED|HAVING|HDB|HEAD-LINES|HEADER|HEADERS|HEADING|HELP-ID|HELP-REQUEST|HIDE|HIGH|HINT|HOLD|HOTSPOT|I|ICON|ID|IDENTIFICATION|IDENTIFIER|IDS|IF|IGNORE|IGNORING|IMMEDIATELY|IMPLEMENTATION|IMPLEMENTATIONS|IMPLEMENTED|IMPLICIT|IMPORT|IMPORTING|IN|INACTIVE|INCL|INCLUDE|INCLUDES|INCLUDING|INCREMENT|INDEX|INDEX-LINE|INFOTYPES|INHERITING|INIT|INITIAL|INITIALIZATION|INNER|INOUT|INPUT|INSERT|INSTANCES|INTENSIFIED|INTERFACE|INTERFACE-POOL|INTERFACES|INTERNAL|INTERVALS|INTO|INVERSE|INVERTED-DATE|IS|ISO|ITERATOR|ITNO|JOB|JOIN|KEEP|KEEPING|KERNEL|KEY|KEYS|KEYWORDS|KIND|LANGUAGE|LAST|LATE|LAYOUT|LE|LEADING|LEAVE|LEFT|LEFT-JUSTIFIED|LEFTPLUS|LEFTSPACE|LEGACY|LENGTH|LESS|LET|LEVEL|LEVELS|LIKE|LINE|LINE-COUNT|LINE-SELECTION|LINE-SIZE|LINEFEED|LINES|LIST|LIST-PROCESSING|LISTBOX|LITTLE|LLANG|LOAD|LOAD-OF-PROGRAM|LOB|LOCAL|LOCALE|LOCATOR|LOG|LOG-POINT|LOG10|LOGFILE|LOGICAL|LONG|LOOP|LOW|LOWER|LPAD|LPI|LT|M|MAIL|MAIN|MAJOR-ID|MAPPING|MARGIN|MARK|MASK|MATCH|MATCHCODE|MAX|MAXIMUM|MEDIUM|MEMBERS|MEMORY|MESH|MESSAGE|MESSAGE-ID|MESSAGES|MESSAGING|METHOD|METHODS|MIN|MINIMUM|MINOR-ID|MM\/DD\/YY|MM\/DD\/YYYY|MMDDYY|MOD|MODE|MODIF|MODIFIER|MODIFY|MODULE|MOVE|MOVE-CORRESPONDING|MULTIPLY|MULTIPLY-CORRESPONDING|NA|NAME|NAMETAB|NATIVE|NB|NE|NESTED|NESTING|NEW|NEW-LINE|NEW-PAGE|NEW-SECTION|NEXT|NO|NO-DISPLAY|NO-EXTENSION|NO-GAP|NO-GAPS|NO-GROUPING|NO-HEADING|NO-SCROLLING|NO-SIGN|NO-TITLE|NO-TOPOFPAGE|NO-ZERO|NODE|NODES|NON-UNICODE|NON-UNIQUE|NOT|NP|NS|NULL|NUMBER|NUMOFCHAR|O|OBJECT|OBJECTS|OBLIGATORY|OCCURRENCE|OCCURRENCES|OCCURS|OF|OFF|OFFSET|OLE|ON|ONLY|OPEN|OPTION|OPTIONAL|OPTIONS|OR|ORDER|OTHER|OTHERS|OUT|OUTER|OUTPUT|OUTPUT-LENGTH|OVERFLOW|OVERLAY|PACK|PACKAGE|PAD|PADDING|PAGE|PAGES|PARAMETER|PARAMETER-TABLE|PARAMETERS|PART|PARTIALLY|PATTERN|PERCENTAGE|PERFORM|PERFORMING|PERSON|PF|PF-STATUS|PINK|PLACES|POOL|POSITION|POS_HIGH|POS_LOW|PRAGMAS|PRECOMPILED|PREFERRED|PRESERVING|PRIMARY|PRINT|PRINT-CONTROL|PRIORITY|PRIVATE|PROCEDURE|PROCESS|PROGRAM|PROPERTY|PROTECTED|PROVIDE|PUBLIC|PUSHBUTTON|PUT|QUEUE-ONLY|QUICKINFO|RADIOBUTTON|RAISE|RAISING|RANGE|RANGES|RAW|READ|READ-ONLY|READER|RECEIVE|RECEIVED|RECEIVER|RECEIVING|RED|REDEFINITION|REDUCE|REDUCED|REF|REFERENCE|REFRESH|REGEX|REJECT|REMOTE|RENAMING|REPLACE|REPLACEMENT|REPLACING|REPORT|REQUEST|REQUESTED|RESERVE|RESET|RESOLUTION|RESPECTING|RESPONSIBLE|RESULT|RESULTS|RESUMABLE|RESUME|RETRY|RETURN|RETURNCODE|RETURNING|RIGHT|RIGHT-JUSTIFIED|RIGHTPLUS|RIGHTSPACE|RISK|RMC_COMMUNICATION_FAILURE|RMC_INVALID_STATUS|RMC_SYSTEM_FAILURE|ROLE|ROLLBACK|ROUND|ROWS|RTTI|RUN|SAP|SAP-SPOOL|SAVING|SCALE_PRESERVING|SCALE_PRESERVING_SCIENTIFIC|SCAN|SCIENTIFIC|SCIENTIFIC_WITH_LEADING_ZERO|SCREEN|SCROLL|SCROLL-BOUNDARY|SCROLLING|SEARCH|SECONDARY|SECONDS|SECTION|SELECT|SELECT-OPTIONS|SELECTION|SELECTION-SCREEN|SELECTION-SET|SELECTION-SETS|SELECTION-TABLE|SELECTIONS|SELECTOR|SEND|SEPARATE|SEPARATED|SET|SHARED|SHIFT|SHORT|SHORTDUMP-ID|SIGN|SIGN_AS_POSTFIX|SIMPLE|SIN|SINGLE|SINH|SIZE|SKIP|SKIPPING|SMART|SOME|SORT|SORTABLE|SORTED|SOURCE|SPACE|SPECIFIED|SPLIT|SPOOL|SPOTS|SQL|SQLSCRIPT|SQRT|STABLE|STAMP|STANDARD|START-OF-SELECTION|STARTING|STATE|STATEMENT|STATEMENTS|STATIC|STATICS|STATUSINFO|STEP-LOOP|STOP|STRLEN|STRUCTURE|STRUCTURES|STYLE|SUBKEY|SUBMATCHES|SUBMIT|SUBROUTINE|SUBSCREEN|SUBSTRING|SUBTRACT|SUBTRACT-CORRESPONDING|SUFFIX|SUM|SUMMARY|SUMMING|SUPPLIED|SUPPLY|SUPPRESS|SWITCH|SWITCHSTATES|SYMBOL|SYNCPOINTS|SYNTAX|SYNTAX-CHECK|SYNTAX-TRACE|SYSTEM-CALL|SYSTEM-EXCEPTIONS|SYSTEM-EXIT|TAB|TABBED|TABLE|TABLES|TABLEVIEW|TABSTRIP|TAN|TANH|TARGET|TASK|TASKS|TEST|TESTING|TEXT|TEXTPOOL|THEN|THROW|TIME|TIMES|TIMESTAMP|TIMEZONE|TITLE|TITLE-LINES|TITLEBAR|TO|TOKENIZATION|TOKENS|TOP-LINES|TOP-OF-PAGE|TRACE-FILE|TRACE-TABLE|TRAILING|TRANSACTION|TRANSFER|TRANSFORMATION|TRANSLATE|TRANSPORTING|TRMAC|TRUNC|TRUNCATE|TRUNCATION|TRY|TYPE|TYPE-POOL|TYPE-POOLS|TYPES|ULINE|UNASSIGN|UNDER|UNICODE|UNION|UNIQUE|UNIT|UNIT_CONVERSION|UNIX|UNPACK|UNTIL|UNWIND|UP|UPDATE|UPPER|USER|USER-COMMAND|USING|UTF-8|VALID|VALUE|VALUE-REQUEST|VALUES|VARY|VARYING|VERIFICATION-MESSAGE|VERSION|VIA|VIEW|VISIBLE|WAIT|WARNING|WHEN|WHENEVER|WHERE|WHILE|WIDTH|WINDOW|WINDOWS|WITH|WITH-HEADING|WITH-TITLE|WITHOUT|WORD|WORK|WRITE|WRITER|X|XML|XOR|XSD|XSTRLEN|YELLOW|YES|YYMMDD|Z|ZERO|ZONE)(?![\w-])/i,lookbehind:!0},number:/\b\d+\b/,operator:{pattern:/(\s)(?:\*\*?|<[=>]?|>=?|\?=|[-+\/=])(?=\s)/,lookbehind:!0},"string-operator":{pattern:/(\s)&&?(?=\s)/,lookbehind:!0,alias:"keyword"},"token-operator":[{pattern:/(\w)(?:->?|=>|[~|{}])(?=\w)/,lookbehind:!0,alias:"punctuation"},{pattern:/[|{}]/,alias:"punctuation"}],punctuation:/[,.:()]/}}Q1.displayName="abnf";Q1.aliases=[];function Q1(t){(function(n){var r="(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)";n.languages.abnf={comment:/;.*/,string:{pattern:/(?:%[is])?"[^"\n\r]*"/,greedy:!0,inside:{punctuation:/^%[is]/}},range:{pattern:/%(?:b[01]+-[01]+|d\d+-\d+|x[A-F\d]+-[A-F\d]+)/i,alias:"number"},terminal:{pattern:/%(?:b[01]+(?:\.[01]+)*|d\d+(?:\.\d+)*|x[A-F\d]+(?:\.[A-F\d]+)*)/i,alias:"number"},repetition:{pattern:/(^|[^\w-])(?:\d*\*\d*|\d+)/,lookbehind:!0,alias:"operator"},definition:{pattern:/(^[ \t]*)(?:[a-z][\w-]*|<[^<>\r\n]*>)(?=\s*=)/m,lookbehind:!0,alias:"keyword",inside:{punctuation:/<|>/}},"core-rule":{pattern:RegExp("(?:(^|[^<\\w-])"+r+"|<"+r+">)(?![\\w-])","i"),lookbehind:!0,alias:["rule","constant"],inside:{punctuation:/<|>/}},rule:{pattern:/(^|[^<\w-])[a-z][\w-]*|<[^<>\r\n]*>/i,lookbehind:!0,inside:{punctuation:/<|>/}},operator:/=\/?|\//,punctuation:/[()\[\]]/}})(t)}J1.displayName="actionscript";J1.aliases=[];function J1(t){t.register(at),t.languages.actionscript=t.languages.extend("javascript",{keyword:/\b(?:as|break|case|catch|class|const|default|delete|do|dynamic|each|else|extends|final|finally|for|function|get|if|implements|import|in|include|instanceof|interface|internal|is|namespace|native|new|null|override|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|use|var|void|while|with)\b/,operator:/\+\+|--|(?:[+\-*\/%^]|&&?|\|\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/}),t.languages.actionscript["class-name"].alias="function",delete t.languages.actionscript.parameter,delete t.languages.actionscript["literal-property"],t.languages.markup&&t.languages.insertBefore("actionscript","string",{xml:{pattern:/(^|[^.])<\/?\w+(?:\s+[^\s>\/=]+=("|')(?:\\[\s\S]|(?!\2)[^\\])*\2)*\s*\/?>/,lookbehind:!0,inside:t.languages.markup}})}eh.displayName="ada";eh.aliases=[];function eh(t){t.languages.ada={comment:/--.*/,string:/"(?:""|[^"\r\f\n])*"/,number:[{pattern:/\b\d(?:_?\d)*#[\dA-F](?:_?[\dA-F])*(?:\.[\dA-F](?:_?[\dA-F])*)?#(?:E[+-]?\d(?:_?\d)*)?/i},{pattern:/\b\d(?:_?\d)*(?:\.\d(?:_?\d)*)?(?:E[+-]?\d(?:_?\d)*)?\b/i}],attribute:{pattern:/\b'\w+/,alias:"attr-name"},keyword:/\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|new|not|null|of|or|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|return|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\b/i,boolean:/\b(?:false|true)\b/i,operator:/<[=>]?|>=?|=>?|:=|\/=?|\*\*?|[&+-]/,punctuation:/\.\.?|[,;():]/,char:/'.'/,variable:/\b[a-z](?:\w)*\b/i}}th.displayName="agda";th.aliases=[];function th(t){(function(n){n.languages.agda={comment:/\{-[\s\S]*?(?:-\}|$)|--.*/,string:{pattern:/"(?:\\(?:\r\n|[\s\S])|[^\\\r\n"])*"/,greedy:!0},punctuation:/[(){}⦃⦄.;@]/,"class-name":{pattern:/((?:data|record) +)\S+/,lookbehind:!0},function:{pattern:/(^[ \t]*)(?!\s)[^:\r\n]+(?=:)/m,lookbehind:!0},operator:{pattern:/(^\s*|\s)(?:[=|:∀→λ\\?_]|->)(?=\s)/,lookbehind:!0},keyword:/\b(?:Set|abstract|constructor|data|eta-equality|field|forall|hiding|import|in|inductive|infix|infixl|infixr|instance|let|macro|module|mutual|no-eta-equality|open|overlap|pattern|postulate|primitive|private|public|quote|quoteContext|quoteGoal|quoteTerm|record|renaming|rewrite|syntax|tactic|unquote|unquoteDecl|unquoteDef|using|variable|where|with)\b/}})(t)}nh.displayName="al";nh.aliases=[];function nh(t){t.languages.al={comment:/\/\/.*|\/\*[\s\S]*?\*\//,string:{pattern:/'(?:''|[^'\r\n])*'(?!')|"(?:""|[^"\r\n])*"(?!")/,greedy:!0},function:{pattern:/(\b(?:event|procedure|trigger)\s+|(?:^|[^.])\.\s*)[a-z_]\w*(?=\s*\()/i,lookbehind:!0},keyword:[/\b(?:array|asserterror|begin|break|case|do|downto|else|end|event|exit|for|foreach|function|if|implements|in|indataset|interface|internal|local|of|procedure|program|protected|repeat|runonclient|securityfiltering|suppressdispose|temporary|then|to|trigger|until|var|while|with|withevents)\b/i,/\b(?:action|actions|addafter|addbefore|addfirst|addlast|area|assembly|chartpart|codeunit|column|controladdin|cuegroup|customizes|dataitem|dataset|dotnet|elements|enum|enumextension|extends|field|fieldattribute|fieldelement|fieldgroup|fieldgroups|fields|filter|fixed|grid|group|key|keys|label|labels|layout|modify|moveafter|movebefore|movefirst|movelast|page|pagecustomization|pageextension|part|profile|query|repeater|report|requestpage|schema|separator|systempart|table|tableelement|tableextension|textattribute|textelement|type|usercontrol|value|xmlport)\b/i],number:/\b(?:0x[\da-f]+|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?)(?:F|LL?|U(?:LL?)?)?\b/i,boolean:/\b(?:false|true)\b/i,variable:/\b(?:Curr(?:FieldNo|Page|Report)|x?Rec|RequestOptionsPage)\b/,"class-name":/\b(?:automation|biginteger|bigtext|blob|boolean|byte|char|clienttype|code|completiontriggererrorlevel|connectiontype|database|dataclassification|datascope|date|dateformula|datetime|decimal|defaultlayout|dialog|dictionary|dotnetassembly|dotnettypedeclaration|duration|errorinfo|errortype|executioncontext|executionmode|fieldclass|fieldref|fieldtype|file|filterpagebuilder|guid|httpclient|httpcontent|httpheaders|httprequestmessage|httpresponsemessage|instream|integer|joker|jsonarray|jsonobject|jsontoken|jsonvalue|keyref|list|moduledependencyinfo|moduleinfo|none|notification|notificationscope|objecttype|option|outstream|pageresult|record|recordid|recordref|reportformat|securityfilter|sessionsettings|tableconnectiontype|tablefilter|testaction|testfield|testfilterfield|testpage|testpermissions|testrequestpage|text|textbuilder|textconst|textencoding|time|transactionmodel|transactiontype|variant|verbosity|version|view|views|webserviceactioncontext|webserviceactionresultcode|xmlattribute|xmlattributecollection|xmlcdata|xmlcomment|xmldeclaration|xmldocument|xmldocumenttype|xmlelement|xmlnamespacemanager|xmlnametable|xmlnode|xmlnodelist|xmlprocessinginstruction|xmlreadoptions|xmltext|xmlwriteoptions)\b/i,operator:/\.\.|:[=:]|[-+*/]=?|<>|[<>]=?|=|\b(?:and|div|mod|not|or|xor)\b/i,punctuation:/[()\[\]{}:.;,]/}}rh.displayName="antlr4";rh.aliases=["g4"];function rh(t){t.languages.antlr4={comment:/\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,string:{pattern:/'(?:\\.|[^\\'\r\n])*'/,greedy:!0},"character-class":{pattern:/\[(?:\\.|[^\\\]\r\n])*\]/,greedy:!0,alias:"regex",inside:{range:{pattern:/([^[]|(?:^|[^\\])(?:\\\\)*\\\[)-(?!\])/,lookbehind:!0,alias:"punctuation"},escape:/\\(?:u(?:[a-fA-F\d]{4}|\{[a-fA-F\d]+\})|[pP]\{[=\w-]+\}|[^\r\nupP])/,punctuation:/[\[\]]/}},action:{pattern:/\{(?:[^{}]|\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})*\})*\}/,greedy:!0,inside:{content:{pattern:/(\{)[\s\S]+(?=\})/,lookbehind:!0},punctuation:/[{}]/}},command:{pattern:/(->\s*(?!\s))(?:\s*(?:,\s*)?\b[a-z]\w*(?:\s*\([^()\r\n]*\))?)+(?=\s*;)/i,lookbehind:!0,inside:{function:/\b\w+(?=\s*(?:[,(]|$))/,punctuation:/[,()]/}},annotation:{pattern:/@\w+(?:::\w+)*/,alias:"keyword"},label:{pattern:/#[ \t]*\w+/,alias:"punctuation"},keyword:/\b(?:catch|channels|finally|fragment|grammar|import|lexer|locals|mode|options|parser|returns|throws|tokens)\b/,definition:[{pattern:/\b[a-z]\w*(?=\s*:)/,alias:["rule","class-name"]},{pattern:/\b[A-Z]\w*(?=\s*:)/,alias:["token","constant"]}],constant:/\b[A-Z][A-Z_]*\b/,operator:/\.\.|->|[|~]|[*+?]\??/,punctuation:/[;:()=]/},t.languages.g4=t.languages.antlr4}sh.displayName="apacheconf";sh.aliases=[];function sh(t){t.languages.apacheconf={comment:/#.*/,"directive-inline":{pattern:/(^[\t ]*)\b(?:AcceptFilter|AcceptPathInfo|AccessFileName|Action|Add(?:Alt|AltByEncoding|AltByType|Charset|DefaultCharset|Description|Encoding|Handler|Icon|IconByEncoding|IconByType|InputFilter|Language|ModuleInfo|OutputFilter|OutputFilterByType|Type)|Alias|AliasMatch|Allow(?:CONNECT|EncodedSlashes|Methods|Override|OverrideList)?|Anonymous(?:_LogEmail|_MustGiveEmail|_NoUserID|_VerifyEmail)?|AsyncRequestWorkerFactor|Auth(?:BasicAuthoritative|BasicFake|BasicProvider|BasicUseDigestAlgorithm|DBDUserPWQuery|DBDUserRealmQuery|DBMGroupFile|DBMType|DBMUserFile|Digest(?:Algorithm|Domain|NonceLifetime|Provider|Qop|ShmemSize)|Form(?:Authoritative|Body|DisableNoStore|FakeBasicAuth|Location|LoginRequiredLocation|LoginSuccessLocation|LogoutLocation|Method|Mimetype|Password|Provider|SitePassphrase|Size|Username)|GroupFile|LDAP(?:AuthorizePrefix|BindAuthoritative|BindDN|BindPassword|CharsetConfig|CompareAsUser|CompareDNOnServer|DereferenceAliases|GroupAttribute|GroupAttributeIsDN|InitialBindAsUser|InitialBindPattern|MaxSubGroupDepth|RemoteUserAttribute|RemoteUserIsDN|SearchAsUser|SubGroupAttribute|SubGroupClass|Url)|Merging|Name|nCache(?:Context|Enable|ProvideFor|SOCache|Timeout)|nzFcgiCheckAuthnProvider|nzFcgiDefineProvider|Type|UserFile|zDBDLoginToReferer|zDBDQuery|zDBDRedirectQuery|zDBMType|zSendForbiddenOnFailure)|BalancerGrowth|BalancerInherit|BalancerMember|BalancerPersist|BrowserMatch|BrowserMatchNoCase|BufferedLogs|BufferSize|Cache(?:DefaultExpire|DetailHeader|DirLength|DirLevels|Disable|Enable|File|Header|IgnoreCacheControl|IgnoreHeaders|IgnoreNoLastMod|IgnoreQueryString|IgnoreURLSessionIdentifiers|KeyBaseURL|LastModifiedFactor|Lock|LockMaxAge|LockPath|MaxExpire|MaxFileSize|MinExpire|MinFileSize|NegotiatedDocs|QuickHandler|ReadSize|ReadTime|Root|Socache(?:MaxSize|MaxTime|MinTime|ReadSize|ReadTime)?|StaleOnError|StoreExpired|StoreNoStore|StorePrivate)|CGIDScriptTimeout|CGIMapExtension|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckCaseOnly|CheckSpelling|ChrootDir|ContentDigest|CookieDomain|CookieExpires|CookieName|CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|Dav|DavDepthInfinity|DavGenericLockDB|DavLockDB|DavMinTimeout|DBDExptime|DBDInitSQL|DBDKeep|DBDMax|DBDMin|DBDParams|DBDPersist|DBDPrepareSQL|DBDriver|DefaultIcon|DefaultLanguage|DefaultRuntimeDir|DefaultType|Define|Deflate(?:BufferSize|CompressionLevel|FilterNote|InflateLimitRequestBody|InflateRatio(?:Burst|Limit)|MemLevel|WindowSize)|Deny|DirectoryCheckHandler|DirectoryIndex|DirectoryIndexRedirect|DirectorySlash|DocumentRoot|DTracePrivileges|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|Error|ErrorDocument|ErrorLog|ErrorLogFormat|Example|ExpiresActive|ExpiresByType|ExpiresDefault|ExtendedStatus|ExtFilterDefine|ExtFilterOptions|FallbackResource|FileETag|FilterChain|FilterDeclare|FilterProtocol|FilterProvider|FilterTrace|ForceLanguagePriority|ForceType|ForensicLog|GprofDir|GracefulShutdownTimeout|Group|Header|HeaderName|Heartbeat(?:Address|Listen|MaxServers|Storage)|HostnameLookups|IdentityCheck|IdentityCheckTimeout|ImapBase|ImapDefault|ImapMenu|Include|IncludeOptional|Index(?:HeadInsert|Ignore|IgnoreReset|Options|OrderDefault|StyleSheet)|InputSed|ISAPI(?:AppendLogToErrors|AppendLogToQuery|CacheFile|FakeAsync|LogNotSupported|ReadAheadBuffer)|KeepAlive|KeepAliveTimeout|KeptBodySize|LanguagePriority|LDAP(?:CacheEntries|CacheTTL|ConnectionPoolTTL|ConnectionTimeout|LibraryDebug|OpCacheEntries|OpCacheTTL|ReferralHopLimit|Referrals|Retries|RetryDelay|SharedCacheFile|SharedCacheSize|Timeout|TrustedClientCert|TrustedGlobalCert|TrustedMode|VerifyServerCert)|Limit(?:InternalRecursion|Request(?:Body|Fields|FieldSize|Line)|XMLRequestBody)|Listen|ListenBackLog|LoadFile|LoadModule|LogFormat|LogLevel|LogMessage|LuaAuthzProvider|LuaCodeCache|Lua(?:Hook(?:AccessChecker|AuthChecker|CheckUserID|Fixups|InsertFilter|Log|MapToStorage|TranslateName|TypeChecker)|Inherit|InputFilter|MapHandler|OutputFilter|PackageCPath|PackagePath|QuickHandler|Root|Scope)|Max(?:ConnectionsPerChild|KeepAliveRequests|MemFree|RangeOverlaps|RangeReversals|Ranges|RequestWorkers|SpareServers|SpareThreads|Threads)|MergeTrailers|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads|MMapFile|ModemStandard|ModMimeUsePathInfo|MultiviewsMatch|Mutex|NameVirtualHost|NoProxy|NWSSLTrustedCerts|NWSSLUpgradeable|Options|Order|OutputSed|PassEnv|PidFile|PrivilegesMode|Protocol|ProtocolEcho|Proxy(?:AddHeaders|BadHeader|Block|Domain|ErrorOverride|ExpressDBMFile|ExpressDBMType|ExpressEnable|FtpDirCharset|FtpEscapeWildcards|FtpListOnWildcard|HTML(?:BufSize|CharsetOut|DocType|Enable|Events|Extended|Fixups|Interp|Links|Meta|StripComments|URLMap)|IOBufferSize|MaxForwards|Pass(?:Inherit|InterpolateEnv|Match|Reverse|ReverseCookieDomain|ReverseCookiePath)?|PreserveHost|ReceiveBufferSize|Remote|RemoteMatch|Requests|SCGIInternalRedirect|SCGISendfile|Set|SourceAddress|Status|Timeout|Via)|ReadmeName|ReceiveBufferSize|Redirect|RedirectMatch|RedirectPermanent|RedirectTemp|ReflectorHeader|RemoteIP(?:Header|InternalProxy|InternalProxyList|ProxiesHeader|TrustedProxy|TrustedProxyList)|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader|RequestReadTimeout|Require|Rewrite(?:Base|Cond|Engine|Map|Options|Rule)|RLimitCPU|RLimitMEM|RLimitNPROC|Satisfy|ScoreBoardFile|Script(?:Alias|AliasMatch|InterpreterSource|Log|LogBuffer|LogLength|Sock)?|SecureListen|SeeRequestTail|SendBufferSize|Server(?:Admin|Alias|Limit|Name|Path|Root|Signature|Tokens)|Session(?:Cookie(?:Name|Name2|Remove)|Crypto(?:Cipher|Driver|Passphrase|PassphraseFile)|DBD(?:CookieName|CookieName2|CookieRemove|DeleteLabel|InsertLabel|PerUser|SelectLabel|UpdateLabel)|Env|Exclude|Header|Include|MaxAge)?|SetEnv|SetEnvIf|SetEnvIfExpr|SetEnvIfNoCase|SetHandler|SetInputFilter|SetOutputFilter|SSIEndTag|SSIErrorMsg|SSIETag|SSILastModified|SSILegacyExprParser|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSL(?:CACertificateFile|CACertificatePath|CADNRequestFile|CADNRequestPath|CARevocationCheck|CARevocationFile|CARevocationPath|CertificateChainFile|CertificateFile|CertificateKeyFile|CipherSuite|Compression|CryptoDevice|Engine|FIPS|HonorCipherOrder|InsecureRenegotiation|OCSP(?:DefaultResponder|Enable|OverrideResponder|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|UseRequestNonce)|OpenSSLConfCmd|Options|PassPhraseDialog|Protocol|Proxy(?:CACertificateFile|CACertificatePath|CARevocation(?:Check|File|Path)|CheckPeer(?:CN|Expire|Name)|CipherSuite|Engine|MachineCertificate(?:ChainFile|File|Path)|Protocol|Verify|VerifyDepth)|RandomSeed|RenegBufferSize|Require|RequireSSL|Session(?:Cache|CacheTimeout|TicketKeyFile|Tickets)|SRPUnknownUserSeed|SRPVerifierFile|Stapling(?:Cache|ErrorCacheTimeout|FakeTryLater|ForceURL|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|ReturnResponderErrors|StandardCacheTimeout)|StrictSNIVHostCheck|UserName|UseStapling|VerifyClient|VerifyDepth)|StartServers|StartThreads|Substitute|Suexec|SuexecUserGroup|ThreadLimit|ThreadsPerChild|ThreadStackSize|TimeOut|TraceEnable|TransferLog|TypesConfig|UnDefine|UndefMacro|UnsetEnv|Use|UseCanonicalName|UseCanonicalPhysicalPort|User|UserDir|VHostCGIMode|VHostCGIPrivs|VHostGroup|VHostPrivs|VHostSecure|VHostUser|Virtual(?:DocumentRoot|ScriptAlias)(?:IP)?|WatchdogInterval|XBitHack|xml2EncAlias|xml2EncDefault|xml2StartParse)\b/im,lookbehind:!0,alias:"property"},"directive-block":{pattern:/<\/?\b(?:Auth[nz]ProviderAlias|Directory|DirectoryMatch|Else|ElseIf|Files|FilesMatch|If|IfDefine|IfModule|IfVersion|Limit|LimitExcept|Location|LocationMatch|Macro|Proxy|Require(?:All|Any|None)|VirtualHost)\b.*>/i,inside:{"directive-block":{pattern:/^<\/?\w+/,inside:{punctuation:/^<\/?/},alias:"tag"},"directive-block-parameter":{pattern:/.*[^>]/,inside:{punctuation:/:/,string:{pattern:/("|').*\1/,inside:{variable:/[$%]\{?(?:\w\.?[-+:]?)+\}?/}}},alias:"attr-value"},punctuation:/>/},alias:"tag"},"directive-flags":{pattern:/\[(?:[\w=],?)+\]/,alias:"keyword"},string:{pattern:/("|').*\1/,inside:{variable:/[$%]\{?(?:\w\.?[-+:]?)+\}?/}},variable:/[$%]\{?(?:\w\.?[-+:]?)+\}?/,regex:/\^?.*\$|\^.*\$?/}}ih.displayName="apex";ih.aliases=[];function ih(t){t.register(le),t.register(ti),function(n){var r=/\b(?:(?:after|before)(?=\s+[a-z])|abstract|activate|and|any|array|as|asc|autonomous|begin|bigdecimal|blob|boolean|break|bulk|by|byte|case|cast|catch|char|class|collect|commit|const|continue|currency|date|datetime|decimal|default|delete|desc|do|double|else|end|enum|exception|exit|export|extends|final|finally|float|for|from|get(?=\s*[{};])|global|goto|group|having|hint|if|implements|import|in|inner|insert|instanceof|int|integer|interface|into|join|like|limit|list|long|loop|map|merge|new|not|null|nulls|number|object|of|on|or|outer|override|package|parallel|pragma|private|protected|public|retrieve|return|rollback|select|set|short|sObject|sort|static|string|super|switch|synchronized|system|testmethod|then|this|throw|time|transaction|transient|trigger|try|undelete|update|upsert|using|virtual|void|webservice|when|where|while|(?:inherited|with|without)\s+sharing)\b/i,s=/\b(?:(?=[a-z_]\w*\s*[<\[])|(?!<keyword>))[A-Z_]\w*(?:\s*\.\s*[A-Z_]\w*)*\b(?:\s*(?:\[\s*\]|<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>))*/.source.replace(/<keyword>/g,function(){return r.source});function i(o){return RegExp(o.replace(/<CLASS-NAME>/g,function(){return s}),"i")}var a={keyword:r,punctuation:/[()\[\]{};,:.<>]/};n.languages.apex={comment:n.languages.clike.comment,string:n.languages.clike.string,sql:{pattern:/((?:[=,({:]|\breturn)\s*)\[[^\[\]]*\]/i,lookbehind:!0,greedy:!0,alias:"language-sql",inside:n.languages.sql},annotation:{pattern:/@\w+\b/,alias:"punctuation"},"class-name":[{pattern:i(/(\b(?:class|enum|extends|implements|instanceof|interface|new|trigger\s+\w+\s+on)\s+)<CLASS-NAME>/.source),lookbehind:!0,inside:a},{pattern:i(/(\(\s*)<CLASS-NAME>(?=\s*\)\s*[\w(])/.source),lookbehind:!0,inside:a},{pattern:i(/<CLASS-NAME>(?=\s*\w+\s*[;=,(){:])/.source),inside:a}],trigger:{pattern:/(\btrigger\s+)\w+\b/i,lookbehind:!0,alias:"class-name"},keyword:r,function:/\b[a-z_]\w*(?=\s*\()/i,boolean:/\b(?:false|true)\b/i,number:/(?:\B\.\d+|\b\d+(?:\.\d+|L)?)\b/i,operator:/[!=](?:==?)?|\?\.?|&&|\|\||--|\+\+|[-+*/^&|]=?|:|<<?=?|>{1,3}=?/,punctuation:/[()\[\]{};,.]/}}(t)}ah.displayName="apl";ah.aliases=[];function ah(t){t.languages.apl={comment:/(?:⍝|#[! ]).*$/m,string:{pattern:/'(?:[^'\r\n]|'')*'/,greedy:!0},number:/¯?(?:\d*\.?\b\d+(?:e[+¯]?\d+)?|¯|∞)(?:j¯?(?:(?:\d+(?:\.\d+)?|\.\d+)(?:e[+¯]?\d+)?|¯|∞))?/i,statement:/:[A-Z][a-z][A-Za-z]*\b/,"system-function":{pattern:/⎕[A-Z]+/i,alias:"function"},constant:/[⍬⌾#⎕⍞]/,function:/[-+×÷⌈⌊∣|⍳⍸?*⍟○!⌹<≤=>≥≠≡≢∊⍷∪∩~∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⊆⊇⌷⍋⍒⊤⊥⍕⍎⊣⊢⍁⍂≈⍯↗¤→]/,"monadic-operator":{pattern:/[\\\/⌿⍀¨⍨⌶&∥]/,alias:"operator"},"dyadic-operator":{pattern:/[.⍣⍠⍤∘⌸@⌺⍥]/,alias:"operator"},assignment:{pattern:/←/,alias:"keyword"},punctuation:/[\[;\]()◇⋄]/,dfn:{pattern:/[{}⍺⍵⍶⍹∇⍫:]/,alias:"builtin"}}}oh.displayName="applescript";oh.aliases=[];function oh(t){t.languages.applescript={comment:[/\(\*(?:\(\*(?:[^*]|\*(?!\)))*\*\)|(?!\(\*)[\s\S])*?\*\)/,/--.+/,/#.+/],string:/"(?:\\.|[^"\\\r\n])*"/,number:/(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e-?\d+)?\b/i,operator:[/[&=≠≤≥*+\-\/÷^]|[<>]=?/,/\b(?:(?:begin|end|start)s? with|(?:contains?|(?:does not|doesn't) contain)|(?:is|isn't|is not) (?:contained by|in)|(?:(?:is|isn't|is not) )?(?:greater|less) than(?: or equal)?(?: to)?|(?:comes|(?:does not|doesn't) come) (?:after|before)|(?:is|isn't|is not) equal(?: to)?|(?:(?:does not|doesn't) equal|equal to|equals|is not|isn't)|(?:a )?(?:ref(?: to)?|reference to)|(?:and|as|div|mod|not|or))\b/],keyword:/\b(?:about|above|after|against|apart from|around|aside from|at|back|before|beginning|behind|below|beneath|beside|between|but|by|considering|continue|copy|does|eighth|else|end|equal|error|every|exit|false|fifth|first|for|fourth|from|front|get|given|global|if|ignoring|in|instead of|into|is|it|its|last|local|me|middle|my|ninth|of|on|onto|out of|over|prop|property|put|repeat|return|returning|second|set|seventh|since|sixth|some|tell|tenth|that|the|then|third|through|thru|timeout|times|to|transaction|true|try|until|where|while|whose|with|without)\b/,"class-name":/\b(?:POSIX file|RGB color|alias|application|boolean|centimeters|centimetres|class|constant|cubic centimeters|cubic centimetres|cubic feet|cubic inches|cubic meters|cubic metres|cubic yards|date|degrees Celsius|degrees Fahrenheit|degrees Kelvin|feet|file|gallons|grams|inches|integer|kilograms|kilometers|kilometres|list|liters|litres|meters|metres|miles|number|ounces|pounds|quarts|real|record|reference|script|square feet|square kilometers|square kilometres|square meters|square metres|square miles|square yards|text|yards)\b/,punctuation:/[{}():,¬«»《》]/}}lh.displayName="aql";lh.aliases=[];function lh(t){t.languages.aql={comment:/\/\/.*|\/\*[\s\S]*?\*\//,property:{pattern:/([{,]\s*)(?:(?!\d)\w+|(["'´`])(?:(?!\2)[^\\\r\n]|\\.)*\2)(?=\s*:)/,lookbehind:!0,greedy:!0},string:{pattern:/(["'])(?:(?!\1)[^\\\r\n]|\\.)*\1/,greedy:!0},identifier:{pattern:/([´`])(?:(?!\1)[^\\\r\n]|\\.)*\1/,greedy:!0},variable:/@@?\w+/,keyword:[{pattern:/(\bWITH\s+)COUNT(?=\s+INTO\b)/i,lookbehind:!0},/\b(?:AGGREGATE|ALL|AND|ANY|ASC|COLLECT|DESC|DISTINCT|FILTER|FOR|GRAPH|IN|INBOUND|INSERT|INTO|K_PATHS|K_SHORTEST_PATHS|LET|LIKE|LIMIT|NONE|NOT|NULL|OR|OUTBOUND|REMOVE|REPLACE|RETURN|SHORTEST_PATH|SORT|UPDATE|UPSERT|WINDOW|WITH)\b/i,{pattern:/(^|[^\w.[])(?:KEEP|PRUNE|SEARCH|TO)\b/i,lookbehind:!0},{pattern:/(^|[^\w.[])(?:CURRENT|NEW|OLD)\b/,lookbehind:!0},{pattern:/\bOPTIONS(?=\s*\{)/i}],function:/\b(?!\d)\w+(?=\s*\()/,boolean:/\b(?:false|true)\b/i,range:{pattern:/\.\./,alias:"operator"},number:[/\b0b[01]+/i,/\b0x[0-9a-f]+/i,/(?:\B\.\d+|\b(?:0|[1-9]\d*)(?:\.\d+)?)(?:e[+-]?\d+)?/i],operator:/\*{2,}|[=!]~|[!=<>]=?|&&|\|\||[-+*/%]/,punctuation:/::|[?.:,;()[\]{}]/}}ch.displayName="arff";ch.aliases=[];function ch(t){t.languages.arff={comment:/%.*/,string:{pattern:/(["'])(?:\\.|(?!\1)[^\\\r\n])*\1/,greedy:!0},keyword:/@(?:attribute|data|end|relation)\b/i,number:/\b\d+(?:\.\d+)?\b/,punctuation:/[{},]/}}dh.displayName="armasm";dh.aliases=["arm-asm"];function dh(t){t.languages.armasm={comment:{pattern:/;.*/,greedy:!0},string:{pattern:/"(?:[^"\r\n]|"")*"/,greedy:!0,inside:{variable:{pattern:/((?:^|[^$])(?:\${2})*)\$\w+/,lookbehind:!0}}},char:{pattern:/'(?:[^'\r\n]{0,4}|'')'/,greedy:!0},"version-symbol":{pattern:/\|[\w@]+\|/,greedy:!0,alias:"property"},boolean:/\b(?:FALSE|TRUE)\b/,directive:{pattern:/\b(?:ALIAS|ALIGN|AREA|ARM|ASSERT|ATTR|CN|CODE|CODE16|CODE32|COMMON|CP|DATA|DCB|DCD|DCDO|DCDU|DCFD|DCFDU|DCI|DCQ|DCQU|DCW|DCWU|DN|ELIF|ELSE|END|ENDFUNC|ENDIF|ENDP|ENTRY|EQU|EXPORT|EXPORTAS|EXTERN|FIELD|FILL|FN|FUNCTION|GBLA|GBLL|GBLS|GET|GLOBAL|IF|IMPORT|INCBIN|INCLUDE|INFO|KEEP|LCLA|LCLL|LCLS|LTORG|MACRO|MAP|MEND|MEXIT|NOFP|OPT|PRESERVE8|PROC|QN|READONLY|RELOC|REQUIRE|REQUIRE8|RLIST|ROUT|SETA|SETL|SETS|SN|SPACE|SUBT|THUMB|THUMBX|TTL|WEND|WHILE)\b/,alias:"property"},instruction:{pattern:/((?:^|(?:^|[^\\])(?:\r\n?|\n))[ \t]*(?:(?:[A-Z][A-Z0-9_]*[a-z]\w*|[a-z]\w*|\d+)[ \t]+)?)\b[A-Z.]+\b/,lookbehind:!0,alias:"keyword"},variable:/\$\w+/,number:/(?:\b[2-9]_\d+|(?:\b\d+(?:\.\d+)?|\B\.\d+)(?:e-?\d+)?|\b0(?:[fd]_|x)[0-9a-f]+|&[0-9a-f]+)\b/i,register:{pattern:/\b(?:r\d|lr)\b/,alias:"symbol"},operator:/<>|<<|>>|&&|\|\||[=!<>/]=?|[+\-*%#?&|^]|:[A-Z]+:/,punctuation:/[()[\],]/},t.languages["arm-asm"]=t.languages.armasm}uh.displayName="arturo";uh.aliases=["art"];function uh(t){(function(n){var r=function(s,i){return{pattern:RegExp(/\{!/.source+"(?:"+(i||s)+")"+/$[\s\S]*\}/.source,"m"),greedy:!0,inside:{embedded:{pattern:/(^\{!\w+\b)[\s\S]+(?=\}$)/,lookbehind:!0,alias:"language-"+s,inside:n.languages[s]},string:/[\s\S]+/}}};n.languages.arturo={comment:{pattern:/;.*/,greedy:!0},character:{pattern:/`.`/,alias:"char",greedy:!0},number:{pattern:/\b\d+(?:\.\d+(?:\.\d+(?:-[\w+-]+)?)?)?\b/},string:{pattern:/"(?:[^"\\\r\n]|\\.)*"/,greedy:!0},regex:{pattern:/\{\/.*?\/\}/,greedy:!0},"html-string":r("html"),"css-string":r("css"),"js-string":r("js"),"md-string":r("md"),"sql-string":r("sql"),"sh-string":r("shell","sh"),multistring:{pattern:/».*|\{:[\s\S]*?:\}|\{[\s\S]*?\}|^-{6}$[\s\S]*/m,alias:"string",greedy:!0},label:{pattern:/\w+\b\??:/,alias:"property"},literal:{pattern:/'(?:\w+\b\??:?)/,alias:"constant"},type:{pattern:/:(?:\w+\b\??:?)/,alias:"class-name"},color:/#\w+/,predicate:{pattern:/\b(?:all|and|any|ascii|attr|attribute|attributeLabel|binary|block|char|contains|database|date|dictionary|empty|equal|even|every|exists|false|floating|function|greater|greaterOrEqual|if|in|inline|integer|is|key|label|leap|less|lessOrEqual|literal|logical|lower|nand|negative|nor|not|notEqual|null|numeric|odd|or|path|pathLabel|positive|prefix|prime|regex|same|set|some|sorted|standalone|string|subset|suffix|superset|symbol|symbolLiteral|true|try|type|unless|upper|when|whitespace|word|xnor|xor|zero)\?/,alias:"keyword"},"builtin-function":{pattern:/\b(?:abs|acos|acosh|acsec|acsech|actan|actanh|add|after|alert|alias|and|angle|append|arg|args|arity|array|as|asec|asech|asin|asinh|atan|atan2|atanh|attr|attrs|average|before|benchmark|blend|break|call|capitalize|case|ceil|chop|clear|clip|close|color|combine|conj|continue|copy|cos|cosh|crc|csec|csech|ctan|ctanh|cursor|darken|dec|decode|define|delete|desaturate|deviation|dialog|dictionary|difference|digest|digits|div|do|download|drop|dup|e|else|empty|encode|ensure|env|escape|execute|exit|exp|extend|extract|factors|fdiv|filter|first|flatten|floor|fold|from|function|gamma|gcd|get|goto|hash|hypot|if|inc|indent|index|infinity|info|input|insert|inspect|intersection|invert|jaro|join|keys|kurtosis|last|let|levenshtein|lighten|list|ln|log|loop|lower|mail|map|match|max|median|min|mod|module|mul|nand|neg|new|nor|normalize|not|now|null|open|or|outdent|pad|palette|panic|path|pause|permissions|permutate|pi|pop|popup|pow|powerset|powmod|prefix|print|prints|process|product|query|random|range|read|relative|remove|rename|render|repeat|replace|request|return|reverse|round|sample|saturate|script|sec|sech|select|serve|set|shl|shr|shuffle|sin|sinh|size|skewness|slice|sort|spin|split|sqrt|squeeze|stack|strip|sub|suffix|sum|switch|symbols|symlink|sys|take|tan|tanh|terminal|terminate|to|truncate|try|type|unclip|union|unique|unless|until|unzip|upper|values|var|variance|volume|webview|while|with|wordwrap|write|xnor|xor|zip)\b/,alias:"keyword"},sugar:{pattern:/->|=>|\||::/,alias:"operator"},punctuation:/[()[\],]/,symbol:{pattern:/<:|-:|ø|@|#|\+|\||\*|\$|---|-|%|\/|\.\.|\^|~|=|<|>|\\/},boolean:{pattern:/\b(?:false|maybe|true)\b/}},n.languages.art=n.languages.arturo})(t)}hh.displayName="asciidoc";hh.aliases=["adoc"];function hh(t){(function(n){var r={pattern:/(^[ \t]*)\[(?!\[)(?:(["'$`])(?:(?!\2)[^\\]|\\.)*\2|\[(?:[^\[\]\\]|\\.)*\]|[^\[\]\\"'$`]|\\.)*\]/m,lookbehind:!0,inside:{quoted:{pattern:/([$`])(?:(?!\1)[^\\]|\\.)*\1/,inside:{punctuation:/^[$`]|[$`]$/}},interpreted:{pattern:/'(?:[^'\\]|\\.)*'/,inside:{punctuation:/^'|'$/}},string:/"(?:[^"\\]|\\.)*"/,variable:/\w+(?==)/,punctuation:/^\[|\]$|,/,operator:/=/,"attr-value":/(?!^\s+$).+/}},s=n.languages.asciidoc={"comment-block":{pattern:/^(\/{4,})$[\s\S]*?^\1/m,alias:"comment"},table:{pattern:/^\|={3,}(?:(?:\r?\n|\r(?!\n)).*)*?(?:\r?\n|\r)\|={3,}$/m,inside:{specifiers:{pattern:/(?:(?:(?:\d+(?:\.\d+)?|\.\d+)[+*](?:[<^>](?:\.[<^>])?|\.[<^>])?|[<^>](?:\.[<^>])?|\.[<^>])[a-z]*|[a-z]+)(?=\|)/,alias:"attr-value"},punctuation:{pattern:/(^|[^\\])[|!]=*/,lookbehind:!0}}},"passthrough-block":{pattern:/^(\+{4,})$[\s\S]*?^\1$/m,inside:{punctuation:/^\++|\++$/}},"literal-block":{pattern:/^(-{4,}|\.{4,})$[\s\S]*?^\1$/m,inside:{punctuation:/^(?:-+|\.+)|(?:-+|\.+)$/}},"other-block":{pattern:/^(--|\*{4,}|_{4,}|={4,})$[\s\S]*?^\1$/m,inside:{punctuation:/^(?:-+|\*+|_+|=+)|(?:-+|\*+|_+|=+)$/}},"list-punctuation":{pattern:/(^[ \t]*)(?:-|\*{1,5}|\.{1,5}|(?:[a-z]|\d+)\.|[xvi]+\))(?= )/im,lookbehind:!0,alias:"punctuation"},"list-label":{pattern:/(^[ \t]*)[a-z\d].+(?::{2,4}|;;)(?=\s)/im,lookbehind:!0,alias:"symbol"},"indented-block":{pattern:/((\r?\n|\r)\2)([ \t]+)\S.*(?:(?:\r?\n|\r)\3.+)*(?=\2{2}|$)/,lookbehind:!0},comment:/^\/\/.*/m,title:{pattern:/^.+(?:\r?\n|\r)(?:={3,}|-{3,}|~{3,}|\^{3,}|\+{3,})$|^={1,5} .+|^\.(?![\s.]).*/m,alias:"important",inside:{punctuation:/^(?:\.|=+)|(?:=+|-+|~+|\^+|\++)$/}},"attribute-entry":{pattern:/^:[^:\r\n]+:(?: .*?(?: \+(?:\r?\n|\r).*?)*)?$/m,alias:"tag"},attributes:r,hr:{pattern:/^'{3,}$/m,alias:"punctuation"},"page-break":{pattern:/^<{3,}$/m,alias:"punctuation"},admonition:{pattern:/^(?:CAUTION|IMPORTANT|NOTE|TIP|WARNING):/m,alias:"keyword"},callout:[{pattern:/(^[ \t]*)<?\d*>/m,lookbehind:!0,alias:"symbol"},{pattern:/<\d+>/,alias:"symbol"}],macro:{pattern:/\b[a-z\d][a-z\d-]*::?(?:[^\s\[\]]*\[(?:[^\]\\"']|(["'])(?:(?!\1)[^\\]|\\.)*\1|\\.)*\])/,inside:{function:/^[a-z\d-]+(?=:)/,punctuation:/^::?/,attributes:{pattern:/(?:\[(?:[^\]\\"']|(["'])(?:(?!\1)[^\\]|\\.)*\1|\\.)*\])/,inside:r.inside}}},inline:{pattern:/(^|[^\\])(?:(?:\B\[(?:[^\]\\"']|(["'])(?:(?!\2)[^\\]|\\.)*\2|\\.)*\])?(?:\b_(?!\s)(?: _|[^_\\\r\n]|\\.)+(?:(?:\r?\n|\r)(?: _|[^_\\\r\n]|\\.)+)*_\b|\B``(?!\s).+?(?:(?:\r?\n|\r).+?)*''\B|\B`(?!\s)(?:[^`'\s]|\s+\S)+['`]\B|\B(['*+#])(?!\s)(?: \3|(?!\3)[^\\\r\n]|\\.)+(?:(?:\r?\n|\r)(?: \3|(?!\3)[^\\\r\n]|\\.)+)*\3\B)|(?:\[(?:[^\]\\"']|(["'])(?:(?!\4)[^\\]|\\.)*\4|\\.)*\])?(?:(__|\*\*|\+\+\+?|##|\$\$|[~^]).+?(?:(?:\r?\n|\r).+?)*\5|\{[^}\r\n]+\}|\[\[\[?.+?(?:(?:\r?\n|\r).+?)*\]?\]\]|<<.+?(?:(?:\r?\n|\r).+?)*>>|\(\(\(?.+?(?:(?:\r?\n|\r).+?)*\)?\)\)))/m,lookbehind:!0,inside:{attributes:r,url:{pattern:/^(?:\[\[\[?.+?\]?\]\]|<<.+?>>)$/,inside:{punctuation:/^(?:\[\[\[?|<<)|(?:\]\]\]?|>>)$/}},"attribute-ref":{pattern:/^\{.+\}$/,inside:{variable:{pattern:/(^\{)[a-z\d,+_-]+/,lookbehind:!0},operator:/^[=?!#%@$]|!(?=[:}])/,punctuation:/^\{|\}$|::?/}},italic:{pattern:/^(['_])[\s\S]+\1$/,inside:{punctuation:/^(?:''?|__?)|(?:''?|__?)$/}},bold:{pattern:/^\*[\s\S]+\*$/,inside:{punctuation:/^\*\*?|\*\*?$/}},punctuation:/^(?:``?|\+{1,3}|##?|\$\$|[~^]|\(\(\(?)|(?:''?|\+{1,3}|##?|\$\$|[~^`]|\)?\)\))$/}},replacement:{pattern:/\((?:C|R|TM)\)/,alias:"builtin"},entity:/&#?[\da-z]{1,8};/i,"line-continuation":{pattern:/(^| )\+$/m,lookbehind:!0,alias:"punctuation"}};function i(a){a=a.split(" ");for(var o={},l=0,c=a.length;l<c;l++)o[a[l]]=s[a[l]];return o}r.inside.interpreted.inside.rest=i("macro inline replacement entity"),s["passthrough-block"].inside.rest=i("macro"),s["literal-block"].inside.rest=i("callout"),s.table.inside.rest=i("comment-block passthrough-block literal-block other-block list-punctuation indented-block comment title attribute-entry attributes hr page-break admonition list-label callout macro inline replacement entity line-continuation"),s["other-block"].inside.rest=i("table list-punctuation indented-block comment attribute-entry attributes hr page-break admonition list-label macro inline replacement entity line-continuation"),s.title.inside.rest=i("macro inline replacement entity"),n.hooks.add("wrap",function(a){a.type==="entity"&&(a.attributes.title=a.content.value.replace(/&amp;/,"&"))}),n.languages.adoc=n.languages.asciidoc})(t)}ph.displayName="aspnet";ph.aliases=[];function ph(t){t.register(es),t.register(Ze),t.languages.aspnet=t.languages.extend("markup",{"page-directive":{pattern:/<%\s*@.*%>/,alias:"tag",inside:{"page-directive":{pattern:/<%\s*@\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,alias:"tag"},rest:t.languages.markup.tag.inside}},directive:{pattern:/<%.*%>/,alias:"tag",inside:{directive:{pattern:/<%\s*?[$=%#:]{0,2}|%>/,alias:"tag"},rest:t.languages.csharp}}}),t.languages.aspnet.tag.pattern=/<(?!%)\/?[^\s>\/]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+))?)*\s*\/?>/,t.languages.insertBefore("inside","punctuation",{directive:t.languages.aspnet.directive},t.languages.aspnet.tag.inside["attr-value"]),t.languages.insertBefore("aspnet","comment",{"asp-comment":{pattern:/<%--[\s\S]*?--%>/,alias:["asp","comment"]}}),t.languages.insertBefore("aspnet",t.languages.javascript?"script":"tag",{"asp-script":{pattern:/(<script(?=.*runat=['"]?server\b)[^>]*>)[\s\S]*?(?=<\/script>)/i,lookbehind:!0,alias:["asp","script"],inside:t.languages.csharp||{}}})}mh.displayName="asm6502";mh.aliases=[];function mh(t){t.languages.asm6502={comment:/;.*/,directive:{pattern:/\.\w+(?= )/,alias:"property"},string:/(["'`])(?:\\.|(?!\1)[^\\\r\n])*\1/,"op-code":{pattern:/\b(?:ADC|AND|ASL|BCC|BCS|BEQ|BIT|BMI|BNE|BPL|BRK|BVC|BVS|CLC|CLD|CLI|CLV|CMP|CPX|CPY|DEC|DEX|DEY|EOR|INC|INX|INY|JMP|JSR|LDA|LDX|LDY|LSR|NOP|ORA|PHA|PHP|PLA|PLP|ROL|ROR|RTI|RTS|SBC|SEC|SED|SEI|STA|STX|STY|TAX|TAY|TSX|TXA|TXS|TYA|adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya)\b/,alias:"keyword"},"hex-number":{pattern:/#?\$[\da-f]{1,4}\b/i,alias:"number"},"binary-number":{pattern:/#?%[01]+\b/,alias:"number"},"decimal-number":{pattern:/#?\b\d+\b/,alias:"number"},register:{pattern:/\b[xya]\b/i,alias:"variable"},punctuation:/[(),:]/}}fh.displayName="asmatmel";fh.aliases=[];function fh(t){t.languages.asmatmel={comment:{pattern:/;.*/,greedy:!0},string:{pattern:/(["'`])(?:\\.|(?!\1)[^\\\r\n])*\1/,greedy:!0},constant:/\b(?:PORT[A-Z]|DDR[A-Z]|(?:DD|P)[A-Z](?:\d|[0-2]\d|3[01]))\b/,directive:{pattern:/\.\w+(?= )/,alias:"property"},"r-register":{pattern:/\br(?:\d|[12]\d|3[01])\b/,alias:"variable"},"op-code":{pattern:/\b(?:ADC|ADD|ADIW|AND|ANDI|ASR|BCLR|BLD|BRBC|BRBS|BRCC|BRCS|BREAK|BREQ|BRGE|BRHC|BRHS|BRID|BRIE|BRLO|BRLT|BRMI|BRNE|BRPL|BRSH|BRTC|BRTS|BRVC|BRVS|BSET|BST|CALL|CBI|CBR|CLC|CLH|CLI|CLN|CLR|CLS|CLT|CLV|CLZ|COM|CP|CPC|CPI|CPSE|DEC|DES|EICALL|EIJMP|ELPM|EOR|FMUL|FMULS|FMULSU|ICALL|IJMP|IN|INC|JMP|LAC|LAS|LAT|LD|LD[A-Za-z0-9]|LPM|LSL|LSR|MOV|MOVW|MUL|MULS|MULSU|NEG|NOP|OR|ORI|OUT|POP|PUSH|RCALL|RET|RETI|RJMP|ROL|ROR|SBC|SBCI|SBI|SBIC|SBIS|SBIW|SBR|SBRC|SBRS|SEC|SEH|SEI|SEN|SER|SES|SET|SEV|SEZ|SLEEP|SPM|ST|ST[A-Z0-9]|SUB|SUBI|SWAP|TST|WDR|XCH|adc|add|adiw|and|andi|asr|bclr|bld|brbc|brbs|brcc|brcs|break|breq|brge|brhc|brhs|brid|brie|brlo|brlt|brmi|brne|brpl|brsh|brtc|brts|brvc|brvs|bset|bst|call|cbi|cbr|clc|clh|cli|cln|clr|cls|clt|clv|clz|com|cp|cpc|cpi|cpse|dec|des|eicall|eijmp|elpm|eor|fmul|fmuls|fmulsu|icall|ijmp|in|inc|jmp|lac|las|lat|ld|ld[a-z0-9]|lpm|lsl|lsr|mov|movw|mul|muls|mulsu|neg|nop|or|ori|out|pop|push|rcall|ret|reti|rjmp|rol|ror|sbc|sbci|sbi|sbic|sbis|sbiw|sbr|sbrc|sbrs|sec|seh|sei|sen|ser|ses|set|sev|sez|sleep|spm|st|st[a-zA-Z0-9]|sub|subi|swap|tst|wdr|xch)\b/,alias:"keyword"},"hex-number":{pattern:/#?\$[\da-f]{2,4}\b/i,alias:"number"},"binary-number":{pattern:/#?%[01]+\b/,alias:"number"},"decimal-number":{pattern:/#?\b\d+\b/,alias:"number"},register:{pattern:/\b[acznvshtixy]\b/i,alias:"variable"},operator:/>>=?|<<=?|&[&=]?|\|[\|=]?|[-+*/%^!=<>?]=?/,punctuation:/[(),:]/}}gh.displayName="autohotkey";gh.aliases=[];function gh(t){t.languages.autohotkey={comment:[{pattern:/(^|\s);.*/,lookbehind:!0},{pattern:/(^[\t ]*)\/\*(?:[\r\n](?![ \t]*\*\/)|[^\r\n])*(?:[\r\n][ \t]*\*\/)?/m,lookbehind:!0,greedy:!0}],tag:{pattern:/^([ \t]*)[^\s,`":]+(?=:[ \t]*$)/m,lookbehind:!0},string:/"(?:[^"\n\r]|"")*"/,variable:/%\w+%/,number:/\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,operator:/\?|\/\/?=?|:=|\|[=|]?|&[=&]?|\+[=+]?|-[=-]?|\*[=*]?|<(?:<=?|>|=)?|>>?=?|[.^!=~]=?|\b(?:AND|NOT|OR)\b/,boolean:/\b(?:false|true)\b/,command:{pattern:/\b(?:AutoTrim|BlockInput|Break|Click|ClipWait|Continue|Control|ControlClick|ControlFocus|ControlGet|ControlGetFocus|ControlGetPos|ControlGetText|ControlMove|ControlSend|ControlSendRaw|ControlSetText|CoordMode|Critical|DetectHiddenText|DetectHiddenWindows|Drive|DriveGet|DriveSpaceFree|EnvAdd|EnvDiv|EnvGet|EnvMult|EnvSet|EnvSub|EnvUpdate|Exit|ExitApp|FileAppend|FileCopy|FileCopyDir|FileCreateDir|FileCreateShortcut|FileDelete|FileEncoding|FileGetAttrib|FileGetShortcut|FileGetSize|FileGetTime|FileGetVersion|FileInstall|FileMove|FileMoveDir|FileRead|FileReadLine|FileRecycle|FileRecycleEmpty|FileRemoveDir|FileSelectFile|FileSelectFolder|FileSetAttrib|FileSetTime|FormatTime|GetKeyState|Gosub|Goto|GroupActivate|GroupAdd|GroupClose|GroupDeactivate|Gui|GuiControl|GuiControlGet|Hotkey|ImageSearch|IniDelete|IniRead|IniWrite|Input|InputBox|KeyWait|ListHotkeys|ListLines|ListVars|Loop|Menu|MouseClick|MouseClickDrag|MouseGetPos|MouseMove|MsgBox|OnExit|OutputDebug|Pause|PixelGetColor|PixelSearch|PostMessage|Process|Progress|Random|RegDelete|RegRead|RegWrite|Reload|Repeat|Return|Run|RunAs|RunWait|Send|SendEvent|SendInput|SendMessage|SendMode|SendPlay|SendRaw|SetBatchLines|SetCapslockState|SetControlDelay|SetDefaultMouseSpeed|SetEnv|SetFormat|SetKeyDelay|SetMouseDelay|SetNumlockState|SetRegView|SetScrollLockState|SetStoreCapslockMode|SetTimer|SetTitleMatchMode|SetWinDelay|SetWorkingDir|Shutdown|Sleep|Sort|SoundBeep|SoundGet|SoundGetWaveVolume|SoundPlay|SoundSet|SoundSetWaveVolume|SplashImage|SplashTextOff|SplashTextOn|SplitPath|StatusBarGetText|StatusBarWait|StringCaseSense|StringGetPos|StringLeft|StringLen|StringLower|StringMid|StringReplace|StringRight|StringSplit|StringTrimLeft|StringTrimRight|StringUpper|Suspend|SysGet|Thread|ToolTip|Transform|TrayTip|URLDownloadToFile|WinActivate|WinActivateBottom|WinClose|WinGet|WinGetActiveStats|WinGetActiveTitle|WinGetClass|WinGetPos|WinGetText|WinGetTitle|WinHide|WinKill|WinMaximize|WinMenuSelectItem|WinMinimize|WinMinimizeAll|WinMinimizeAllUndo|WinMove|WinRestore|WinSet|WinSetTitle|WinShow|WinWait|WinWaitActive|WinWaitClose|WinWaitNotActive)\b/i,alias:"selector"},constant:/\b(?:a_ahkpath|a_ahkversion|a_appdata|a_appdatacommon|a_autotrim|a_batchlines|a_caretx|a_carety|a_computername|a_controldelay|a_cursor|a_dd|a_ddd|a_dddd|a_defaultmousespeed|a_desktop|a_desktopcommon|a_detecthiddentext|a_detecthiddenwindows|a_endchar|a_eventinfo|a_exitreason|a_fileencoding|a_formatfloat|a_formatinteger|a_gui|a_guicontrol|a_guicontrolevent|a_guievent|a_guiheight|a_guiwidth|a_guix|a_guiy|a_hour|a_iconfile|a_iconhidden|a_iconnumber|a_icontip|a_index|a_ipaddress1|a_ipaddress2|a_ipaddress3|a_ipaddress4|a_is64bitos|a_isadmin|a_iscompiled|a_iscritical|a_ispaused|a_issuspended|a_isunicode|a_keydelay|a_language|a_lasterror|a_linefile|a_linenumber|a_loopfield|a_loopfileattrib|a_loopfiledir|a_loopfileext|a_loopfilefullpath|a_loopfilelongpath|a_loopfilename|a_loopfileshortname|a_loopfileshortpath|a_loopfilesize|a_loopfilesizekb|a_loopfilesizemb|a_loopfiletimeaccessed|a_loopfiletimecreated|a_loopfiletimemodified|a_loopreadline|a_loopregkey|a_loopregname|a_loopregsubkey|a_loopregtimemodified|a_loopregtype|a_mday|a_min|a_mm|a_mmm|a_mmmm|a_mon|a_mousedelay|a_msec|a_mydocuments|a_now|a_nowutc|a_numbatchlines|a_ostype|a_osversion|a_priorhotkey|a_priorkey|a_programfiles|a_programs|a_programscommon|a_ptrsize|a_regview|a_screendpi|a_screenheight|a_screenwidth|a_scriptdir|a_scriptfullpath|a_scripthwnd|a_scriptname|a_sec|a_space|a_startmenu|a_startmenucommon|a_startup|a_startupcommon|a_stringcasesense|a_tab|a_temp|a_thisfunc|a_thishotkey|a_thislabel|a_thismenu|a_thismenuitem|a_thismenuitempos|a_tickcount|a_timeidle|a_timeidlephysical|a_timesincepriorhotkey|a_timesincethishotkey|a_titlematchmode|a_titlematchmodespeed|a_username|a_wday|a_windelay|a_windir|a_workingdir|a_yday|a_year|a_yweek|a_yyyy|clipboard|clipboardall|comspec|errorlevel|programfiles)\b/i,builtin:/\b(?:abs|acos|asc|asin|atan|ceil|chr|class|comobjactive|comobjarray|comobjconnect|comobjcreate|comobjerror|comobjflags|comobjget|comobjquery|comobjtype|comobjvalue|cos|dllcall|exp|fileexist|Fileopen|floor|format|il_add|il_create|il_destroy|instr|isfunc|islabel|IsObject|ln|log|ltrim|lv_add|lv_delete|lv_deletecol|lv_getcount|lv_getnext|lv_gettext|lv_insert|lv_insertcol|lv_modify|lv_modifycol|lv_setimagelist|mod|numget|numput|onmessage|regexmatch|regexreplace|registercallback|round|rtrim|sb_seticon|sb_setparts|sb_settext|sin|sqrt|strlen|strreplace|strsplit|substr|tan|tv_add|tv_delete|tv_get|tv_getchild|tv_getcount|tv_getnext|tv_getparent|tv_getprev|tv_getselection|tv_gettext|tv_modify|varsetcapacity|winactive|winexist|__Call|__Get|__New|__Set)\b/i,symbol:/\b(?:alt|altdown|altup|appskey|backspace|browser_back|browser_favorites|browser_forward|browser_home|browser_refresh|browser_search|browser_stop|bs|capslock|ctrl|ctrlbreak|ctrldown|ctrlup|del|delete|down|end|enter|esc|escape|f1|f10|f11|f12|f13|f14|f15|f16|f17|f18|f19|f2|f20|f21|f22|f23|f24|f3|f4|f5|f6|f7|f8|f9|home|ins|insert|joy1|joy10|joy11|joy12|joy13|joy14|joy15|joy16|joy17|joy18|joy19|joy2|joy20|joy21|joy22|joy23|joy24|joy25|joy26|joy27|joy28|joy29|joy3|joy30|joy31|joy32|joy4|joy5|joy6|joy7|joy8|joy9|joyaxes|joybuttons|joyinfo|joyname|joypov|joyr|joyu|joyv|joyx|joyy|joyz|lalt|launch_app1|launch_app2|launch_mail|launch_media|lbutton|lcontrol|lctrl|left|lshift|lwin|lwindown|lwinup|mbutton|media_next|media_play_pause|media_prev|media_stop|numlock|numpad0|numpad1|numpad2|numpad3|numpad4|numpad5|numpad6|numpad7|numpad8|numpad9|numpadadd|numpadclear|numpaddel|numpaddiv|numpaddot|numpaddown|numpadend|numpadenter|numpadhome|numpadins|numpadleft|numpadmult|numpadpgdn|numpadpgup|numpadright|numpadsub|numpadup|pgdn|pgup|printscreen|ralt|rbutton|rcontrol|rctrl|right|rshift|rwin|rwindown|rwinup|scrolllock|shift|shiftdown|shiftup|space|tab|up|volume_down|volume_mute|volume_up|wheeldown|wheelleft|wheelright|wheelup|xbutton1|xbutton2)\b/i,directive:{pattern:/#[a-z]+\b/i,alias:"important"},keyword:/\b(?:Abort|AboveNormal|Add|ahk_class|ahk_exe|ahk_group|ahk_id|ahk_pid|All|Alnum|Alpha|AltSubmit|AltTab|AltTabAndMenu|AltTabMenu|AltTabMenuDismiss|AlwaysOnTop|AutoSize|Background|BackgroundTrans|BelowNormal|between|BitAnd|BitNot|BitOr|BitShiftLeft|BitShiftRight|BitXOr|Bold|Border|Button|ByRef|Catch|Checkbox|Checked|CheckedGray|Choose|ChooseString|Close|Color|ComboBox|Contains|ControlList|Count|Date|DateTime|Days|DDL|Default|DeleteAll|Delimiter|Deref|Destroy|Digit|Disable|Disabled|DropDownList|Edit|Eject|Else|Enable|Enabled|Error|Exist|Expand|ExStyle|FileSystem|Finally|First|Flash|Float|FloatFast|Focus|Font|for|global|Grid|Group|GroupBox|GuiClose|GuiContextMenu|GuiDropFiles|GuiEscape|GuiSize|Hdr|Hidden|Hide|High|HKCC|HKCR|HKCU|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_LOCAL_MACHINE|HKEY_USERS|HKLM|HKU|Hours|HScroll|Icon|IconSmall|ID|IDLast|If|IfEqual|IfExist|IfGreater|IfGreaterOrEqual|IfInString|IfLess|IfLessOrEqual|IfMsgBox|IfNotEqual|IfNotExist|IfNotInString|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Ignore|ImageList|in|Integer|IntegerFast|Interrupt|is|italic|Join|Label|LastFound|LastFoundExist|Limit|Lines|List|ListBox|ListView|local|Lock|Logoff|Low|Lower|Lowercase|MainWindow|Margin|Maximize|MaximizeBox|MaxSize|Minimize|MinimizeBox|MinMax|MinSize|Minutes|MonthCal|Mouse|Move|Multi|NA|No|NoActivate|NoDefault|NoHide|NoIcon|NoMainWindow|norm|Normal|NoSort|NoSortHdr|NoStandard|Not|NoTab|NoTimers|Number|Off|Ok|On|OwnDialogs|Owner|Parse|Password|Picture|Pixel|Pos|Pow|Priority|ProcessName|Radio|Range|Read|ReadOnly|Realtime|Redraw|Region|REG_BINARY|REG_DWORD|REG_EXPAND_SZ|REG_MULTI_SZ|REG_SZ|Relative|Rename|Report|Resize|Restore|Retry|RGB|Screen|Seconds|Section|Serial|SetLabel|ShiftAltTab|Show|Single|Slider|SortDesc|Standard|static|Status|StatusBar|StatusCD|strike|Style|Submit|SysMenu|Tab2|TabStop|Text|Theme|Throw|Tile|ToggleCheck|ToggleEnable|ToolWindow|Top|Topmost|TransColor|Transparent|Tray|TreeView|Try|TryAgain|Type|UnCheck|underline|Unicode|Unlock|Until|UpDown|Upper|Uppercase|UseErrorLevel|Vis|VisFirst|Visible|VScroll|Wait|WaitClose|WantCtrlA|WantF2|WantReturn|While|Wrap|Xdigit|xm|xp|xs|Yes|ym|yp|ys)\b/i,function:/[^(); \t,\n+*\-=?>:\\\/<&%\[\]]+(?=\()/,punctuation:/[{}[\]():,]/}}bh.displayName="autoit";bh.aliases=[];function bh(t){t.languages.autoit={comment:[/;.*/,{pattern:/(^[\t ]*)#(?:comments-start|cs)[\s\S]*?^[ \t]*#(?:ce|comments-end)/m,lookbehind:!0}],url:{pattern:/(^[\t ]*#include\s+)(?:<[^\r\n>]+>|"[^\r\n"]+")/m,lookbehind:!0},string:{pattern:/(["'])(?:\1\1|(?!\1)[^\r\n])*\1/,greedy:!0,inside:{variable:/([%$@])\w+\1/}},directive:{pattern:/(^[\t ]*)#[\w-]+/m,lookbehind:!0,alias:"keyword"},function:/\b\w+(?=\()/,variable:/[$@]\w+/,keyword:/\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\b/i,number:/\b(?:0x[\da-f]+|\d+(?:\.\d+)?(?:e[+-]?\d+)?)\b/i,boolean:/\b(?:False|True)\b/i,operator:/<[=>]?|[-+*\/=&>]=?|[?^]|\b(?:And|Not|Or)\b/i,punctuation:/[\[\]().,:]/}}xh.displayName="avisynth";xh.aliases=["avs"];function xh(t){(function(n){function r(d,h){return d.replace(/<<(\d+)>>/g,function(x,g){return h[+g]})}function s(d,h,x){return RegExp(r(d,h),x||"")}var i=/bool|clip|float|int|string|val/.source,a=[/is(?:bool|clip|float|int|string)|defined|(?:(?:internal)?function|var)?exists?/.source,/apply|assert|default|eval|import|nop|select|undefined/.source,/opt_(?:allowfloataudio|avipadscanlines|dwchannelmask|enable_(?:b64a|planartopackedrgb|v210|y3_10_10|y3_10_16)|usewaveextensible|vdubplanarhack)|set(?:cachemode|maxcpu|memorymax|planarlegacyalignment|workingdir)/.source,/hex(?:value)?|value/.source,/abs|ceil|continued(?:denominator|numerator)?|exp|floor|fmod|frac|log(?:10)?|max|min|muldiv|pi|pow|rand|round|sign|spline|sqrt/.source,/a?sinh?|a?cosh?|a?tan[2h]?/.source,/(?:bit(?:and|not|x?or|[lr]?shift[aslu]?|sh[lr]|sa[lr]|[lr]rotatel?|ro[rl]|te?st|set(?:count)?|cl(?:ea)?r|ch(?:an)?ge?))/.source,/average(?:[bgr]|chroma[uv]|luma)|(?:[rgb]|chroma[uv]|luma|rgb|[yuv](?=difference(?:fromprevious|tonext)))difference(?:fromprevious|tonext)?|[yuvrgb]plane(?:median|min|max|minmaxdifference)/.source,/getprocessinfo|logmsg|script(?:dir(?:utf8)?|file(?:utf8)?|name(?:utf8)?)|setlogparams/.source,/chr|(?:fill|find|left|mid|replace|rev|right)str|format|[lu]case|ord|str(?:cmpi?|fromutf8|len|toutf8)|time|trim(?:all|left|right)/.source,/isversionorgreater|version(?:number|string)/.source,/buildpixeltype|colorspacenametopixeltype/.source,/addautoloaddir|on(?:cpu|cuda)|prefetch|setfiltermtmode/.source].join("|"),o=[/has(?:audio|video)/.source,/height|width/.source,/frame(?:count|rate)|framerate(?:denominator|numerator)/.source,/getparity|is(?:field|frame)based/.source,/bitspercomponent|componentsize|hasalpha|is(?:planar(?:rgba?)?|interleaved|rgb(?:24|32|48|64)?|y(?:8|u(?:va?|y2))?|yv(?:12|16|24|411)|420|422|444|packedrgb)|numcomponents|pixeltype/.source,/audio(?:bits|channels|duration|length(?:[fs]|hi|lo)?|rate)|isaudio(?:float|int)/.source].join("|"),l=[/avi(?:file)?source|directshowsource|image(?:reader|source|sourceanim)|opendmlsource|segmented(?:avisource|directshowsource)|wavsource/.source,/coloryuv|convertbacktoyuy2|convertto(?:RGB(?:24|32|48|64)|(?:planar)?RGBA?|Y8?|YV(?:12|16|24|411)|YUVA?(?:411|420|422|444)|YUY2)|fixluminance|gr[ae]yscale|invert|levels|limiter|mergea?rgb|merge(?:chroma|luma)|rgbadjust|show(?:alpha|blue|green|red)|swapuv|tweak|[uv]toy8?|ytouv/.source,/(?:colorkey|reset)mask|layer|mask(?:hs)?|merge|overlay|subtract/.source,/addborders|(?:bicubic|bilinear|blackman|gauss|lanczos4|lanczos|point|sinc|spline(?:16|36|64))resize|crop(?:bottom)?|flip(?:horizontal|vertical)|(?:horizontal|vertical)?reduceby2|letterbox|skewrows|turn(?:180|left|right)/.source,/blur|fixbrokenchromaupsampling|generalconvolution|(?:spatial|temporal)soften|sharpen/.source,/trim|(?:un)?alignedsplice|(?:assume|assumescaled|change|convert)FPS|(?:delete|duplicate)frame|dissolve|fade(?:in|io|out)[02]?|freezeframe|interleave|loop|reverse|select(?:even|odd|(?:range)?every)/.source,/assume[bt]ff|assume(?:field|frame)based|bob|complementparity|doubleweave|peculiarblend|pulldown|separate(?:columns|fields|rows)|swapfields|weave(?:columns|rows)?/.source,/amplify(?:db)?|assumesamplerate|audiodub(?:ex)?|audiotrim|convertaudioto(?:(?:8|16|24|32)bit|float)|converttomono|delayaudio|ensurevbrmp3sync|get(?:left|right)?channel|kill(?:audio|video)|mergechannels|mixaudio|monotostereo|normalize|resampleaudio|ssrc|supereq|timestretch/.source,/animate|applyrange|conditional(?:filter|reader|select)|frameevaluate|scriptclip|tcp(?:server|source)|writefile(?:end|if|start)?/.source,/imagewriter/.source,/blackness|blankclip|colorbars(?:hd)?|compare|dumpfiltergraph|echo|histogram|info|messageclip|preroll|setgraphanalysis|show(?:framenumber|smpte|time)|showfiveversions|stack(?:horizontal|vertical)|subtitle|tone|version/.source].join("|"),c=[a,o,l].join("|");n.languages.avisynth={comment:[{pattern:/(^|[^\\])\[\*(?:[^\[*]|\[(?!\*)|\*(?!\])|\[\*(?:[^\[*]|\[(?!\*)|\*(?!\]))*\*\])*\*\]/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\$])#.*/,lookbehind:!0,greedy:!0}],argument:{pattern:s(/\b(?:<<0>>)\s+("?)\w+\1/.source,[i],"i"),inside:{keyword:/^\w+/}},"argument-label":{pattern:/([,(][\s\\]*)\w+\s*=(?!=)/,lookbehind:!0,inside:{"argument-name":{pattern:/^\w+/,alias:"punctuation"},punctuation:/=$/}},string:[{pattern:/"""[\s\S]*?"""/,greedy:!0},{pattern:/"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,greedy:!0,inside:{constant:{pattern:/\b(?:DEFAULT_MT_MODE|(?:MAINSCRIPT|PROGRAM|SCRIPT)DIR|(?:MACHINE|USER)_(?:CLASSIC|PLUS)_PLUGINS)\b/}}}],variable:/\b(?:last)\b/i,boolean:/\b(?:false|no|true|yes)\b/i,keyword:/\b(?:catch|else|for|function|global|if|return|try|while|__END__)\b/i,constant:/\bMT_(?:MULTI_INSTANCE|NICE_FILTER|SERIALIZED|SPECIAL_MT)\b/,"builtin-function":{pattern:s(/\b(?:<<0>>)\b/.source,[c],"i"),alias:"function"},"type-cast":{pattern:s(/\b(?:<<0>>)(?=\s*\()/.source,[i],"i"),alias:"keyword"},function:{pattern:/\b[a-z_]\w*(?=\s*\()|(\.)[a-z_]\w*\b/i,lookbehind:!0},"line-continuation":{pattern:/(^[ \t]*)\\|\\(?=[ \t]*$)/m,lookbehind:!0,alias:"punctuation"},number:/\B\$(?:[\da-f]{6}|[\da-f]{8})\b|(?:(?:\b|\B-)\d+(?:\.\d*)?\b|\B\.\d+\b)/i,operator:/\+\+?|[!=<>]=?|&&|\|\||[?:*/%-]/,punctuation:/[{}\[\]();,.]/},n.languages.avs=n.languages.avisynth})(t)}Eh.displayName="avro-idl";Eh.aliases=["avdl"];function Eh(t){t.languages["avro-idl"]={comment:{pattern:/\/\/.*|\/\*[\s\S]*?\*\//,greedy:!0},string:{pattern:/(^|[^\\])"(?:[^\r\n"\\]|\\.)*"/,lookbehind:!0,greedy:!0},annotation:{pattern:/@(?:[$\w.-]|`[^\r\n`]+`)+/,greedy:!0,alias:"function"},"function-identifier":{pattern:/`[^\r\n`]+`(?=\s*\()/,greedy:!0,alias:"function"},identifier:{pattern:/`[^\r\n`]+`/,greedy:!0},"class-name":{pattern:/(\b(?:enum|error|protocol|record|throws)\b\s+)[$\w]+/,lookbehind:!0,greedy:!0},keyword:/\b(?:array|boolean|bytes|date|decimal|double|enum|error|false|fixed|float|idl|import|int|local_timestamp_ms|long|map|null|oneway|protocol|record|schema|string|throws|time_ms|timestamp_ms|true|union|uuid|void)\b/,function:/\b[a-z_]\w*(?=\s*\()/i,number:[{pattern:/(^|[^\w.])-?(?:(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?|0x(?:[a-f0-9]+(?:\.[a-f0-9]*)?|\.[a-f0-9]+)(?:p[+-]?\d+)?)[dfl]?(?![\w.])/i,lookbehind:!0},/-?\b(?:Infinity|NaN)\b/],operator:/=/,punctuation:/[()\[\]{}<>.:,;-]/},t.languages.avdl=t.languages["avro-idl"]}Th.displayName="awk";Th.aliases=["gawk"];function Th(t){t.languages.awk={hashbang:{pattern:/^#!.*/,greedy:!0,alias:"comment"},comment:{pattern:/#.*/,greedy:!0},string:{pattern:/(^|[^\\])"(?:[^\\"\r\n]|\\.)*"/,lookbehind:!0,greedy:!0},regex:{pattern:/((?:^|[^\w\s)])\s*)\/(?:[^\/\\\r\n]|\\.)*\//,lookbehind:!0,greedy:!0},variable:/\$\w+/,keyword:/\b(?:BEGIN|BEGINFILE|END|ENDFILE|break|case|continue|default|delete|do|else|exit|for|function|getline|if|in|next|nextfile|printf?|return|switch|while)\b|@(?:include|load)\b/,function:/\b[a-z_]\w*(?=\s*\()/i,number:/\b(?:\d+(?:\.\d+)?(?:e[+-]?\d+)?|0x[a-fA-F0-9]+)\b/,operator:/--|\+\+|!?~|>&|>>|<<|(?:\*\*|[<>!=+\-*/%^])=?|&&|\|[|&]|[?:]/,punctuation:/[()[\]{},;]/},t.languages.gawk=t.languages.awk}yh.displayName="batch";yh.aliases=[];function yh(t){(function(n){var r=/%%?[~:\w]+%?|!\S+!/,s={pattern:/\/[a-z?]+(?=[ :]|$):?|-[a-z]\b|--[a-z-]+\b/im,alias:"attr-name",inside:{punctuation:/:/}},i=/"(?:[\\"]"|[^"])*"(?!")/,a=/(?:\b|-)\d+\b/;n.languages.batch={comment:[/^::.*/m,{pattern:/((?:^|[&(])[ \t]*)rem\b(?:[^^&)\r\n]|\^(?:\r\n|[\s\S]))*/im,lookbehind:!0}],label:{pattern:/^:.*/m,alias:"property"},command:[{pattern:/((?:^|[&(])[ \t]*)for(?: \/[a-z?](?:[ :](?:"[^"]*"|[^\s"/]\S*))?)* \S+ in \([^)]+\) do/im,lookbehind:!0,inside:{keyword:/\b(?:do|in)\b|^for\b/i,string:i,parameter:s,variable:r,number:a,punctuation:/[()',]/}},{pattern:/((?:^|[&(])[ \t]*)if(?: \/[a-z?](?:[ :](?:"[^"]*"|[^\s"/]\S*))?)* (?:not )?(?:cmdextversion \d+|defined \w+|errorlevel \d+|exist \S+|(?:"[^"]*"|(?!")(?:(?!==)\S)+)?(?:==| (?:equ|geq|gtr|leq|lss|neq) )(?:"[^"]*"|[^\s"]\S*))/im,lookbehind:!0,inside:{keyword:/\b(?:cmdextversion|defined|errorlevel|exist|not)\b|^if\b/i,string:i,parameter:s,variable:r,number:a,operator:/\^|==|\b(?:equ|geq|gtr|leq|lss|neq)\b/i}},{pattern:/((?:^|[&()])[ \t]*)else\b/im,lookbehind:!0,inside:{keyword:/^else\b/i}},{pattern:/((?:^|[&(])[ \t]*)set(?: \/[a-z](?:[ :](?:"[^"]*"|[^\s"/]\S*))?)* (?:[^^&)\r\n]|\^(?:\r\n|[\s\S]))*/im,lookbehind:!0,inside:{keyword:/^set\b/i,string:i,parameter:s,variable:[r,/\w+(?=(?:[*\/%+\-&^|]|<<|>>)?=)/],number:a,operator:/[*\/%+\-&^|]=?|<<=?|>>=?|[!~_=]/,punctuation:/[()',]/}},{pattern:/((?:^|[&(])[ \t]*@?)\w+\b(?:"(?:[\\"]"|[^"])*"(?!")|[^"^&)\r\n]|\^(?:\r\n|[\s\S]))*/m,lookbehind:!0,inside:{keyword:/^\w+\b/,string:i,parameter:s,label:{pattern:/(^\s*):\S+/m,lookbehind:!0,alias:"property"},variable:r,number:a,operator:/\^/}}],operator:/[&@]/,punctuation:/[()']/}})(t)}Sh.displayName="bbcode";Sh.aliases=["shortcode"];function Sh(t){t.languages.bbcode={tag:{pattern:/\[\/?[^\s=\]]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'"\]=]+))?(?:\s+[^\s=\]]+\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'"\]=]+))*\s*\]/,inside:{tag:{pattern:/^\[\/?[^\s=\]]+/,inside:{punctuation:/^\[\/?/}},"attr-value":{pattern:/=\s*(?:"[^"]*"|'[^']*'|[^\s'"\]=]+)/,inside:{punctuation:[/^=/,{pattern:/^(\s*)["']|["']$/,lookbehind:!0}]}},punctuation:/\]/,"attr-name":/[^\s=\]]+/}}},t.languages.shortcode=t.languages.bbcode}Nh.displayName="bbj";Nh.aliases=[];function Nh(t){(function(n){n.languages.bbj={comment:{pattern:/(^|[^\\:])rem\s+.*/i,lookbehind:!0,greedy:!0},string:{pattern:/(['"])(?:(?!\1|\\).|\\.)*\1/,greedy:!0},number:/(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:E[+-]?\d+)?/i,keyword:/\b(?:abstract|all|argc|begin|bye|callback|case|chn|class|classend|ctl|day|declare|delete|dim|dom|dread|dsz|else|end|endif|err|exitto|extends|fi|field|for|from|gosub|goto|if|implements|interface|interfaceend|iol|iolist|let|list|load|method|methodend|methodret|on|opts|pfx|print|private|process_events|protected|psz|public|read|read_resource|release|remove_callback|repeat|restore|return|rev|seterr|setesc|sqlchn|sqlunt|ssn|start|static|swend|switch|sys|then|tim|unt|until|use|void|wend|where|while)\b/i,function:/\b\w+(?=\()/,boolean:/\b(?:BBjAPI\.TRUE|BBjAPI\.FALSE)\b/i,operator:/<[=>]?|>=?|[+\-*\/^=&]|\b(?:and|not|or|xor)\b/i,punctuation:/[.,;:()]/}})(t)}jh.displayName="bicep";jh.aliases=[];function jh(t){t.languages.bicep={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],property:[{pattern:/([\r\n][ \t]*)[a-z_]\w*(?=[ \t]*:)/i,lookbehind:!0},{pattern:/([\r\n][ \t]*)'(?:\\.|\$(?!\{)|[^'\\\r\n$])*'(?=[ \t]*:)/,lookbehind:!0,greedy:!0}],string:[{pattern:/'''[^'][\s\S]*?'''/,greedy:!0},{pattern:/(^|[^\\'])'(?:\\.|\$(?!\{)|[^'\\\r\n$])*'/,lookbehind:!0,greedy:!0}],"interpolated-string":{pattern:/(^|[^\\'])'(?:\\.|\$(?:(?!\{)|\{[^{}\r\n]*\})|[^'\\\r\n$])*'/,lookbehind:!0,greedy:!0,inside:{interpolation:{pattern:/\$\{[^{}\r\n]*\}/,inside:{expression:{pattern:/(^\$\{)[\s\S]+(?=\}$)/,lookbehind:!0},punctuation:/^\$\{|\}$/}},string:/[\s\S]+/}},datatype:{pattern:/(\b(?:output|param)\b[ \t]+\w+[ \t]+)\w+\b/,lookbehind:!0,alias:"class-name"},boolean:/\b(?:false|true)\b/,keyword:/\b(?:existing|for|if|in|module|null|output|param|resource|targetScope|var)\b/,decorator:/@\w+\b/,function:/\b[a-z_]\w*(?=[ \t]*\()/i,number:/(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:E[+-]?\d+)?/i,operator:/--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/,punctuation:/[{}[\];(),.:]/},t.languages.bicep["interpolated-string"].inside.interpolation.inside.expression.inside=t.languages.bicep}Ah.displayName="birb";Ah.aliases=[];function Ah(t){t.register(le),t.languages.birb=t.languages.extend("clike",{string:{pattern:/r?("|')(?:\\.|(?!\1)[^\\])*\1/,greedy:!0},"class-name":[/\b[A-Z](?:[\d_]*[a-zA-Z]\w*)?\b/,/\b(?:[A-Z]\w*|(?!(?:var|void)\b)[a-z]\w*)(?=\s+\w+\s*[;,=()])/],keyword:/\b(?:assert|break|case|class|const|default|else|enum|final|follows|for|grab|if|nest|new|next|noSeeb|return|static|switch|throw|var|void|while)\b/,operator:/\+\+|--|&&|\|\||<<=?|>>=?|~(?:\/=?)?|[+\-*\/%&^|=!<>]=?|\?|:/,variable:/\b[a-z_]\w*\b/}),t.languages.insertBefore("birb","function",{metadata:{pattern:/<\w+>/,greedy:!0,alias:"symbol"}})}_h.displayName="bison";_h.aliases=[];function _h(t){t.register(un),t.languages.bison=t.languages.extend("c",{}),t.languages.insertBefore("bison","comment",{bison:{pattern:/^(?:[^%]|%(?!%))*%%[\s\S]*?%%/,inside:{c:{pattern:/%\{[\s\S]*?%\}|\{(?:\{[^}]*\}|[^{}])*\}/,inside:{delimiter:{pattern:/^%?\{|%?\}$/,alias:"punctuation"},"bison-variable":{pattern:/[$@](?:<[^\s>]+>)?[\w$]+/,alias:"variable",inside:{punctuation:/<|>/}},rest:t.languages.c}},comment:t.languages.c.comment,string:t.languages.c.string,property:/\S+(?=:)/,keyword:/%\w+/,number:{pattern:/(^|[^@])\b(?:0x[\da-f]+|\d+)/i,lookbehind:!0},punctuation:/%[%?]|[|:;\[\]<>]/}}})}vh.displayName="bnf";vh.aliases=["rbnf"];function vh(t){t.languages.bnf={string:{pattern:/"[^\r\n"]*"|'[^\r\n']*'/},definition:{pattern:/<[^<>\r\n\t]+>(?=\s*::=)/,alias:["rule","keyword"],inside:{punctuation:/^<|>$/}},rule:{pattern:/<[^<>\r\n\t]+>/,inside:{punctuation:/^<|>$/}},operator:/::=|[|()[\]{}*+?]|\.{3}/},t.languages.rbnf=t.languages.bnf}Rh.displayName="bqn";Rh.aliases=[];function Rh(t){t.languages.bqn={shebang:{pattern:/^#![ \t]*\/.*/,alias:"important",greedy:!0},comment:{pattern:/#.*/,greedy:!0},"string-literal":{pattern:/"(?:[^"]|"")*"/,greedy:!0,alias:"string"},"character-literal":{pattern:/'(?:[\s\S]|[\uD800-\uDBFF][\uDC00-\uDFFF])'/,greedy:!0,alias:"char"},function:/•[\w¯.∞π]+[\w¯.∞π]*/,"dot-notation-on-brackets":{pattern:/\{(?=.*\}\.)|\}\./,alias:"namespace"},"special-name":{pattern:/(?:𝕨|𝕩|𝕗|𝕘|𝕤|𝕣|𝕎|𝕏|𝔽|𝔾|𝕊|_𝕣_|_𝕣)/,alias:"keyword"},"dot-notation-on-name":{pattern:/[A-Za-z_][\w¯∞π]*\./,alias:"namespace"},"word-number-scientific":{pattern:/\d+(?:\.\d+)?[eE]¯?\d+/,alias:"number"},"word-name":{pattern:/[A-Za-z_][\w¯∞π]*/,alias:"symbol"},"word-number":{pattern:/[¯∞π]?(?:\d*\.?\b\d+(?:e[+¯]?\d+|E[+¯]?\d+)?|¯|∞|π)(?:j¯?(?:(?:\d+(?:\.\d+)?|\.\d+)(?:e[+¯]?\d+|E[+¯]?\d+)?|¯|∞|π))?/,alias:"number"},"null-literal":{pattern:/@/,alias:"char"},"primitive-functions":{pattern:/[-+×÷⋆√⌊⌈|¬∧∨<>≠=≤≥≡≢⊣⊢⥊∾≍⋈↑↓↕«»⌽⍉/⍋⍒⊏⊑⊐⊒∊⍷⊔!]/,alias:"operator"},"primitive-1-operators":{pattern:/[`˜˘¨⁼⌜´˝˙]/,alias:"operator"},"primitive-2-operators":{pattern:/[∘⊸⟜○⌾⎉⚇⍟⊘◶⎊]/,alias:"operator"},punctuation:/[←⇐↩(){}⟨⟩[\]‿·⋄,.;:?]/}}wh.displayName="brainfuck";wh.aliases=[];function wh(t){t.languages.brainfuck={pointer:{pattern:/<|>/,alias:"keyword"},increment:{pattern:/\+/,alias:"inserted"},decrement:{pattern:/-/,alias:"deleted"},branching:{pattern:/\[|\]/,alias:"important"},operator:/[.,]/,comment:/\S+/}}Ih.displayName="brightscript";Ih.aliases=[];function Ih(t){t.languages.brightscript={comment:/(?:\brem|').*/i,"directive-statement":{pattern:/(^[\t ]*)#(?:const|else(?:[\t ]+if)?|end[\t ]+if|error|if).*/im,lookbehind:!0,alias:"property",inside:{"error-message":{pattern:/(^#error).+/,lookbehind:!0},directive:{pattern:/^#(?:const|else(?:[\t ]+if)?|end[\t ]+if|error|if)/,alias:"keyword"},expression:{pattern:/[\s\S]+/,inside:null}}},property:{pattern:/([\r\n{,][\t ]*)(?:(?!\d)\w+|"(?:[^"\r\n]|"")*"(?!"))(?=[ \t]*:)/,lookbehind:!0,greedy:!0},string:{pattern:/"(?:[^"\r\n]|"")*"(?!")/,greedy:!0},"class-name":{pattern:/(\bAs[\t ]+)\w+/i,lookbehind:!0},keyword:/\b(?:As|Dim|Each|Else|Elseif|End|Exit|For|Function|Goto|If|In|Print|Return|Step|Stop|Sub|Then|To|While)\b/i,boolean:/\b(?:false|true)\b/i,function:/\b(?!\d)\w+(?=[\t ]*\()/,number:/(?:\b\d+(?:\.\d+)?(?:[ed][+-]\d+)?|&h[a-f\d]+)\b[%&!#]?/i,operator:/--|\+\+|>>=?|<<=?|<>|[-+*/\\<>]=?|[:^=?]|\b(?:and|mod|not|or)\b/i,punctuation:/[.,;()[\]{}]/,constant:/\b(?:LINE_NUM)\b/i},t.languages.brightscript["directive-statement"].inside.expression.inside=t.languages.brightscript}Ch.displayName="bro";Ch.aliases=[];function Ch(t){t.languages.bro={comment:{pattern:/(^|[^\\$])#.*/,lookbehind:!0,inside:{italic:/\b(?:FIXME|TODO|XXX)\b/}},string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},boolean:/\b[TF]\b/,function:{pattern:/(\b(?:event|function|hook)[ \t]+)\w+(?:::\w+)?/,lookbehind:!0},builtin:/(?:@(?:load(?:-(?:plugin|sigs))?|unload|prefixes|ifn?def|else|(?:end)?if|DIR|FILENAME))|(?:&?(?:add_func|create_expire|default|delete_func|encrypt|error_handler|expire_func|group|log|mergeable|optional|persistent|priority|raw_output|read_expire|redef|rotate_interval|rotate_size|synchronized|type_column|write_expire))/,constant:{pattern:/(\bconst[ \t]+)\w+/i,lookbehind:!0},keyword:/\b(?:add|addr|alarm|any|bool|break|const|continue|count|delete|double|else|enum|event|export|file|for|function|global|hook|if|in|int|interval|local|module|next|of|opaque|pattern|port|print|record|return|schedule|set|string|subnet|table|time|timeout|using|vector|when)\b/,operator:/--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&|\|\|?|\?|\*|\/|~|\^|%/,number:/\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,punctuation:/[{}[\];(),.:]/}}Oh.displayName="bsl";Oh.aliases=["oscript"];function Oh(t){t.languages.bsl={comment:/\/\/.*/,string:[{pattern:/"(?:[^"]|"")*"(?!")/,greedy:!0},{pattern:/'(?:[^'\r\n\\]|\\.)*'/}],keyword:[{pattern:/(^|[^\w\u0400-\u0484\u0487-\u052f\u1d2b\u1d78\u2de0-\u2dff\ua640-\ua69f\ufe2e\ufe2f])(?:пока|для|новый|прервать|попытка|исключение|вызватьисключение|иначе|конецпопытки|неопределено|функция|перем|возврат|конецфункции|если|иначеесли|процедура|конецпроцедуры|тогда|знач|экспорт|конецесли|из|каждого|истина|ложь|по|цикл|конеццикла|выполнить)(?![\w\u0400-\u0484\u0487-\u052f\u1d2b\u1d78\u2de0-\u2dff\ua640-\ua69f\ufe2e\ufe2f])/i,lookbehind:!0},{pattern:/\b(?:break|do|each|else|elseif|enddo|endfunction|endif|endprocedure|endtry|except|execute|export|false|for|function|if|in|new|null|procedure|raise|return|then|to|true|try|undefined|val|var|while)\b/i}],number:{pattern:/(^(?=\d)|[^\w\u0400-\u0484\u0487-\u052f\u1d2b\u1d78\u2de0-\u2dff\ua640-\ua69f\ufe2e\ufe2f])(?:\d+(?:\.\d*)?|\.\d+)(?:E[+-]?\d+)?/i,lookbehind:!0},operator:[/[<>+\-*/]=?|[%=]/,{pattern:/(^|[^\w\u0400-\u0484\u0487-\u052f\u1d2b\u1d78\u2de0-\u2dff\ua640-\ua69f\ufe2e\ufe2f])(?:и|или|не)(?![\w\u0400-\u0484\u0487-\u052f\u1d2b\u1d78\u2de0-\u2dff\ua640-\ua69f\ufe2e\ufe2f])/i,lookbehind:!0},{pattern:/\b(?:and|not|or)\b/i}],punctuation:/\(\.|\.\)|[()\[\]:;,.]/,directive:[{pattern:/^([ \t]*)&.*/m,lookbehind:!0,greedy:!0,alias:"important"},{pattern:/^([ \t]*)#.*/gm,lookbehind:!0,greedy:!0,alias:"important"}]},t.languages.oscript=t.languages.bsl}kh.displayName="cfscript";kh.aliases=["cfc"];function kh(t){t.register(le),t.languages.cfscript=t.languages.extend("clike",{comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0,inside:{annotation:{pattern:/(?:^|[^.])@[\w\.]+/,alias:"punctuation"}}},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],keyword:/\b(?:abstract|break|catch|component|continue|default|do|else|extends|final|finally|for|function|if|in|include|package|private|property|public|remote|required|rethrow|return|static|switch|throw|try|var|while|xml)\b(?!\s*=)/,operator:[/\+\+|--|&&|\|\||::|=>|[!=]==|[-+*/%&|^!=<>]=?|\?(?:\.|:)?|:/,/\b(?:and|contains|eq|equal|eqv|gt|gte|imp|is|lt|lte|mod|not|or|xor)\b/],scope:{pattern:/\b(?:application|arguments|cgi|client|cookie|local|session|super|this|variables)\b/,alias:"global"},type:{pattern:/\b(?:any|array|binary|boolean|date|guid|numeric|query|string|struct|uuid|void|xml)\b/,alias:"builtin"}}),t.languages.insertBefore("cfscript","keyword",{"function-variable":{pattern:/[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,alias:"function"}}),delete t.languages.cfscript["class-name"],t.languages.cfc=t.languages.cfscript}Lh.displayName="chaiscript";Lh.aliases=[];function Lh(t){t.register(le),t.register(Jr),t.languages.chaiscript=t.languages.extend("clike",{string:{pattern:/(^|[^\\])'(?:[^'\\]|\\[\s\S])*'/,lookbehind:!0,greedy:!0},"class-name":[{pattern:/(\bclass\s+)\w+/,lookbehind:!0},{pattern:/(\b(?:attr|def)\s+)\w+(?=\s*::)/,lookbehind:!0}],keyword:/\b(?:attr|auto|break|case|catch|class|continue|def|default|else|finally|for|fun|global|if|return|switch|this|try|var|while)\b/,number:[t.languages.cpp.number,/\b(?:Infinity|NaN)\b/],operator:/>>=?|<<=?|\|\||&&|:[:=]?|--|\+\+|[=!<>+\-*/%|&^]=?|[?~]|`[^`\r\n]{1,4}`/}),t.languages.insertBefore("chaiscript","operator",{"parameter-type":{pattern:/([,(]\s*)\w+(?=\s+\w)/,lookbehind:!0,alias:"class-name"}}),t.languages.insertBefore("chaiscript","string",{"string-interpolation":{pattern:/(^|[^\\])"(?:[^"$\\]|\\[\s\S]|\$(?!\{)|\$\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})*\})*"/,lookbehind:!0,greedy:!0,inside:{interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})*\}/,lookbehind:!0,inside:{"interpolation-expression":{pattern:/(^\$\{)[\s\S]+(?=\}$)/,lookbehind:!0,inside:t.languages.chaiscript},"interpolation-punctuation":{pattern:/^\$\{|\}$/,alias:"punctuation"}}},string:/[\s\S]+/}}})}Dh.displayName="cil";Dh.aliases=[];function Dh(t){t.languages.cil={comment:/\/\/.*/,string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},directive:{pattern:/(^|\W)\.[a-z]+(?=\s)/,lookbehind:!0,alias:"class-name"},variable:/\[[\w\.]+\]/,keyword:/\b(?:abstract|ansi|assembly|auto|autochar|beforefieldinit|bool|bstr|byvalstr|catch|char|cil|class|currency|date|decimal|default|enum|error|explicit|extends|extern|famandassem|family|famorassem|final(?:ly)?|float32|float64|hidebysig|u?int(?:8|16|32|64)?|iant|idispatch|implements|import|initonly|instance|interface|iunknown|literal|lpstr|lpstruct|lptstr|lpwstr|managed|method|native(?:Type)?|nested|newslot|object(?:ref)?|pinvokeimpl|private|privatescope|public|reqsecobj|rtspecialname|runtime|sealed|sequential|serializable|specialname|static|string|struct|syschar|tbstr|unicode|unmanagedexp|unsigned|value(?:type)?|variant|virtual|void)\b/,function:/\b(?:(?:constrained|no|readonly|tail|unaligned|volatile)\.)?(?:conv\.(?:[iu][1248]?|ovf\.[iu][1248]?(?:\.un)?|r\.un|r4|r8)|ldc\.(?:i4(?:\.\d+|\.[mM]1|\.s)?|i8|r4|r8)|ldelem(?:\.[iu][1248]?|\.r[48]|\.ref|a)?|ldind\.(?:[iu][1248]?|r[48]|ref)|stelem\.?(?:i[1248]?|r[48]|ref)?|stind\.(?:i[1248]?|r[48]|ref)?|end(?:fault|filter|finally)|ldarg(?:\.[0-3s]|a(?:\.s)?)?|ldloc(?:\.\d+|\.s)?|sub(?:\.ovf(?:\.un)?)?|mul(?:\.ovf(?:\.un)?)?|add(?:\.ovf(?:\.un)?)?|stloc(?:\.[0-3s])?|refany(?:type|val)|blt(?:\.un)?(?:\.s)?|ble(?:\.un)?(?:\.s)?|bgt(?:\.un)?(?:\.s)?|bge(?:\.un)?(?:\.s)?|unbox(?:\.any)?|init(?:blk|obj)|call(?:i|virt)?|brfalse(?:\.s)?|bne\.un(?:\.s)?|ldloca(?:\.s)?|brzero(?:\.s)?|brtrue(?:\.s)?|brnull(?:\.s)?|brinst(?:\.s)?|starg(?:\.s)?|leave(?:\.s)?|shr(?:\.un)?|rem(?:\.un)?|div(?:\.un)?|clt(?:\.un)?|alignment|castclass|ldvirtftn|beq(?:\.s)?|ckfinite|ldsflda|ldtoken|localloc|mkrefany|rethrow|cgt\.un|arglist|switch|stsfld|sizeof|newobj|newarr|ldsfld|ldnull|ldflda|isinst|throw|stobj|stfld|ldstr|ldobj|ldlen|ldftn|ldfld|cpobj|cpblk|break|br\.s|xor|shl|ret|pop|not|nop|neg|jmp|dup|cgt|ceq|box|and|or|br)\b/,boolean:/\b(?:false|true)\b/,number:/\b-?(?:0x[0-9a-f]+|\d+)(?:\.[0-9a-f]+)?\b/i,punctuation:/[{}[\];(),:=]|IL_[0-9A-Za-z]+/}}Mh.displayName="cilkc";Mh.aliases=["cilk-c"];function Mh(t){t.register(un),t.languages.cilkc=t.languages.insertBefore("c","function",{"parallel-keyword":{pattern:/\bcilk_(?:for|reducer|s(?:cope|pawn|ync))\b/,alias:"keyword"}}),t.languages["cilk-c"]=t.languages.cilkc}Fh.displayName="cilkcpp";Fh.aliases=["cilk","cilk-cpp"];function Fh(t){t.register(Jr),t.languages.cilkcpp=t.languages.insertBefore("cpp","function",{"parallel-keyword":{pattern:/\bcilk_(?:for|reducer|s(?:cope|pawn|ync))\b/,alias:"keyword"}}),t.languages["cilk-cpp"]=t.languages.cilkcpp,t.languages.cilk=t.languages.cilkcpp}Ph.displayName="clojure";Ph.aliases=[];function Ph(t){t.languages.clojure={comment:{pattern:/;.*/,greedy:!0},string:{pattern:/"(?:[^"\\]|\\.)*"/,greedy:!0},char:/\\\w+/,symbol:{pattern:/(^|[\s()\[\]{},])::?[\w*+!?'<>=/.-]+/,lookbehind:!0},keyword:{pattern:/(\()(?:-|->|->>|\.|\.\.|\*|\/|\+|<|<=|=|==|>|>=|accessor|agent|agent-errors|aget|alength|all-ns|alter|and|append-child|apply|array-map|aset|aset-boolean|aset-byte|aset-char|aset-double|aset-float|aset-int|aset-long|aset-short|assert|assoc|await|await-for|bean|binding|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|boolean|branch\?|butlast|byte|cast|char|children|class|clear-agent-errors|comment|commute|comp|comparator|complement|concat|cond|conj|cons|constantly|construct-proxy|contains\?|count|create-ns|create-struct|cycle|dec|declare|def|def-|definline|definterface|defmacro|defmethod|defmulti|defn|defn-|defonce|defproject|defprotocol|defrecord|defstruct|deftype|deref|difference|disj|dissoc|distinct|do|doall|doc|dorun|doseq|dosync|dotimes|doto|double|down|drop|drop-while|edit|end\?|ensure|eval|every\?|false\?|ffirst|file-seq|filter|find|find-doc|find-ns|find-var|first|float|flush|fn|fnseq|for|frest|gensym|get|get-proxy-class|hash-map|hash-set|identical\?|identity|if|if-let|if-not|import|in-ns|inc|index|insert-child|insert-left|insert-right|inspect-table|inspect-tree|instance\?|int|interleave|intersection|into|into-array|iterate|join|key|keys|keyword|keyword\?|last|lazy-cat|lazy-cons|left|lefts|let|line-seq|list|list\*|load|load-file|locking|long|loop|macroexpand|macroexpand-1|make-array|make-node|map|map-invert|map\?|mapcat|max|max-key|memfn|merge|merge-with|meta|min|min-key|monitor-enter|name|namespace|neg\?|new|newline|next|nil\?|node|not|not-any\?|not-every\?|not=|ns|ns-imports|ns-interns|ns-map|ns-name|ns-publics|ns-refers|ns-resolve|ns-unmap|nth|nthrest|or|parse|partial|path|peek|pop|pos\?|pr|pr-str|print|print-str|println|println-str|prn|prn-str|project|proxy|proxy-mappings|quot|quote|rand|rand-int|range|re-find|re-groups|re-matcher|re-matches|re-pattern|re-seq|read|read-line|recur|reduce|ref|ref-set|refer|rem|remove|remove-method|remove-ns|rename|rename-keys|repeat|replace|replicate|resolve|rest|resultset-seq|reverse|rfirst|right|rights|root|rrest|rseq|second|select|select-keys|send|send-off|seq|seq-zip|seq\?|set|set!|short|slurp|some|sort|sort-by|sorted-map|sorted-map-by|sorted-set|special-symbol\?|split-at|split-with|str|string\?|struct|struct-map|subs|subvec|symbol|symbol\?|sync|take|take-nth|take-while|test|throw|time|to-array|to-array-2d|tree-seq|true\?|try|union|up|update-proxy|val|vals|var|var-get|var-set|var\?|vector|vector-zip|vector\?|when|when-first|when-let|when-not|with-local-vars|with-meta|with-open|with-out-str|xml-seq|xml-zip|zero\?|zipmap|zipper)(?=[\s)]|$)/,lookbehind:!0},boolean:/\b(?:false|nil|true)\b/,number:{pattern:/(^|[^\w$@])(?:\d+(?:[/.]\d+)?(?:e[+-]?\d+)?|0x[a-f0-9]+|[1-9]\d?r[a-z0-9]+)[lmn]?(?![\w$@])/i,lookbehind:!0},function:{pattern:/((?:^|[^'])\()[\w*+!?'<>=/.-]+(?=[\s)]|$)/,lookbehind:!0},operator:/[#@^`~]/,punctuation:/[{}\[\](),]/}}Uh.displayName="cmake";Uh.aliases=[];function Uh(t){t.languages.cmake={comment:/#.*/,string:{pattern:/"(?:[^\\"]|\\.)*"/,greedy:!0,inside:{interpolation:{pattern:/\$\{(?:[^{}$]|\$\{[^{}$]*\})*\}/,inside:{punctuation:/\$\{|\}/,variable:/\w+/}}}},variable:/\b(?:CMAKE_\w+|\w+_(?:(?:BINARY|SOURCE)_DIR|DESCRIPTION|HOMEPAGE_URL|ROOT|VERSION(?:_MAJOR|_MINOR|_PATCH|_TWEAK)?)|(?:ANDROID|APPLE|BORLAND|BUILD_SHARED_LIBS|CACHE|CPACK_(?:ABSOLUTE_DESTINATION_FILES|COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY|ERROR_ON_ABSOLUTE_INSTALL_DESTINATION|INCLUDE_TOPLEVEL_DIRECTORY|INSTALL_DEFAULT_DIRECTORY_PERMISSIONS|INSTALL_SCRIPT|PACKAGING_INSTALL_PREFIX|SET_DESTDIR|WARN_ON_ABSOLUTE_INSTALL_DESTINATION)|CTEST_(?:BINARY_DIRECTORY|BUILD_COMMAND|BUILD_NAME|BZR_COMMAND|BZR_UPDATE_OPTIONS|CHANGE_ID|CHECKOUT_COMMAND|CONFIGURATION_TYPE|CONFIGURE_COMMAND|COVERAGE_COMMAND|COVERAGE_EXTRA_FLAGS|CURL_OPTIONS|CUSTOM_(?:COVERAGE_EXCLUDE|ERROR_EXCEPTION|ERROR_MATCH|ERROR_POST_CONTEXT|ERROR_PRE_CONTEXT|MAXIMUM_FAILED_TEST_OUTPUT_SIZE|MAXIMUM_NUMBER_OF_(?:ERRORS|WARNINGS)|MAXIMUM_PASSED_TEST_OUTPUT_SIZE|MEMCHECK_IGNORE|POST_MEMCHECK|POST_TEST|PRE_MEMCHECK|PRE_TEST|TESTS_IGNORE|WARNING_EXCEPTION|WARNING_MATCH)|CVS_CHECKOUT|CVS_COMMAND|CVS_UPDATE_OPTIONS|DROP_LOCATION|DROP_METHOD|DROP_SITE|DROP_SITE_CDASH|DROP_SITE_PASSWORD|DROP_SITE_USER|EXTRA_COVERAGE_GLOB|GIT_COMMAND|GIT_INIT_SUBMODULES|GIT_UPDATE_CUSTOM|GIT_UPDATE_OPTIONS|HG_COMMAND|HG_UPDATE_OPTIONS|LABELS_FOR_SUBPROJECTS|MEMORYCHECK_(?:COMMAND|COMMAND_OPTIONS|SANITIZER_OPTIONS|SUPPRESSIONS_FILE|TYPE)|NIGHTLY_START_TIME|P4_CLIENT|P4_COMMAND|P4_OPTIONS|P4_UPDATE_OPTIONS|RUN_CURRENT_SCRIPT|SCP_COMMAND|SITE|SOURCE_DIRECTORY|SUBMIT_URL|SVN_COMMAND|SVN_OPTIONS|SVN_UPDATE_OPTIONS|TEST_LOAD|TEST_TIMEOUT|TRIGGER_SITE|UPDATE_COMMAND|UPDATE_OPTIONS|UPDATE_VERSION_ONLY|USE_LAUNCHERS)|CYGWIN|ENV|EXECUTABLE_OUTPUT_PATH|GHS-MULTI|IOS|LIBRARY_OUTPUT_PATH|MINGW|MSVC(?:10|11|12|14|60|70|71|80|90|_IDE|_TOOLSET_VERSION|_VERSION)?|MSYS|PROJECT_NAME|UNIX|WIN32|WINCE|WINDOWS_PHONE|WINDOWS_STORE|XCODE))\b/,property:/\b(?:cxx_\w+|(?:ARCHIVE_OUTPUT_(?:DIRECTORY|NAME)|COMPILE_DEFINITIONS|COMPILE_PDB_NAME|COMPILE_PDB_OUTPUT_DIRECTORY|EXCLUDE_FROM_DEFAULT_BUILD|IMPORTED_(?:IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_LANGUAGES|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|NO_SONAME|OBJECTS|SONAME)|INTERPROCEDURAL_OPTIMIZATION|LIBRARY_OUTPUT_DIRECTORY|LIBRARY_OUTPUT_NAME|LINK_FLAGS|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|MAP_IMPORTED_CONFIG|OSX_ARCHITECTURES|OUTPUT_NAME|PDB_NAME|PDB_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_NAME|STATIC_LIBRARY_FLAGS|VS_CSHARP|VS_DOTNET_REFERENCEPROP|VS_DOTNET_REFERENCE|VS_GLOBAL_SECTION_POST|VS_GLOBAL_SECTION_PRE|VS_GLOBAL|XCODE_ATTRIBUTE)_\w+|\w+_(?:CLANG_TIDY|COMPILER_LAUNCHER|CPPCHECK|CPPLINT|INCLUDE_WHAT_YOU_USE|OUTPUT_NAME|POSTFIX|VISIBILITY_PRESET)|ABSTRACT|ADDITIONAL_MAKE_CLEAN_FILES|ADVANCED|ALIASED_TARGET|ALLOW_DUPLICATE_CUSTOM_TARGETS|ANDROID_(?:ANT_ADDITIONAL_OPTIONS|API|API_MIN|ARCH|ASSETS_DIRECTORIES|GUI|JAR_DEPENDENCIES|NATIVE_LIB_DEPENDENCIES|NATIVE_LIB_DIRECTORIES|PROCESS_MAX|PROGUARD|PROGUARD_CONFIG_PATH|SECURE_PROPS_PATH|SKIP_ANT_STEP|STL_TYPE)|ARCHIVE_OUTPUT_DIRECTORY|ATTACHED_FILES|ATTACHED_FILES_ON_FAIL|AUTOGEN_(?:BUILD_DIR|ORIGIN_DEPENDS|PARALLEL|SOURCE_GROUP|TARGETS_FOLDER|TARGET_DEPENDS)|AUTOMOC|AUTOMOC_(?:COMPILER_PREDEFINES|DEPEND_FILTERS|EXECUTABLE|MACRO_NAMES|MOC_OPTIONS|SOURCE_GROUP|TARGETS_FOLDER)|AUTORCC|AUTORCC_EXECUTABLE|AUTORCC_OPTIONS|AUTORCC_SOURCE_GROUP|AUTOUIC|AUTOUIC_EXECUTABLE|AUTOUIC_OPTIONS|AUTOUIC_SEARCH_PATHS|BINARY_DIR|BUILDSYSTEM_TARGETS|BUILD_RPATH|BUILD_RPATH_USE_ORIGIN|BUILD_WITH_INSTALL_NAME_DIR|BUILD_WITH_INSTALL_RPATH|BUNDLE|BUNDLE_EXTENSION|CACHE_VARIABLES|CLEAN_NO_CUSTOM|COMMON_LANGUAGE_RUNTIME|COMPATIBLE_INTERFACE_(?:BOOL|NUMBER_MAX|NUMBER_MIN|STRING)|COMPILE_(?:DEFINITIONS|FEATURES|FLAGS|OPTIONS|PDB_NAME|PDB_OUTPUT_DIRECTORY)|COST|CPACK_DESKTOP_SHORTCUTS|CPACK_NEVER_OVERWRITE|CPACK_PERMANENT|CPACK_STARTUP_SHORTCUTS|CPACK_START_MENU_SHORTCUTS|CPACK_WIX_ACL|CROSSCOMPILING_EMULATOR|CUDA_EXTENSIONS|CUDA_PTX_COMPILATION|CUDA_RESOLVE_DEVICE_SYMBOLS|CUDA_SEPARABLE_COMPILATION|CUDA_STANDARD|CUDA_STANDARD_REQUIRED|CXX_EXTENSIONS|CXX_STANDARD|CXX_STANDARD_REQUIRED|C_EXTENSIONS|C_STANDARD|C_STANDARD_REQUIRED|DEBUG_CONFIGURATIONS|DEFINE_SYMBOL|DEFINITIONS|DEPENDS|DEPLOYMENT_ADDITIONAL_FILES|DEPLOYMENT_REMOTE_DIRECTORY|DISABLED|DISABLED_FEATURES|ECLIPSE_EXTRA_CPROJECT_CONTENTS|ECLIPSE_EXTRA_NATURES|ENABLED_FEATURES|ENABLED_LANGUAGES|ENABLE_EXPORTS|ENVIRONMENT|EXCLUDE_FROM_ALL|EXCLUDE_FROM_DEFAULT_BUILD|EXPORT_NAME|EXPORT_PROPERTIES|EXTERNAL_OBJECT|EchoString|FAIL_REGULAR_EXPRESSION|FIND_LIBRARY_USE_LIB32_PATHS|FIND_LIBRARY_USE_LIB64_PATHS|FIND_LIBRARY_USE_LIBX32_PATHS|FIND_LIBRARY_USE_OPENBSD_VERSIONING|FIXTURES_CLEANUP|FIXTURES_REQUIRED|FIXTURES_SETUP|FOLDER|FRAMEWORK|Fortran_FORMAT|Fortran_MODULE_DIRECTORY|GENERATED|GENERATOR_FILE_NAME|GENERATOR_IS_MULTI_CONFIG|GHS_INTEGRITY_APP|GHS_NO_SOURCE_GROUP_FILE|GLOBAL_DEPENDS_DEBUG_MODE|GLOBAL_DEPENDS_NO_CYCLES|GNUtoMS|HAS_CXX|HEADER_FILE_ONLY|HELPSTRING|IMPLICIT_DEPENDS_INCLUDE_TRANSFORM|IMPORTED|IMPORTED_(?:COMMON_LANGUAGE_RUNTIME|CONFIGURATIONS|GLOBAL|IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_(?:LANGUAGES|LIBRARIES|MULTIPLICITY)|LOCATION|NO_SONAME|OBJECTS|SONAME)|IMPORT_PREFIX|IMPORT_SUFFIX|INCLUDE_DIRECTORIES|INCLUDE_REGULAR_EXPRESSION|INSTALL_NAME_DIR|INSTALL_RPATH|INSTALL_RPATH_USE_LINK_PATH|INTERFACE_(?:AUTOUIC_OPTIONS|COMPILE_DEFINITIONS|COMPILE_FEATURES|COMPILE_OPTIONS|INCLUDE_DIRECTORIES|LINK_DEPENDS|LINK_DIRECTORIES|LINK_LIBRARIES|LINK_OPTIONS|POSITION_INDEPENDENT_CODE|SOURCES|SYSTEM_INCLUDE_DIRECTORIES)|INTERPROCEDURAL_OPTIMIZATION|IN_TRY_COMPILE|IOS_INSTALL_COMBINED|JOB_POOLS|JOB_POOL_COMPILE|JOB_POOL_LINK|KEEP_EXTENSION|LABELS|LANGUAGE|LIBRARY_OUTPUT_DIRECTORY|LINKER_LANGUAGE|LINK_(?:DEPENDS|DEPENDS_NO_SHARED|DIRECTORIES|FLAGS|INTERFACE_LIBRARIES|INTERFACE_MULTIPLICITY|LIBRARIES|OPTIONS|SEARCH_END_STATIC|SEARCH_START_STATIC|WHAT_YOU_USE)|LISTFILE_STACK|LOCATION|MACOSX_BUNDLE|MACOSX_BUNDLE_INFO_PLIST|MACOSX_FRAMEWORK_INFO_PLIST|MACOSX_PACKAGE_LOCATION|MACOSX_RPATH|MACROS|MANUALLY_ADDED_DEPENDENCIES|MEASUREMENT|MODIFIED|NAME|NO_SONAME|NO_SYSTEM_FROM_IMPORTED|OBJECT_DEPENDS|OBJECT_OUTPUTS|OSX_ARCHITECTURES|OUTPUT_NAME|PACKAGES_FOUND|PACKAGES_NOT_FOUND|PARENT_DIRECTORY|PASS_REGULAR_EXPRESSION|PDB_NAME|PDB_OUTPUT_DIRECTORY|POSITION_INDEPENDENT_CODE|POST_INSTALL_SCRIPT|PREDEFINED_TARGETS_FOLDER|PREFIX|PRE_INSTALL_SCRIPT|PRIVATE_HEADER|PROCESSORS|PROCESSOR_AFFINITY|PROJECT_LABEL|PUBLIC_HEADER|REPORT_UNDEFINED_PROPERTIES|REQUIRED_FILES|RESOURCE|RESOURCE_LOCK|RULE_LAUNCH_COMPILE|RULE_LAUNCH_CUSTOM|RULE_LAUNCH_LINK|RULE_MESSAGES|RUNTIME_OUTPUT_DIRECTORY|RUN_SERIAL|SKIP_AUTOGEN|SKIP_AUTOMOC|SKIP_AUTORCC|SKIP_AUTOUIC|SKIP_BUILD_RPATH|SKIP_RETURN_CODE|SOURCES|SOURCE_DIR|SOVERSION|STATIC_LIBRARY_FLAGS|STATIC_LIBRARY_OPTIONS|STRINGS|SUBDIRECTORIES|SUFFIX|SYMBOLIC|TARGET_ARCHIVES_MAY_BE_SHARED_LIBS|TARGET_MESSAGES|TARGET_SUPPORTS_SHARED_LIBS|TESTS|TEST_INCLUDE_FILE|TEST_INCLUDE_FILES|TIMEOUT|TIMEOUT_AFTER_MATCH|TYPE|USE_FOLDERS|VALUE|VARIABLES|VERSION|VISIBILITY_INLINES_HIDDEN|VS_(?:CONFIGURATION_TYPE|COPY_TO_OUT_DIR|DEBUGGER_(?:COMMAND|COMMAND_ARGUMENTS|ENVIRONMENT|WORKING_DIRECTORY)|DEPLOYMENT_CONTENT|DEPLOYMENT_LOCATION|DOTNET_REFERENCES|DOTNET_REFERENCES_COPY_LOCAL|INCLUDE_IN_VSIX|IOT_STARTUP_TASK|KEYWORD|RESOURCE_GENERATOR|SCC_AUXPATH|SCC_LOCALPATH|SCC_PROJECTNAME|SCC_PROVIDER|SDK_REFERENCES|SHADER_(?:DISABLE_OPTIMIZATIONS|ENABLE_DEBUG|ENTRYPOINT|FLAGS|MODEL|OBJECT_FILE_NAME|OUTPUT_HEADER_FILE|TYPE|VARIABLE_NAME)|STARTUP_PROJECT|TOOL_OVERRIDE|USER_PROPS|WINRT_COMPONENT|WINRT_EXTENSIONS|WINRT_REFERENCES|XAML_TYPE)|WILL_FAIL|WIN32_EXECUTABLE|WINDOWS_EXPORT_ALL_SYMBOLS|WORKING_DIRECTORY|WRAP_EXCLUDE|XCODE_(?:EMIT_EFFECTIVE_PLATFORM_NAME|EXPLICIT_FILE_TYPE|FILE_ATTRIBUTES|LAST_KNOWN_FILE_TYPE|PRODUCT_TYPE|SCHEME_(?:ADDRESS_SANITIZER|ADDRESS_SANITIZER_USE_AFTER_RETURN|ARGUMENTS|DISABLE_MAIN_THREAD_CHECKER|DYNAMIC_LIBRARY_LOADS|DYNAMIC_LINKER_API_USAGE|ENVIRONMENT|EXECUTABLE|GUARD_MALLOC|MAIN_THREAD_CHECKER_STOP|MALLOC_GUARD_EDGES|MALLOC_SCRIBBLE|MALLOC_STACK|THREAD_SANITIZER(?:_STOP)?|UNDEFINED_BEHAVIOUR_SANITIZER(?:_STOP)?|ZOMBIE_OBJECTS))|XCTEST)\b/,keyword:/\b(?:add_compile_definitions|add_compile_options|add_custom_command|add_custom_target|add_definitions|add_dependencies|add_executable|add_library|add_link_options|add_subdirectory|add_test|aux_source_directory|break|build_command|build_name|cmake_host_system_information|cmake_minimum_required|cmake_parse_arguments|cmake_policy|configure_file|continue|create_test_sourcelist|ctest_build|ctest_configure|ctest_coverage|ctest_empty_binary_directory|ctest_memcheck|ctest_read_custom_files|ctest_run_script|ctest_sleep|ctest_start|ctest_submit|ctest_test|ctest_update|ctest_upload|define_property|else|elseif|enable_language|enable_testing|endforeach|endfunction|endif|endmacro|endwhile|exec_program|execute_process|export|export_library_dependencies|file|find_file|find_library|find_package|find_path|find_program|fltk_wrap_ui|foreach|function|get_cmake_property|get_directory_property|get_filename_component|get_property|get_source_file_property|get_target_property|get_test_property|if|include|include_directories|include_external_msproject|include_guard|include_regular_expression|install|install_files|install_programs|install_targets|link_directories|link_libraries|list|load_cache|load_command|macro|make_directory|mark_as_advanced|math|message|option|output_required_files|project|qt_wrap_cpp|qt_wrap_ui|remove|remove_definitions|return|separate_arguments|set|set_directory_properties|set_property|set_source_files_properties|set_target_properties|set_tests_properties|site_name|source_group|string|subdir_depends|subdirs|target_compile_definitions|target_compile_features|target_compile_options|target_include_directories|target_link_directories|target_link_libraries|target_link_options|target_sources|try_compile|try_run|unset|use_mangled_mesa|utility_source|variable_requires|variable_watch|while|write_file)(?=\s*\()\b/,boolean:/\b(?:FALSE|OFF|ON|TRUE)\b/,namespace:/\b(?:INTERFACE|PRIVATE|PROPERTIES|PUBLIC|SHARED|STATIC|TARGET_OBJECTS)\b/,operator:/\b(?:AND|DEFINED|EQUAL|GREATER|LESS|MATCHES|NOT|OR|STREQUAL|STRGREATER|STRLESS|VERSION_EQUAL|VERSION_GREATER|VERSION_LESS)\b/,inserted:{pattern:/\b\w+::\w+\b/,alias:"class-name"},number:/\b\d+(?:\.\d+)*\b/,function:/\b[a-z_]\w*(?=\s*\()\b/i,punctuation:/[()>}]|\$[<{]/}}Bh.displayName="cobol";Bh.aliases=[];function Bh(t){t.languages.cobol={comment:{pattern:/\*>.*|(^[ \t]*)\*.*/m,lookbehind:!0,greedy:!0},string:{pattern:/[xzgn]?(?:"(?:[^\r\n"]|"")*"(?!")|'(?:[^\r\n']|'')*'(?!'))/i,greedy:!0},level:{pattern:/(^[ \t]*)\d+\b/m,lookbehind:!0,greedy:!0,alias:"number"},"class-name":{pattern:/(\bpic(?:ture)?\s+)(?:(?:[-\w$/,:*+<>]|\.(?!\s|$))(?:\(\d+\))?)+/i,lookbehind:!0,inside:{number:{pattern:/(\()\d+/,lookbehind:!0},punctuation:/[()]/}},keyword:{pattern:/(^|[^\w-])(?:ABORT|ACCEPT|ACCESS|ADD|ADDRESS|ADVANCING|AFTER|ALIGNED|ALL|ALPHABET|ALPHABETIC|ALPHABETIC-LOWER|ALPHABETIC-UPPER|ALPHANUMERIC|ALPHANUMERIC-EDITED|ALSO|ALTER|ALTERNATE|ANY|ARE|AREA|AREAS|AS|ASCENDING|ASCII|ASSIGN|ASSOCIATED-DATA|ASSOCIATED-DATA-LENGTH|AT|ATTRIBUTE|AUTHOR|AUTO|AUTO-SKIP|BACKGROUND-COLOR|BACKGROUND-COLOUR|BASIS|BEEP|BEFORE|BEGINNING|BELL|BINARY|BIT|BLANK|BLINK|BLOCK|BOTTOM|BOUNDS|BY|BYFUNCTION|BYTITLE|CALL|CANCEL|CAPABLE|CCSVERSION|CD|CF|CH|CHAINING|CHANGED|CHANNEL|CHARACTER|CHARACTERS|CLASS|CLASS-ID|CLOCK-UNITS|CLOSE|CLOSE-DISPOSITION|COBOL|CODE|CODE-SET|COL|COLLATING|COLUMN|COM-REG|COMMA|COMMITMENT|COMMON|COMMUNICATION|COMP|COMP-1|COMP-2|COMP-3|COMP-4|COMP-5|COMPUTATIONAL|COMPUTATIONAL-1|COMPUTATIONAL-2|COMPUTATIONAL-3|COMPUTATIONAL-4|COMPUTATIONAL-5|COMPUTE|CONFIGURATION|CONTAINS|CONTENT|CONTINUE|CONTROL|CONTROL-POINT|CONTROLS|CONVENTION|CONVERTING|COPY|CORR|CORRESPONDING|COUNT|CRUNCH|CURRENCY|CURSOR|DATA|DATA-BASE|DATE|DATE-COMPILED|DATE-WRITTEN|DAY|DAY-OF-WEEK|DBCS|DE|DEBUG-CONTENTS|DEBUG-ITEM|DEBUG-LINE|DEBUG-NAME|DEBUG-SUB-1|DEBUG-SUB-2|DEBUG-SUB-3|DEBUGGING|DECIMAL-POINT|DECLARATIVES|DEFAULT|DEFAULT-DISPLAY|DEFINITION|DELETE|DELIMITED|DELIMITER|DEPENDING|DESCENDING|DESTINATION|DETAIL|DFHRESP|DFHVALUE|DISABLE|DISK|DISPLAY|DISPLAY-1|DIVIDE|DIVISION|DONTCARE|DOUBLE|DOWN|DUPLICATES|DYNAMIC|EBCDIC|EGCS|EGI|ELSE|EMI|EMPTY-CHECK|ENABLE|END|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-OF-PAGE|END-PERFORM|END-READ|END-RECEIVE|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ENDING|ENTER|ENTRY|ENTRY-PROCEDURE|ENVIRONMENT|EOL|EOP|EOS|ERASE|ERROR|ESCAPE|ESI|EVALUATE|EVENT|EVERY|EXCEPTION|EXCLUSIVE|EXHIBIT|EXIT|EXPORT|EXTEND|EXTENDED|EXTERNAL|FD|FILE|FILE-CONTROL|FILLER|FINAL|FIRST|FOOTING|FOR|FOREGROUND-COLOR|FOREGROUND-COLOUR|FROM|FULL|FUNCTION|FUNCTION-POINTER|FUNCTIONNAME|GENERATE|GIVING|GLOBAL|GO|GOBACK|GRID|GROUP|HEADING|HIGH-VALUE|HIGH-VALUES|HIGHLIGHT|I-O|I-O-CONTROL|ID|IDENTIFICATION|IF|IMPLICIT|IMPORT|IN|INDEX|INDEXED|INDICATE|INITIAL|INITIALIZE|INITIATE|INPUT|INPUT-OUTPUT|INSPECT|INSTALLATION|INTEGER|INTO|INVALID|INVOKE|IS|JUST|JUSTIFIED|KANJI|KEPT|KEY|KEYBOARD|LABEL|LANGUAGE|LAST|LB|LD|LEADING|LEFT|LEFTLINE|LENGTH|LENGTH-CHECK|LIBACCESS|LIBPARAMETER|LIBRARY|LIMIT|LIMITS|LINAGE|LINAGE-COUNTER|LINE|LINE-COUNTER|LINES|LINKAGE|LIST|LOCAL|LOCAL-STORAGE|LOCK|LONG-DATE|LONG-TIME|LOW-VALUE|LOW-VALUES|LOWER|LOWLIGHT|MEMORY|MERGE|MESSAGE|MMDDYYYY|MODE|MODULES|MORE-LABELS|MOVE|MULTIPLE|MULTIPLY|NAMED|NATIONAL|NATIONAL-EDITED|NATIVE|NEGATIVE|NETWORK|NEXT|NO|NO-ECHO|NULL|NULLS|NUMBER|NUMERIC|NUMERIC-DATE|NUMERIC-EDITED|NUMERIC-TIME|OBJECT-COMPUTER|OCCURS|ODT|OF|OFF|OMITTED|ON|OPEN|OPTIONAL|ORDER|ORDERLY|ORGANIZATION|OTHER|OUTPUT|OVERFLOW|OVERLINE|OWN|PACKED-DECIMAL|PADDING|PAGE|PAGE-COUNTER|PASSWORD|PERFORM|PF|PH|PIC|PICTURE|PLUS|POINTER|PORT|POSITION|POSITIVE|PRINTER|PRINTING|PRIVATE|PROCEDURE|PROCEDURE-POINTER|PROCEDURES|PROCEED|PROCESS|PROGRAM|PROGRAM-ID|PROGRAM-LIBRARY|PROMPT|PURGE|QUEUE|QUOTE|QUOTES|RANDOM|RD|READ|READER|REAL|RECEIVE|RECEIVED|RECORD|RECORDING|RECORDS|RECURSIVE|REDEFINES|REEL|REF|REFERENCE|REFERENCES|RELATIVE|RELEASE|REMAINDER|REMARKS|REMOTE|REMOVAL|REMOVE|RENAMES|REPLACE|REPLACING|REPORT|REPORTING|REPORTS|REQUIRED|RERUN|RESERVE|RESET|RETURN|RETURN-CODE|RETURNING|REVERSE-VIDEO|REVERSED|REWIND|REWRITE|RF|RH|RIGHT|ROUNDED|RUN|SAME|SAVE|SCREEN|SD|SEARCH|SECTION|SECURE|SECURITY|SEGMENT|SEGMENT-LIMIT|SELECT|SEND|SENTENCE|SEPARATE|SEQUENCE|SEQUENTIAL|SET|SHARED|SHAREDBYALL|SHAREDBYRUNUNIT|SHARING|SHIFT-IN|SHIFT-OUT|SHORT-DATE|SIGN|SIZE|SORT|SORT-CONTROL|SORT-CORE-SIZE|SORT-FILE-SIZE|SORT-MERGE|SORT-MESSAGE|SORT-MODE-SIZE|SORT-RETURN|SOURCE|SOURCE-COMPUTER|SPACE|SPACES|SPECIAL-NAMES|STANDARD|STANDARD-1|STANDARD-2|START|STATUS|STOP|STRING|SUB-QUEUE-1|SUB-QUEUE-2|SUB-QUEUE-3|SUBTRACT|SUM|SUPPRESS|SYMBOL|SYMBOLIC|SYNC|SYNCHRONIZED|TABLE|TALLY|TALLYING|TAPE|TASK|TERMINAL|TERMINATE|TEST|TEXT|THEN|THREAD|THREAD-LOCAL|THROUGH|THRU|TIME|TIMER|TIMES|TITLE|TO|TODAYS-DATE|TODAYS-NAME|TOP|TRAILING|TRUNCATED|TYPE|TYPEDEF|UNDERLINE|UNIT|UNSTRING|UNTIL|UP|UPON|USAGE|USE|USING|VALUE|VALUES|VARYING|VIRTUAL|WAIT|WHEN|WHEN-COMPILED|WITH|WORDS|WORKING-STORAGE|WRITE|YEAR|YYYYDDD|YYYYMMDD|ZERO-FILL|ZEROES|ZEROS)(?![\w-])/i,lookbehind:!0},boolean:{pattern:/(^|[^\w-])(?:false|true)(?![\w-])/i,lookbehind:!0},number:{pattern:/(^|[^\w-])(?:[+-]?(?:(?:\d+(?:[.,]\d+)?|[.,]\d+)(?:e[+-]?\d+)?|zero))(?![\w-])/i,lookbehind:!0},operator:[/<>|[<>]=?|[=+*/&]/,{pattern:/(^|[^\w-])(?:-|and|equal|greater|less|not|or|than)(?![\w-])/i,lookbehind:!0}],punctuation:/[.:,()]/}}Hh.displayName="coffeescript";Hh.aliases=["coffee"];function Hh(t){t.register(at),function(n){var r=/#(?!\{).+/,s={pattern:/#\{[^}]+\}/,alias:"variable"};n.languages.coffeescript=n.languages.extend("javascript",{comment:r,string:[{pattern:/'(?:\\[\s\S]|[^\\'])*'/,greedy:!0},{pattern:/"(?:\\[\s\S]|[^\\"])*"/,greedy:!0,inside:{interpolation:s}}],keyword:/\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\b/,"class-member":{pattern:/@(?!\d)\w+/,alias:"variable"}}),n.languages.insertBefore("coffeescript","comment",{"multiline-comment":{pattern:/###[\s\S]+?###/,alias:"comment"},"block-regex":{pattern:/\/{3}[\s\S]*?\/{3}/,alias:"regex",inside:{comment:r,interpolation:s}}}),n.languages.insertBefore("coffeescript","string",{"inline-javascript":{pattern:/`(?:\\[\s\S]|[^\\`])*`/,inside:{delimiter:{pattern:/^`|`$/,alias:"punctuation"},script:{pattern:/[\s\S]+/,alias:"language-javascript",inside:n.languages.javascript}}},"multiline-string":[{pattern:/'''[\s\S]*?'''/,greedy:!0,alias:"string"},{pattern:/"""[\s\S]*?"""/,greedy:!0,alias:"string",inside:{interpolation:s}}]}),n.languages.insertBefore("coffeescript","keyword",{property:/(?!\d)\w+(?=\s*:(?!:))/}),delete n.languages.coffeescript["template-string"],n.languages.coffee=n.languages.coffeescript}(t)}Gh.displayName="concurnas";Gh.aliases=["conc"];function Gh(t){t.languages.concurnas={comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?(?:\*\/|$)|\/\/.*)/,lookbehind:!0,greedy:!0},langext:{pattern:/\b\w+\s*\|\|[\s\S]+?\|\|/,greedy:!0,inside:{"class-name":/^\w+/,string:{pattern:/(^\s*\|\|)[\s\S]+(?=\|\|$)/,lookbehind:!0},punctuation:/\|\|/}},function:{pattern:/((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/,lookbehind:!0},keyword:/\b(?:abstract|actor|also|annotation|assert|async|await|bool|boolean|break|byte|case|catch|changed|char|class|closed|constant|continue|def|default|del|double|elif|else|enum|every|extends|false|finally|float|for|from|global|gpudef|gpukernel|if|import|in|init|inject|int|lambda|local|long|loop|match|new|nodefault|null|of|onchange|open|out|override|package|parfor|parforsync|post|pre|private|protected|provide|provider|public|return|shared|short|single|size_t|sizeof|super|sync|this|throw|trait|trans|transient|true|try|typedef|unchecked|using|val|var|void|while|with)\b/,boolean:/\b(?:false|true)\b/,number:/\b0b[01][01_]*L?\b|\b0x(?:[\da-f_]*\.)?[\da-f_p+-]+\b|(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?\d[\d_]*)?[dfls]?/i,punctuation:/[{}[\];(),.:]/,operator:/<==|>==|=>|->|<-|<>|&==|&<>|\?:?|\.\?|\+\+|--|[-+*/=<>]=?|[!^~]|\b(?:and|as|band|bor|bxor|comp|is|isnot|mod|or)\b=?/,annotation:{pattern:/@(?:\w+:)?(?:\w+|\[[^\]]+\])?/,alias:"builtin"}},t.languages.insertBefore("concurnas","langext",{"regex-literal":{pattern:/\br("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,greedy:!0,inside:{interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,lookbehind:!0,inside:t.languages.concurnas},regex:/[\s\S]+/}},"string-literal":{pattern:/(?:\B|\bs)("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,greedy:!0,inside:{interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,lookbehind:!0,inside:t.languages.concurnas},string:/[\s\S]+/}}}),t.languages.conc=t.languages.concurnas}$h.displayName="csp";$h.aliases=[];function $h(t){(function(n){function r(s){return RegExp(/([ \t])/.source+"(?:"+s+")"+/(?=[\s;]|$)/.source,"i")}n.languages.csp={directive:{pattern:/(^|[\s;])(?:base-uri|block-all-mixed-content|(?:child|connect|default|font|frame|img|manifest|media|object|prefetch|script|style|worker)-src|disown-opener|form-action|frame-(?:ancestors|options)|input-protection(?:-(?:clip|selectors))?|navigate-to|plugin-types|policy-uri|referrer|reflected-xss|report-(?:to|uri)|require-sri-for|sandbox|(?:script|style)-src-(?:attr|elem)|upgrade-insecure-requests)(?=[\s;]|$)/i,lookbehind:!0,alias:"property"},scheme:{pattern:r(/[a-z][a-z0-9.+-]*:/.source),lookbehind:!0},none:{pattern:r(/'none'/.source),lookbehind:!0,alias:"keyword"},nonce:{pattern:r(/'nonce-[-+/\w=]+'/.source),lookbehind:!0,alias:"number"},hash:{pattern:r(/'sha(?:256|384|512)-[-+/\w=]+'/.source),lookbehind:!0,alias:"number"},host:{pattern:r(/[a-z][a-z0-9.+-]*:\/\/[^\s;,']*/.source+"|"+/\*[^\s;,']*/.source+"|"+/[a-z0-9-]+(?:\.[a-z0-9-]+)+(?::[\d*]+)?(?:\/[^\s;,']*)?/.source),lookbehind:!0,alias:"url",inside:{important:/\*/}},keyword:[{pattern:r(/'unsafe-[a-z-]+'/.source),lookbehind:!0,alias:"unsafe"},{pattern:r(/'[a-z-]+'/.source),lookbehind:!0,alias:"safe"}],punctuation:/;/}})(t)}zh.displayName="cooklang";zh.aliases=[];function zh(t){(function(n){var r=/(?:(?!\s)[\d$+<=a-zA-Z\x80-\uFFFF])+/.source,s=/[^{}@#]+/.source,i=/\{[^}#@]*\}/.source,a=s+i,o=/(?:h|hours|hrs|m|min|minutes)/.source,l={pattern:/\{[^{}]*\}/,inside:{amount:{pattern:/([\{|])[^{}|*%]+/,lookbehind:!0,alias:"number"},unit:{pattern:/(%)[^}]+/,lookbehind:!0,alias:"symbol"},"servings-scaler":{pattern:/\*/,alias:"operator"},"servings-alternative-separator":{pattern:/\|/,alias:"operator"},"unit-separator":{pattern:/(?:%|(\*)%)/,lookbehind:!0,alias:"operator"},punctuation:/[{}]/}};n.languages.cooklang={comment:{pattern:/\[-[\s\S]*?-\]|--.*/,greedy:!0},meta:{pattern:/>>.*:.*/,inside:{property:{pattern:/(>>\s*)[^\s:](?:[^:]*[^\s:])?/,lookbehind:!0}}},"cookware-group":{pattern:new RegExp("#(?:"+a+"|"+r+")"),inside:{cookware:{pattern:new RegExp("(^#)(?:"+s+")"),lookbehind:!0,alias:"variable"},"cookware-keyword":{pattern:/^#/,alias:"keyword"},"quantity-group":{pattern:new RegExp(/\{[^{}@#]*\}/),inside:{quantity:{pattern:new RegExp(/(^\{)/.source+s),lookbehind:!0,alias:"number"},punctuation:/[{}]/}}}},"ingredient-group":{pattern:new RegExp("@(?:"+a+"|"+r+")"),inside:{ingredient:{pattern:new RegExp("(^@)(?:"+s+")"),lookbehind:!0,alias:"variable"},"ingredient-keyword":{pattern:/^@/,alias:"keyword"},"amount-group":l}},"timer-group":{pattern:/~(?!\s)[^@#~{}]*\{[^{}]*\}/,inside:{timer:{pattern:/(^~)[^{]+/,lookbehind:!0,alias:"variable"},"duration-group":{pattern:/\{[^{}]*\}/,inside:{punctuation:/[{}]/,unit:{pattern:new RegExp(/(%\s*)/.source+o+/\b/.source),lookbehind:!0,alias:"symbol"},operator:/%/,duration:{pattern:/\d+/,alias:"number"}}},"timer-keyword":{pattern:/^~/,alias:"keyword"}}}}})(t)}Wh.displayName="coq";Wh.aliases=[];function Wh(t){(function(n){for(var r=/\(\*(?:[^(*]|\((?!\*)|\*(?!\))|<self>)*\*\)/.source,s=0;s<2;s++)r=r.replace(/<self>/g,function(){return r});r=r.replace(/<self>/g,"[]"),n.languages.coq={comment:RegExp(r),string:{pattern:/"(?:[^"]|"")*"(?!")/,greedy:!0},attribute:[{pattern:RegExp(/#\[(?:[^\[\]("]|"(?:[^"]|"")*"(?!")|\((?!\*)|<comment>)*\]/.source.replace(/<comment>/g,function(){return r})),greedy:!0,alias:"attr-name",inside:{comment:RegExp(r),string:{pattern:/"(?:[^"]|"")*"(?!")/,greedy:!0},operator:/=/,punctuation:/^#\[|\]$|[,()]/}},{pattern:/\b(?:Cumulative|Global|Local|Monomorphic|NonCumulative|Polymorphic|Private|Program)\b/,alias:"attr-name"}],keyword:/\b(?:Abort|About|Add|Admit|Admitted|All|Arguments|As|Assumptions|Axiom|Axioms|Back|BackTo|Backtrace|BinOp|BinOpSpec|BinRel|Bind|Blacklist|Canonical|Case|Cd|Check|Class|Classes|Close|CoFixpoint|CoInductive|Coercion|Coercions|Collection|Combined|Compute|Conjecture|Conjectures|Constant|Constants|Constraint|Constructors|Context|Corollary|Create|CstOp|Custom|Cut|Debug|Declare|Defined|Definition|Delimit|Dependencies|Dependent|Derive|Diffs|Drop|Elimination|End|Entry|Equality|Eval|Example|Existential|Existentials|Existing|Export|Extern|Extraction|Fact|Fail|Field|File|Firstorder|Fixpoint|Flags|Focus|From|Funclass|Function|Functional|GC|Generalizable|Goal|Grab|Grammar|Graph|Guarded|Haskell|Heap|Hide|Hint|HintDb|Hints|Hypotheses|Hypothesis|IF|Identity|Immediate|Implicit|Implicits|Import|Include|Induction|Inductive|Infix|Info|Initial|InjTyp|Inline|Inspect|Instance|Instances|Intro|Intros|Inversion|Inversion_clear|JSON|Language|Left|Lemma|Let|Lia|Libraries|Library|Load|LoadPath|Locate|Ltac|Ltac2|ML|Match|Method|Minimality|Module|Modules|Morphism|Next|NoInline|Notation|Number|OCaml|Obligation|Obligations|Opaque|Open|Optimize|Parameter|Parameters|Parametric|Path|Paths|Prenex|Preterm|Primitive|Print|Profile|Projections|Proof|Prop|PropBinOp|PropOp|PropUOp|Property|Proposition|Pwd|Qed|Quit|Rec|Record|Recursive|Redirect|Reduction|Register|Relation|Remark|Remove|Require|Reserved|Reset|Resolve|Restart|Rewrite|Right|Ring|Rings|SProp|Saturate|Save|Scheme|Scope|Scopes|Search|SearchHead|SearchPattern|SearchRewrite|Section|Separate|Set|Setoid|Show|Signatures|Solve|Solver|Sort|Sortclass|Sorted|Spec|Step|Strategies|Strategy|String|Structure|SubClass|Subgraph|SuchThat|Tactic|Term|TestCompile|Theorem|Time|Timeout|To|Transparent|Type|Typeclasses|Types|Typing|UnOp|UnOpSpec|Undelimit|Undo|Unfocus|Unfocused|Unfold|Universe|Universes|Unshelve|Variable|Variables|Variant|Verbose|View|Visibility|Zify|_|apply|as|at|by|cofix|else|end|exists|exists2|fix|for|forall|fun|if|in|let|match|measure|move|removed|return|struct|then|using|wf|where|with)\b/,number:/\b(?:0x[a-f0-9][a-f0-9_]*(?:\.[a-f0-9_]+)?(?:p[+-]?\d[\d_]*)?|\d[\d_]*(?:\.[\d_]+)?(?:e[+-]?\d[\d_]*)?)\b/i,punct:{pattern:/@\{|\{\||\[=|:>/,alias:"punctuation"},operator:/\/\\|\\\/|\.{2,3}|:{1,2}=|\*\*|[-=]>|<(?:->?|[+:=>]|<:)|>(?:=|->)|\|[-|]?|[-!%&*+/<=>?@^~']/,punctuation:/\.\(|`\(|@\{|`\{|\{\||\[=|:>|[:.,;(){}\[\]]/}})(t)}Vh.displayName="crystal";Vh.aliases=[];function Vh(t){t.register(rs),function(n){n.languages.crystal=n.languages.extend("ruby",{keyword:[/\b(?:__DIR__|__END_LINE__|__FILE__|__LINE__|abstract|alias|annotation|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|ifdef|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|ptr|require|rescue|return|select|self|sizeof|struct|super|then|type|typeof|undef|uninitialized|union|unless|until|when|while|with|yield)\b/,{pattern:/(\.\s*)(?:is_a|responds_to)\?/,lookbehind:!0}],number:/\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\da-fA-F_]*[\da-fA-F]|(?:\d(?:[\d_]*\d)?)(?:\.[\d_]*\d)?(?:[eE][+-]?[\d_]*\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\b/,operator:[/->/,n.languages.ruby.operator],punctuation:/[(){}[\].,;\\]/}),n.languages.insertBefore("crystal","string-literal",{attribute:{pattern:/@\[.*?\]/,inside:{delimiter:{pattern:/^@\[|\]$/,alias:"punctuation"},attribute:{pattern:/^(\s*)\w+/,lookbehind:!0,alias:"class-name"},args:{pattern:/\S(?:[\s\S]*\S)?/,inside:n.languages.crystal}}},expansion:{pattern:/\{(?:\{.*?\}|%.*?%)\}/,inside:{content:{pattern:/^(\{.)[\s\S]+(?=.\}$)/,lookbehind:!0,inside:n.languages.crystal},delimiter:{pattern:/^\{[\{%]|[\}%]\}$/,alias:"operator"}}},char:{pattern:/'(?:[^\\\r\n]{1,2}|\\(?:.|u(?:[A-Fa-f0-9]{1,4}|\{[A-Fa-f0-9]{1,6}\})))'/,greedy:!0}})}(t)}Kh.displayName="css-extras";Kh.aliases=[];function Kh(t){t.register(Sr),function(n){var r=/("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,s;n.languages.css.selector={pattern:n.languages.css.selector.pattern,lookbehind:!0,inside:s={"pseudo-element":/:(?:after|before|first-letter|first-line|selection)|::[-\w]+/,"pseudo-class":/:[-\w]+/,class:/\.[-\w]+/,id:/#[-\w]+/,attribute:{pattern:RegExp(`\\[(?:[^[\\]"']|`+r.source+")*\\]"),greedy:!0,inside:{punctuation:/^\[|\]$/,"case-sensitivity":{pattern:/(\s)[si]$/i,lookbehind:!0,alias:"keyword"},namespace:{pattern:/^(\s*)(?:(?!\s)[-*\w\xA0-\uFFFF])*\|(?!=)/,lookbehind:!0,inside:{punctuation:/\|$/}},"attr-name":{pattern:/^(\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+/,lookbehind:!0},"attr-value":[r,{pattern:/(=\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+(?=\s*$)/,lookbehind:!0}],operator:/[|~*^$]?=/}},"n-th":[{pattern:/(\(\s*)[+-]?\d*[\dn](?:\s*[+-]\s*\d+)?(?=\s*\))/,lookbehind:!0,inside:{number:/[\dn]+/,operator:/[+-]/}},{pattern:/(\(\s*)(?:even|odd)(?=\s*\))/i,lookbehind:!0}],combinator:/>|\+|~|\|\|/,punctuation:/[(),]/}},n.languages.css.atrule.inside["selector-function-argument"].inside=s,n.languages.insertBefore("css","property",{variable:{pattern:/(^|[^-\w\xA0-\uFFFF])--(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*/i,lookbehind:!0}});var i={pattern:/(\b\d+)(?:%|[a-z]+(?![\w-]))/,lookbehind:!0},a={pattern:/(^|[^\w.-])-?(?:\d+(?:\.\d+)?|\.\d+)/,lookbehind:!0};n.languages.insertBefore("css","function",{operator:{pattern:/(\s)[+\-*\/](?=\s)/,lookbehind:!0},hexcode:{pattern:/\B#[\da-f]{3,8}\b/i,alias:"color"},color:[{pattern:/(^|[^\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|RebeccaPurple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\w-])/i,lookbehind:!0},{pattern:/\b(?:hsl|rgb)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:hsl|rgb)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B/i,inside:{unit:i,number:a,function:/[\w-]+(?=\()/,punctuation:/[(),]/}}],entity:/\\[\da-f]{1,8}/i,unit:i,number:a})}(t)}Yh.displayName="csv";Yh.aliases=[];function Yh(t){t.languages.csv={value:/[^\r\n,"]+|"(?:[^"]|"")*"(?!")/,punctuation:/,/}}qh.displayName="cue";qh.aliases=[];function qh(t){(function(n){var r=/\\(?:(?!\2)|\2(?:[^()\r\n]|\([^()]*\)))/.source,s=/"""(?:[^\\"]|"(?!""\2)|<esc>)*"""/.source+"|"+/'''(?:[^\\']|'(?!''\2)|<esc>)*'''/.source+"|"+/"(?:[^\\\r\n"]|"(?!\2)|<esc>)*"/.source+"|"+/'(?:[^\\\r\n']|'(?!\2)|<esc>)*'/.source,i="(?:"+s.replace(/<esc>/g,r)+")";n.languages.cue={comment:{pattern:/\/\/.*/,greedy:!0},"string-literal":{pattern:RegExp(/(^|[^#"'\\])(#*)/.source+i+/(?!["'])\2/.source),lookbehind:!0,greedy:!0,inside:{escape:{pattern:/(?=[\s\S]*["'](#*)$)\\\1(?:U[a-fA-F0-9]{1,8}|u[a-fA-F0-9]{1,4}|x[a-fA-F0-9]{1,2}|\d{2,3}|[^(])/,greedy:!0,alias:"string"},interpolation:{pattern:/(?=[\s\S]*["'](#*)$)\\\1\([^()]*\)/,greedy:!0,inside:{punctuation:/^\\#*\(|\)$/,expression:{pattern:/[\s\S]+/,inside:null}}},string:/[\s\S]+/}},keyword:{pattern:/(^|[^\w$])(?:for|if|import|in|let|null|package)(?![\w$])/,lookbehind:!0},boolean:{pattern:/(^|[^\w$])(?:false|true)(?![\w$])/,lookbehind:!0},builtin:{pattern:/(^|[^\w$])(?:bool|bytes|float|float(?:32|64)|u?int(?:8|16|32|64|128)?|number|rune|string)(?![\w$])/,lookbehind:!0},attribute:{pattern:/@[\w$]+(?=\s*\()/,alias:"function"},function:{pattern:/(^|[^\w$])[a-z_$][\w$]*(?=\s*\()/i,lookbehind:!0},number:{pattern:/(^|[^\w$.])(?:0b[01]+(?:_[01]+)*|0o[0-7]+(?:_[0-7]+)*|0[xX][0-9A-Fa-f]+(?:_[0-9A-Fa-f]+)*|(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[eE][+-]?\d+(?:_\d+)*)?(?:[KMGTP]i?)?)(?![\w$])/,lookbehind:!0},operator:/\.{3}|_\|_|&&?|\|\|?|[=!]~|[<>=!]=?|[+\-*/?]/,punctuation:/[()[\]{},.:]/},n.languages.cue["string-literal"].inside.interpolation.inside.expression.inside=n.languages.cue})(t)}Xh.displayName="cypher";Xh.aliases=[];function Xh(t){t.languages.cypher={comment:/\/\/.*/,string:{pattern:/"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\\\r\n]|\\.)*'/,greedy:!0},"class-name":{pattern:/(:\s*)(?:\w+|`(?:[^`\\\r\n])*`)(?=\s*[{):])/,lookbehind:!0,greedy:!0},relationship:{pattern:/(-\[\s*(?:\w+\s*|`(?:[^`\\\r\n])*`\s*)?:\s*|\|\s*:\s*)(?:\w+|`(?:[^`\\\r\n])*`)/,lookbehind:!0,greedy:!0,alias:"property"},identifier:{pattern:/`(?:[^`\\\r\n])*`/,greedy:!0},variable:/\$\w+/,keyword:/\b(?:ADD|ALL|AND|AS|ASC|ASCENDING|ASSERT|BY|CALL|CASE|COMMIT|CONSTRAINT|CONTAINS|CREATE|CSV|DELETE|DESC|DESCENDING|DETACH|DISTINCT|DO|DROP|ELSE|END|ENDS|EXISTS|FOR|FOREACH|IN|INDEX|IS|JOIN|KEY|LIMIT|LOAD|MANDATORY|MATCH|MERGE|NODE|NOT|OF|ON|OPTIONAL|OR|ORDER(?=\s+BY)|PERIODIC|REMOVE|REQUIRE|RETURN|SCALAR|SCAN|SET|SKIP|START|STARTS|THEN|UNION|UNIQUE|UNWIND|USING|WHEN|WHERE|WITH|XOR|YIELD)\b/i,function:/\b\w+\b(?=\s*\()/,boolean:/\b(?:false|null|true)\b/i,number:/\b(?:0x[\da-fA-F]+|\d+(?:\.\d+)?(?:[eE][+-]?\d+)?)\b/,operator:/:|<--?|--?>?|<>|=~?|[<>]=?|[+*/%^|]|\.\.\.?/,punctuation:/[()[\]{},;.]/}}Zh.displayName="d";Zh.aliases=[];function Zh(t){t.register(le),t.languages.d=t.languages.extend("clike",{comment:[{pattern:/^\s*#!.+/,greedy:!0},{pattern:RegExp(/(^|[^\\])/.source+"(?:"+[/\/\+(?:\/\+(?:[^+]|\+(?!\/))*\+\/|(?!\/\+)[\s\S])*?\+\//.source,/\/\/.*/.source,/\/\*[\s\S]*?\*\//.source].join("|")+")"),lookbehind:!0,greedy:!0}],string:[{pattern:RegExp([/\b[rx]"(?:\\[\s\S]|[^\\"])*"[cwd]?/.source,/\bq"(?:\[[\s\S]*?\]|\([\s\S]*?\)|<[\s\S]*?>|\{[\s\S]*?\})"/.source,/\bq"((?!\d)\w+)$[\s\S]*?^\1"/.source,/\bq"(.)[\s\S]*?\2"/.source,/(["`])(?:\\[\s\S]|(?!\3)[^\\])*\3[cwd]?/.source].join("|"),"m"),greedy:!0},{pattern:/\bq\{(?:\{[^{}]*\}|[^{}])*\}/,greedy:!0,alias:"token-string"}],keyword:/\$|\b(?:__(?:(?:DATE|EOF|FILE|FUNCTION|LINE|MODULE|PRETTY_FUNCTION|TIMESTAMP|TIME|VENDOR|VERSION)__|gshared|parameters|traits|vector)|abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|dstring|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|ptrdiff_t|public|pure|real|ref|return|scope|shared|short|size_t|static|string|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|wstring)\b/,number:[/\b0x\.?[a-f\d_]+(?:(?!\.\.)\.[a-f\d_]*)?(?:p[+-]?[a-f\d_]+)?[ulfi]{0,4}/i,{pattern:/((?:\.\.)?)(?:\b0b\.?|\b|\.)\d[\d_]*(?:(?!\.\.)\.[\d_]*)?(?:e[+-]?\d[\d_]*)?[ulfi]{0,4}/i,lookbehind:!0}],operator:/\|[|=]?|&[&=]?|\+[+=]?|-[-=]?|\.?\.\.|=[>=]?|!(?:i[ns]\b|<>?=?|>=?|=)?|\bi[ns]\b|(?:<[<>]?|>>?>?|\^\^|[*\/%^~])=?/}),t.languages.insertBefore("d","string",{char:/'(?:\\(?:\W|\w+)|[^\\])'/}),t.languages.insertBefore("d","keyword",{property:/\B@\w*/}),t.languages.insertBefore("d","function",{register:{pattern:/\b(?:[ABCD][LHX]|E?(?:BP|DI|SI|SP)|[BS]PL|[ECSDGF]S|CR[0234]|[DS]IL|DR[012367]|E[ABCD]X|X?MM[0-7]|R(?:1[0-5]|[89])[BWD]?|R[ABCD]X|R[BS]P|R[DS]I|TR[3-7]|XMM(?:1[0-5]|[89])|YMM(?:1[0-5]|\d))\b|\bST(?:\([0-7]\)|\b)/,alias:"variable"}})}Qh.displayName="dart";Qh.aliases=[];function Qh(t){t.register(le),function(n){var r=[/\b(?:async|sync|yield)\*/,/\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|covariant|default|deferred|do|dynamic|else|enum|export|extends|extension|external|factory|final|finally|for|get|hide|if|implements|import|in|interface|library|mixin|new|null|on|operator|part|rethrow|return|set|show|static|super|switch|sync|this|throw|try|typedef|var|void|while|with|yield)\b/],s=/(^|[^\w.])(?:[a-z]\w*\s*\.\s*)*(?:[A-Z]\w*\s*\.\s*)*/.source,i={pattern:RegExp(s+/[A-Z](?:[\d_A-Z]*[a-z]\w*)?\b/.source),lookbehind:!0,inside:{namespace:{pattern:/^[a-z]\w*(?:\s*\.\s*[a-z]\w*)*(?:\s*\.)?/,inside:{punctuation:/\./}}}};n.languages.dart=n.languages.extend("clike",{"class-name":[i,{pattern:RegExp(s+/[A-Z]\w*(?=\s+\w+\s*[;,=()])/.source),lookbehind:!0,inside:i.inside}],keyword:r,operator:/\bis!|\b(?:as|is)\b|\+\+|--|&&|\|\||<<=?|>>=?|~(?:\/=?)?|[+\-*\/%&^|=!<>]=?|\?/}),n.languages.insertBefore("dart","string",{"string-literal":{pattern:/r?(?:("""|''')[\s\S]*?\1|(["'])(?:\\.|(?!\2)[^\\\r\n])*\2(?!\2))/,greedy:!0,inside:{interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\$(?:\w+|\{(?:[^{}]|\{[^{}]*\})*\})/,lookbehind:!0,inside:{punctuation:/^\$\{?|\}$/,expression:{pattern:/[\s\S]+/,inside:n.languages.dart}}},string:/[\s\S]+/}},string:void 0}),n.languages.insertBefore("dart","class-name",{metadata:{pattern:/@\w+/,alias:"function"}}),n.languages.insertBefore("dart","class-name",{generics:{pattern:/<(?:[\w\s,.&?]|<(?:[\w\s,.&?]|<(?:[\w\s,.&?]|<[\w\s,.&?]*>)*>)*>)*>/,inside:{"class-name":i,keyword:r,punctuation:/[<>(),.:]/,operator:/[?&|]/}}})}(t)}Jh.displayName="dataweave";Jh.aliases=[];function Jh(t){(function(n){n.languages.dataweave={url:/\b[A-Za-z]+:\/\/[\w/:.?=&-]+|\burn:[\w:.?=&-]+/,property:{pattern:/(?:\b\w+#)?(?:"(?:\\.|[^\\"\r\n])*"|\b\w+)(?=\s*[:@])/,greedy:!0},string:{pattern:/(["'`])(?:\\[\s\S]|(?!\1)[^\\])*\1/,greedy:!0},"mime-type":/\b(?:application|audio|image|multipart|text|video)\/[\w+-]+/,date:{pattern:/\|[\w:+-]+\|/,greedy:!0},comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],regex:{pattern:/\/(?:[^\\\/\r\n]|\\[^\r\n])+\//,greedy:!0},keyword:/\b(?:and|as|at|case|do|else|fun|if|input|is|match|not|ns|null|or|output|type|unless|update|using|var)\b/,function:/\b[A-Z_]\w*(?=\s*\()/i,number:/-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,punctuation:/[{}[\];(),.:@]/,operator:/<<|>>|->|[<>~=]=?|!=|--?-?|\+\+?|!|\?/,boolean:/\b(?:false|true)\b/}})(t)}ep.displayName="dax";ep.aliases=[];function ep(t){t.languages.dax={comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/).*)/,lookbehind:!0},"data-field":{pattern:/'(?:[^']|'')*'(?!')(?:\[[ \w\xA0-\uFFFF]+\])?|\w+\[[ \w\xA0-\uFFFF]+\]/,alias:"symbol"},measure:{pattern:/\[[ \w\xA0-\uFFFF]+\]/,alias:"constant"},string:{pattern:/"(?:[^"]|"")*"(?!")/,greedy:!0},function:/\b(?:ABS|ACOS|ACOSH|ACOT|ACOTH|ADDCOLUMNS|ADDMISSINGITEMS|ALL|ALLCROSSFILTERED|ALLEXCEPT|ALLNOBLANKROW|ALLSELECTED|AND|APPROXIMATEDISTINCTCOUNT|ASIN|ASINH|ATAN|ATANH|AVERAGE|AVERAGEA|AVERAGEX|BETA\.DIST|BETA\.INV|BLANK|CALCULATE|CALCULATETABLE|CALENDAR|CALENDARAUTO|CEILING|CHISQ\.DIST|CHISQ\.DIST\.RT|CHISQ\.INV|CHISQ\.INV\.RT|CLOSINGBALANCEMONTH|CLOSINGBALANCEQUARTER|CLOSINGBALANCEYEAR|COALESCE|COMBIN|COMBINA|COMBINEVALUES|CONCATENATE|CONCATENATEX|CONFIDENCE\.NORM|CONFIDENCE\.T|CONTAINS|CONTAINSROW|CONTAINSSTRING|CONTAINSSTRINGEXACT|CONVERT|COS|COSH|COT|COTH|COUNT|COUNTA|COUNTAX|COUNTBLANK|COUNTROWS|COUNTX|CROSSFILTER|CROSSJOIN|CURRENCY|CURRENTGROUP|CUSTOMDATA|DATATABLE|DATE|DATEADD|DATEDIFF|DATESBETWEEN|DATESINPERIOD|DATESMTD|DATESQTD|DATESYTD|DATEVALUE|DAY|DEGREES|DETAILROWS|DISTINCT|DISTINCTCOUNT|DISTINCTCOUNTNOBLANK|DIVIDE|EARLIER|EARLIEST|EDATE|ENDOFMONTH|ENDOFQUARTER|ENDOFYEAR|EOMONTH|ERROR|EVEN|EXACT|EXCEPT|EXP|EXPON\.DIST|FACT|FALSE|FILTER|FILTERS|FIND|FIRSTDATE|FIRSTNONBLANK|FIRSTNONBLANKVALUE|FIXED|FLOOR|FORMAT|GCD|GENERATE|GENERATEALL|GENERATESERIES|GEOMEAN|GEOMEANX|GROUPBY|HASONEFILTER|HASONEVALUE|HOUR|IF|IF\.EAGER|IFERROR|IGNORE|INT|INTERSECT|ISBLANK|ISCROSSFILTERED|ISEMPTY|ISERROR|ISEVEN|ISFILTERED|ISINSCOPE|ISLOGICAL|ISNONTEXT|ISNUMBER|ISO\.CEILING|ISODD|ISONORAFTER|ISSELECTEDMEASURE|ISSUBTOTAL|ISTEXT|KEEPFILTERS|KEYWORDMATCH|LASTDATE|LASTNONBLANK|LASTNONBLANKVALUE|LCM|LEFT|LEN|LN|LOG|LOG10|LOOKUPVALUE|LOWER|MAX|MAXA|MAXX|MEDIAN|MEDIANX|MID|MIN|MINA|MINUTE|MINX|MOD|MONTH|MROUND|NATURALINNERJOIN|NATURALLEFTOUTERJOIN|NEXTDAY|NEXTMONTH|NEXTQUARTER|NEXTYEAR|NONVISUAL|NORM\.DIST|NORM\.INV|NORM\.S\.DIST|NORM\.S\.INV|NOT|NOW|ODD|OPENINGBALANCEMONTH|OPENINGBALANCEQUARTER|OPENINGBALANCEYEAR|OR|PARALLELPERIOD|PATH|PATHCONTAINS|PATHITEM|PATHITEMREVERSE|PATHLENGTH|PERCENTILE\.EXC|PERCENTILE\.INC|PERCENTILEX\.EXC|PERCENTILEX\.INC|PERMUT|PI|POISSON\.DIST|POWER|PREVIOUSDAY|PREVIOUSMONTH|PREVIOUSQUARTER|PREVIOUSYEAR|PRODUCT|PRODUCTX|QUARTER|QUOTIENT|RADIANS|RAND|RANDBETWEEN|RANK\.EQ|RANKX|RELATED|RELATEDTABLE|REMOVEFILTERS|REPLACE|REPT|RIGHT|ROLLUP|ROLLUPADDISSUBTOTAL|ROLLUPGROUP|ROLLUPISSUBTOTAL|ROUND|ROUNDDOWN|ROUNDUP|ROW|SAMEPERIODLASTYEAR|SAMPLE|SEARCH|SECOND|SELECTCOLUMNS|SELECTEDMEASURE|SELECTEDMEASUREFORMATSTRING|SELECTEDMEASURENAME|SELECTEDVALUE|SIGN|SIN|SINH|SQRT|SQRTPI|STARTOFMONTH|STARTOFQUARTER|STARTOFYEAR|STDEV\.P|STDEV\.S|STDEVX\.P|STDEVX\.S|SUBSTITUTE|SUBSTITUTEWITHINDEX|SUM|SUMMARIZE|SUMMARIZECOLUMNS|SUMX|SWITCH|T\.DIST|T\.DIST\.2T|T\.DIST\.RT|T\.INV|T\.INV\.2T|TAN|TANH|TIME|TIMEVALUE|TODAY|TOPN|TOPNPERLEVEL|TOPNSKIP|TOTALMTD|TOTALQTD|TOTALYTD|TREATAS|TRIM|TRUE|TRUNC|UNICHAR|UNICODE|UNION|UPPER|USERELATIONSHIP|USERNAME|USEROBJECTID|USERPRINCIPALNAME|UTCNOW|UTCTODAY|VALUE|VALUES|VAR\.P|VAR\.S|VARX\.P|VARX\.S|WEEKDAY|WEEKNUM|XIRR|XNPV|YEAR|YEARFRAC)(?=\s*\()/i,keyword:/\b(?:DEFINE|EVALUATE|MEASURE|ORDER\s+BY|RETURN|VAR|START\s+AT|ASC|DESC)\b/i,boolean:{pattern:/\b(?:FALSE|NULL|TRUE)\b/i,alias:"constant"},number:/\b\d+(?:\.\d*)?|\B\.\d+\b/,operator:/:=|[-+*\/=^]|&&?|\|\||<(?:=>?|<|>)?|>[>=]?|\b(?:IN|NOT)\b/i,punctuation:/[;\[\](){}`,.]/}}tp.displayName="dhall";tp.aliases=[];function tp(t){t.languages.dhall={comment:/--.*|\{-(?:[^-{]|-(?!\})|\{(?!-)|\{-(?:[^-{]|-(?!\})|\{(?!-))*-\})*-\}/,string:{pattern:/"(?:[^"\\]|\\.)*"|''(?:[^']|'(?!')|'''|''\$\{)*''(?!'|\$)/,greedy:!0,inside:{interpolation:{pattern:/\$\{[^{}]*\}/,inside:{expression:{pattern:/(^\$\{)[\s\S]+(?=\}$)/,lookbehind:!0,alias:"language-dhall",inside:null},punctuation:/\$\{|\}/}}}},label:{pattern:/`[^`]*`/,greedy:!0},url:{pattern:/\bhttps?:\/\/[\w.:%!$&'*+;=@~-]+(?:\/[\w.:%!$&'*+;=@~-]*)*(?:\?[/?\w.:%!$&'*+;=@~-]*)?/,greedy:!0},env:{pattern:/\benv:(?:(?!\d)\w+|"(?:[^"\\=]|\\.)*")/,greedy:!0,inside:{function:/^env/,operator:/^:/,variable:/[\s\S]+/}},hash:{pattern:/\bsha256:[\da-fA-F]{64}\b/,inside:{function:/sha256/,operator:/:/,number:/[\da-fA-F]{64}/}},keyword:/\b(?:as|assert|else|forall|if|in|let|merge|missing|then|toMap|using|with)\b|\u2200/,builtin:/\b(?:None|Some)\b/,boolean:/\b(?:False|True)\b/,number:/\bNaN\b|-?\bInfinity\b|[+-]?\b(?:0x[\da-fA-F]+|\d+(?:\.\d+)?(?:e[+-]?\d+)?)\b/,operator:/\/\\|\/\/\\\\|&&|\|\||===|[!=]=|\/\/|->|\+\+|::|[+*#@=:?<>|\\\u2227\u2a53\u2261\u2afd\u03bb\u2192]/,punctuation:/\.\.|[{}\[\](),./]/,"class-name":/\b[A-Z]\w*\b/},t.languages.dhall.string.inside.interpolation.inside.expression.inside=t.languages.dhall}np.displayName="django";np.aliases=["jinja2"];function np(t){t.register(ot),function(n){n.languages.django={comment:/^\{#[\s\S]*?#\}$/,tag:{pattern:/(^\{%[+-]?\s*)\w+/,lookbehind:!0,alias:"keyword"},delimiter:{pattern:/^\{[{%][+-]?|[+-]?[}%]\}$/,alias:"punctuation"},string:{pattern:/("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,greedy:!0},filter:{pattern:/(\|)\w+/,lookbehind:!0,alias:"function"},test:{pattern:/(\bis\s+(?:not\s+)?)(?!not\b)\w+/,lookbehind:!0,alias:"function"},function:/\b[a-z_]\w+(?=\s*\()/i,keyword:/\b(?:and|as|by|else|for|if|import|in|is|loop|not|or|recursive|with|without)\b/,operator:/[-+%=]=?|!=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,number:/\b\d+(?:\.\d+)?\b/,boolean:/[Ff]alse|[Nn]one|[Tt]rue/,variable:/\b\w+\b/,punctuation:/[{}[\](),.:;]/};var r=/\{\{[\s\S]*?\}\}|\{%[\s\S]*?%\}|\{#[\s\S]*?#\}/g,s=n.languages["markup-templating"];n.hooks.add("before-tokenize",function(i){s.buildPlaceholders(i,"django",r)}),n.hooks.add("after-tokenize",function(i){s.tokenizePlaceholders(i,"django")}),n.languages.jinja2=n.languages.django,n.hooks.add("before-tokenize",function(i){s.buildPlaceholders(i,"jinja2",r)}),n.hooks.add("after-tokenize",function(i){s.tokenizePlaceholders(i,"jinja2")})}(t)}rp.displayName="dns-zone-file";rp.aliases=["dns-zone"];function rp(t){t.languages["dns-zone-file"]={comment:/;.*/,string:{pattern:/"(?:\\.|[^"\\\r\n])*"/,greedy:!0},variable:[{pattern:/(^\$ORIGIN[ \t]+)\S+/m,lookbehind:!0},{pattern:/(^|\s)@(?=\s|$)/,lookbehind:!0}],keyword:/^\$(?:INCLUDE|ORIGIN|TTL)(?=\s|$)/m,class:{pattern:/(^|\s)(?:CH|CS|HS|IN)(?=\s|$)/,lookbehind:!0,alias:"keyword"},type:{pattern:/(^|\s)(?:A|A6|AAAA|AFSDB|APL|ATMA|CAA|CDNSKEY|CDS|CERT|CNAME|DHCID|DLV|DNAME|DNSKEY|DS|EID|GID|GPOS|HINFO|HIP|IPSECKEY|ISDN|KEY|KX|LOC|MAILA|MAILB|MB|MD|MF|MG|MINFO|MR|MX|NAPTR|NB|NBSTAT|NIMLOC|NINFO|NS|NSAP|NSAP-PTR|NSEC|NSEC3|NSEC3PARAM|NULL|NXT|OPENPGPKEY|PTR|PX|RKEY|RP|RRSIG|RT|SIG|SINK|SMIMEA|SOA|SPF|SRV|SSHFP|TA|TKEY|TLSA|TSIG|TXT|UID|UINFO|UNSPEC|URI|WKS|X25)(?=\s|$)/,lookbehind:!0,alias:"keyword"},punctuation:/[()]/},t.languages["dns-zone"]=t.languages["dns-zone-file"]}sp.displayName="docker";sp.aliases=["dockerfile"];function sp(t){(function(n){var r=/\\[\r\n](?:\s|\\[\r\n]|#.*(?!.))*(?![\s#]|\\[\r\n])/.source,s=/(?:[ \t]+(?![ \t])(?:<SP_BS>)?|<SP_BS>)/.source.replace(/<SP_BS>/g,function(){return r}),i=/"(?:[^"\\\r\n]|\\(?:\r\n|[\s\S]))*"|'(?:[^'\\\r\n]|\\(?:\r\n|[\s\S]))*'/.source,a=/--[\w-]+=(?:<STR>|(?!["'])(?:[^\s\\]|\\.)+)/.source.replace(/<STR>/g,function(){return i}),o={pattern:RegExp(i),greedy:!0},l={pattern:/(^[ \t]*)#.*/m,lookbehind:!0,greedy:!0};function c(d,h){return d=d.replace(/<OPT>/g,function(){return a}).replace(/<SP>/g,function(){return s}),RegExp(d,h)}n.languages.docker={instruction:{pattern:/(^[ \t]*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\s)(?:\\.|[^\r\n\\])*(?:\\$(?:\s|#.*$)*(?![\s#])(?:\\.|[^\r\n\\])*)*/im,lookbehind:!0,greedy:!0,inside:{options:{pattern:c(/(^(?:ONBUILD<SP>)?\w+<SP>)<OPT>(?:<SP><OPT>)*/.source,"i"),lookbehind:!0,greedy:!0,inside:{property:{pattern:/(^|\s)--[\w-]+/,lookbehind:!0},string:[o,{pattern:/(=)(?!["'])(?:[^\s\\]|\\.)+/,lookbehind:!0}],operator:/\\$/m,punctuation:/=/}},keyword:[{pattern:c(/(^(?:ONBUILD<SP>)?HEALTHCHECK<SP>(?:<OPT><SP>)*)(?:CMD|NONE)\b/.source,"i"),lookbehind:!0,greedy:!0},{pattern:c(/(^(?:ONBUILD<SP>)?FROM<SP>(?:<OPT><SP>)*(?!--)[^ \t\\]+<SP>)AS/.source,"i"),lookbehind:!0,greedy:!0},{pattern:c(/(^ONBUILD<SP>)\w+/.source,"i"),lookbehind:!0,greedy:!0},{pattern:/^\w+/,greedy:!0}],comment:l,string:o,variable:/\$(?:\w+|\{[^{}"'\\]*\})/,operator:/\\$/m}},comment:l},n.languages.dockerfile=n.languages.docker})(t)}ip.displayName="dot";ip.aliases=["gv"];function ip(t){(function(n){var r="(?:"+[/[a-zA-Z_\x80-\uFFFF][\w\x80-\uFFFF]*/.source,/-?(?:\.\d+|\d+(?:\.\d*)?)/.source,/"[^"\\]*(?:\\[\s\S][^"\\]*)*"/.source,/<(?:[^<>]|(?!<!--)<(?:[^<>"']|"[^"]*"|'[^']*')+>|<!--(?:[^-]|-(?!->))*-->)*>/.source].join("|")+")",s={markup:{pattern:/(^<)[\s\S]+(?=>$)/,lookbehind:!0,alias:["language-markup","language-html","language-xml"],inside:n.languages.markup}};function i(a,o){return RegExp(a.replace(/<ID>/g,function(){return r}),o)}n.languages.dot={comment:{pattern:/\/\/.*|\/\*[\s\S]*?\*\/|^#.*/m,greedy:!0},"graph-name":{pattern:i(/(\b(?:digraph|graph|subgraph)[ \t\r\n]+)<ID>/.source,"i"),lookbehind:!0,greedy:!0,alias:"class-name",inside:s},"attr-value":{pattern:i(/(=[ \t\r\n]*)<ID>/.source),lookbehind:!0,greedy:!0,inside:s},"attr-name":{pattern:i(/([\[;, \t\r\n])<ID>(?=[ \t\r\n]*=)/.source),lookbehind:!0,greedy:!0,inside:s},keyword:/\b(?:digraph|edge|graph|node|strict|subgraph)\b/i,"compass-point":{pattern:/(:[ \t\r\n]*)(?:[ewc_]|[ns][ew]?)(?![\w\x80-\uFFFF])/,lookbehind:!0,alias:"builtin"},node:{pattern:i(/(^|[^-.\w\x80-\uFFFF\\])<ID>/.source),lookbehind:!0,greedy:!0,inside:s},operator:/[=:]|-[->]/,punctuation:/[\[\]{};,]/},n.languages.gv=n.languages.dot})(t)}ap.displayName="ebnf";ap.aliases=[];function ap(t){t.languages.ebnf={comment:/\(\*[\s\S]*?\*\)/,string:{pattern:/"[^"\r\n]*"|'[^'\r\n]*'/,greedy:!0},special:{pattern:/\?[^?\r\n]*\?/,greedy:!0,alias:"class-name"},definition:{pattern:/^([\t ]*)[a-z]\w*(?:[ \t]+[a-z]\w*)*(?=\s*=)/im,lookbehind:!0,alias:["rule","keyword"]},rule:/\b[a-z]\w*(?:[ \t]+[a-z]\w*)*\b/i,punctuation:/\([:/]|[:/]\)|[.,;()[\]{}]/,operator:/[-=|*/!]/}}op.displayName="editorconfig";op.aliases=[];function op(t){t.languages.editorconfig={comment:/[;#].*/,section:{pattern:/(^[ \t]*)\[.+\]/m,lookbehind:!0,alias:"selector",inside:{regex:/\\\\[\[\]{},!?.*]/,operator:/[!?]|\.\.|\*{1,2}/,punctuation:/[\[\]{},]/}},key:{pattern:/(^[ \t]*)[^\s=]+(?=[ \t]*=)/m,lookbehind:!0,alias:"attr-name"},value:{pattern:/=.*/,alias:"attr-value",inside:{punctuation:/^=/}}}}lp.displayName="eiffel";lp.aliases=[];function lp(t){t.languages.eiffel={comment:/--.*/,string:[{pattern:/"([^[]*)\[[\s\S]*?\]\1"/,greedy:!0},{pattern:/"([^{]*)\{[\s\S]*?\}\1"/,greedy:!0},{pattern:/"(?:%(?:(?!\n)\s)*\n\s*%|%\S|[^%"\r\n])*"/,greedy:!0}],char:/'(?:%.|[^%'\r\n])+'/,keyword:/\b(?:across|agent|alias|all|and|as|assign|attached|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\b/i,boolean:/\b(?:False|True)\b/i,"class-name":/\b[A-Z][\dA-Z_]*\b/,number:[/\b0[xcb][\da-f](?:_*[\da-f])*\b/i,/(?:\b\d(?:_*\d)*)?\.(?:(?:\d(?:_*\d)*)?e[+-]?)?\d(?:_*\d)*\b|\b\d(?:_*\d)*\b\.?/i],punctuation:/:=|<<|>>|\(\||\|\)|->|\.(?=\w)|[{}[\];(),:?]/,operator:/\\\\|\|\.\.\||\.\.|\/[~\/=]?|[><]=?|[-+*^=~]/}}cp.displayName="ejs";cp.aliases=["eta"];function cp(t){t.register(at),t.register(ot),function(n){n.languages.ejs={delimiter:{pattern:/^<%[-_=]?|[-_]?%>$/,alias:"punctuation"},comment:/^#[\s\S]*/,"language-javascript":{pattern:/[\s\S]+/,inside:n.languages.javascript}},n.hooks.add("before-tokenize",function(r){var s=/<%(?!%)[\s\S]+?%>/g;n.languages["markup-templating"].buildPlaceholders(r,"ejs",s)}),n.hooks.add("after-tokenize",function(r){n.languages["markup-templating"].tokenizePlaceholders(r,"ejs")}),n.languages.eta=n.languages.ejs}(t)}dp.displayName="elixir";dp.aliases=[];function dp(t){t.languages.elixir={doc:{pattern:/@(?:doc|moduledoc)\s+(?:("""|''')[\s\S]*?\1|("|')(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2)/,inside:{attribute:/^@\w+/,string:/['"][\s\S]+/}},comment:{pattern:/#.*/,greedy:!0},regex:{pattern:/~[rR](?:("""|''')(?:\\[\s\S]|(?!\1)[^\\])+\1|([\/|"'])(?:\\.|(?!\2)[^\\\r\n])+\2|\((?:\\.|[^\\)\r\n])+\)|\[(?:\\.|[^\\\]\r\n])+\]|\{(?:\\.|[^\\}\r\n])+\}|<(?:\\.|[^\\>\r\n])+>)[uismxfr]*/,greedy:!0},string:[{pattern:/~[cCsSwW](?:("""|''')(?:\\[\s\S]|(?!\1)[^\\])+\1|([\/|"'])(?:\\.|(?!\2)[^\\\r\n])+\2|\((?:\\.|[^\\)\r\n])+\)|\[(?:\\.|[^\\\]\r\n])+\]|\{(?:\\.|#\{[^}]+\}|#(?!\{)|[^#\\}\r\n])+\}|<(?:\\.|[^\\>\r\n])+>)[csa]?/,greedy:!0,inside:{}},{pattern:/("""|''')[\s\S]*?\1/,greedy:!0,inside:{}},{pattern:/("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0,inside:{}}],atom:{pattern:/(^|[^:]):\w+/,lookbehind:!0,alias:"symbol"},module:{pattern:/\b[A-Z]\w*\b/,alias:"class-name"},"attr-name":/\b\w+\??:(?!:)/,argument:{pattern:/(^|[^&])&\d+/,lookbehind:!0,alias:"variable"},attribute:{pattern:/@\w+/,alias:"variable"},function:/\b[_a-zA-Z]\w*[?!]?(?:(?=\s*(?:\.\s*)?\()|(?=\/\d))/,number:/\b(?:0[box][a-f\d_]+|\d[\d_]*)(?:\.[\d_]+)?(?:e[+-]?[\d_]+)?\b/i,keyword:/\b(?:after|alias|and|case|catch|cond|def(?:callback|delegate|exception|impl|macro|module|n|np|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|quote|raise|require|rescue|try|unless|unquote|use|when)\b/,boolean:/\b(?:false|nil|true)\b/,operator:[/\bin\b|&&?|\|[|>]?|\\\\|::|\.\.\.?|\+\+?|-[->]?|<[-=>]|>=|!==?|\B!|=(?:==?|[>~])?|[*\/^]/,{pattern:/([^<])<(?!<)/,lookbehind:!0},{pattern:/([^>])>(?!>)/,lookbehind:!0}],punctuation:/<<|>>|[.,%\[\]{}()]/},t.languages.elixir.string.forEach(function(n){n.inside={interpolation:{pattern:/#\{[^}]+\}/,inside:{delimiter:{pattern:/^#\{|\}$/,alias:"punctuation"},rest:t.languages.elixir}}}})}up.displayName="elm";up.aliases=[];function up(t){t.languages.elm={comment:/--.*|\{-[\s\S]*?-\}/,char:{pattern:/'(?:[^\\'\r\n]|\\(?:[abfnrtv\\']|\d+|x[0-9a-fA-F]+|u\{[0-9a-fA-F]+\}))'/,greedy:!0},string:[{pattern:/"""[\s\S]*?"""/,greedy:!0},{pattern:/"(?:[^\\"\r\n]|\\.)*"/,greedy:!0}],"import-statement":{pattern:/(^[\t ]*)import\s+[A-Z]\w*(?:\.[A-Z]\w*)*(?:\s+as\s+(?:[A-Z]\w*)(?:\.[A-Z]\w*)*)?(?:\s+exposing\s+)?/m,lookbehind:!0,inside:{keyword:/\b(?:as|exposing|import)\b/}},keyword:/\b(?:alias|as|case|else|exposing|if|in|infixl|infixr|let|module|of|then|type)\b/,builtin:/\b(?:abs|acos|always|asin|atan|atan2|ceiling|clamp|compare|cos|curry|degrees|e|flip|floor|fromPolar|identity|isInfinite|isNaN|logBase|max|min|negate|never|not|pi|radians|rem|round|sin|sqrt|tan|toFloat|toPolar|toString|truncate|turns|uncurry|xor)\b/,number:/\b(?:\d+(?:\.\d+)?(?:e[+-]?\d+)?|0x[0-9a-f]+)\b/i,operator:/\s\.\s|[+\-/*=.$<>:&|^?%#@~!]{2,}|[+\-/*=$<>:&|^?%#@~!]/,hvariable:/\b(?:[A-Z]\w*\.)*[a-z]\w*\b/,constant:/\b(?:[A-Z]\w*\.)*[A-Z]\w*\b/,punctuation:/[{}[\]|(),.:]/}}hp.displayName="etlua";hp.aliases=[];function hp(t){t.register(Ia),t.register(ot),function(n){n.languages.etlua={delimiter:{pattern:/^<%[-=]?|-?%>$/,alias:"punctuation"},"language-lua":{pattern:/[\s\S]+/,inside:n.languages.lua}},n.hooks.add("before-tokenize",function(r){var s=/<%[\s\S]+?%>/g;n.languages["markup-templating"].buildPlaceholders(r,"etlua",s)}),n.hooks.add("after-tokenize",function(r){n.languages["markup-templating"].tokenizePlaceholders(r,"etlua")})}(t)}pp.displayName="erb";pp.aliases=[];function pp(t){t.register(ot),t.register(rs),function(n){n.languages.erb={delimiter:{pattern:/^(\s*)<%=?|%>(?=\s*$)/,lookbehind:!0,alias:"punctuation"},ruby:{pattern:/\s*\S[\s\S]*/,alias:"language-ruby",inside:n.languages.ruby}},n.hooks.add("before-tokenize",function(r){var s=/<%=?(?:[^\r\n]|[\r\n](?!=begin)|[\r\n]=begin\s(?:[^\r\n]|[\r\n](?!=end))*[\r\n]=end)+?%>/g;n.languages["markup-templating"].buildPlaceholders(r,"erb",s)}),n.hooks.add("after-tokenize",function(r){n.languages["markup-templating"].tokenizePlaceholders(r,"erb")})}(t)}mp.displayName="erlang";mp.aliases=[];function mp(t){t.languages.erlang={comment:/%.+/,string:{pattern:/"(?:\\.|[^\\"\r\n])*"/,greedy:!0},"quoted-function":{pattern:/'(?:\\.|[^\\'\r\n])+'(?=\()/,alias:"function"},"quoted-atom":{pattern:/'(?:\\.|[^\\'\r\n])+'/,alias:"atom"},boolean:/\b(?:false|true)\b/,keyword:/\b(?:after|begin|case|catch|end|fun|if|of|receive|try|when)\b/,number:[/\$\\?./,/\b\d+#[a-z0-9]+/i,/(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i],function:/\b[a-z][\w@]*(?=\()/,variable:{pattern:/(^|[^@])(?:\b|\?)[A-Z_][\w@]*/,lookbehind:!0},operator:[/[=\/<>:]=|=[:\/]=|\+\+?|--?|[=*\/!]|\b(?:and|andalso|band|bnot|bor|bsl|bsr|bxor|div|not|or|orelse|rem|xor)\b/,{pattern:/(^|[^<])<(?!<)/,lookbehind:!0},{pattern:/(^|[^>])>(?!>)/,lookbehind:!0}],atom:/\b[a-z][\w@]*/,punctuation:/[()[\]{}:;,.#|]|<<|>>/}}fp.displayName="excel-formula";fp.aliases=["xls","xlsx"];function fp(t){t.languages["excel-formula"]={comment:{pattern:/(\bN\(\s*)"(?:[^"]|"")*"(?=\s*\))/i,lookbehind:!0,greedy:!0},string:{pattern:/"(?:[^"]|"")*"(?!")/,greedy:!0},reference:{pattern:/(?:'[^']*'|(?:[^\s()[\]{}<>*?"';,$&]*\[[^^\s()[\]{}<>*?"']+\])?\w+)!/,greedy:!0,alias:"string",inside:{operator:/!$/,punctuation:/'/,sheet:{pattern:/[^[\]]+$/,alias:"function"},file:{pattern:/\[[^[\]]+\]$/,inside:{punctuation:/[[\]]/}},path:/[\s\S]+/}},"function-name":{pattern:/\b[A-Z]\w*(?=\()/i,alias:"builtin"},range:{pattern:/\$?\b(?:[A-Z]+\$?\d+:\$?[A-Z]+\$?\d+|[A-Z]+:\$?[A-Z]+|\d+:\$?\d+)\b/i,alias:"selector",inside:{operator:/:/,cell:/\$?[A-Z]+\$?\d+/i,column:/\$?[A-Z]+/i,row:/\$?\d+/}},cell:{pattern:/\b[A-Z]+\d+\b|\$[A-Za-z]+\$?\d+\b|\b[A-Za-z]+\$\d+\b/,alias:"selector"},number:/(?:\b\d+(?:\.\d+)?|\B\.\d+)(?:e[+-]?\d+)?\b/i,boolean:/\b(?:FALSE|TRUE)\b/i,operator:/[-+*/^%=&,]|<[=>]?|>=?/,punctuation:/[[\]();{}|]/},t.languages.xlsx=t.languages.xls=t.languages["excel-formula"]}gp.displayName="fsharp";gp.aliases=[];function gp(t){t.register(le),t.languages.fsharp=t.languages.extend("clike",{comment:[{pattern:/(^|[^\\])\(\*(?!\))[\s\S]*?\*\)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(?:"""[\s\S]*?"""|@"(?:""|[^"])*"|"(?:\\[\s\S]|[^\\"])*")B?/,greedy:!0},"class-name":{pattern:/(\b(?:exception|inherit|interface|new|of|type)\s+|\w\s*:\s*|\s:\??>\s*)[.\w]+\b(?:\s*(?:->|\*)\s*[.\w]+\b)*(?!\s*[:.])/,lookbehind:!0,inside:{operator:/->|\*/,punctuation:/\./}},keyword:/\b(?:let|return|use|yield)(?:!\B|\b)|\b(?:abstract|and|as|asr|assert|atomic|base|begin|break|checked|class|component|const|constraint|constructor|continue|default|delegate|do|done|downcast|downto|eager|elif|else|end|event|exception|extern|external|false|finally|fixed|for|fun|function|functor|global|if|in|include|inherit|inline|interface|internal|land|lazy|lor|lsl|lsr|lxor|match|member|method|mixin|mod|module|mutable|namespace|new|not|null|object|of|open|or|override|parallel|private|process|protected|public|pure|rec|sealed|select|sig|static|struct|tailcall|then|to|trait|true|try|type|upcast|val|virtual|void|volatile|when|while|with)\b/,number:[/\b0x[\da-fA-F]+(?:LF|lf|un)?\b/,/\b0b[01]+(?:uy|y)?\b/,/(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[fm]|e[+-]?\d+)?\b/i,/\b\d+(?:[IlLsy]|UL|u[lsy]?)?\b/],operator:/([<>~&^])\1\1|([*.:<>&])\2|<-|->|[!=:]=|<?\|{1,3}>?|\??(?:<=|>=|<>|[-+*/%=<>])\??|[!?^&]|~[+~-]|:>|:\?>?/}),t.languages.insertBefore("fsharp","keyword",{preprocessor:{pattern:/(^[\t ]*)#.*/m,lookbehind:!0,alias:"property",inside:{directive:{pattern:/(^#)\b(?:else|endif|if|light|line|nowarn)\b/,lookbehind:!0,alias:"keyword"}}}}),t.languages.insertBefore("fsharp","punctuation",{"computation-expression":{pattern:/\b[_a-z]\w*(?=\s*\{)/i,alias:"keyword"}}),t.languages.insertBefore("fsharp","string",{annotation:{pattern:/\[<.+?>\]/,greedy:!0,inside:{punctuation:/^\[<|>\]$/,"class-name":{pattern:/^\w+$|(^|;\s*)[A-Z]\w*(?=\()/,lookbehind:!0},"annotation-content":{pattern:/[\s\S]+/,inside:t.languages.fsharp}}},char:{pattern:/'(?:[^\\']|\\(?:.|\d{3}|x[a-fA-F\d]{2}|u[a-fA-F\d]{4}|U[a-fA-F\d]{8}))'B?/,greedy:!0}})}bp.displayName="factor";bp.aliases=[];function bp(t){(function(n){var r={function:/\b(?:BUGS?|FIX(?:MES?)?|NOTES?|TODOS?|XX+|HACKS?|WARN(?:ING)?|\?{2,}|!{2,})\b/},s={number:/\\[^\s']|%\w/},i={comment:[{pattern:/(^|\s)(?:! .*|!$)/,lookbehind:!0,inside:r},{pattern:/(^|\s)\/\*\s[\s\S]*?\*\/(?=\s|$)/,lookbehind:!0,greedy:!0,inside:r},{pattern:/(^|\s)!\[(={0,6})\[\s[\s\S]*?\]\2\](?=\s|$)/,lookbehind:!0,greedy:!0,inside:r}],number:[{pattern:/(^|\s)[+-]?\d+(?=\s|$)/,lookbehind:!0},{pattern:/(^|\s)[+-]?0(?:b[01]+|o[0-7]+|d\d+|x[\dA-F]+)(?=\s|$)/i,lookbehind:!0},{pattern:/(^|\s)[+-]?\d+\/\d+\.?(?=\s|$)/,lookbehind:!0},{pattern:/(^|\s)\+?\d+\+\d+\/\d+(?=\s|$)/,lookbehind:!0},{pattern:/(^|\s)-\d+-\d+\/\d+(?=\s|$)/,lookbehind:!0},{pattern:/(^|\s)[+-]?(?:\d*\.\d+|\d+\.\d*|\d+)(?:e[+-]?\d+)?(?=\s|$)/i,lookbehind:!0},{pattern:/(^|\s)NAN:\s+[\da-fA-F]+(?=\s|$)/,lookbehind:!0},{pattern:/(^|\s)[+-]?0(?:b1\.[01]*|o1\.[0-7]*|d1\.\d*|x1\.[\dA-F]*)p\d+(?=\s|$)/i,lookbehind:!0}],regexp:{pattern:/(^|\s)R\/\s(?:\\\S|[^\\/])*\/(?:[idmsr]*|[idmsr]+-[idmsr]+)(?=\s|$)/,lookbehind:!0,alias:"number",inside:{variable:/\\\S/,keyword:/[+?*\[\]^$(){}.|]/,operator:{pattern:/(\/)[idmsr]+(?:-[idmsr]+)?/,lookbehind:!0}}},boolean:{pattern:/(^|\s)[tf](?=\s|$)/,lookbehind:!0},"custom-string":{pattern:/(^|\s)[A-Z0-9\-]+"\s(?:\\\S|[^"\\])*"/,lookbehind:!0,greedy:!0,alias:"string",inside:{number:/\\\S|%\w|\//}},"multiline-string":[{pattern:/(^|\s)STRING:\s+\S+(?:\n|\r\n).*(?:\n|\r\n)\s*;(?=\s|$)/,lookbehind:!0,greedy:!0,alias:"string",inside:{number:s.number,"semicolon-or-setlocal":{pattern:/([\r\n][ \t]*);(?=\s|$)/,lookbehind:!0,alias:"function"}}},{pattern:/(^|\s)HEREDOC:\s+\S+(?:\n|\r\n).*(?:\n|\r\n)\s*\S+(?=\s|$)/,lookbehind:!0,greedy:!0,alias:"string",inside:s},{pattern:/(^|\s)\[(={0,6})\[\s[\s\S]*?\]\2\](?=\s|$)/,lookbehind:!0,greedy:!0,alias:"string",inside:s}],"special-using":{pattern:/(^|\s)USING:(?:\s\S+)*(?=\s+;(?:\s|$))/,lookbehind:!0,alias:"function",inside:{string:{pattern:/(\s)[^:\s]+/,lookbehind:!0}}},"stack-effect-delimiter":[{pattern:/(^|\s)(?:call|eval|execute)?\((?=\s)/,lookbehind:!0,alias:"operator"},{pattern:/(\s)--(?=\s)/,lookbehind:!0,alias:"operator"},{pattern:/(\s)\)(?=\s|$)/,lookbehind:!0,alias:"operator"}],combinators:{pattern:null,lookbehind:!0,alias:"keyword"},"kernel-builtin":{pattern:null,lookbehind:!0,alias:"variable"},"sequences-builtin":{pattern:null,lookbehind:!0,alias:"variable"},"math-builtin":{pattern:null,lookbehind:!0,alias:"variable"},"constructor-word":{pattern:/(^|\s)<(?!=+>|-+>)\S+>(?=\s|$)/,lookbehind:!0,alias:"keyword"},"other-builtin-syntax":{pattern:null,lookbehind:!0,alias:"operator"},"conventionally-named-word":{pattern:/(^|\s)(?!")(?:(?:change|new|set|with)-\S+|\$\S+|>[^>\s]+|[^:>\s]+>|[^>\s]+>[^>\s]+|\+[^+\s]+\+|[^?\s]+\?|\?[^?\s]+|[^>\s]+>>|>>[^>\s]+|[^<\s]+<<|\([^()\s]+\)|[^!\s]+!|[^*\s]\S*\*|[^.\s]\S*\.)(?=\s|$)/,lookbehind:!0,alias:"keyword"},"colon-syntax":{pattern:/(^|\s)(?:[A-Z0-9\-]+#?)?:{1,2}\s+(?:;\S+|(?!;)\S+)(?=\s|$)/,lookbehind:!0,greedy:!0,alias:"function"},"semicolon-or-setlocal":{pattern:/(\s)(?:;|:>)(?=\s|$)/,lookbehind:!0,alias:"function"},"curly-brace-literal-delimiter":[{pattern:/(^|\s)[a-z]*\{(?=\s)/i,lookbehind:!0,alias:"operator"},{pattern:/(\s)\}(?=\s|$)/,lookbehind:!0,alias:"operator"}],"quotation-delimiter":[{pattern:/(^|\s)\[(?=\s)/,lookbehind:!0,alias:"operator"},{pattern:/(\s)\](?=\s|$)/,lookbehind:!0,alias:"operator"}],"normal-word":{pattern:/(^|\s)[^"\s]\S*(?=\s|$)/,lookbehind:!0},string:{pattern:/"(?:\\\S|[^"\\])*"/,greedy:!0,inside:s}},a=function(d){return(d+"").replace(/([.?*+\^$\[\]\\(){}|\-])/g,"\\$1")},o=function(d){return new RegExp("(^|\\s)(?:"+d.map(a).join("|")+")(?=\\s|$)")},l={"kernel-builtin":["or","2nipd","4drop","tuck","wrapper","nip","wrapper?","callstack>array","die","dupd","callstack","callstack?","3dup","hashcode","pick","4nip","build",">boolean","nipd","clone","5nip","eq?","?","=","swapd","2over","clear","2dup","get-retainstack","not","tuple?","dup","3nipd","call","-rotd","object","drop","assert=","assert?","-rot","execute","boa","get-callstack","curried?","3drop","pickd","overd","over","roll","3nip","swap","and","2nip","rotd","throw","(clone)","hashcode*","spin","reach","4dup","equal?","get-datastack","assert","2drop","<wrapper>","boolean?","identity-hashcode","identity-tuple?","null","composed?","new","5drop","rot","-roll","xor","identity-tuple","boolean"],"other-builtin-syntax":["=======","recursive","flushable",">>","<<<<<<","M\\","B","PRIVATE>","\\","======","final","inline","delimiter","deprecated","<PRIVATE",">>>>>>","<<<<<<<","parse-complex","malformed-complex","read-only",">>>>>>>","call-next-method","<<","foldable","$","$[","${"],"sequences-builtin":["member-eq?","mismatch","append","assert-sequence=","longer","repetition","clone-like","3sequence","assert-sequence?","last-index-from","reversed","index-from","cut*","pad-tail","join-as","remove-eq!","concat-as","but-last","snip","nths","nth","sequence","longest","slice?","<slice>","remove-nth","tail-slice","empty?","tail*","member?","virtual-sequence?","set-length","drop-prefix","iota","unclip","bounds-error?","unclip-last-slice","non-negative-integer-expected","non-negative-integer-expected?","midpoint@","longer?","?set-nth","?first","rest-slice","prepend-as","prepend","fourth","sift","subseq-start","new-sequence","?last","like","first4","1sequence","reverse","slice","virtual@","repetition?","set-last","index","4sequence","max-length","set-second","immutable-sequence","first2","first3","supremum","unclip-slice","suffix!","insert-nth","tail","3append","short","suffix","concat","flip","immutable?","reverse!","2sequence","sum","delete-all","indices","snip-slice","<iota>","check-slice","sequence?","head","append-as","halves","sequence=","collapse-slice","?second","slice-error?","product","bounds-check?","bounds-check","immutable","virtual-exemplar","harvest","remove","pad-head","last","set-fourth","cartesian-product","remove-eq","shorten","shorter","reversed?","shorter?","shortest","head-slice","pop*","tail-slice*","but-last-slice","iota?","append!","cut-slice","new-resizable","head-slice*","sequence-hashcode","pop","set-nth","?nth","second","join","immutable-sequence?","<reversed>","3append-as","virtual-sequence","subseq?","remove-nth!","length","last-index","lengthen","assert-sequence","copy","move","third","first","tail?","set-first","prefix","bounds-error","<repetition>","exchange","surround","cut","min-length","set-third","push-all","head?","subseq-start-from","delete-slice","rest","sum-lengths","head*","infimum","remove!","glue","slice-error","subseq","push","replace-slice","subseq-as","unclip-last"],"math-builtin":["number=","next-power-of-2","?1+","fp-special?","imaginary-part","float>bits","number?","fp-infinity?","bignum?","fp-snan?","denominator","gcd","*","+","fp-bitwise=","-","u>=","/",">=","bitand","power-of-2?","log2-expects-positive","neg?","<","log2",">","integer?","number","bits>double","2/","zero?","bits>float","float?","shift","ratio?","rect>","even?","ratio","fp-sign","bitnot",">fixnum","complex?","/i","integer>fixnum","/f","sgn",">bignum","next-float","u<","u>","mod","recip","rational",">float","2^","integer","fixnum?","neg","fixnum","sq","bignum",">rect","bit?","fp-qnan?","simple-gcd","complex","<fp-nan>","real",">fraction","double>bits","bitor","rem","fp-nan-payload","real-part","log2-expects-positive?","prev-float","align","unordered?","float","fp-nan?","abs","bitxor","integer>fixnum-strict","u<=","odd?","<=","/mod",">integer","real?","rational?","numerator"]};Object.keys(l).forEach(function(d){i[d].pattern=o(l[d])});var c=["2bi","while","2tri","bi*","4dip","both?","same?","tri@","curry","prepose","3bi","?if","tri*","2keep","3keep","curried","2keepd","when","2bi*","2tri*","4keep","bi@","keepdd","do","unless*","tri-curry","if*","loop","bi-curry*","when*","2bi@","2tri@","with","2with","either?","bi","until","3dip","3curry","tri-curry*","tri-curry@","bi-curry","keepd","compose","2dip","if","3tri","unless","tuple","keep","2curry","tri","most","while*","dip","composed","bi-curry@","find-last-from","trim-head-slice","map-as","each-from","none?","trim-tail","partition","if-empty","accumulate*","reject!","find-from","accumulate-as","collector-for-as","reject","map","map-sum","accumulate!","2each-from","follow","supremum-by","map!","unless-empty","collector","padding","reduce-index","replicate-as","infimum-by","trim-tail-slice","count","find-index","filter","accumulate*!","reject-as","map-integers","map-find","reduce","selector","interleave","2map","filter-as","binary-reduce","map-index-as","find","produce","filter!","replicate","cartesian-map","cartesian-each","find-index-from","map-find-last","3map-as","3map","find-last","selector-as","2map-as","2map-reduce","accumulate","each","each-index","accumulate*-as","when-empty","all?","collector-as","push-either","new-like","collector-for","2selector","push-if","2all?","map-reduce","3each","any?","trim-slice","2reduce","change-nth","produce-as","2each","trim","trim-head","cartesian-find","map-index","if-zero","each-integer","unless-zero","(find-integer)","when-zero","find-last-integer","(all-integers?)","times","(each-integer)","find-integer","all-integers?","unless-negative","if-positive","when-positive","when-negative","unless-positive","if-negative","case","2cleave","cond>quot","case>quot","3cleave","wrong-values","to-fixed-point","alist>quot","cond","cleave","call-effect","recursive-hashcode","spread","deep-spread>quot","2||","0||","n||","0&&","2&&","3||","1||","1&&","n&&","3&&","smart-unless*","keep-inputs","reduce-outputs","smart-when*","cleave>array","smart-with","smart-apply","smart-if","inputs/outputs","output>sequence-n","map-outputs","map-reduce-outputs","dropping","output>array","smart-map-reduce","smart-2map-reduce","output>array-n","nullary","input<sequence","append-outputs","drop-inputs","inputs","smart-2reduce","drop-outputs","smart-reduce","preserving","smart-when","outputs","append-outputs-as","smart-unless","smart-if*","sum-outputs","input<sequence-unsafe","output>sequence"];i.combinators.pattern=o(c),n.languages.factor=i})(t)}xp.displayName="false";xp.aliases=[];function xp(t){(function(n){n.languages.false={comment:{pattern:/\{[^}]*\}/},string:{pattern:/"[^"]*"/,greedy:!0},"character-code":{pattern:/'(?:[^\r]|\r\n?)/,alias:"number"},"assembler-code":{pattern:/\d+`/,alias:"important"},number:/\d+/,operator:/[-!#$%&'*+,./:;=>?@\\^_`|~ßø]/,punctuation:/\[|\]/,variable:/[a-z]/,"non-standard":{pattern:/[()<BDO®]/,alias:"bold"}}})(t)}Ep.displayName="firestore-security-rules";Ep.aliases=[];function Ep(t){t.register(le),t.languages["firestore-security-rules"]=t.languages.extend("clike",{comment:/\/\/.*/,keyword:/\b(?:allow|function|if|match|null|return|rules_version|service)\b/,operator:/&&|\|\||[<>!=]=?|[-+*/%]|\b(?:in|is)\b/}),delete t.languages["firestore-security-rules"]["class-name"],t.languages.insertBefore("firestore-security-rules","keyword",{path:{pattern:/(^|[\s(),])(?:\/(?:[\w\xA0-\uFFFF]+|\{[\w\xA0-\uFFFF]+(?:=\*\*)?\}|\$\([\w\xA0-\uFFFF.]+\)))+/,lookbehind:!0,greedy:!0,inside:{variable:{pattern:/\{[\w\xA0-\uFFFF]+(?:=\*\*)?\}|\$\([\w\xA0-\uFFFF.]+\)/,inside:{operator:/=/,keyword:/\*\*/,punctuation:/[.$(){}]/}},punctuation:/\//}},method:{pattern:/(\ballow\s+)[a-z]+(?:\s*,\s*[a-z]+)*(?=\s*[:;])/,lookbehind:!0,alias:"builtin",inside:{punctuation:/,/}}})}Tp.displayName="flow";Tp.aliases=[];function Tp(t){t.register(at),function(n){n.languages.flow=n.languages.extend("javascript",{}),n.languages.insertBefore("flow","keyword",{type:[{pattern:/\b(?:[Bb]oolean|Function|[Nn]umber|[Ss]tring|[Ss]ymbol|any|mixed|null|void)\b/,alias:"class-name"}]}),n.languages.flow["function-variable"].pattern=/(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=\s*(?:function\b|(?:\([^()]*\)(?:\s*:\s*\w+)?|(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/i,delete n.languages.flow.parameter,n.languages.insertBefore("flow","operator",{"flow-punctuation":{pattern:/\{\||\|\}/,alias:"punctuation"}}),Array.isArray(n.languages.flow.keyword)||(n.languages.flow.keyword=[n.languages.flow.keyword]),n.languages.flow.keyword.unshift({pattern:/(^|[^$]\b)(?:Class|declare|opaque|type)\b(?!\$)/,lookbehind:!0},{pattern:/(^|[^$]\B)\$(?:Diff|Enum|Exact|Keys|ObjMap|PropertyType|Record|Shape|Subtype|Supertype|await)\b(?!\$)/,lookbehind:!0})}(t)}yp.displayName="fortran";yp.aliases=[];function yp(t){t.languages.fortran={"quoted-number":{pattern:/[BOZ](['"])[A-F0-9]+\1/i,alias:"number"},string:{pattern:/(?:\b\w+_)?(['"])(?:\1\1|&(?:\r\n?|\n)(?:[ \t]*!.*(?:\r\n?|\n)|(?![ \t]*!))|(?!\1).)*(?:\1|&)/,inside:{comment:{pattern:/(&(?:\r\n?|\n)\s*)!.*/,lookbehind:!0}}},comment:{pattern:/!.*/,greedy:!0},boolean:/\.(?:FALSE|TRUE)\.(?:_\w+)?/i,number:/(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[ED][+-]?\d+)?(?:_\w+)?/i,keyword:[/\b(?:CHARACTER|COMPLEX|DOUBLE ?PRECISION|INTEGER|LOGICAL|REAL)\b/i,/\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\b/i,/\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\b/i,/\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEIF|ELSEWHERE|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\b/i],operator:[/\*\*|\/\/|=>|[=\/]=|[<>]=?|::|[+\-*=%]|\.[A-Z]+\./i,{pattern:/(^|(?!\().)\/(?!\))/,lookbehind:!0}],punctuation:/\(\/|\/\)|[(),;:&]/}}Sp.displayName="ftl";Sp.aliases=[];function Sp(t){t.register(ot),function(n){for(var r=/[^<()"']|\((?:<expr>)*\)|<(?!#--)|<#--(?:[^-]|-(?!->))*-->|"(?:[^\\"]|\\.)*"|'(?:[^\\']|\\.)*'/.source,s=0;s<2;s++)r=r.replace(/<expr>/g,function(){return r});r=r.replace(/<expr>/g,/[^\s\S]/.source);var i={comment:/<#--[\s\S]*?-->/,string:[{pattern:/\br("|')(?:(?!\1)[^\\]|\\.)*\1/,greedy:!0},{pattern:RegExp(/("|')(?:(?!\1|\$\{)[^\\]|\\.|\$\{(?:(?!\})(?:<expr>))*\})*\1/.source.replace(/<expr>/g,function(){return r})),greedy:!0,inside:{interpolation:{pattern:RegExp(/((?:^|[^\\])(?:\\\\)*)\$\{(?:(?!\})(?:<expr>))*\}/.source.replace(/<expr>/g,function(){return r})),lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\$\{|\}$/,alias:"punctuation"},rest:null}}}}],keyword:/\b(?:as)\b/,boolean:/\b(?:false|true)\b/,"builtin-function":{pattern:/((?:^|[^?])\?\s*)\w+/,lookbehind:!0,alias:"function"},function:/\b\w+(?=\s*\()/,number:/\b\d+(?:\.\d+)?\b/,operator:/\.\.[<*!]?|->|--|\+\+|&&|\|\||\?{1,2}|[-+*/%!=<>]=?|\b(?:gt|gte|lt|lte)\b/,punctuation:/[,;.:()[\]{}]/};i.string[1].inside.interpolation.inside.rest=i,n.languages.ftl={"ftl-comment":{pattern:/^<#--[\s\S]*/,alias:"comment"},"ftl-directive":{pattern:/^<[\s\S]+>$/,inside:{directive:{pattern:/(^<\/?)[#@][a-z]\w*/i,lookbehind:!0,alias:"keyword"},punctuation:/^<\/?|\/?>$/,content:{pattern:/\s*\S[\s\S]*/,alias:"ftl",inside:i}}},"ftl-interpolation":{pattern:/^\$\{[\s\S]*\}$/,inside:{punctuation:/^\$\{|\}$/,content:{pattern:/\s*\S[\s\S]*/,alias:"ftl",inside:i}}}},n.hooks.add("before-tokenize",function(a){var o=RegExp(/<#--[\s\S]*?-->|<\/?[#@][a-zA-Z](?:<expr>)*?>|\$\{(?:<expr>)*?\}/.source.replace(/<expr>/g,function(){return r}),"gi");n.languages["markup-templating"].buildPlaceholders(a,"ftl",o)}),n.hooks.add("after-tokenize",function(a){n.languages["markup-templating"].tokenizePlaceholders(a,"ftl")})}(t)}Np.displayName="gml";Np.aliases=["gamemakerlanguage"];function Np(t){t.register(le),t.languages.gamemakerlanguage=t.languages.gml=t.languages.extend("clike",{keyword:/\b(?:break|case|continue|default|do|else|enum|exit|for|globalvar|if|repeat|return|switch|until|var|while)\b/,number:/(?:\b0x[\da-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[ulf]{0,4}/i,operator:/--|\+\+|[-+%/=]=?|!=|\*\*?=?|<[<=>]?|>[=>]?|&&?|\^\^?|\|\|?|~|\b(?:and|at|not|or|with|xor)\b/,constant:/\b(?:GM_build_date|GM_version|action_(?:continue|restart|reverse|stop)|all|gamespeed_(?:fps|microseconds)|global|local|noone|other|pi|pointer_(?:invalid|null)|self|timezone_(?:local|utc)|undefined|ev_(?:create|destroy|step|alarm|keyboard|mouse|collision|other|draw|draw_(?:begin|end|post|pre)|keypress|keyrelease|trigger|(?:left|middle|no|right)_button|(?:left|middle|right)_press|(?:left|middle|right)_release|mouse_(?:enter|leave|wheel_down|wheel_up)|global_(?:left|middle|right)_button|global_(?:left|middle|right)_press|global_(?:left|middle|right)_release|joystick(?:1|2)_(?:button1|button2|button3|button4|button5|button6|button7|button8|down|left|right|up)|outside|boundary|game_start|game_end|room_start|room_end|no_more_lives|animation_end|end_of_path|no_more_health|user\d|gui|gui_begin|gui_end|step_(?:begin|end|normal))|vk_(?:alt|anykey|backspace|control|delete|down|end|enter|escape|home|insert|left|nokey|pagedown|pageup|pause|printscreen|return|right|shift|space|tab|up|f\d|numpad\d|add|decimal|divide|lalt|lcontrol|lshift|multiply|ralt|rcontrol|rshift|subtract)|achievement_(?:filter_(?:all_players|favorites_only|friends_only)|friends_info|info|leaderboard_info|our_info|pic_loaded|show_(?:achievement|bank|friend_picker|leaderboard|profile|purchase_prompt|ui)|type_challenge|type_score_challenge)|asset_(?:font|object|path|room|script|shader|sound|sprite|tiles|timeline|unknown)|audio_(?:3d|falloff_(?:exponent_distance|exponent_distance_clamped|inverse_distance|inverse_distance_clamped|linear_distance|linear_distance_clamped|none)|mono|new_system|old_system|stereo)|bm_(?:add|complex|dest_alpha|dest_color|dest_colour|inv_dest_alpha|inv_dest_color|inv_dest_colour|inv_src_alpha|inv_src_color|inv_src_colour|max|normal|one|src_alpha|src_alpha_sat|src_color|src_colour|subtract|zero)|browser_(?:chrome|firefox|ie|ie_mobile|not_a_browser|opera|safari|safari_mobile|tizen|unknown|windows_store)|buffer_(?:bool|f16|f32|f64|fast|fixed|generalerror|grow|invalidtype|network|outofbounds|outofspace|s16|s32|s8|seek_end|seek_relative|seek_start|string|text|u16|u32|u64|u8|vbuffer|wrap)|c_(?:aqua|black|blue|dkgray|fuchsia|gray|green|lime|ltgray|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)|cmpfunc_(?:always|equal|greater|greaterequal|less|lessequal|never|notequal)|cr_(?:appstart|arrow|beam|cross|default|drag|handpoint|hourglass|none|size_all|size_nesw|size_ns|size_nwse|size_we|uparrow)|cull_(?:clockwise|counterclockwise|noculling)|device_(?:emulator|tablet)|device_ios_(?:ipad|ipad_retina|iphone|iphone5|iphone6|iphone6plus|iphone_retina|unknown)|display_(?:landscape|landscape_flipped|portrait|portrait_flipped)|dll_(?:cdecl|cdel|stdcall)|ds_type_(?:grid|list|map|priority|queue|stack)|ef_(?:cloud|ellipse|explosion|firework|flare|rain|ring|smoke|smokeup|snow|spark|star)|fa_(?:archive|bottom|center|directory|hidden|left|middle|readonly|right|sysfile|top|volumeid)|fb_login_(?:default|fallback_to_webview|forcing_safari|forcing_webview|no_fallback_to_webview|use_system_account)|iap_(?:available|canceled|ev_consume|ev_product|ev_purchase|ev_restore|ev_storeload|failed|purchased|refunded|status_available|status_loading|status_processing|status_restoring|status_unavailable|status_uninitialised|storeload_failed|storeload_ok|unavailable)|leaderboard_type_(?:number|time_mins_secs)|lighttype_(?:dir|point)|matrix_(?:projection|view|world)|mb_(?:any|left|middle|none|right)|network_(?:config_(?:connect_timeout|disable_reliable_udp|enable_reliable_udp|use_non_blocking_socket)|socket_(?:bluetooth|tcp|udp)|type_(?:connect|data|disconnect|non_blocking_connect))|of_challenge_(?:lose|tie|win)|os_(?:android|ios|linux|macosx|ps3|ps4|psvita|unknown|uwp|win32|win8native|windows|winphone|xboxone)|phy_debug_render_(?:aabb|collision_pairs|coms|core_shapes|joints|obb|shapes)|phy_joint_(?:anchor_1_x|anchor_1_y|anchor_2_x|anchor_2_y|angle|angle_limits|damping_ratio|frequency|length_1|length_2|lower_angle_limit|max_force|max_length|max_motor_force|max_motor_torque|max_torque|motor_force|motor_speed|motor_torque|reaction_force_x|reaction_force_y|reaction_torque|speed|translation|upper_angle_limit)|phy_particle_data_flag_(?:category|color|colour|position|typeflags|velocity)|phy_particle_flag_(?:colormixing|colourmixing|elastic|powder|spring|tensile|viscous|wall|water|zombie)|phy_particle_group_flag_(?:rigid|solid)|pr_(?:linelist|linestrip|pointlist|trianglefan|trianglelist|trianglestrip)|ps_(?:distr|shape)_(?:diamond|ellipse|gaussian|invgaussian|line|linear|rectangle)|pt_shape_(?:circle|cloud|disk|explosion|flare|line|pixel|ring|smoke|snow|spark|sphere|square|star)|ty_(?:real|string)|gp_(?:face\d|axislh|axislv|axisrh|axisrv|padd|padl|padr|padu|select|shoulderl|shoulderlb|shoulderr|shoulderrb|start|stickl|stickr)|lb_disp_(?:none|numeric|time_ms|time_sec)|lb_sort_(?:ascending|descending|none)|ov_(?:achievements|community|friends|gamegroup|players|settings)|ugc_(?:filetype_(?:community|microtrans)|list_(?:Favorited|Followed|Published|Subscribed|UsedOrPlayed|VotedDown|VotedOn|VotedUp|WillVoteLater)|match_(?:AllGuides|Artwork|Collections|ControllerBindings|IntegratedGuides|Items|Items_Mtx|Items_ReadyToUse|Screenshots|UsableInGame|Videos|WebGuides)|query_(?:AcceptedForGameRankedByAcceptanceDate|CreatedByFriendsRankedByPublicationDate|FavoritedByFriendsRankedByPublicationDate|NotYetRated)|query_RankedBy(?:NumTimesReported|PublicationDate|TextSearch|TotalVotesAsc|Trend|Vote|VotesUp)|result_success|sortorder_CreationOrder(?:Asc|Desc)|sortorder_(?:ForModeration|LastUpdatedDesc|SubscriptionDateDesc|TitleAsc|VoteScoreDesc)|visibility_(?:friends_only|private|public))|vertex_usage_(?:binormal|blendindices|blendweight|color|colour|depth|fog|normal|position|psize|sample|tangent|texcoord|textcoord)|vertex_type_(?:float\d|color|colour|ubyte4)|input_type|layerelementtype_(?:background|instance|oldtilemap|particlesystem|sprite|tile|tilemap|undefined)|se_(?:chorus|compressor|echo|equalizer|flanger|gargle|none|reverb)|text_type|tile_(?:flip|index_mask|mirror|rotate)|(?:obj|rm|scr|spr)\w+)\b/,variable:/\b(?:alarm|application_surface|async_load|background_(?:alpha|blend|color|colour|foreground|height|hspeed|htiled|index|showcolor|showcolour|visible|vspeed|vtiled|width|x|xscale|y|yscale)|bbox_(?:bottom|left|right|top)|browser_(?:height|width)|caption_(?:health|lives|score)|current_(?:day|hour|minute|month|second|time|weekday|year)|cursor_sprite|debug_mode|delta_time|direction|display_aa|error_(?:last|occurred)|event_(?:action|number|object|type)|fps|fps_real|friction|game_(?:display|project|save)_(?:id|name)|gamemaker_(?:pro|registered|version)|gravity|gravity_direction|(?:h|v)speed|health|iap_data|id|image_(?:alpha|angle|blend|depth|index|number|speed|xscale|yscale)|instance_(?:count|id)|keyboard_(?:key|lastchar|lastkey|string)|layer|lives|mask_index|mouse_(?:button|lastbutton|x|y)|object_index|os_(?:browser|device|type|version)|path_(?:endaction|index|orientation|position|positionprevious|scale|speed)|persistent|phy_(?:rotation|(?:col_normal|collision|com|linear_velocity|position|speed)_(?:x|y)|angular_(?:damping|velocity)|position_(?:x|y)previous|speed|linear_damping|bullet|fixed_rotation|active|mass|inertia|dynamic|kinematic|sleeping|collision_points)|pointer_(?:invalid|null)|room|room_(?:caption|first|height|last|persistent|speed|width)|score|secure_mode|show_(?:health|lives|score)|solid|speed|sprite_(?:height|index|width|xoffset|yoffset)|temp_directory|timeline_(?:index|loop|position|running|speed)|transition_(?:color|kind|steps)|undefined|view_(?:angle|current|enabled|(?:h|v)(?:border|speed)|(?:h|w|x|y)port|(?:h|w|x|y)view|object|surface_id|visible)|visible|webgl_enabled|working_directory|(?:x|y)(?:previous|start)|x|y|argument(?:_relitive|_count|\d)|argument|global|local|other|self)\b/})}jp.displayName="gap";jp.aliases=[];function jp(t){t.languages.gap={shell:{pattern:/^gap>[\s\S]*?(?=^gap>|$(?![\s\S]))/m,greedy:!0,inside:{gap:{pattern:/^(gap>).+(?:(?:\r(?:\n|(?!\n))|\n)>.*)*/,lookbehind:!0,inside:null},punctuation:/^gap>/}},comment:{pattern:/#.*/,greedy:!0},string:{pattern:/(^|[^\\'"])(?:'(?:[^\r\n\\']|\\.){1,10}'|"(?:[^\r\n\\"]|\\.)*"(?!")|"""[\s\S]*?""")/,lookbehind:!0,greedy:!0,inside:{continuation:{pattern:/([\r\n])>/,lookbehind:!0,alias:"punctuation"}}},keyword:/\b(?:Assert|Info|IsBound|QUIT|TryNextMethod|Unbind|and|atomic|break|continue|do|elif|else|end|fi|for|function|if|in|local|mod|not|od|or|quit|readonly|readwrite|rec|repeat|return|then|until|while)\b/,boolean:/\b(?:false|true)\b/,function:/\b[a-z_]\w*(?=\s*\()/i,number:{pattern:/(^|[^\w.]|\.\.)(?:\d+(?:\.\d*)?|\.\d+)(?:[eE][+-]?\d+)?(?:_[a-z]?)?(?=$|[^\w.]|\.\.)/,lookbehind:!0},continuation:{pattern:/([\r\n])>/,lookbehind:!0,alias:"punctuation"},operator:/->|[-+*/^~=!]|<>|[<>]=?|:=|\.\./,punctuation:/[()[\]{},;.:]/},t.languages.gap.shell.inside.gap.inside=t.languages.gap}Ap.displayName="gcode";Ap.aliases=[];function Ap(t){t.languages.gcode={comment:/;.*|\B\(.*?\)\B/,string:{pattern:/"(?:""|[^"])*"/,greedy:!0},keyword:/\b[GM]\d+(?:\.\d+)?\b/,property:/\b[A-Z]/,checksum:{pattern:/(\*)\d+/,lookbehind:!0,alias:"number"},punctuation:/[:*]/}}_p.displayName="gdscript";_p.aliases=[];function _p(t){t.languages.gdscript={comment:/#.*/,string:{pattern:/@?(?:("|')(?:(?!\1)[^\n\\]|\\[\s\S])*\1(?!"|')|"""(?:[^\\]|\\[\s\S])*?""")/,greedy:!0},"class-name":{pattern:/(^(?:class|class_name|extends)[ \t]+|^export\([ \t]*|\bas[ \t]+|(?:\b(?:const|var)[ \t]|[,(])[ \t]*\w+[ \t]*:[ \t]*|->[ \t]*)[a-zA-Z_]\w*/m,lookbehind:!0},keyword:/\b(?:and|as|assert|break|breakpoint|class|class_name|const|continue|elif|else|enum|export|extends|for|func|if|in|is|master|mastersync|match|not|null|onready|or|pass|preload|puppet|puppetsync|remote|remotesync|return|self|setget|signal|static|tool|var|while|yield)\b/,function:/\b[a-z_]\w*(?=[ \t]*\()/i,variable:/\$\w+/,number:[/\b0b[01_]+\b|\b0x[\da-fA-F_]+\b|(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.[\d_]+)(?:e[+-]?[\d_]+)?\b/,/\b(?:INF|NAN|PI|TAU)\b/],constant:/\b[A-Z][A-Z_\d]*\b/,boolean:/\b(?:false|true)\b/,operator:/->|:=|&&|\|\||<<|>>|[-+*/%&|!<>=]=?|[~^]/,punctuation:/[.:,;()[\]{}]/}}vp.displayName="gedcom";vp.aliases=[];function vp(t){t.languages.gedcom={"line-value":{pattern:/(^[\t ]*\d+ +(?:@\w[\w!"$%&'()*+,\-./:;<=>?[\\\]^`{|}~\x80-\xfe #]*@ +)?\w+ ).+/m,lookbehind:!0,inside:{pointer:{pattern:/^@\w[\w!"$%&'()*+,\-./:;<=>?[\\\]^`{|}~\x80-\xfe #]*@$/,alias:"variable"}}},record:{pattern:/(^[\t ]*\d+ +(?:@\w[\w!"$%&'()*+,\-./:;<=>?[\\\]^`{|}~\x80-\xfe #]*@ +)?)\w+/m,lookbehind:!0,alias:"tag"},level:{pattern:/(^[\t ]*)\d+/m,lookbehind:!0,alias:"number"},pointer:{pattern:/@\w[\w!"$%&'()*+,\-./:;<=>?[\\\]^`{|}~\x80-\xfe #]*@/,alias:"variable"}}}Rp.displayName="gettext";Rp.aliases=["po"];function Rp(t){t.languages.gettext={comment:[{pattern:/# .*/,greedy:!0,alias:"translator-comment"},{pattern:/#\..*/,greedy:!0,alias:"extracted-comment"},{pattern:/#:.*/,greedy:!0,alias:"reference-comment"},{pattern:/#,.*/,greedy:!0,alias:"flag-comment"},{pattern:/#\|.*/,greedy:!0,alias:"previously-untranslated-comment"},{pattern:/#.*/,greedy:!0}],string:{pattern:/(^|[^\\])"(?:[^"\\]|\\.)*"/,lookbehind:!0,greedy:!0},keyword:/^msg(?:ctxt|id|id_plural|str)\b/m,number:/\b\d+\b/,punctuation:/[\[\]]/},t.languages.po=t.languages.gettext}wp.displayName="gherkin";wp.aliases=[];function wp(t){(function(n){var r=/(?:\r?\n|\r)[ \t]*\|.+\|(?:(?!\|).)*/.source;n.languages.gherkin={pystring:{pattern:/("""|''')[\s\S]+?\1/,alias:"string"},comment:{pattern:/(^[ \t]*)#.*/m,lookbehind:!0},tag:{pattern:/(^[ \t]*)@\S*/m,lookbehind:!0},feature:{pattern:/((?:^|\r?\n|\r)[ \t]*)(?:Ability|Ahoy matey!|Arwedd|Aspekt|Besigheid Behoefte|Business Need|Caracteristica|Característica|Egenskab|Egenskap|Eiginleiki|Feature|Fīča|Fitur|Fonctionnalité|Fonksyonalite|Funcionalidade|Funcionalitat|Functionalitate|Funcţionalitate|Funcționalitate|Functionaliteit|Fungsi|Funkcia|Funkcija|Funkcionalitāte|Funkcionalnost|Funkcja|Funksie|Funktionalität|Funktionalitéit|Funzionalità|Hwaet|Hwæt|Jellemző|Karakteristik|Lastnost|Mak|Mogucnost|laH|Mogućnost|Moznosti|Možnosti|OH HAI|Omadus|Ominaisuus|Osobina|Özellik|Potrzeba biznesowa|perbogh|poQbogh malja'|Požadavek|Požiadavka|Pretty much|Qap|Qu'meH 'ut|Savybė|Tính năng|Trajto|Vermoë|Vlastnosť|Właściwość|Značilnost|Δυνατότητα|Λειτουργία|Могућност|Мөмкинлек|Особина|Свойство|Үзенчәлеклелек|Функционал|Функционалност|Функция|Функціонал|תכונה|خاصية|خصوصیت|صلاحیت|کاروبار کی ضرورت|وِیژگی|रूप लेख|ਖਾਸੀਅਤ|ਨਕਸ਼ ਨੁਹਾਰ|ਮੁਹਾਂਦਰਾ|గుణము|ಹೆಚ್ಚಳ|ความต้องการทางธุรกิจ|ความสามารถ|โครงหลัก|기능|フィーチャ|功能|機能):(?:[^:\r\n]+(?:\r?\n|\r|$))*/,lookbehind:!0,inside:{important:{pattern:/(:)[^\r\n]+/,lookbehind:!0},keyword:/[^:\r\n]+:/}},scenario:{pattern:/(^[ \t]*)(?:Abstract Scenario|Abstrakt Scenario|Achtergrond|Aer|Ær|Agtergrond|All y'all|Antecedentes|Antecedents|Atburðarás|Atburðarásir|Awww, look mate|B4|Background|Baggrund|Bakgrund|Bakgrunn|Bakgrunnur|Beispiele|Beispiller|Bối cảnh|Cefndir|Cenario|Cenário|Cenario de Fundo|Cenário de Fundo|Cenarios|Cenários|Contesto|Context|Contexte|Contexto|Conto|Contoh|Contone|Dæmi|Dasar|Dead men tell no tales|Delineacao do Cenario|Delineação do Cenário|Dis is what went down|Dữ liệu|Dyagram Senaryo|Dyagram senaryo|Egzanp|Ejemplos|Eksempler|Ekzemploj|Enghreifftiau|Esbozo do escenario|Escenari|Escenario|Esempi|Esquema de l'escenari|Esquema del escenario|Esquema do Cenario|Esquema do Cenário|EXAMPLZ|Examples|Exempel|Exemple|Exemples|Exemplos|First off|Fono|Forgatókönyv|Forgatókönyv vázlat|Fundo|Geçmiş|Grundlage|Hannergrond|ghantoH|Háttér|Heave to|Istorik|Juhtumid|Keadaan|Khung kịch bản|Khung tình huống|Kịch bản|Koncept|Konsep skenario|Kontèks|Kontekst|Kontekstas|Konteksts|Kontext|Konturo de la scenaro|Latar Belakang|lut chovnatlh|lut|lutmey|Lýsing Atburðarásar|Lýsing Dæma|MISHUN SRSLY|MISHUN|Menggariskan Senario|mo'|Náčrt Scenára|Náčrt Scénáře|Náčrt Scenáru|Oris scenarija|Örnekler|Osnova|Osnova Scenára|Osnova scénáře|Osnutek|Ozadje|Paraugs|Pavyzdžiai|Példák|Piemēri|Plan du scénario|Plan du Scénario|Plan Senaryo|Plan senaryo|Plang vum Szenario|Pozadí|Pozadie|Pozadina|Príklady|Příklady|Primer|Primeri|Primjeri|Przykłady|Raamstsenaarium|Reckon it's like|Rerefons|Scenár|Scénář|Scenarie|Scenarij|Scenarijai|Scenarijaus šablonas|Scenariji|Scenārijs|Scenārijs pēc parauga|Scenarijus|Scenario|Scénario|Scenario Amlinellol|Scenario Outline|Scenario Template|Scenariomal|Scenariomall|Scenarios|Scenariu|Scenariusz|Scenaro|Schema dello scenario|Se ðe|Se the|Se þe|Senario|Senaryo Deskripsyon|Senaryo deskripsyon|Senaryo|Senaryo taslağı|Shiver me timbers|Situācija|Situai|Situasie Uiteensetting|Situasie|Skenario konsep|Skenario|Skica|Structura scenariu|Structură scenariu|Struktura scenarija|Stsenaarium|Swa hwaer swa|Swa|Swa hwær swa|Szablon scenariusza|Szenario|Szenariogrundriss|Tapaukset|Tapaus|Tapausaihio|Taust|Tausta|Template Keadaan|Template Senario|Template Situai|The thing of it is|Tình huống|Variantai|Voorbeelde|Voorbeelden|Wharrimean is|Yo-ho-ho|You'll wanna|Założenia|Παραδείγματα|Περιγραφή Σεναρίου|Σενάρια|Σενάριο|Υπόβαθρο|Кереш|Контекст|Концепт|Мисаллар|Мисоллар|Основа|Передумова|Позадина|Предистория|Предыстория|Приклади|Пример|Примери|Примеры|Рамка на сценарий|Скица|Структура сценарија|Структура сценария|Структура сценарію|Сценарий|Сценарий структураси|Сценарийның төзелеше|Сценарији|Сценарио|Сценарій|Тарих|Үрнәкләр|דוגמאות|רקע|תבנית תרחיש|תרחיש|الخلفية|الگوی سناریو|امثلة|پس منظر|زمینه|سناریو|سيناريو|سيناريو مخطط|مثالیں|منظر نامے کا خاکہ|منظرنامہ|نمونه ها|उदाहरण|परिदृश्य|परिदृश्य रूपरेखा|पृष्ठभूमि|ਉਦਾਹਰਨਾਂ|ਪਟਕਥਾ|ਪਟਕਥਾ ਢਾਂਚਾ|ਪਟਕਥਾ ਰੂਪ ਰੇਖਾ|ਪਿਛੋਕੜ|ఉదాహరణలు|కథనం|నేపథ్యం|సన్నివేశం|ಉದಾಹರಣೆಗಳು|ಕಥಾಸಾರಾಂಶ|ವಿವರಣೆ|ಹಿನ್ನೆಲೆ|โครงสร้างของเหตุการณ์|ชุดของตัวอย่าง|ชุดของเหตุการณ์|แนวคิด|สรุปเหตุการณ์|เหตุการณ์|배경|시나리오|시나리오 개요|예|サンプル|シナリオ|シナリオアウトライン|シナリオテンプレ|シナリオテンプレート|テンプレ|例|例子|剧本|剧本大纲|劇本|劇本大綱|场景|场景大纲|場景|場景大綱|背景):[^:\r\n]*/m,lookbehind:!0,inside:{important:{pattern:/(:)[^\r\n]*/,lookbehind:!0},keyword:/[^:\r\n]+:/}},"table-body":{pattern:RegExp("("+r+")(?:"+r+")+"),lookbehind:!0,inside:{outline:{pattern:/<[^>]+>/,alias:"variable"},td:{pattern:/\s*[^\s|][^|]*/,alias:"string"},punctuation:/\|/}},"table-head":{pattern:RegExp(r),inside:{th:{pattern:/\s*[^\s|][^|]*/,alias:"variable"},punctuation:/\|/}},atrule:{pattern:/(^[ \t]+)(?:'a|'ach|'ej|7|a|A také|A taktiež|A tiež|A zároveň|Aber|Ac|Adott|Akkor|Ak|Aleshores|Ale|Ali|Allora|Alors|Als|Ama|Amennyiben|Amikor|Ampak|an|AN|Ananging|And y'all|And|Angenommen|Anrhegedig a|An|Apabila|Atès|Atesa|Atunci|Avast!|Aye|A|awer|Bagi|Banjur|Bet|Biết|Blimey!|Buh|But at the end of the day I reckon|But y'all|But|BUT|Cal|Când|Cand|Cando|Ce|Cuando|Če|Ða ðe|Ða|Dadas|Dada|Dados|Dado|DaH ghu' bejlu'|dann|Dann|Dano|Dan|Dar|Dat fiind|Data|Date fiind|Date|Dati fiind|Dati|Daţi fiind|Dați fiind|DEN|Dato|De|Den youse gotta|Dengan|Diberi|Diyelim ki|Donada|Donat|Donitaĵo|Do|Dun|Duota|Ðurh|Eeldades|Ef|Eğer ki|Entao|Então|Entón|E|En|Entonces|Epi|És|Etant donnée|Etant donné|Et|Étant données|Étant donnée|Étant donné|Etant données|Etant donnés|Étant donnés|Fakat|Gangway!|Gdy|Gegeben seien|Gegeben sei|Gegeven|Gegewe|ghu' noblu'|Gitt|Given y'all|Given|Givet|Givun|Ha|Cho|I CAN HAZ|In|Ir|It's just unbelievable|I|Ja|Jeśli|Jeżeli|Kad|Kada|Kadar|Kai|Kaj|Když|Keď|Kemudian|Ketika|Khi|Kiedy|Ko|Kuid|Kui|Kun|Lan|latlh|Le sa a|Let go and haul|Le|Lè sa a|Lè|Logo|Lorsqu'<|Lorsque|mä|Maar|Mais|Mając|Ma|Majd|Maka|Manawa|Mas|Men|Menawa|Mutta|Nalika|Nalikaning|Nanging|Når|När|Nato|Nhưng|Niin|Njuk|O zaman|Och|Og|Oletetaan|Ond|Onda|Oraz|Pak|Pero|Però|Podano|Pokiaľ|Pokud|Potem|Potom|Privzeto|Pryd|Quan|Quand|Quando|qaSDI'|Så|Sed|Se|Siis|Sipoze ke|Sipoze Ke|Sipoze|Si|Şi|Și|Soit|Stel|Tada|Tad|Takrat|Tak|Tapi|Ter|Tetapi|Tha the|Tha|Then y'all|Then|Thì|Thurh|Toda|Too right|Un|Und|ugeholl|Và|vaj|Vendar|Ve|wann|Wanneer|WEN|Wenn|When y'all|When|Wtedy|Wun|Y'know|Yeah nah|Yna|Youse know like when|Youse know when youse got|Y|Za predpokladu|Za předpokladu|Zadan|Zadani|Zadano|Zadate|Zadato|Zakładając|Zaradi|Zatati|Þa þe|Þa|Þá|Þegar|Þurh|Αλλά|Δεδομένου|Και|Όταν|Τότε|А також|Агар|Але|Али|Аммо|А|Әгәр|Әйтик|Әмма|Бирок|Ва|Вә|Дадено|Дано|Допустим|Если|Задате|Задати|Задато|И|І|К тому же|Када|Кад|Когато|Когда|Коли|Ләкин|Лекин|Нәтиҗәдә|Нехай|Но|Онда|Припустимо, що|Припустимо|Пусть|Также|Та|Тогда|Тоді|То|Унда|Һәм|Якщо|אבל|אזי|אז|בהינתן|וגם|כאשר|آنگاه|اذاً|اگر|اما|اور|با فرض|بالفرض|بفرض|پھر|تب|ثم|جب|عندما|فرض کیا|لكن|لیکن|متى|هنگامی|و|अगर|और|कदा|किन्तु|चूंकि|जब|तथा|तदा|तब|परन्तु|पर|यदि|ਅਤੇ|ਜਦੋਂ|ਜਿਵੇਂ ਕਿ|ਜੇਕਰ|ਤਦ|ਪਰ|అప్పుడు|ఈ పరిస్థితిలో|కాని|చెప్పబడినది|మరియు|ಆದರೆ|ನಂತರ|ನೀಡಿದ|ಮತ್ತು|ಸ್ಥಿತಿಯನ್ನು|กำหนดให้|ดังนั้น|แต่|เมื่อ|และ|그러면<|그리고<|단<|만약<|만일<|먼저<|조건<|하지만<|かつ<|しかし<|ただし<|ならば<|もし<|並且<|但し<|但是<|假如<|假定<|假設<|假设<|前提<|同时<|同時<|并且<|当<|當<|而且<|那么<|那麼<)(?=[ \t])/m,lookbehind:!0},string:{pattern:/"(?:\\.|[^"\\\r\n])*"|'(?:\\.|[^'\\\r\n])*'/,inside:{outline:{pattern:/<[^>]+>/,alias:"variable"}}},outline:{pattern:/<[^>]+>/,alias:"variable"}}})(t)}Ip.displayName="git";Ip.aliases=[];function Ip(t){t.languages.git={comment:/^#.*/m,deleted:/^[-–].*/m,inserted:/^\+.*/m,string:/("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,command:{pattern:/^.*\$ git .*$/m,inside:{parameter:/\s--?\w+/}},coord:/^@@.*@@$/m,"commit-sha1":/^commit \w{40}$/m}}Cp.displayName="glsl";Cp.aliases=[];function Cp(t){t.register(un),t.languages.glsl=t.languages.extend("c",{keyword:/\b(?:active|asm|atomic_uint|attribute|[ibdu]?vec[234]|bool|break|buffer|case|cast|centroid|class|coherent|common|const|continue|d?mat[234](?:x[234])?|default|discard|do|double|else|enum|extern|external|false|filter|fixed|flat|float|for|fvec[234]|goto|half|highp|hvec[234]|[iu]?sampler2DMS(?:Array)?|[iu]?sampler2DRect|[iu]?samplerBuffer|[iu]?samplerCube|[iu]?samplerCubeArray|[iu]?sampler[123]D|[iu]?sampler[12]DArray|[iu]?image2DMS(?:Array)?|[iu]?image2DRect|[iu]?imageBuffer|[iu]?imageCube|[iu]?imageCubeArray|[iu]?image[123]D|[iu]?image[12]DArray|if|in|inline|inout|input|int|interface|invariant|layout|long|lowp|mediump|namespace|noinline|noperspective|out|output|partition|patch|precise|precision|public|readonly|resource|restrict|return|sample|sampler[12]DArrayShadow|sampler[12]DShadow|sampler2DRectShadow|sampler3DRect|samplerCubeArrayShadow|samplerCubeShadow|shared|short|sizeof|smooth|static|struct|subroutine|superp|switch|template|this|true|typedef|uint|uniform|union|unsigned|using|varying|void|volatile|while|writeonly)\b/})}Op.displayName="gn";Op.aliases=["gni"];function Op(t){t.languages.gn={comment:{pattern:/#.*/,greedy:!0},"string-literal":{pattern:/(^|[^\\"])"(?:[^\r\n"\\]|\\.)*"/,lookbehind:!0,greedy:!0,inside:{interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\$(?:\{[\s\S]*?\}|[a-zA-Z_]\w*|0x[a-fA-F0-9]{2})/,lookbehind:!0,inside:{number:/^\$0x[\s\S]{2}$/,variable:/^\$\w+$/,"interpolation-punctuation":{pattern:/^\$\{|\}$/,alias:"punctuation"},expression:{pattern:/[\s\S]+/,inside:null}}},string:/[\s\S]+/}},keyword:/\b(?:else|if)\b/,boolean:/\b(?:false|true)\b/,"builtin-function":{pattern:/\b(?:assert|defined|foreach|import|pool|print|template|tool|toolchain)(?=\s*\()/i,alias:"keyword"},function:/\b[a-z_]\w*(?=\s*\()/i,constant:/\b(?:current_cpu|current_os|current_toolchain|default_toolchain|host_cpu|host_os|root_build_dir|root_gen_dir|root_out_dir|target_cpu|target_gen_dir|target_os|target_out_dir)\b/,number:/-?\b\d+\b/,operator:/[-+!=<>]=?|&&|\|\|/,punctuation:/[(){}[\],.]/},t.languages.gn["string-literal"].inside.interpolation.inside.expression.inside=t.languages.gn,t.languages.gni=t.languages.gn}kp.displayName="linker-script";kp.aliases=["ld"];function kp(t){t.languages["linker-script"]={comment:{pattern:/(^|\s)\/\*[\s\S]*?(?:$|\*\/)/,lookbehind:!0,greedy:!0},identifier:{pattern:/"[^"\r\n]*"/,greedy:!0},"location-counter":{pattern:/\B\.\B/,alias:"important"},section:{pattern:/(^|[^\w*])\.\w+\b/,lookbehind:!0,alias:"keyword"},function:/\b[A-Z][A-Z_]*(?=\s*\()/,number:/\b(?:0[xX][a-fA-F0-9]+|\d+)[KM]?\b/,operator:/>>=?|<<=?|->|\+\+|--|&&|\|\||::|[?:~]|[-+*/%&|^!=<>]=?/,punctuation:/[(){},;]/},t.languages.ld=t.languages["linker-script"]}Lp.displayName="go-module";Lp.aliases=["go-mod"];function Lp(t){t.languages["go-mod"]=t.languages["go-module"]={comment:{pattern:/\/\/.*/,greedy:!0},version:{pattern:/(^|[\s()[\],])v\d+\.\d+\.\d+(?:[+-][-+.\w]*)?(?![^\s()[\],])/,lookbehind:!0,alias:"number"},"go-version":{pattern:/((?:^|\s)go\s+)\d+(?:\.\d+){1,2}/,lookbehind:!0,alias:"number"},keyword:{pattern:/^([ \t]*)(?:exclude|go|module|replace|require|retract)\b/m,lookbehind:!0},operator:/=>/,punctuation:/[()[\],]/}}Dp.displayName="gradle";Dp.aliases=[];function Dp(t){t.register(le),function(n){var r={pattern:/((?:^|[^\\$])(?:\\{2})*)\$(?:\w+|\{[^{}]*\})/,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\$\{?|\}$/,alias:"punctuation"},expression:{pattern:/[\s\S]+/,inside:null}}};n.languages.gradle=n.languages.extend("clike",{string:{pattern:/'''(?:[^\\]|\\[\s\S])*?'''|'(?:\\.|[^\\'\r\n])*'/,greedy:!0},keyword:/\b(?:apply|def|dependencies|else|if|implementation|import|plugin|plugins|project|repositories|repository|sourceSets|tasks|val)\b/,number:/\b(?:0b[01_]+|0x[\da-f_]+(?:\.[\da-f_p\-]+)?|[\d_]+(?:\.[\d_]+)?(?:e[+-]?\d+)?)[glidf]?\b/i,operator:{pattern:/(^|[^.])(?:~|==?~?|\?[.:]?|\*(?:[.=]|\*=?)?|\.[@&]|\.\.<|\.\.(?!\.)|-[-=>]?|\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\|[|=]?|\/=?|\^=?|%=?)/,lookbehind:!0},punctuation:/\.+|[{}[\];(),:$]/}),n.languages.insertBefore("gradle","string",{shebang:{pattern:/#!.+/,alias:"comment",greedy:!0},"interpolation-string":{pattern:/"""(?:[^\\]|\\[\s\S])*?"""|(["/])(?:\\.|(?!\1)[^\\\r\n])*\1|\$\/(?:[^/$]|\$(?:[/$]|(?![/$]))|\/(?!\$))*\/\$/,greedy:!0,inside:{interpolation:r,string:/[\s\S]+/}}}),n.languages.insertBefore("gradle","punctuation",{"spock-block":/\b(?:and|cleanup|expect|given|setup|then|when|where):/}),n.languages.insertBefore("gradle","function",{annotation:{pattern:/(^|[^.])@\w+/,lookbehind:!0,alias:"punctuation"}}),r.inside.expression.inside=n.languages.gradle}(t)}Mp.displayName="graphql";Mp.aliases=[];function Mp(t){t.languages.graphql={comment:/#.*/,description:{pattern:/(?:"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*")(?=\s*[a-z_])/i,greedy:!0,alias:"string",inside:{"language-markdown":{pattern:/(^"(?:"")?)(?!\1)[\s\S]+(?=\1$)/,lookbehind:!0,inside:t.languages.markdown}}},string:{pattern:/"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*"/,greedy:!0},number:/(?:\B-|\b)\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,boolean:/\b(?:false|true)\b/,variable:/\$[a-z_]\w*/i,directive:{pattern:/@[a-z_]\w*/i,alias:"function"},"attr-name":{pattern:/\b[a-z_]\w*(?=\s*(?:\((?:[^()"]|"(?:\\.|[^\\"\r\n])*")*\))?:)/i,greedy:!0},"atom-input":{pattern:/\b[A-Z]\w*Input\b/,alias:"class-name"},scalar:/\b(?:Boolean|Float|ID|Int|String)\b/,constant:/\b[A-Z][A-Z_\d]*\b/,"class-name":{pattern:/(\b(?:enum|implements|interface|on|scalar|type|union)\s+|&\s*|:\s*|\[)[A-Z_]\w*/,lookbehind:!0},fragment:{pattern:/(\bfragment\s+|\.{3}\s*(?!on\b))[a-zA-Z_]\w*/,lookbehind:!0,alias:"function"},"definition-mutation":{pattern:/(\bmutation\s+)[a-zA-Z_]\w*/,lookbehind:!0,alias:"function"},"definition-query":{pattern:/(\bquery\s+)[a-zA-Z_]\w*/,lookbehind:!0,alias:"function"},keyword:/\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\b/,operator:/[!=|&]|\.{3}/,"property-query":/\w+(?=\s*\()/,object:/\w+(?=\s*\{)/,punctuation:/[!(){}\[\]:=,]/,property:/\w+/},t.hooks.add("after-tokenize",function(r){if(r.language!=="graphql")return;var s=r.tokens.filter(function(_){return typeof _!="string"&&_.type!=="comment"&&_.type!=="scalar"}),i=0;function a(_){return s[i+_]}function o(_,f){f=f||0;for(var b=0;b<_.length;b++){var T=a(b+f);if(!T||T.type!==_[b])return!1}return!0}function l(_,f){for(var b=1,T=i;T<s.length;T++){var E=s[T],R=E.content;if(E.type==="punctuation"&&typeof R=="string"){if(_.test(R))b++;else if(f.test(R)&&(b--,b===0))return T}}return-1}function c(_,f){var b=_.alias;b?Array.isArray(b)||(_.alias=b=[b]):_.alias=b=[],b.push(f)}for(;i<s.length;){var d=s[i++];if(d.type==="keyword"&&d.content==="mutation"){var h=[];if(o(["definition-mutation","punctuation"])&&a(1).content==="("){i+=2;var x=l(/^\($/,/^\)$/);if(x===-1)continue;for(;i<x;i++){var g=a(0);g.type==="variable"&&(c(g,"variable-input"),h.push(g.content))}i=x+1}if(o(["punctuation","property-query"])&&a(0).content==="{"&&(i++,c(a(0),"property-mutation"),h.length>0)){var A=l(/^\{$/,/^\}$/);if(A===-1)continue;for(var S=i;S<A;S++){var y=s[S];y.type==="variable"&&h.indexOf(y.content)>=0&&c(y,"variable-input")}}}}})}Fp.displayName="groovy";Fp.aliases=[];function Fp(t){t.register(le),function(n){var r={pattern:/((?:^|[^\\$])(?:\\{2})*)\$(?:\w+|\{[^{}]*\})/,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\$\{?|\}$/,alias:"punctuation"},expression:{pattern:/[\s\S]+/,inside:null}}};n.languages.groovy=n.languages.extend("clike",{string:{pattern:/'''(?:[^\\]|\\[\s\S])*?'''|'(?:\\.|[^\\'\r\n])*'/,greedy:!0},keyword:/\b(?:abstract|as|assert|boolean|break|byte|case|catch|char|class|const|continue|def|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|in|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\b/,number:/\b(?:0b[01_]+|0x[\da-f_]+(?:\.[\da-f_p\-]+)?|[\d_]+(?:\.[\d_]+)?(?:e[+-]?\d+)?)[glidf]?\b/i,operator:{pattern:/(^|[^.])(?:~|==?~?|\?[.:]?|\*(?:[.=]|\*=?)?|\.[@&]|\.\.<|\.\.(?!\.)|-[-=>]?|\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\|[|=]?|\/=?|\^=?|%=?)/,lookbehind:!0},punctuation:/\.+|[{}[\];(),:$]/}),n.languages.insertBefore("groovy","string",{shebang:{pattern:/#!.+/,alias:"comment",greedy:!0},"interpolation-string":{pattern:/"""(?:[^\\]|\\[\s\S])*?"""|(["/])(?:\\.|(?!\1)[^\\\r\n])*\1|\$\/(?:[^/$]|\$(?:[/$]|(?![/$]))|\/(?!\$))*\/\$/,greedy:!0,inside:{interpolation:r,string:/[\s\S]+/}}}),n.languages.insertBefore("groovy","punctuation",{"spock-block":/\b(?:and|cleanup|expect|given|setup|then|when|where):/}),n.languages.insertBefore("groovy","function",{annotation:{pattern:/(^|[^.])@\w+/,lookbehind:!0,alias:"punctuation"}}),r.inside.expression.inside=n.languages.groovy}(t)}Pp.displayName="textile";Pp.aliases=[];function Pp(t){t.register(Ze),function(n){var r=/\([^|()\n]+\)|\[[^\]\n]+\]|\{[^}\n]+\}/.source,s=/\)|\((?![^|()\n]+\))/.source;function i(x,g){return RegExp(x.replace(/<MOD>/g,function(){return"(?:"+r+")"}).replace(/<PAR>/g,function(){return"(?:"+s+")"}),g||"")}var a={css:{pattern:/\{[^{}]+\}/,inside:{rest:n.languages.css}},"class-id":{pattern:/(\()[^()]+(?=\))/,lookbehind:!0,alias:"attr-value"},lang:{pattern:/(\[)[^\[\]]+(?=\])/,lookbehind:!0,alias:"attr-value"},punctuation:/[\\\/]\d+|\S/},o=n.languages.textile=n.languages.extend("markup",{phrase:{pattern:/(^|\r|\n)\S[\s\S]*?(?=$|\r?\n\r?\n|\r\r)/,lookbehind:!0,inside:{"block-tag":{pattern:i(/^[a-z]\w*(?:<MOD>|<PAR>|[<>=])*\./.source),inside:{modifier:{pattern:i(/(^[a-z]\w*)(?:<MOD>|<PAR>|[<>=])+(?=\.)/.source),lookbehind:!0,inside:a},tag:/^[a-z]\w*/,punctuation:/\.$/}},list:{pattern:i(/^[*#]+<MOD>*\s+\S.*/.source,"m"),inside:{modifier:{pattern:i(/(^[*#]+)<MOD>+/.source),lookbehind:!0,inside:a},punctuation:/^[*#]+/}},table:{pattern:i(/^(?:(?:<MOD>|<PAR>|[<>=^~])+\.\s*)?(?:\|(?:(?:<MOD>|<PAR>|[<>=^~_]|[\\/]\d+)+\.|(?!(?:<MOD>|<PAR>|[<>=^~_]|[\\/]\d+)+\.))[^|]*)+\|/.source,"m"),inside:{modifier:{pattern:i(/(^|\|(?:\r?\n|\r)?)(?:<MOD>|<PAR>|[<>=^~_]|[\\/]\d+)+(?=\.)/.source),lookbehind:!0,inside:a},punctuation:/\||^\./}},inline:{pattern:i(/(^|[^a-zA-Z\d])(\*\*|__|\?\?|[*_%@+\-^~])<MOD>*.+?\2(?![a-zA-Z\d])/.source),lookbehind:!0,inside:{bold:{pattern:i(/(^(\*\*?)<MOD>*).+?(?=\2)/.source),lookbehind:!0},italic:{pattern:i(/(^(__?)<MOD>*).+?(?=\2)/.source),lookbehind:!0},cite:{pattern:i(/(^\?\?<MOD>*).+?(?=\?\?)/.source),lookbehind:!0,alias:"string"},code:{pattern:i(/(^@<MOD>*).+?(?=@)/.source),lookbehind:!0,alias:"keyword"},inserted:{pattern:i(/(^\+<MOD>*).+?(?=\+)/.source),lookbehind:!0},deleted:{pattern:i(/(^-<MOD>*).+?(?=-)/.source),lookbehind:!0},span:{pattern:i(/(^%<MOD>*).+?(?=%)/.source),lookbehind:!0},modifier:{pattern:i(/(^\*\*|__|\?\?|[*_%@+\-^~])<MOD>+/.source),lookbehind:!0,inside:a},punctuation:/[*_%?@+\-^~]+/}},"link-ref":{pattern:/^\[[^\]]+\]\S+$/m,inside:{string:{pattern:/(^\[)[^\]]+(?=\])/,lookbehind:!0},url:{pattern:/(^\])\S+$/,lookbehind:!0},punctuation:/[\[\]]/}},link:{pattern:i(/"<MOD>*[^"]+":.+?(?=[^\w/]?(?:\s|$))/.source),inside:{text:{pattern:i(/(^"<MOD>*)[^"]+(?=")/.source),lookbehind:!0},modifier:{pattern:i(/(^")<MOD>+/.source),lookbehind:!0,inside:a},url:{pattern:/(:).+/,lookbehind:!0},punctuation:/[":]/}},image:{pattern:i(/!(?:<MOD>|<PAR>|[<>=])*(?![<>=])[^!\s()]+(?:\([^)]+\))?!(?::.+?(?=[^\w/]?(?:\s|$)))?/.source),inside:{source:{pattern:i(/(^!(?:<MOD>|<PAR>|[<>=])*)(?![<>=])[^!\s()]+(?:\([^)]+\))?(?=!)/.source),lookbehind:!0,alias:"url"},modifier:{pattern:i(/(^!)(?:<MOD>|<PAR>|[<>=])+/.source),lookbehind:!0,inside:a},url:{pattern:/(:).+/,lookbehind:!0},punctuation:/[!:]/}},footnote:{pattern:/\b\[\d+\]/,alias:"comment",inside:{punctuation:/\[|\]/}},acronym:{pattern:/\b[A-Z\d]+\([^)]+\)/,inside:{comment:{pattern:/(\()[^()]+(?=\))/,lookbehind:!0},punctuation:/[()]/}},mark:{pattern:/\b\((?:C|R|TM)\)/,alias:"comment",inside:{punctuation:/[()]/}}}}}),l=o.phrase.inside,c={inline:l.inline,link:l.link,image:l.image,footnote:l.footnote,acronym:l.acronym,mark:l.mark};o.tag.pattern=/<\/?(?!\d)[a-z0-9]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+))?)*\s*\/?>/i;var d=l.inline.inside;d.bold.inside=c,d.italic.inside=c,d.inserted.inside=c,d.deleted.inside=c,d.span.inside=c;var h=l.table.inside;h.inline=c.inline,h.link=c.link,h.image=c.image,h.footnote=c.footnote,h.acronym=c.acronym,h.mark=c.mark}(t)}Up.displayName="haml";Up.aliases=[];function Up(t){t.register(rs),function(n){n.languages.haml={"multiline-comment":{pattern:/((?:^|\r?\n|\r)([\t ]*))(?:\/|-#).*(?:(?:\r?\n|\r)\2[\t ].+)*/,lookbehind:!0,alias:"comment"},"multiline-code":[{pattern:/((?:^|\r?\n|\r)([\t ]*)(?:[~-]|[&!]?=)).*,[\t ]*(?:(?:\r?\n|\r)\2[\t ].*,[\t ]*)*(?:(?:\r?\n|\r)\2[\t ].+)/,lookbehind:!0,inside:n.languages.ruby},{pattern:/((?:^|\r?\n|\r)([\t ]*)(?:[~-]|[&!]?=)).*\|[\t ]*(?:(?:\r?\n|\r)\2[\t ].*\|[\t ]*)*/,lookbehind:!0,inside:n.languages.ruby}],filter:{pattern:/((?:^|\r?\n|\r)([\t ]*)):[\w-]+(?:(?:\r?\n|\r)(?:\2[\t ].+|\s*?(?=\r?\n|\r)))+/,lookbehind:!0,inside:{"filter-name":{pattern:/^:[\w-]+/,alias:"symbol"}}},markup:{pattern:/((?:^|\r?\n|\r)[\t ]*)<.+/,lookbehind:!0,inside:n.languages.markup},doctype:{pattern:/((?:^|\r?\n|\r)[\t ]*)!!!(?: .+)?/,lookbehind:!0},tag:{pattern:/((?:^|\r?\n|\r)[\t ]*)[%.#][\w\-#.]*[\w\-](?:\([^)]+\)|\{(?:\{[^}]+\}|[^{}])+\}|\[[^\]]+\])*[\/<>]*/,lookbehind:!0,inside:{attributes:[{pattern:/(^|[^#])\{(?:\{[^}]+\}|[^{}])+\}/,lookbehind:!0,inside:n.languages.ruby},{pattern:/\([^)]+\)/,inside:{"attr-value":{pattern:/(=\s*)(?:"(?:\\.|[^\\"\r\n])*"|[^)\s]+)/,lookbehind:!0},"attr-name":/[\w:-]+(?=\s*!?=|\s*[,)])/,punctuation:/[=(),]/}},{pattern:/\[[^\]]+\]/,inside:n.languages.ruby}],punctuation:/[<>]/}},code:{pattern:/((?:^|\r?\n|\r)[\t ]*(?:[~-]|[&!]?=)).+/,lookbehind:!0,inside:n.languages.ruby},interpolation:{pattern:/#\{[^}]+\}/,inside:{delimiter:{pattern:/^#\{|\}$/,alias:"punctuation"},ruby:{pattern:/[\s\S]+/,inside:n.languages.ruby}}},punctuation:{pattern:/((?:^|\r?\n|\r)[\t ]*)[~=\-&!]+/,lookbehind:!0}};for(var r="((?:^|\\r?\\n|\\r)([\\t ]*)):{{filter_name}}(?:(?:\\r?\\n|\\r)(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+",s=["css",{filter:"coffee",language:"coffeescript"},"erb","javascript","less","markdown","ruby","scss","textile"],i={},a=0,o=s.length;a<o;a++){var l=s[a];l=typeof l=="string"?{filter:l,language:l}:l,n.languages[l.language]&&(i["filter-"+l.filter]={pattern:RegExp(r.replace("{{filter_name}}",function(){return l.filter})),lookbehind:!0,inside:{"filter-name":{pattern:/^:[\w-]+/,alias:"symbol"},text:{pattern:/[\s\S]+/,alias:[l.language,"language-"+l.language],inside:n.languages[l.language]}}})}n.languages.insertBefore("haml","filter",i)}(t)}Bp.displayName="handlebars";Bp.aliases=["hbs","mustache"];function Bp(t){t.register(ot),function(n){n.languages.handlebars={comment:/\{\{![\s\S]*?\}\}/,delimiter:{pattern:/^\{\{\{?|\}\}\}?$/,alias:"punctuation"},string:/(["'])(?:\\.|(?!\1)[^\\\r\n])*\1/,number:/\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee][+-]?\d+)?/,boolean:/\b(?:false|true)\b/,block:{pattern:/^(\s*(?:~\s*)?)[#\/]\S+?(?=\s*(?:~\s*)?$|\s)/,lookbehind:!0,alias:"keyword"},brackets:{pattern:/\[[^\]]+\]/,inside:{punctuation:/\[|\]/,variable:/[\s\S]+/}},punctuation:/[!"#%&':()*+,.\/;<=>@\[\\\]^`{|}~]/,variable:/[^!"#%&'()*+,\/;<=>@\[\\\]^`{|}~\s]+/},n.hooks.add("before-tokenize",function(r){var s=/\{\{\{[\s\S]+?\}\}\}|\{\{[\s\S]+?\}\}/g;n.languages["markup-templating"].buildPlaceholders(r,"handlebars",s)}),n.hooks.add("after-tokenize",function(r){n.languages["markup-templating"].tokenizePlaceholders(r,"handlebars")}),n.languages.hbs=n.languages.handlebars,n.languages.mustache=n.languages.handlebars}(t)}Da.displayName="haskell";Da.aliases=["hs"];function Da(t){t.languages.haskell={comment:{pattern:/(^|[^-!#$%*+=?&@|~.:<>^\\\/])(?:--(?:(?=.)[^-!#$%*+=?&@|~.:<>^\\\/].*|$)|\{-[\s\S]*?-\})/m,lookbehind:!0},char:{pattern:/'(?:[^\\']|\\(?:[abfnrtv\\"'&]|\^[A-Z@[\]^_]|ACK|BEL|BS|CAN|CR|DC1|DC2|DC3|DC4|DEL|DLE|EM|ENQ|EOT|ESC|ETB|ETX|FF|FS|GS|HT|LF|NAK|NUL|RS|SI|SO|SOH|SP|STX|SUB|SYN|US|VT|\d+|o[0-7]+|x[0-9a-fA-F]+))'/,alias:"string"},string:{pattern:/"(?:[^\\"]|\\(?:\S|\s+\\))*"/,greedy:!0},keyword:/\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\b/,"import-statement":{pattern:/(^[\t ]*)import\s+(?:qualified\s+)?(?:[A-Z][\w']*)(?:\.[A-Z][\w']*)*(?:\s+as\s+(?:[A-Z][\w']*)(?:\.[A-Z][\w']*)*)?(?:\s+hiding\b)?/m,lookbehind:!0,inside:{keyword:/\b(?:as|hiding|import|qualified)\b/,punctuation:/\./}},builtin:/\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\b/,number:/\b(?:\d+(?:\.\d+)?(?:e[+-]?\d+)?|0o[0-7]+|0x[0-9a-f]+)\b/i,operator:[{pattern:/`(?:[A-Z][\w']*\.)*[_a-z][\w']*`/,greedy:!0},{pattern:/(\s)\.(?=\s)/,lookbehind:!0},/[-!#$%*+=?&@|~:<>^\\\/][-!#$%*+=?&@|~.:<>^\\\/]*|\.[-!#$%*+=?&@|~.:<>^\\\/]+/],hvariable:{pattern:/\b(?:[A-Z][\w']*\.)*[_a-z][\w']*/,inside:{punctuation:/\./}},constant:{pattern:/\b(?:[A-Z][\w']*\.)*[A-Z][\w']*/,inside:{punctuation:/\./}},punctuation:/[{}[\];(),.:]/},t.languages.hs=t.languages.haskell}Hp.displayName="haxe";Hp.aliases=[];function Hp(t){t.register(le),t.languages.haxe=t.languages.extend("clike",{string:{pattern:/"(?:[^"\\]|\\[\s\S])*"/,greedy:!0},"class-name":[{pattern:/(\b(?:abstract|class|enum|extends|implements|interface|new|typedef)\s+)[A-Z_]\w*/,lookbehind:!0},/\b[A-Z]\w*/],keyword:/\bthis\b|\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|final|for|from|function|if|implements|import|in|inline|interface|macro|new|null|operator|overload|override|package|private|public|return|static|super|switch|throw|to|try|typedef|untyped|using|var|while)(?!\.)\b/,function:{pattern:/\b[a-z_]\w*(?=\s*(?:<[^<>]*>\s*)?\()/i,greedy:!0},operator:/\.{3}|\+\+|--|&&|\|\||->|=>|(?:<<?|>{1,3}|[-+*/%!=&|^])=?|[?:~]/}),t.languages.insertBefore("haxe","string",{"string-interpolation":{pattern:/'(?:[^'\\]|\\[\s\S])*'/,greedy:!0,inside:{interpolation:{pattern:/(^|[^\\])\$(?:\w+|\{[^{}]+\})/,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\$\{?|\}$/,alias:"punctuation"},expression:{pattern:/[\s\S]+/,inside:t.languages.haxe}}},string:/[\s\S]+/}}}),t.languages.insertBefore("haxe","class-name",{regex:{pattern:/~\/(?:[^\/\\\r\n]|\\.)+\/[a-z]*/,greedy:!0,inside:{"regex-flags":/\b[a-z]+$/,"regex-source":{pattern:/^(~\/)[\s\S]+(?=\/$)/,lookbehind:!0,alias:"language-regex",inside:t.languages.regex},"regex-delimiter":/^~\/|\/$/}}}),t.languages.insertBefore("haxe","keyword",{preprocessor:{pattern:/#(?:else|elseif|end|if)\b.*/,alias:"property"},metadata:{pattern:/@:?[\w.]+/,alias:"symbol"},reification:{pattern:/\$(?:\w+|(?=\{))/,alias:"important"}})}Gp.displayName="hcl";Gp.aliases=[];function Gp(t){t.languages.hcl={comment:/(?:\/\/|#).*|\/\*[\s\S]*?(?:\*\/|$)/,heredoc:{pattern:/<<-?(\w+\b)[\s\S]*?^[ \t]*\1/m,greedy:!0,alias:"string"},keyword:[{pattern:/(?:data|resource)\s+(?:"(?:\\[\s\S]|[^\\"])*")(?=\s+"[\w-]+"\s+\{)/i,inside:{type:{pattern:/(resource|data|\s+)(?:"(?:\\[\s\S]|[^\\"])*")/i,lookbehind:!0,alias:"variable"}}},{pattern:/(?:backend|module|output|provider|provisioner|variable)\s+(?:[\w-]+|"(?:\\[\s\S]|[^\\"])*")\s+(?=\{)/i,inside:{type:{pattern:/(backend|module|output|provider|provisioner|variable)\s+(?:[\w-]+|"(?:\\[\s\S]|[^\\"])*")\s+/i,lookbehind:!0,alias:"variable"}}},/[\w-]+(?=\s+\{)/],property:[/[-\w\.]+(?=\s*=(?!=))/,/"(?:\\[\s\S]|[^\\"])+"(?=\s*[:=])/],string:{pattern:/"(?:[^\\$"]|\\[\s\S]|\$(?:(?=")|\$+(?!\$)|[^"${])|\$\{(?:[^{}"]|"(?:[^\\"]|\\[\s\S])*")*\})*"/,greedy:!0,inside:{interpolation:{pattern:/(^|[^$])\$\{(?:[^{}"]|"(?:[^\\"]|\\[\s\S])*")*\}/,lookbehind:!0,inside:{type:{pattern:/(\b(?:count|data|local|module|path|self|terraform|var)\b\.)[\w\*]+/i,lookbehind:!0,alias:"variable"},keyword:/\b(?:count|data|local|module|path|self|terraform|var)\b/i,function:/\w+(?=\()/,string:{pattern:/"(?:\\[\s\S]|[^\\"])*"/,greedy:!0},number:/\b0x[\da-f]+\b|\b\d+(?:\.\d*)?(?:e[+-]?\d+)?/i,punctuation:/[!\$#%&'()*+,.\/;<=>@\[\\\]^`{|}~?:]/}}}},number:/\b0x[\da-f]+\b|\b\d+(?:\.\d*)?(?:e[+-]?\d+)?/i,boolean:/\b(?:false|true)\b/i,punctuation:/[=\[\]{}]/}}$p.displayName="hlsl";$p.aliases=[];function $p(t){t.register(un),t.languages.hlsl=t.languages.extend("c",{"class-name":[t.languages.c["class-name"],/\b(?:AppendStructuredBuffer|BlendState|Buffer|ByteAddressBuffer|CompileShader|ComputeShader|ConsumeStructuredBuffer|DepthStencilState|DepthStencilView|DomainShader|GeometryShader|Hullshader|InputPatch|LineStream|OutputPatch|PixelShader|PointStream|RWBuffer|RWByteAddressBuffer|RWStructuredBuffer|RWTexture(?:1D|1DArray|2D|2DArray|3D)|RasterizerState|RenderTargetView|SamplerComparisonState|SamplerState|StructuredBuffer|Texture(?:1D|1DArray|2D|2DArray|2DMS|2DMSArray|3D|Cube|CubeArray)|TriangleStream|VertexShader)\b/],keyword:[/\b(?:asm|asm_fragment|auto|break|case|catch|cbuffer|centroid|char|class|column_major|compile|compile_fragment|const|const_cast|continue|default|delete|discard|do|dynamic_cast|else|enum|explicit|export|extern|for|friend|fxgroup|goto|groupshared|if|in|inline|inout|interface|line|lineadj|linear|long|matrix|mutable|namespace|new|nointerpolation|noperspective|operator|out|packoffset|pass|pixelfragment|point|precise|private|protected|public|register|reinterpret_cast|return|row_major|sample|sampler|shared|short|signed|sizeof|snorm|stateblock|stateblock_state|static|static_cast|string|struct|switch|tbuffer|technique|technique10|technique11|template|texture|this|throw|triangle|triangleadj|try|typedef|typename|uniform|union|unorm|unsigned|using|vector|vertexfragment|virtual|void|volatile|while)\b/,/\b(?:bool|double|dword|float|half|int|min(?:10float|12int|16(?:float|int|uint))|uint)(?:[1-4](?:x[1-4])?)?\b/],number:/(?:(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[eE][+-]?\d+)?|\b0x[\da-fA-F]+)[fFhHlLuU]?\b/,boolean:/\b(?:false|true)\b/})}zp.displayName="hoon";zp.aliases=[];function zp(t){t.languages.hoon={comment:{pattern:/::.*/,greedy:!0},string:{pattern:/"(?:[^"\\]|\\.)*"|'(?:[^'\\]|\\.)*'/,greedy:!0},constant:/%(?:\.[ny]|[\w-]+)/,"class-name":/@(?:[a-z0-9-]*[a-z0-9])?|\*/i,function:/(?:\+[-+] {2})?(?:[a-z](?:[a-z0-9-]*[a-z0-9])?)/,keyword:/\.[\^\+\*=\?]|![><:\.=\?!]|=[>|:,\.\-\^<+;/~\*\?]|\?[>|:\.\-\^<\+&~=@!]|\|[\$_%:\.\-\^~\*=@\?]|\+[|\$\+\*]|:[_\-\^\+~\*]|%[_:\.\-\^\+~\*=]|\^[|:\.\-\+&~\*=\?]|\$[|_%:<>\-\^&~@=\?]|;[:<\+;\/~\*=]|~[>|\$_%<\+\/&=\?!]|--|==/}}Wp.displayName="hpkp";Wp.aliases=[];function Wp(t){t.languages.hpkp={directive:{pattern:/\b(?:includeSubDomains|max-age|pin-sha256|preload|report-to|report-uri|strict)(?=[\s;=]|$)/i,alias:"property"},operator:/=/,punctuation:/;/}}Vp.displayName="hsts";Vp.aliases=[];function Vp(t){t.languages.hsts={directive:{pattern:/\b(?:includeSubDomains|max-age|preload)(?=[\s;=]|$)/i,alias:"property"},operator:/=/,punctuation:/;/}}Kp.displayName="uri";Kp.aliases=["url"];function Kp(t){t.languages.uri={scheme:{pattern:/^[a-z][a-z0-9+.-]*:/im,greedy:!0,inside:{"scheme-delimiter":/:$/}},fragment:{pattern:/#[\w\-.~!$&'()*+,;=%:@/?]*/,inside:{"fragment-delimiter":/^#/}},query:{pattern:/\?[\w\-.~!$&'()*+,;=%:@/?]*/,inside:{"query-delimiter":{pattern:/^\?/,greedy:!0},"pair-delimiter":/[&;]/,pair:{pattern:/^[^=][\s\S]*/,inside:{key:/^[^=]+/,value:{pattern:/(^=)[\s\S]+/,lookbehind:!0}}}}},authority:{pattern:RegExp(/^\/\//.source+/(?:[\w\-.~!$&'()*+,;=%:]*@)?/.source+("(?:"+/\[(?:[0-9a-fA-F:.]{2,48}|v[0-9a-fA-F]+\.[\w\-.~!$&'()*+,;=]+)\]/.source+"|"+/[\w\-.~!$&'()*+,;=%]*/.source+")")+/(?::\d*)?/.source,"m"),inside:{"authority-delimiter":/^\/\//,"user-info-segment":{pattern:/^[\w\-.~!$&'()*+,;=%:]*@/,inside:{"user-info-delimiter":/@$/,"user-info":/^[\w\-.~!$&'()*+,;=%:]+/}},"port-segment":{pattern:/:\d*$/,inside:{"port-delimiter":/^:/,port:/^\d+/}},host:{pattern:/[\s\S]+/,inside:{"ip-literal":{pattern:/^\[[\s\S]+\]$/,inside:{"ip-literal-delimiter":/^\[|\]$/,"ipv-future":/^v[\s\S]+/,"ipv6-address":/^[\s\S]+/}},"ipv4-address":/^(?:(?:[03-9]\d?|[12]\d{0,2})\.){3}(?:[03-9]\d?|[12]\d{0,2})$/}}}},path:{pattern:/^[\w\-.~!$&'()*+,;=%:@/]+/m,inside:{"path-separator":/\//}}},t.languages.url=t.languages.uri}Yp.displayName="http";Yp.aliases=[];function Yp(t){(function(n){function r(h){return RegExp("(^(?:"+h+"):[ 	]*(?![ 	]))[^]+","i")}n.languages.http={"request-line":{pattern:/^(?:CONNECT|DELETE|GET|HEAD|OPTIONS|PATCH|POST|PRI|PUT|SEARCH|TRACE)\s(?:https?:\/\/|\/)\S*\sHTTP\/[\d.]+/m,inside:{method:{pattern:/^[A-Z]+\b/,alias:"property"},"request-target":{pattern:/^(\s)(?:https?:\/\/|\/)\S*(?=\s)/,lookbehind:!0,alias:"url",inside:n.languages.uri},"http-version":{pattern:/^(\s)HTTP\/[\d.]+/,lookbehind:!0,alias:"property"}}},"response-status":{pattern:/^HTTP\/[\d.]+ \d+ .+/m,inside:{"http-version":{pattern:/^HTTP\/[\d.]+/,alias:"property"},"status-code":{pattern:/^(\s)\d+(?=\s)/,lookbehind:!0,alias:"number"},"reason-phrase":{pattern:/^(\s).+/,lookbehind:!0,alias:"string"}}},header:{pattern:/^[\w-]+:.+(?:(?:\r\n?|\n)[ \t].+)*/m,inside:{"header-value":[{pattern:r(/Content-Security-Policy/.source),lookbehind:!0,alias:["csp","languages-csp"],inside:n.languages.csp},{pattern:r(/Public-Key-Pins(?:-Report-Only)?/.source),lookbehind:!0,alias:["hpkp","languages-hpkp"],inside:n.languages.hpkp},{pattern:r(/Strict-Transport-Security/.source),lookbehind:!0,alias:["hsts","languages-hsts"],inside:n.languages.hsts},{pattern:r(/[^:]+/.source),lookbehind:!0}],"header-name":{pattern:/^[^:]+/,alias:"keyword"},punctuation:/^:/}}};var s=n.languages,i={"application/javascript":s.javascript,"application/json":s.json||s.javascript,"application/xml":s.xml,"text/xml":s.xml,"text/html":s.html,"text/css":s.css,"text/plain":s.plain},a={"application/json":!0,"application/xml":!0};function o(h){var x=h.replace(/^[a-z]+\//,""),g="\\w+/(?:[\\w.-]+\\+)+"+x+"(?![+\\w.-])";return"(?:"+h+"|"+g+")"}var l;for(var c in i)if(i[c]){l=l||{};var d=a[c]?o(c):c;l[c.replace(/\//g,"-")]={pattern:RegExp("("+/content-type:\s*/.source+d+/(?:(?:\r\n?|\n)[\w-].*)*(?:\r(?:\n|(?!\n))|\n)/.source+")"+/[^ \t\w-][\s\S]*/.source,"i"),lookbehind:!0,inside:i[c]}}l&&n.languages.insertBefore("http","header",l)})(t)}qp.displayName="ichigojam";qp.aliases=[];function qp(t){t.languages.ichigojam={comment:/(?:\B'|REM)(?:[^\n\r]*)/i,string:{pattern:/"(?:""|[!#$%&'()*,\/:;<=>?^\w +\-.])*"/,greedy:!0},number:/\B#[0-9A-F]+|\B`[01]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:E[+-]?\d+)?/i,keyword:/\b(?:BEEP|BPS|CASE|CLEAR|CLK|CLO|CLP|CLS|CLT|CLV|CONT|COPY|ELSE|END|FILE|FILES|FOR|GOSUB|GOTO|GSB|IF|INPUT|KBD|LED|LET|LIST|LOAD|LOCATE|LRUN|NEW|NEXT|OUT|PLAY|POKE|PRINT|PWM|REM|RENUM|RESET|RETURN|RIGHT|RTN|RUN|SAVE|SCROLL|SLEEP|SRND|STEP|STOP|SUB|TEMPO|THEN|TO|UART|VIDEO|WAIT)(?:\$|\b)/i,function:/\b(?:ABS|ANA|ASC|BIN|BTN|DEC|END|FREE|HELP|HEX|I2CR|I2CW|IN|INKEY|LEN|LINE|PEEK|RND|SCR|SOUND|STR|TICK|USR|VER|VPEEK|ZER)(?:\$|\b)/i,label:/(?:\B@\S+)/,operator:/<[=>]?|>=?|\|\||&&|[+\-*\/=|&^~!]|\b(?:AND|NOT|OR)\b/i,punctuation:/[\[,;:()\]]/}}Xp.displayName="icon";Xp.aliases=[];function Xp(t){t.languages.icon={comment:/#.*/,string:{pattern:/(["'])(?:(?!\1)[^\\\r\n_]|\\.|_(?!\1)(?:\r\n|[\s\S]))*\1/,greedy:!0},number:/\b(?:\d+r[a-z\d]+|\d+(?:\.\d+)?(?:e[+-]?\d+)?)\b|\.\d+\b/i,"builtin-keyword":{pattern:/&(?:allocated|ascii|clock|collections|cset|current|date|dateline|digits|dump|e|error(?:number|text|value)?|errout|fail|features|file|host|input|lcase|letters|level|line|main|null|output|phi|pi|pos|progname|random|regions|source|storage|subject|time|trace|ucase|version)\b/,alias:"variable"},directive:{pattern:/\$\w+/,alias:"builtin"},keyword:/\b(?:break|by|case|create|default|do|else|end|every|fail|global|if|initial|invocable|link|local|next|not|of|procedure|record|repeat|return|static|suspend|then|to|until|while)\b/,function:/\b(?!\d)\w+(?=\s*[({]|\s*!\s*\[)/,operator:/[+-]:(?!=)|(?:[\/?@^%&]|\+\+?|--?|==?=?|~==?=?|\*\*?|\|\|\|?|<(?:->?|<?=?)|>>?=?)(?::=)?|:(?:=:?)?|[!.\\|~]/,punctuation:/[\[\](){},;]/}}Zp.displayName="icu-message-format";Zp.aliases=[];function Zp(t){(function(n){function r(c,d){return d<=0?/[]/.source:c.replace(/<SELF>/g,function(){return r(c,d-1)})}var s=/'[{}:=,](?:[^']|'')*'(?!')/,i={pattern:/''/,greedy:!0,alias:"operator"},a={pattern:s,greedy:!0,inside:{escape:i}},o=r(/\{(?:[^{}']|'(?![{},'])|''|<STR>|<SELF>)*\}/.source.replace(/<STR>/g,function(){return s.source}),8),l={pattern:RegExp(o),inside:{message:{pattern:/^(\{)[\s\S]+(?=\}$)/,lookbehind:!0,inside:null},"message-delimiter":{pattern:/./,alias:"punctuation"}}};n.languages["icu-message-format"]={argument:{pattern:RegExp(o),greedy:!0,inside:{content:{pattern:/^(\{)[\s\S]+(?=\}$)/,lookbehind:!0,inside:{"argument-name":{pattern:/^(\s*)[^{}:=,\s]+/,lookbehind:!0},"choice-style":{pattern:/^(\s*,\s*choice\s*,\s*)\S(?:[\s\S]*\S)?/,lookbehind:!0,inside:{punctuation:/\|/,range:{pattern:/^(\s*)[+-]?(?:\d+(?:\.\d*)?|\u221e)\s*[<#\u2264]/,lookbehind:!0,inside:{operator:/[<#\u2264]/,number:/\S+/}},rest:null}},"plural-style":{pattern:/^(\s*,\s*(?:plural|selectordinal)\s*,\s*)\S(?:[\s\S]*\S)?/,lookbehind:!0,inside:{offset:/^offset:\s*\d+/,"nested-message":l,selector:{pattern:/=\d+|[^{}:=,\s]+/,inside:{keyword:/^(?:few|many|one|other|two|zero)$/}}}},"select-style":{pattern:/^(\s*,\s*select\s*,\s*)\S(?:[\s\S]*\S)?/,lookbehind:!0,inside:{"nested-message":l,selector:{pattern:/[^{}:=,\s]+/,inside:{keyword:/^other$/}}}},keyword:/\b(?:choice|plural|select|selectordinal)\b/,"arg-type":{pattern:/\b(?:date|duration|number|ordinal|spellout|time)\b/,alias:"keyword"},"arg-skeleton":{pattern:/(,\s*)::[^{}:=,\s]+/,lookbehind:!0},"arg-style":{pattern:/(,\s*)(?:currency|full|integer|long|medium|percent|short)(?=\s*$)/,lookbehind:!0},"arg-style-text":{pattern:RegExp(/(^\s*,\s*(?=\S))/.source+r(/(?:[^{}']|'[^']*'|\{(?:<SELF>)?\})+/.source,8)+"$"),lookbehind:!0,alias:"string"},punctuation:/,/}},"argument-delimiter":{pattern:/./,alias:"operator"}}},escape:i,string:a},l.inside.message.inside=n.languages["icu-message-format"],n.languages["icu-message-format"].argument.inside.content.inside["choice-style"].inside.rest=n.languages["icu-message-format"]})(t)}Qp.displayName="idris";Qp.aliases=["idr"];function Qp(t){t.register(Da),t.languages.idris=t.languages.extend("haskell",{comment:{pattern:/(?:(?:--|\|\|\|).*$|\{-[\s\S]*?-\})/m},keyword:/\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\b/,builtin:void 0}),t.languages.insertBefore("idris","keyword",{"import-statement":{pattern:/(^\s*import\s+)(?:[A-Z][\w']*)(?:\.[A-Z][\w']*)*/m,lookbehind:!0,inside:{punctuation:/\./}}}),t.languages.idr=t.languages.idris}Jp.displayName="ignore";Jp.aliases=["gitignore","hgignore","npmignore"];function Jp(t){(function(n){n.languages.ignore={comment:/^#.*/m,entry:{pattern:/\S(?:.*(?:(?:\\ )|\S))?/,alias:"string",inside:{operator:/^!|\*\*?|\?/,regex:{pattern:/(^|[^\\])\[[^\[\]]*\]/,lookbehind:!0},punctuation:/\//}}},n.languages.gitignore=n.languages.ignore,n.languages.hgignore=n.languages.ignore,n.languages.npmignore=n.languages.ignore})(t)}em.displayName="inform7";em.aliases=[];function em(t){t.languages.inform7={string:{pattern:/"[^"]*"/,inside:{substitution:{pattern:/\[[^\[\]]+\]/,inside:{delimiter:{pattern:/\[|\]/,alias:"punctuation"}}}}},comment:{pattern:/\[[^\[\]]+\]/,greedy:!0},title:{pattern:/^[ \t]*(?:book|chapter|part(?! of)|section|table|volume)\b.+/im,alias:"important"},number:{pattern:/(^|[^-])(?:\b\d+(?:\.\d+)?(?:\^\d+)?(?:(?!\d)\w+)?|\b(?:eight|eleven|five|four|nine|one|seven|six|ten|three|twelve|two))\b(?!-)/i,lookbehind:!0},verb:{pattern:/(^|[^-])\b(?:answering|applying to|are|asking|attacking|be(?:ing)?|burning|buying|called|carries|carry(?! out)|carrying|climbing|closing|conceal(?:ing|s)?|consulting|contain(?:ing|s)?|cutting|drinking|dropping|eating|enclos(?:es?|ing)|entering|examining|exiting|getting|giving|going|ha(?:s|ve|ving)|hold(?:ing|s)?|impl(?:ies|y)|incorporat(?:es?|ing)|inserting|is|jumping|kissing|listening|locking|looking|mean(?:ing|s)?|opening|provid(?:es?|ing)|pulling|pushing|putting|relat(?:es?|ing)|removing|searching|see(?:ing|s)?|setting|showing|singing|sleeping|smelling|squeezing|support(?:ing|s)?|swearing|switching|taking|tasting|telling|thinking|throwing|touching|turning|tying|unlock(?:ing|s)?|var(?:ies|y|ying)|waiting|waking|waving|wear(?:ing|s)?)\b(?!-)/i,lookbehind:!0,alias:"operator"},keyword:{pattern:/(^|[^-])\b(?:after|before|carry out|check|continue the action|definition(?= *:)|do nothing|else|end (?:if|the story|unless)|every turn|if|include|instead(?: of)?|let|move|no|now|otherwise|repeat|report|resume the story|rule for|running through|say(?:ing)?|stop the action|test|try(?:ing)?|understand|unless|use|when|while|yes)\b(?!-)/i,lookbehind:!0},property:{pattern:/(^|[^-])\b(?:adjacent(?! to)|carried|closed|concealed|contained|dark|described|edible|empty|enclosed|enterable|even|female|fixed in place|full|handled|held|improper-named|incorporated|inedible|invisible|lighted|lit|lock(?:able|ed)|male|marked for listing|mentioned|negative|neuter|non-(?:empty|full|recurring)|odd|opaque|open(?:able)?|plural-named|portable|positive|privately-named|proper-named|provided|publically-named|pushable between rooms|recurring|related|rubbing|scenery|seen|singular-named|supported|swinging|switch(?:able|ed(?: off| on)?)|touch(?:able|ed)|transparent|unconcealed|undescribed|unlit|unlocked|unmarked for listing|unmentioned|unopenable|untouchable|unvisited|variable|visible|visited|wearable|worn)\b(?!-)/i,lookbehind:!0,alias:"symbol"},position:{pattern:/(^|[^-])\b(?:above|adjacent to|back side of|below|between|down|east|everywhere|front side|here|in|inside(?: from)?|north(?:east|west)?|nowhere|on(?: top of)?|other side|outside(?: from)?|parts? of|regionally in|south(?:east|west)?|through|up|west|within)\b(?!-)/i,lookbehind:!0,alias:"keyword"},type:{pattern:/(^|[^-])\b(?:actions?|activit(?:ies|y)|actors?|animals?|backdrops?|containers?|devices?|directions?|doors?|holders?|kinds?|lists?|m[ae]n|nobody|nothing|nouns?|numbers?|objects?|people|persons?|player(?:'s holdall)?|regions?|relations?|rooms?|rule(?:book)?s?|scenes?|someone|something|supporters?|tables?|texts?|things?|time|vehicles?|wom[ae]n)\b(?!-)/i,lookbehind:!0,alias:"variable"},punctuation:/[.,:;(){}]/},t.languages.inform7.string.inside.substitution.inside.rest=t.languages.inform7,t.languages.inform7.string.inside.substitution.inside.rest.text={pattern:/\S(?:\s*\S)*/,alias:"comment"}}tm.displayName="io";tm.aliases=[];function tm(t){t.languages.io={comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?(?:\*\/|$)|\/\/.*|#.*)/,lookbehind:!0,greedy:!0},"triple-quoted-string":{pattern:/"""(?:\\[\s\S]|(?!""")[^\\])*"""/,greedy:!0,alias:"string"},string:{pattern:/"(?:\\.|[^\\\r\n"])*"/,greedy:!0},keyword:/\b(?:activate|activeCoroCount|asString|block|break|call|catch|clone|collectGarbage|compileString|continue|do|doFile|doMessage|doString|else|elseif|exit|for|foreach|forward|getEnvironmentVariable|getSlot|hasSlot|if|ifFalse|ifNil|ifNilEval|ifTrue|isActive|isNil|isResumable|list|message|method|parent|pass|pause|perform|performWithArgList|print|println|proto|raise|raiseResumable|removeSlot|resend|resume|schedulerSleepSeconds|self|sender|setSchedulerSleepSeconds|setSlot|shallowCopy|slotNames|super|system|then|thisBlock|thisContext|try|type|uniqueId|updateSlot|wait|while|write|yield)\b/,builtin:/\b(?:Array|AudioDevice|AudioMixer|BigNum|Block|Box|Buffer|CFunction|CGI|Color|Curses|DBM|DNSResolver|DOConnection|DOProxy|DOServer|Date|Directory|Duration|DynLib|Error|Exception|FFT|File|Fnmatch|Font|Future|GL|GLE|GLScissor|GLU|GLUCylinder|GLUQuadric|GLUSphere|GLUT|Host|Image|Importer|LinkList|List|Lobby|Locals|MD5|MP3Decoder|MP3Encoder|Map|Message|Movie|Notification|Number|Object|OpenGL|Point|Protos|Random|Regex|SGML|SGMLElement|SGMLParser|SQLite|Sequence|Server|ShowMessage|SleepyCat|SleepyCatCursor|Socket|SocketManager|Sound|Soup|Store|String|Tree|UDPSender|UPDReceiver|URL|User|Warning|WeakLink)\b/,boolean:/\b(?:false|nil|true)\b/,number:/\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e-?\d+)?/i,operator:/[=!*/%+\-^&|]=|>>?=?|<<?=?|:?:?=|\+\+?|--?|\*\*?|\/\/?|%|\|\|?|&&?|\b(?:and|not|or|return)\b|@@?|\?\??|\.\./,punctuation:/[{}[\];(),.:]/}}nm.displayName="j";nm.aliases=[];function nm(t){t.languages.j={comment:{pattern:/\bNB\..*/,greedy:!0},string:{pattern:/'(?:''|[^'\r\n])*'/,greedy:!0},keyword:/\b(?:(?:CR|LF|adverb|conjunction|def|define|dyad|monad|noun|verb)\b|(?:assert|break|case|catch[dt]?|continue|do|else|elseif|end|fcase|for|for_\w+|goto_\w+|if|label_\w+|return|select|throw|try|while|whilst)\.)/,verb:{pattern:/(?!\^:|;\.|[=!][.:])(?:\{(?:\.|::?)?|p(?:\.\.?|:)|[=!\]]|[<>+*\-%$|,#][.:]?|[?^]\.?|[;\[]:?|[~}"i][.:]|[ACeEIjLor]\.|(?:[_\/\\qsux]|_?\d):)/,alias:"keyword"},number:/\b_?(?:(?!\d:)\d+(?:\.\d+)?(?:(?:ad|ar|[ejpx])_?\d+(?:\.\d+)?)*(?:b_?[\da-z]+(?:\.[\da-z]+)?)?|_\b(?!\.))/,adverb:{pattern:/[~}]|[\/\\]\.?|[bfM]\.|t[.:]/,alias:"builtin"},operator:/[=a][.:]|_\./,conjunction:{pattern:/&(?:\.:?|:)?|[.:@][.:]?|[!D][.:]|[;dHT]\.|`:?|[\^LS]:|"/,alias:"variable"},punctuation:/[()]/}}si.displayName="javadoclike";si.aliases=[];function si(t){(function(n){var r=n.languages.javadoclike={parameter:{pattern:/(^[\t ]*(?:\/{3}|\*|\/\*\*)\s*@(?:arg|arguments|param)\s+)\w+/m,lookbehind:!0},keyword:{pattern:/(^[\t ]*(?:\/{3}|\*|\/\*\*)\s*|\{)@[a-z][a-zA-Z-]+\b/m,lookbehind:!0},punctuation:/[{}]/};function s(a,o){var l="doc-comment",c=n.languages[a];if(c){var d=c[l];if(!d){var h={};h[l]={pattern:/(^|[^\\])\/\*\*[^/][\s\S]*?(?:\*\/|$)/,lookbehind:!0,alias:"comment"},c=n.languages.insertBefore(a,"comment",h),d=c[l]}if(d instanceof RegExp&&(d=c[l]={pattern:d}),Array.isArray(d))for(var x=0,g=d.length;x<g;x++)d[x]instanceof RegExp&&(d[x]={pattern:d[x]}),o(d[x]);else o(d)}}function i(a,o){typeof a=="string"&&(a=[a]),a.forEach(function(l){s(l,function(c){c.inside||(c.inside={}),c.inside.rest=o})})}Object.defineProperty(r,"addSupport",{value:i}),r.addSupport(["java","javascript","php"],r)})(t)}rm.displayName="scala";rm.aliases=[];function rm(t){t.register(ts),t.languages.scala=t.languages.extend("java",{"triple-quoted-string":{pattern:/"""[\s\S]*?"""/,greedy:!0,alias:"string"},string:{pattern:/("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,greedy:!0},keyword:/<-|=>|\b(?:abstract|case|catch|class|def|derives|do|else|enum|extends|extension|final|finally|for|forSome|given|if|implicit|import|infix|inline|lazy|match|new|null|object|opaque|open|override|package|private|protected|return|sealed|self|super|this|throw|trait|transparent|try|type|using|val|var|while|with|yield)\b/,number:/\b0x(?:[\da-f]*\.)?[\da-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e\d+)?[dfl]?/i,builtin:/\b(?:Any|AnyRef|AnyVal|Boolean|Byte|Char|Double|Float|Int|Long|Nothing|Short|String|Unit)\b/,symbol:/'[^\d\s\\]\w*/}),t.languages.insertBefore("scala","triple-quoted-string",{"string-interpolation":{pattern:/\b[a-z]\w*(?:"""(?:[^$]|\$(?:[^{]|\{(?:[^{}]|\{[^{}]*\})*\}))*?"""|"(?:[^$"\r\n]|\$(?:[^{]|\{(?:[^{}]|\{[^{}]*\})*\}))*")/i,greedy:!0,inside:{id:{pattern:/^\w+/,greedy:!0,alias:"function"},escape:{pattern:/\\\$"|\$[$"]/,greedy:!0,alias:"symbol"},interpolation:{pattern:/\$(?:\w+|\{(?:[^{}]|\{[^{}]*\})*\})/,greedy:!0,inside:{punctuation:/^\$\{?|\}$/,expression:{pattern:/[\s\S]+/,inside:t.languages.scala}}},string:/[\s\S]+/}}}),delete t.languages.scala["class-name"],delete t.languages.scala.function,delete t.languages.scala.constant}sm.displayName="javadoc";sm.aliases=[];function sm(t){t.register(ts),t.register(si),t.register(Ze),function(n){var r=/(^(?:[\t ]*(?:\*\s*)*))[^*\s].*$/m,s=/#\s*\w+(?:\s*\([^()]*\))?/.source,i=/(?:\b[a-zA-Z]\w+\s*\.\s*)*\b[A-Z]\w*(?:\s*<mem>)?|<mem>/.source.replace(/<mem>/g,function(){return s});n.languages.javadoc=n.languages.extend("javadoclike",{}),n.languages.insertBefore("javadoc","keyword",{reference:{pattern:RegExp(/(@(?:exception|link|linkplain|see|throws|value)\s+(?:\*\s*)?)/.source+"(?:"+i+")"),lookbehind:!0,inside:{function:{pattern:/(#\s*)\w+(?=\s*\()/,lookbehind:!0},field:{pattern:/(#\s*)\w+/,lookbehind:!0},namespace:{pattern:/\b(?:[a-z]\w*\s*\.\s*)+/,inside:{punctuation:/\./}},"class-name":/\b[A-Z]\w*/,keyword:n.languages.java.keyword,punctuation:/[#()[\],.]/}},"class-name":{pattern:/(@param\s+)<[A-Z]\w*>/,lookbehind:!0,inside:{punctuation:/[.<>]/}},"code-section":[{pattern:/(\{@code\s+(?!\s))(?:[^\s{}]|\s+(?![\s}])|\{(?:[^{}]|\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})*\})*\})+(?=\s*\})/,lookbehind:!0,inside:{code:{pattern:r,lookbehind:!0,inside:n.languages.java,alias:"language-java"}}},{pattern:/(<(code|pre|tt)>(?!<code>)\s*)\S(?:\S|\s+\S)*?(?=\s*<\/\2>)/,lookbehind:!0,inside:{line:{pattern:r,lookbehind:!0,inside:{tag:n.languages.markup.tag,entity:n.languages.markup.entity,code:{pattern:/.+/,inside:n.languages.java,alias:"language-java"}}}}}],tag:n.languages.markup.tag,entity:n.languages.markup.entity}),n.languages.javadoclike.addSupport("java",n.languages.javadoc)}(t)}im.displayName="javastacktrace";im.aliases=[];function im(t){t.languages.javastacktrace={summary:{pattern:/^([\t ]*)(?:(?:Caused by:|Suppressed:|Exception in thread "[^"]*")[\t ]+)?[\w$.]+(?::.*)?$/m,lookbehind:!0,inside:{keyword:{pattern:/^([\t ]*)(?:(?:Caused by|Suppressed)(?=:)|Exception in thread)/m,lookbehind:!0},string:{pattern:/^(\s*)"[^"]*"/,lookbehind:!0},exceptions:{pattern:/^(:?\s*)[\w$.]+(?=:|$)/,lookbehind:!0,inside:{"class-name":/[\w$]+$/,namespace:/\b[a-z]\w*\b/,punctuation:/\./}},message:{pattern:/(:\s*)\S.*/,lookbehind:!0,alias:"string"},punctuation:/:/}},"stack-frame":{pattern:/^([\t ]*)at (?:[\w$./]|@[\w$.+-]*\/)+(?:<init>)?\([^()]*\)/m,lookbehind:!0,inside:{keyword:{pattern:/^(\s*)at(?= )/,lookbehind:!0},source:[{pattern:/(\()\w+\.\w+:\d+(?=\))/,lookbehind:!0,inside:{file:/^\w+\.\w+/,punctuation:/:/,"line-number":{pattern:/\b\d+\b/,alias:"number"}}},{pattern:/(\()[^()]*(?=\))/,lookbehind:!0,inside:{keyword:/^(?:Native Method|Unknown Source)$/}}],"class-name":/[\w$]+(?=\.(?:<init>|[\w$]+)\()/,function:/(?:<init>|[\w$]+)(?=\()/,"class-loader":{pattern:/(\s)[a-z]\w*(?:\.[a-z]\w*)*(?=\/[\w@$.]*\/)/,lookbehind:!0,alias:"namespace",inside:{punctuation:/\./}},module:{pattern:/([\s/])[a-z]\w*(?:\.[a-z]\w*)*(?:@[\w$.+-]*)?(?=\/)/,lookbehind:!0,inside:{version:{pattern:/(@)[\s\S]+/,lookbehind:!0,alias:"number"},punctuation:/[@.]/}},namespace:{pattern:/(?:\b[a-z]\w*\.)+/,inside:{punctuation:/\./}},punctuation:/[()/.]/}},more:{pattern:/^([\t ]*)\.{3} \d+ [a-z]+(?: [a-z]+)*/m,lookbehind:!0,inside:{punctuation:/\.{3}/,number:/\d+/,keyword:/\b[a-z]+(?: [a-z]+)*\b/}}}}am.displayName="jexl";am.aliases=[];function am(t){t.languages.jexl={string:/(["'])(?:\\[\s\S]|(?!\1)[^\\])*\1/,transform:{pattern:/(\|\s*)[a-zA-Zа-яА-Я_\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF$][\wа-яА-Я\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF$]*/,alias:"function",lookbehind:!0},function:/[a-zA-Zа-яА-Я_\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF$][\wа-яА-Я\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF$]*\s*(?=\()/,number:/\b\d+(?:\.\d+)?\b|\B\.\d+\b/,operator:/[<>!]=?|-|\+|&&|==|\|\|?|\/\/?|[?:*^%]/,boolean:/\b(?:false|true)\b/,keyword:/\bin\b/,punctuation:/[{}[\](),.]/}}om.displayName="jolie";om.aliases=[];function om(t){t.register(le),t.languages.jolie=t.languages.extend("clike",{string:{pattern:/(^|[^\\])"(?:\\[\s\S]|[^"\\])*"/,lookbehind:!0,greedy:!0},"class-name":{pattern:/((?:\b(?:as|courier|embed|in|inputPort|outputPort|service)\b|@)[ \t]*)\w+/,lookbehind:!0},keyword:/\b(?:as|cH|comp|concurrent|constants|courier|cset|csets|default|define|else|embed|embedded|execution|exit|extender|for|foreach|forward|from|global|if|import|in|include|init|inputPort|install|instanceof|interface|is_defined|linkIn|linkOut|main|new|nullProcess|outputPort|over|private|provide|public|scope|sequential|service|single|spawn|synchronized|this|throw|throws|type|undef|until|while|with)\b/,function:/\b[a-z_]\w*(?=[ \t]*[@(])/i,number:/(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?l?/i,operator:/-[-=>]?|\+[+=]?|<[<=]?|[>=*!]=?|&&|\|\||[?\/%^@|]/,punctuation:/[()[\]{},;.:]/,builtin:/\b(?:Byte|any|bool|char|double|enum|float|int|length|long|ranges|regex|string|undefined|void)\b/}),t.languages.insertBefore("jolie","keyword",{aggregates:{pattern:/(\bAggregates\s*:\s*)(?:\w+(?:\s+with\s+\w+)?\s*,\s*)*\w+(?:\s+with\s+\w+)?/,lookbehind:!0,inside:{keyword:/\bwith\b/,"class-name":/\w+/,punctuation:/,/}},redirects:{pattern:/(\bRedirects\s*:\s*)(?:\w+\s*=>\s*\w+\s*,\s*)*(?:\w+\s*=>\s*\w+)/,lookbehind:!0,inside:{punctuation:/,/,"class-name":/\w+/,operator:/=>/}},property:{pattern:/\b(?:Aggregates|[Ii]nterfaces|Java|Javascript|Jolie|[Ll]ocation|OneWay|[Pp]rotocol|Redirects|RequestResponse)\b(?=[ \t]*:)/}})}lm.displayName="jq";lm.aliases=[];function lm(t){(function(n){var r=/\\\((?:[^()]|\([^()]*\))*\)/.source,s=RegExp(/(^|[^\\])"(?:[^"\r\n\\]|\\[^\r\n(]|__)*"/.source.replace(/__/g,function(){return r})),i={interpolation:{pattern:RegExp(/((?:^|[^\\])(?:\\{2})*)/.source+r),lookbehind:!0,inside:{content:{pattern:/^(\\\()[\s\S]+(?=\)$)/,lookbehind:!0,inside:null},punctuation:/^\\\(|\)$/}}},a=n.languages.jq={comment:/#.*/,property:{pattern:RegExp(s.source+/(?=\s*:(?!:))/.source),lookbehind:!0,greedy:!0,inside:i},string:{pattern:s,lookbehind:!0,greedy:!0,inside:i},function:{pattern:/(\bdef\s+)[a-z_]\w+/i,lookbehind:!0},variable:/\B\$\w+/,"property-literal":{pattern:/\b[a-z_]\w*(?=\s*:(?!:))/i,alias:"property"},keyword:/\b(?:as|break|catch|def|elif|else|end|foreach|if|import|include|label|module|modulemeta|null|reduce|then|try|while)\b/,boolean:/\b(?:false|true)\b/,number:/(?:\b\d+\.|\B\.)?\b\d+(?:[eE][+-]?\d+)?\b/,operator:[{pattern:/\|=?/,alias:"pipe"},/\.\.|[!=<>]?=|\?\/\/|\/\/=?|[-+*/%]=?|[<>?]|\b(?:and|not|or)\b/],"c-style-function":{pattern:/\b[a-z_]\w*(?=\s*\()/i,alias:"function"},punctuation:/::|[()\[\]{},:;]|\.(?=\s*[\[\w$])/,dot:{pattern:/\./,alias:"important"}};i.interpolation.inside.content.inside=a})(t)}cm.displayName="js-templates";cm.aliases=[];function cm(t){t.register(at),function(n){var r=n.languages.javascript["template-string"],s=r.pattern.source,i=r.inside.interpolation,a=i.inside["interpolation-punctuation"],o=i.pattern.source;function l(S,y){if(n.languages[S])return{pattern:RegExp("((?:"+y+")\\s*)"+s),lookbehind:!0,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},"embedded-code":{pattern:/[\s\S]+/,alias:S}}}}n.languages.javascript["template-string"]=[l("css",/\b(?:styled(?:\([^)]*\))?(?:\s*\.\s*\w+(?:\([^)]*\))*)*|css(?:\s*\.\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source),l("html",/\bhtml|\.\s*(?:inner|outer)HTML\s*\+?=/.source),l("svg",/\bsvg/.source),l("markdown",/\b(?:markdown|md)/.source),l("graphql",/\b(?:gql|graphql(?:\s*\.\s*experimental)?)/.source),l("sql",/\bsql/.source),r].filter(Boolean);function c(S,y){return"___"+y.toUpperCase()+"_"+S+"___"}function d(S,y,_){var f={code:S,grammar:y,language:_};return n.hooks.run("before-tokenize",f),f.tokens=n.tokenize(f.code,f.grammar),n.hooks.run("after-tokenize",f),f.tokens}function h(S){var y={};y["interpolation-punctuation"]=a;var _=n.tokenize(S,y);if(_.length===3){var f=[1,1];f.push.apply(f,d(_[1],n.languages.javascript,"javascript")),_.splice.apply(_,f)}return new n.Token("interpolation",_,i.alias,S)}function x(S,y,_){var f=n.tokenize(S,{interpolation:{pattern:RegExp(o),lookbehind:!0}}),b=0,T={},E=f.map(function(O){if(typeof O=="string")return O;for(var F=O.content,H;S.indexOf(H=c(b++,_))!==-1;);return T[H]=F,H}).join(""),R=d(E,y,_),I=Object.keys(T);b=0;function v(O){for(var F=0;F<O.length;F++){if(b>=I.length)return;var H=O[F];if(typeof H=="string"||typeof H.content=="string"){var J=I[b],X=typeof H=="string"?H:H.content,ie=X.indexOf(J);if(ie!==-1){++b;var Me=X.substring(0,ie),ue=h(T[J]),Qe=X.substring(ie+J.length),Oe=[];if(Me&&Oe.push(Me),Oe.push(ue),Qe){var $=[Qe];v($),Oe.push.apply(Oe,$)}typeof H=="string"?(O.splice.apply(O,[F,1].concat(Oe)),F+=Oe.length-1):H.content=Oe}}else{var Y=H.content;Array.isArray(Y)?v(Y):v([Y])}}}return v(R),new n.Token(_,R,"language-"+_,S)}var g={javascript:!0,js:!0,typescript:!0,ts:!0,jsx:!0,tsx:!0};n.hooks.add("after-tokenize",function(S){if(!(S.language in g))return;function y(_){for(var f=0,b=_.length;f<b;f++){var T=_[f];if(typeof T!="string"){var E=T.content;if(!Array.isArray(E)){typeof E!="string"&&y([E]);continue}if(T.type==="template-string"){var R=E[1];if(E.length===3&&typeof R!="string"&&R.type==="embedded-code"){var I=A(R),v=R.alias,O=Array.isArray(v)?v[0]:v,F=n.languages[O];if(!F)continue;E[1]=x(I,F,O)}}else y(E)}}}y(S.tokens)});function A(S){return typeof S=="string"?S:Array.isArray(S)?S.map(A).join(""):A(S.content)}}(t)}dm.displayName="jsdoc";dm.aliases=[];function dm(t){t.register(si),t.register(at),t.register(ni),function(n){var r=n.languages.javascript,s=/\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})+\}/.source,i="(@(?:arg|argument|param|property)\\s+(?:"+s+"\\s+)?)";n.languages.jsdoc=n.languages.extend("javadoclike",{parameter:{pattern:RegExp(i+/(?:(?!\s)[$\w\xA0-\uFFFF.])+(?=\s|$)/.source),lookbehind:!0,inside:{punctuation:/\./}}}),n.languages.insertBefore("jsdoc","keyword",{"optional-parameter":{pattern:RegExp(i+/\[(?:(?!\s)[$\w\xA0-\uFFFF.])+(?:=[^[\]]+)?\](?=\s|$)/.source),lookbehind:!0,inside:{parameter:{pattern:/(^\[)[$\w\xA0-\uFFFF\.]+/,lookbehind:!0,inside:{punctuation:/\./}},code:{pattern:/(=)[\s\S]*(?=\]$)/,lookbehind:!0,inside:r,alias:"language-javascript"},punctuation:/[=[\]]/}},"class-name":[{pattern:RegExp(/(@(?:augments|class|extends|interface|memberof!?|template|this|typedef)\s+(?:<TYPE>\s+)?)[A-Z]\w*(?:\.[A-Z]\w*)*/.source.replace(/<TYPE>/g,function(){return s})),lookbehind:!0,inside:{punctuation:/\./}},{pattern:RegExp("(@[a-z]+\\s+)"+s),lookbehind:!0,inside:{string:r.string,number:r.number,boolean:r.boolean,keyword:n.languages.typescript.keyword,operator:/=>|\.\.\.|[&|?:*]/,punctuation:/[.,;=<>{}()[\]]/}}],example:{pattern:/(@example\s+(?!\s))(?:[^@\s]|\s+(?!\s))+?(?=\s*(?:\*\s*)?(?:@\w|\*\/))/,lookbehind:!0,inside:{code:{pattern:/^([\t ]*(?:\*\s*)?)\S.*$/m,lookbehind:!0,inside:r,alias:"language-javascript"}}}}),n.languages.javadoclike.addSupport("javascript",n.languages.jsdoc)}(t)}um.displayName="n4js";um.aliases=["n4jsd"];function um(t){t.register(at),t.languages.n4js=t.languages.extend("javascript",{keyword:/\b(?:Array|any|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\b/}),t.languages.insertBefore("n4js","constant",{annotation:{pattern:/@+\w+/,alias:"operator"}}),t.languages.n4jsd=t.languages.n4js}hm.displayName="js-extras";hm.aliases=[];function hm(t){t.register(at),function(n){n.languages.insertBefore("javascript","function-variable",{"method-variable":{pattern:RegExp("(\\.\\s*)"+n.languages.javascript["function-variable"].pattern.source),lookbehind:!0,alias:["function-variable","method","function","property-access"]}}),n.languages.insertBefore("javascript","function",{method:{pattern:RegExp("(\\.\\s*)"+n.languages.javascript.function.source),lookbehind:!0,alias:["function","property-access"]}}),n.languages.insertBefore("javascript","constant",{"known-class-name":[{pattern:/\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\b/,alias:"class-name"},{pattern:/\b(?:[A-Z]\w*)Error\b/,alias:"class-name"}]});function r(c,d){return RegExp(c.replace(/<ID>/g,function(){return/(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/.source}),d)}n.languages.insertBefore("javascript","keyword",{imports:{pattern:r(/(\bimport\b\s*)(?:<ID>(?:\s*,\s*(?:\*\s*as\s+<ID>|\{[^{}]*\}))?|\*\s*as\s+<ID>|\{[^{}]*\})(?=\s*\bfrom\b)/.source),lookbehind:!0,inside:n.languages.javascript},exports:{pattern:r(/(\bexport\b\s*)(?:\*(?:\s*as\s+<ID>)?(?=\s*\bfrom\b)|\{[^{}]*\})/.source),lookbehind:!0,inside:n.languages.javascript}}),n.languages.javascript.keyword.unshift({pattern:/\b(?:as|default|export|from|import)\b/,alias:"module"},{pattern:/\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\b/,alias:"control-flow"},{pattern:/\bnull\b/,alias:["null","nil"]},{pattern:/\bundefined\b/,alias:"nil"}),n.languages.insertBefore("javascript","operator",{spread:{pattern:/\.{3}/,alias:"operator"},arrow:{pattern:/=>/,alias:"operator"}}),n.languages.insertBefore("javascript","punctuation",{"property-access":{pattern:r(/(\.\s*)#?<ID>/.source),lookbehind:!0},"maybe-class-name":{pattern:/(^|[^$\w\xA0-\uFFFF])[A-Z][$\w\xA0-\uFFFF]+/,lookbehind:!0},dom:{pattern:/\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\b/,alias:"variable"},console:{pattern:/\bconsole(?=\s*\.)/,alias:"class-name"}});for(var s=["function","function-variable","method","method-variable","property-access"],i=0;i<s.length;i++){var a=s[i],o=n.languages.javascript[a];n.util.type(o)==="RegExp"&&(o=n.languages.javascript[a]={pattern:o});var l=o.inside||{};o.inside=l,l["maybe-class-name"]=/^[A-Z][\s\S]*/}}(t)}pm.displayName="json5";pm.aliases=[];function pm(t){t.register(ei),function(n){var r=/("|')(?:\\(?:\r\n?|\n|.)|(?!\1)[^\\\r\n])*\1/;n.languages.json5=n.languages.extend("json",{property:[{pattern:RegExp(r.source+"(?=\\s*:)"),greedy:!0},{pattern:/(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/,alias:"unquoted"}],string:{pattern:r,greedy:!0},number:/[+-]?\b(?:NaN|Infinity|0x[a-fA-F\d]+)\b|[+-]?(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[eE][+-]?\d+\b)?/})}(t)}mm.displayName="jsonp";mm.aliases=[];function mm(t){t.register(ei),t.languages.jsonp=t.languages.extend("json",{punctuation:/[{}[\]();,.]/}),t.languages.insertBefore("jsonp","punctuation",{function:/(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*\()/})}fm.displayName="jsstacktrace";fm.aliases=[];function fm(t){t.languages.jsstacktrace={"error-message":{pattern:/^\S.*/m,alias:"string"},"stack-frame":{pattern:/(^[ \t]+)at[ \t].*/m,lookbehind:!0,inside:{"not-my-code":{pattern:/^at[ \t]+(?!\s)(?:node\.js|<unknown>|.*(?:node_modules|\(<anonymous>\)|\(<unknown>|<anonymous>$|\(internal\/|\(node\.js)).*/m,alias:"comment"},filename:{pattern:/(\bat\s+(?!\s)|\()(?:[a-zA-Z]:)?[^():]+(?=:)/,lookbehind:!0,alias:"url"},function:{pattern:/(\bat\s+(?:new\s+)?)(?!\s)[_$a-zA-Z\xA0-\uFFFF<][.$\w\xA0-\uFFFF<>]*/,lookbehind:!0,inside:{punctuation:/\./}},punctuation:/[()]/,keyword:/\b(?:at|new)\b/,alias:{pattern:/\[(?:as\s+)?(?!\s)[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*\]/,alias:"variable"},"line-number":{pattern:/:\d+(?::\d+)?\b/,alias:"number",inside:{punctuation:/:/}}}}}}gm.displayName="julia";gm.aliases=[];function gm(t){t.languages.julia={comment:{pattern:/(^|[^\\])(?:#=(?:[^#=]|=(?!#)|#(?!=)|#=(?:[^#=]|=(?!#)|#(?!=))*=#)*=#|#.*)/,lookbehind:!0},regex:{pattern:/r"(?:\\.|[^"\\\r\n])*"[imsx]{0,4}/,greedy:!0},string:{pattern:/"""[\s\S]+?"""|(?:\b\w+)?"(?:\\.|[^"\\\r\n])*"|`(?:[^\\`\r\n]|\\.)*`/,greedy:!0},char:{pattern:/(^|[^\w'])'(?:\\[^\r\n][^'\r\n]*|[^\\\r\n])'/,lookbehind:!0,greedy:!0},keyword:/\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|in|let|local|macro|module|print|println|quote|return|struct|try|type|typealias|using|while)\b/,boolean:/\b(?:false|true)\b/,number:/(?:\b(?=\d)|\B(?=\.))(?:0[box])?(?:[\da-f]+(?:_[\da-f]+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[efp][+-]?\d+(?:_\d+)*)?j?/i,operator:/&&|\|\||[-+*^%÷⊻&$\\]=?|\/[\/=]?|!=?=?|\|[=>]?|<(?:<=?|[=:|])?|>(?:=|>>?=?)?|==?=?|[~≠≤≥'√∛]/,punctuation:/::?|[{}[\]();,.?]/,constant:/\b(?:(?:Inf|NaN)(?:16|32|64)?|im|pi)\b|[πℯ]/}}bm.displayName="keepalived";bm.aliases=[];function bm(t){t.languages.keepalived={comment:{pattern:/[#!].*/,greedy:!0},string:{pattern:/(^|[^\\])(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/,lookbehind:!0,greedy:!0},ip:{pattern:RegExp(/\b(?:(?:(?:[\da-f]{1,4}:){7}[\da-f]{1,4}|(?:[\da-f]{1,4}:){6}:[\da-f]{1,4}|(?:[\da-f]{1,4}:){5}:(?:[\da-f]{1,4}:)?[\da-f]{1,4}|(?:[\da-f]{1,4}:){4}:(?:[\da-f]{1,4}:){0,2}[\da-f]{1,4}|(?:[\da-f]{1,4}:){3}:(?:[\da-f]{1,4}:){0,3}[\da-f]{1,4}|(?:[\da-f]{1,4}:){2}:(?:[\da-f]{1,4}:){0,4}[\da-f]{1,4}|(?:[\da-f]{1,4}:){6}<ipv4>|(?:[\da-f]{1,4}:){0,5}:<ipv4>|::(?:[\da-f]{1,4}:){0,5}<ipv4>|[\da-f]{1,4}::(?:[\da-f]{1,4}:){0,5}[\da-f]{1,4}|::(?:[\da-f]{1,4}:){0,6}[\da-f]{1,4}|(?:[\da-f]{1,4}:){1,7}:)(?:\/\d{1,3})?|<ipv4>(?:\/\d{1,2})?)\b/.source.replace(/<ipv4>/g,function(){return/(?:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)\.){3}(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d))/.source}),"i"),alias:"number"},path:{pattern:/(\s)\/(?:[^\/\s]+\/)*[^\/\s]*|\b[a-zA-Z]:\\(?:[^\\\s]+\\)*[^\\\s]*/,lookbehind:!0,alias:"string"},variable:/\$\{?\w+\}?/,email:{pattern:/[\w-]+@[\w-]+(?:\.[\w-]{2,3}){1,2}/,alias:"string"},"conditional-configuration":{pattern:/@\^?[\w-]+/,alias:"variable"},operator:/=/,property:/\b(?:BFD_CHECK|DNS_CHECK|FILE_CHECK|HTTP_GET|MISC_CHECK|NAME|PING_CHECK|SCRIPTS|SMTP_CHECK|SSL|SSL_GET|TCP_CHECK|UDP_CHECK|accept|advert_int|alpha|auth_pass|auth_type|authentication|bfd_cpu_affinity|bfd_instance|bfd_no_swap|bfd_priority|bfd_process_name|bfd_rlimit_rttime|bfd_rt_priority|bind_if|bind_port|bindto|ca|certificate|check_unicast_src|checker|checker_cpu_affinity|checker_log_all_failures|checker_no_swap|checker_priority|checker_rlimit_rttime|checker_rt_priority|child_wait_time|connect_ip|connect_port|connect_timeout|dbus_service_name|debug|default_interface|delay|delay_before_retry|delay_loop|digest|dont_track_primary|dynamic|dynamic_interfaces|enable_(?:dbus|script_security|sni|snmp_checker|snmp_rfc|snmp_rfcv2|snmp_rfcv3|snmp_vrrp|traps)|end|fall|fast_recovery|file|flag-[123]|fork_delay|full_command|fwmark|garp_group|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|global_defs|global_tracking|gna_interval|group|ha_suspend|hashed|helo_name|higher_prio_send_advert|hoplimit|http_protocol|hysteresis|idle_tx|include|inhibit_on_failure|init_fail|init_file|instance|interface|interfaces|interval|ip_family|ipvs_process_name|keepalived.conf|kernel_rx_buf_size|key|linkbeat_interfaces|linkbeat_use_polling|log_all_failures|log_unknown_vrids|lower_prio_no_advert|lthreshold|lvs_flush|lvs_flush_onstop|lvs_method|lvs_netlink_cmd_rcv_bufs|lvs_netlink_cmd_rcv_bufs_force|lvs_netlink_monitor_rcv_bufs|lvs_netlink_monitor_rcv_bufs_force|lvs_notify_fifo|lvs_notify_fifo_script|lvs_sched|lvs_sync_daemon|max_auto_priority|max_hops|mcast_src_ip|mh-fallback|mh-port|min_auto_priority_delay|min_rx|min_tx|misc_dynamic|misc_path|misc_timeout|multiplier|name|namespace_with_ipsets|native_ipv6|neighbor_ip|net_namespace|net_namespace_ipvs|nftables|nftables_counters|nftables_ifindex|nftables_priority|no_accept|no_checker_emails|no_email_faults|nopreempt|notification_email|notification_email_from|notify|notify_backup|notify_deleted|notify_down|notify_fault|notify_fifo|notify_fifo_script|notify_master|notify_master_rx_lower_pri|notify_priority_changes|notify_stop|notify_up|old_unicast_checksum|omega|ops|param_match|passive|password|path|persistence_engine|persistence_granularity|persistence_timeout|preempt|preempt_delay|priority|process|process_monitor_rcv_bufs|process_monitor_rcv_bufs_force|process_name|process_names|promote_secondaries|protocol|proxy_arp|proxy_arp_pvlan|quorum|quorum_down|quorum_max|quorum_up|random_seed|real_server|regex|regex_max_offset|regex_min_offset|regex_no_match|regex_options|regex_stack|reload_repeat|reload_time_file|require_reply|retry|rise|router_id|rs_init_notifies|script|script_user|sh-fallback|sh-port|shutdown_script|shutdown_script_timeout|skip_check_adv_addr|smtp_alert|smtp_alert_checker|smtp_alert_vrrp|smtp_connect_timeout|smtp_helo_name|smtp_server|snmp_socket|sorry_server|sorry_server_inhibit|sorry_server_lvs_method|source_ip|start|startup_script|startup_script_timeout|state|static_ipaddress|static_routes|static_rules|status_code|step|strict_mode|sync_group_tracking_weight|terminate_delay|timeout|track_bfd|track_file|track_group|track_interface|track_process|track_script|track_src_ip|ttl|type|umask|unicast_peer|unicast_src_ip|unicast_ttl|url|use_ipvlan|use_pid_dir|use_vmac|user|uthreshold|val[123]|version|virtual_ipaddress|virtual_ipaddress_excluded|virtual_router_id|virtual_routes|virtual_rules|virtual_server|virtual_server_group|virtualhost|vmac_xmit_base|vrrp|vrrp_(?:check_unicast_src|cpu_affinity|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|gna_interval|higher_prio_send_advert|instance|ipsets|iptables|lower_prio_no_advert|mcast_group4|mcast_group6|min_garp|netlink_cmd_rcv_bufs|netlink_cmd_rcv_bufs_force|netlink_monitor_rcv_bufs|netlink_monitor_rcv_bufs_force|no_swap|notify_fifo|notify_fifo_script|notify_priority_changes|priority|process_name|rlimit_rttime|rt_priority|rx_bufs_multiplier|rx_bufs_policy|script|skip_check_adv_addr|startup_delay|strict|sync_group|track_process|version)|warmup|weight)\b/,constant:/\b(?:A|AAAA|AH|BACKUP|CNAME|DR|MASTER|MX|NAT|NS|PASS|SCTP|SOA|TCP|TUN|TXT|UDP|dh|fo|lblc|lblcr|lc|mh|nq|ovf|rr|sed|sh|wlc|wrr)\b/,number:{pattern:/(^|[^\w.-])-?\d+(?:\.\d+)?/,lookbehind:!0},boolean:/\b(?:false|no|off|on|true|yes)\b/,punctuation:/[\{\}]/}}xm.displayName="keyman";xm.aliases=[];function xm(t){t.languages.keyman={comment:{pattern:/\bc .*/i,greedy:!0},string:{pattern:/"[^"\r\n]*"|'[^'\r\n]*'/,greedy:!0},"virtual-key":{pattern:/\[\s*(?:(?:ALT|CAPS|CTRL|LALT|LCTRL|NCAPS|RALT|RCTRL|SHIFT)\s+)*(?:[TKU]_[\w?]+|[A-E]\d\d?|"[^"\r\n]*"|'[^'\r\n]*')\s*\]/i,greedy:!0,alias:"function"},"header-keyword":{pattern:/&\w+/,alias:"bold"},"header-statement":{pattern:/\b(?:bitmap|bitmaps|caps always off|caps on only|copyright|hotkey|language|layout|message|name|shift frees caps|version)\b/i,alias:"bold"},"rule-keyword":{pattern:/\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|reset|return|save|set|store|use)\b/i,alias:"keyword"},"structural-keyword":{pattern:/\b(?:ansi|begin|group|match|newcontext|nomatch|postkeystroke|readonly|unicode|using keys)\b/i,alias:"keyword"},"compile-target":{pattern:/\$(?:keyman|keymanonly|keymanweb|kmfl|weaver):/i,alias:"property"},number:/\b(?:U\+[\dA-F]+|d\d+|x[\da-f]+|\d+)\b/i,operator:/[+>\\$]|\.\./,punctuation:/[()=,]/}}Em.displayName="kumir";Em.aliases=["kum"];function Em(t){(function(n){var r=/\s\x00-\x1f\x22-\x2f\x3a-\x3f\x5b-\x5e\x60\x7b-\x7e/.source;function s(i,a){return RegExp(i.replace(/<nonId>/g,r),a)}n.languages.kumir={comment:{pattern:/\|.*/},prolog:{pattern:/#.*/,greedy:!0},string:{pattern:/"[^\n\r"]*"|'[^\n\r']*'/,greedy:!0},boolean:{pattern:s(/(^|[<nonId>])(?:да|нет)(?=[<nonId>]|$)/.source),lookbehind:!0},"operator-word":{pattern:s(/(^|[<nonId>])(?:и|или|не)(?=[<nonId>]|$)/.source),lookbehind:!0,alias:"keyword"},"system-variable":{pattern:s(/(^|[<nonId>])знач(?=[<nonId>]|$)/.source),lookbehind:!0,alias:"keyword"},type:[{pattern:s(/(^|[<nonId>])(?:вещ|лит|лог|сим|цел)(?:\x20*таб)?(?=[<nonId>]|$)/.source),lookbehind:!0,alias:"builtin"},{pattern:s(/(^|[<nonId>])(?:компл|сканкод|файл|цвет)(?=[<nonId>]|$)/.source),lookbehind:!0,alias:"important"}],keyword:{pattern:s(/(^|[<nonId>])(?:алг|арг(?:\x20*рез)?|ввод|ВКЛЮЧИТЬ|вс[её]|выбор|вывод|выход|дано|для|до|дс|если|иначе|исп|использовать|кон(?:(?:\x20+|_)исп)?|кц(?:(?:\x20+|_)при)?|надо|нач|нс|нц|от|пауза|пока|при|раза?|рез|стоп|таб|то|утв|шаг)(?=[<nonId>]|$)/.source),lookbehind:!0},name:{pattern:s(/(^|[<nonId>])[^\d<nonId>][^<nonId>]*(?:\x20+[^<nonId>]+)*(?=[<nonId>]|$)/.source),lookbehind:!0},number:{pattern:s(/(^|[<nonId>])(?:\B\$[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)(?=[<nonId>]|$)/.source,"i"),lookbehind:!0},punctuation:/:=|[(),:;\[\]]/,"operator-char":{pattern:/\*\*?|<[=>]?|>=?|[-+/=]/,alias:"operator"}},n.languages.kum=n.languages.kumir})(t)}Tm.displayName="kusto";Tm.aliases=[];function Tm(t){t.languages.kusto={comment:{pattern:/\/\/.*/,greedy:!0},string:{pattern:/```[\s\S]*?```|[hH]?(?:"(?:[^\r\n\\"]|\\.)*"|'(?:[^\r\n\\']|\\.)*'|@(?:"[^\r\n"]*"|'[^\r\n']*'))/,greedy:!0},verb:{pattern:/(\|\s*)[a-z][\w-]*/i,lookbehind:!0,alias:"keyword"},command:{pattern:/\.[a-z][a-z\d-]*\b/,alias:"keyword"},"class-name":/\b(?:bool|datetime|decimal|dynamic|guid|int|long|real|string|timespan)\b/,keyword:/\b(?:access|alias|and|anti|as|asc|auto|between|by|(?:contains|(?:ends|starts)with|has(?:perfix|suffix)?)(?:_cs)?|database|declare|desc|external|from|fullouter|has_all|in|ingestion|inline|inner|innerunique|into|(?:left|right)(?:anti(?:semi)?|inner|outer|semi)?|let|like|local|not|of|on|or|pattern|print|query_parameters|range|restrict|schema|set|step|table|tables|to|view|where|with|matches\s+regex|nulls\s+(?:first|last))(?![\w-])/,boolean:/\b(?:false|null|true)\b/,function:/\b[a-z_]\w*(?=\s*\()/,datetime:[{pattern:/\b(?:(?:Fri|Friday|Mon|Monday|Sat|Saturday|Sun|Sunday|Thu|Thursday|Tue|Tuesday|Wed|Wednesday)\s*,\s*)?\d{1,2}(?:\s+|-)(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)(?:\s+|-)\d{2}\s+\d{2}:\d{2}(?::\d{2})?(?:\s*(?:\b(?:[A-Z]|(?:[ECMT][DS]|GM|U)T)|[+-]\d{4}))?\b/,alias:"number"},{pattern:/[+-]?\b(?:\d{4}-\d{2}-\d{2}(?:[ T]\d{2}:\d{2}(?::\d{2}(?:\.\d+)?)?)?|\d{2}:\d{2}(?::\d{2}(?:\.\d+)?)?)Z?/,alias:"number"}],number:/\b(?:0x[0-9A-Fa-f]+|\d+(?:\.\d+)?(?:[Ee][+-]?\d+)?)(?:(?:min|sec|[mnµ]s|[dhms]|microsecond|tick)\b)?|[+-]?\binf\b/,operator:/=>|[!=]~|[!=<>]=?|[-+*/%|]|\.\./,punctuation:/[()\[\]{},;.:]/}}ym.displayName="latex";ym.aliases=["context","tex"];function ym(t){(function(n){var r=/\\(?:[^a-z()[\]]|[a-z*]+)/i,s={"equation-command":{pattern:r,alias:"regex"}};n.languages.latex={comment:/%.*/,cdata:{pattern:/(\\begin\{((?:lstlisting|verbatim)\*?)\})[\s\S]*?(?=\\end\{\2\})/,lookbehind:!0},equation:[{pattern:/\$\$(?:\\[\s\S]|[^\\$])+\$\$|\$(?:\\[\s\S]|[^\\$])+\$|\\\([\s\S]*?\\\)|\\\[[\s\S]*?\\\]/,inside:s,alias:"string"},{pattern:/(\\begin\{((?:align|eqnarray|equation|gather|math|multline)\*?)\})[\s\S]*?(?=\\end\{\2\})/,lookbehind:!0,inside:s,alias:"string"}],keyword:{pattern:/(\\(?:begin|cite|documentclass|end|label|ref|usepackage)(?:\[[^\]]+\])?\{)[^}]+(?=\})/,lookbehind:!0},url:{pattern:/(\\url\{)[^}]+(?=\})/,lookbehind:!0},headline:{pattern:/(\\(?:chapter|frametitle|paragraph|part|section|subparagraph|subsection|subsubparagraph|subsubsection|subsubsubparagraph)\*?(?:\[[^\]]+\])?\{)[^}]+(?=\})/,lookbehind:!0,alias:"class-name"},function:{pattern:r,alias:"selector"},punctuation:/[[\]{}&]/},n.languages.tex=n.languages.latex,n.languages.context=n.languages.latex})(t)}Sm.displayName="latte";Sm.aliases=[];function Sm(t){t.register(le),t.register(ot),t.register(ns),function(n){n.languages.latte={comment:/^\{\*[\s\S]*/,"latte-tag":{pattern:/(^\{(?:\/(?=[a-z]))?)(?:[=_]|[a-z]\w*\b(?!\())/i,lookbehind:!0,alias:"important"},delimiter:{pattern:/^\{\/?|\}$/,alias:"punctuation"},php:{pattern:/\S(?:[\s\S]*\S)?/,alias:"language-php",inside:n.languages.php}};var r=n.languages.extend("markup",{});n.languages.insertBefore("inside","attr-value",{"n-attr":{pattern:/n:[\w-]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+))?/,inside:{"attr-name":{pattern:/^[^\s=]+/,alias:"important"},"attr-value":{pattern:/=[\s\S]+/,inside:{punctuation:[/^=/,{pattern:/^(\s*)["']|["']$/,lookbehind:!0}],php:{pattern:/\S(?:[\s\S]*\S)?/,inside:n.languages.php}}}}}},r.tag),n.hooks.add("before-tokenize",function(s){if(s.language==="latte"){var i=/\{\*[\s\S]*?\*\}|\{[^'"\s{}*](?:[^"'/{}]|\/(?![*/])|("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|\/\*(?:[^*]|\*(?!\/))*\*\/)*\}/g;n.languages["markup-templating"].buildPlaceholders(s,"latte",i),s.grammar=r}}),n.hooks.add("after-tokenize",function(s){n.languages["markup-templating"].tokenizePlaceholders(s,"latte")})}(t)}Ma.displayName="scheme";Ma.aliases=[];function Ma(t){(function(n){n.languages.scheme={comment:/;.*|#;\s*(?:\((?:[^()]|\([^()]*\))*\)|\[(?:[^\[\]]|\[[^\[\]]*\])*\])|#\|(?:[^#|]|#(?!\|)|\|(?!#)|#\|(?:[^#|]|#(?!\|)|\|(?!#))*\|#)*\|#/,string:{pattern:/"(?:[^"\\]|\\.)*"/,greedy:!0},symbol:{pattern:/'[^()\[\]#'\s]+/,greedy:!0},char:{pattern:/#\\(?:[ux][a-fA-F\d]+\b|[-a-zA-Z]+\b|[\uD800-\uDBFF][\uDC00-\uDFFF]|\S)/,greedy:!0},"lambda-parameter":[{pattern:/((?:^|[^'`#])[(\[]lambda\s+)(?:[^|()\[\]'\s]+|\|(?:[^\\|]|\\.)*\|)/,lookbehind:!0},{pattern:/((?:^|[^'`#])[(\[]lambda\s+[(\[])[^()\[\]']+/,lookbehind:!0}],keyword:{pattern:/((?:^|[^'`#])[(\[])(?:begin|case(?:-lambda)?|cond(?:-expand)?|define(?:-library|-macro|-record-type|-syntax|-values)?|defmacro|delay(?:-force)?|do|else|except|export|guard|if|import|include(?:-ci|-library-declarations)?|lambda|let(?:rec)?(?:-syntax|-values|\*)?|let\*-values|only|parameterize|prefix|(?:quasi-?)?quote|rename|set!|syntax-(?:case|rules)|unless|unquote(?:-splicing)?|when)(?=[()\[\]\s]|$)/,lookbehind:!0},builtin:{pattern:/((?:^|[^'`#])[(\[])(?:abs|and|append|apply|assoc|ass[qv]|binary-port\?|boolean=?\?|bytevector(?:-append|-copy|-copy!|-length|-u8-ref|-u8-set!|\?)?|caar|cadr|call-with-(?:current-continuation|port|values)|call\/cc|car|cdar|cddr|cdr|ceiling|char(?:->integer|-ready\?|\?|<\?|<=\?|=\?|>\?|>=\?)|close-(?:input-port|output-port|port)|complex\?|cons|current-(?:error|input|output)-port|denominator|dynamic-wind|eof-object\??|eq\?|equal\?|eqv\?|error|error-object(?:-irritants|-message|\?)|eval|even\?|exact(?:-integer-sqrt|-integer\?|\?)?|expt|features|file-error\?|floor(?:-quotient|-remainder|\/)?|flush-output-port|for-each|gcd|get-output-(?:bytevector|string)|inexact\??|input-port(?:-open\?|\?)|integer(?:->char|\?)|lcm|length|list(?:->string|->vector|-copy|-ref|-set!|-tail|\?)?|make-(?:bytevector|list|parameter|string|vector)|map|max|member|memq|memv|min|modulo|negative\?|newline|not|null\?|number(?:->string|\?)|numerator|odd\?|open-(?:input|output)-(?:bytevector|string)|or|output-port(?:-open\?|\?)|pair\?|peek-char|peek-u8|port\?|positive\?|procedure\?|quotient|raise|raise-continuable|rational\?|rationalize|read-(?:bytevector|bytevector!|char|error\?|line|string|u8)|real\?|remainder|reverse|round|set-c[ad]r!|square|string(?:->list|->number|->symbol|->utf8|->vector|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\?|<\?|<=\?|=\?|>\?|>=\?)?|substring|symbol(?:->string|\?|=\?)|syntax-error|textual-port\?|truncate(?:-quotient|-remainder|\/)?|u8-ready\?|utf8->string|values|vector(?:->list|->string|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\?)?|with-exception-handler|write-(?:bytevector|char|string|u8)|zero\?)(?=[()\[\]\s]|$)/,lookbehind:!0},operator:{pattern:/((?:^|[^'`#])[(\[])(?:[-+*%/]|[<>]=?|=>?)(?=[()\[\]\s]|$)/,lookbehind:!0},number:{pattern:RegExp(r({"<ureal dec>":/\d+(?:\/\d+)|(?:\d+(?:\.\d*)?|\.\d+)(?:[esfdl][+-]?\d+)?/.source,"<real dec>":/[+-]?<ureal dec>|[+-](?:inf|nan)\.0/.source,"<imaginary dec>":/[+-](?:<ureal dec>|(?:inf|nan)\.0)?i/.source,"<complex dec>":/<real dec>(?:@<real dec>|<imaginary dec>)?|<imaginary dec>/.source,"<num dec>":/(?:#d(?:#[ei])?|#[ei](?:#d)?)?<complex dec>/.source,"<ureal box>":/[0-9a-f]+(?:\/[0-9a-f]+)?/.source,"<real box>":/[+-]?<ureal box>|[+-](?:inf|nan)\.0/.source,"<imaginary box>":/[+-](?:<ureal box>|(?:inf|nan)\.0)?i/.source,"<complex box>":/<real box>(?:@<real box>|<imaginary box>)?|<imaginary box>/.source,"<num box>":/#[box](?:#[ei])?|(?:#[ei])?#[box]<complex box>/.source,"<number>":/(^|[()\[\]\s])(?:<num dec>|<num box>)(?=[()\[\]\s]|$)/.source}),"i"),lookbehind:!0},boolean:{pattern:/(^|[()\[\]\s])#(?:[ft]|false|true)(?=[()\[\]\s]|$)/,lookbehind:!0},function:{pattern:/((?:^|[^'`#])[(\[])(?:[^|()\[\]'\s]+|\|(?:[^\\|]|\\.)*\|)(?=[()\[\]\s]|$)/,lookbehind:!0},identifier:{pattern:/(^|[()\[\]\s])\|(?:[^\\|]|\\.)*\|(?=[()\[\]\s]|$)/,lookbehind:!0,greedy:!0},punctuation:/[()\[\]']/};function r(s){for(var i in s)s[i]=s[i].replace(/<[\w\s]+>/g,function(a){return"(?:"+s[a].trim()+")"});return s[i]}})(t)}Nm.displayName="lilypond";Nm.aliases=["ly"];function Nm(t){t.register(Ma),function(n){for(var r=/\((?:[^();"#\\]|\\[\s\S]|;.*(?!.)|"(?:[^"\\]|\\.)*"|#(?:\{(?:(?!#\})[\s\S])*#\}|[^{])|<expr>)*\)/.source,s=5,i=0;i<s;i++)r=r.replace(/<expr>/g,function(){return r});r=r.replace(/<expr>/g,/[^\s\S]/.source);var a=n.languages.lilypond={comment:/%(?:(?!\{).*|\{[\s\S]*?%\})/,"embedded-scheme":{pattern:RegExp(/(^|[=\s])#(?:"(?:[^"\\]|\\.)*"|[^\s()"]*(?:[^\s()]|<expr>))/.source.replace(/<expr>/g,function(){return r}),"m"),lookbehind:!0,greedy:!0,inside:{scheme:{pattern:/^(#)[\s\S]+$/,lookbehind:!0,alias:"language-scheme",inside:{"embedded-lilypond":{pattern:/#\{[\s\S]*?#\}/,greedy:!0,inside:{punctuation:/^#\{|#\}$/,lilypond:{pattern:/[\s\S]+/,alias:"language-lilypond",inside:null}}},rest:n.languages.scheme}},punctuation:/#/}},string:{pattern:/"(?:[^"\\]|\\.)*"/,greedy:!0},"class-name":{pattern:/(\\new\s+)[\w-]+/,lookbehind:!0},keyword:{pattern:/\\[a-z][-\w]*/i,inside:{punctuation:/^\\/}},operator:/[=|]|<<|>>/,punctuation:{pattern:/(^|[a-z\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\d))|[_^]\.?|[.!])|[{}()[\]<>^~]|\\[()[\]<>\\!]|--|__/,lookbehind:!0},number:/\b\d+(?:\/\d+)?\b/};a["embedded-scheme"].inside.scheme.inside["embedded-lilypond"].inside.lilypond.inside=a,n.languages.ly=a}(t)}jm.displayName="liquid";jm.aliases=[];function jm(t){t.register(ot),t.languages.liquid={comment:{pattern:/(^\{%\s*comment\s*%\})[\s\S]+(?=\{%\s*endcomment\s*%\}$)/,lookbehind:!0},delimiter:{pattern:/^\{(?:\{\{|[%\{])-?|-?(?:\}\}|[%\}])\}$/,alias:"punctuation"},string:{pattern:/"[^"]*"|'[^']*'/,greedy:!0},keyword:/\b(?:as|assign|break|(?:end)?(?:capture|case|comment|for|form|if|paginate|raw|style|tablerow|unless)|continue|cycle|decrement|echo|else|elsif|in|include|increment|limit|liquid|offset|range|render|reversed|section|when|with)\b/,object:/\b(?:address|all_country_option_tags|article|block|blog|cart|checkout|collection|color|country|country_option_tags|currency|current_page|current_tags|customer|customer_address|date|discount_allocation|discount_application|external_video|filter|filter_value|font|forloop|fulfillment|generic_file|gift_card|group|handle|image|line_item|link|linklist|localization|location|measurement|media|metafield|model|model_source|order|page|page_description|page_image|page_title|part|policy|product|product_option|recommendations|request|robots|routes|rule|script|search|selling_plan|selling_plan_allocation|selling_plan_group|shipping_method|shop|shop_locale|sitemap|store_availability|tax_line|template|theme|transaction|unit_price_measurement|user_agent|variant|video|video_source)\b/,function:[{pattern:/(\|\s*)\w+/,lookbehind:!0,alias:"filter"},{pattern:/(\.\s*)(?:first|last|size)/,lookbehind:!0}],boolean:/\b(?:false|nil|true)\b/,range:{pattern:/\.\./,alias:"operator"},number:/\b\d+(?:\.\d+)?\b/,operator:/[!=]=|<>|[<>]=?|[|?:=-]|\b(?:and|contains(?=\s)|or)\b/,punctuation:/[.,\[\]()]/,empty:{pattern:/\bempty\b/,alias:"keyword"}},t.hooks.add("before-tokenize",function(n){var r=/\{%\s*comment\s*%\}[\s\S]*?\{%\s*endcomment\s*%\}|\{(?:%[\s\S]*?%|\{\{[\s\S]*?\}\}|\{[\s\S]*?\})\}/g,s=!1;t.languages["markup-templating"].buildPlaceholders(n,"liquid",r,function(i){var a=/^\{%-?\s*(\w+)/.exec(i);if(a){var o=a[1];if(o==="raw"&&!s)return s=!0,!0;if(o==="endraw")return s=!1,!0}return!s})}),t.hooks.add("after-tokenize",function(n){t.languages["markup-templating"].tokenizePlaceholders(n,"liquid")})}Am.displayName="lisp";Am.aliases=["elisp","emacs","emacs-lisp"];function Am(t){(function(n){function r(S){return RegExp(/(\()/.source+"(?:"+S+")"+/(?=[\s\)])/.source)}function s(S){return RegExp(/([\s([])/.source+"(?:"+S+")"+/(?=[\s)])/.source)}var i=/(?!\d)[-+*/~!@$%^=<>{}\w]+/.source,a="&"+i,o="(\\()",l="(?=\\))",c="(?=\\s)",d=/(?:[^()]|\((?:[^()]|\((?:[^()]|\((?:[^()]|\((?:[^()]|\([^()]*\))*\))*\))*\))*\))*/.source,h={heading:{pattern:/;;;.*/,alias:["comment","title"]},comment:/;.*/,string:{pattern:/"(?:[^"\\]|\\.)*"/,greedy:!0,inside:{argument:/[-A-Z]+(?=[.,\s])/,symbol:RegExp("`"+i+"'")}},"quoted-symbol":{pattern:RegExp("#?'"+i),alias:["variable","symbol"]},"lisp-property":{pattern:RegExp(":"+i),alias:"property"},splice:{pattern:RegExp(",@?"+i),alias:["symbol","variable"]},keyword:[{pattern:RegExp(o+"(?:and|(?:cl-)?letf|cl-loop|cond|cons|error|if|(?:lexical-)?let\\*?|message|not|null|or|provide|require|setq|unless|use-package|when|while)"+c),lookbehind:!0},{pattern:RegExp(o+"(?:append|by|collect|concat|do|finally|for|in|return)"+c),lookbehind:!0}],declare:{pattern:r(/declare/.source),lookbehind:!0,alias:"keyword"},interactive:{pattern:r(/interactive/.source),lookbehind:!0,alias:"keyword"},boolean:{pattern:s(/nil|t/.source),lookbehind:!0},number:{pattern:s(/[-+]?\d+(?:\.\d*)?/.source),lookbehind:!0},defvar:{pattern:RegExp(o+"def(?:const|custom|group|var)\\s+"+i),lookbehind:!0,inside:{keyword:/^def[a-z]+/,variable:RegExp(i)}},defun:{pattern:RegExp(o+/(?:cl-)?(?:defmacro|defun\*?)\s+/.source+i+/\s+\(/.source+d+/\)/.source),lookbehind:!0,greedy:!0,inside:{keyword:/^(?:cl-)?def\S+/,arguments:null,function:{pattern:RegExp("(^\\s)"+i),lookbehind:!0},punctuation:/[()]/}},lambda:{pattern:RegExp(o+"lambda\\s+\\(\\s*(?:&?"+i+"(?:\\s+&?"+i+")*\\s*)?\\)"),lookbehind:!0,greedy:!0,inside:{keyword:/^lambda/,arguments:null,punctuation:/[()]/}},car:{pattern:RegExp(o+i),lookbehind:!0},punctuation:[/(?:['`,]?\(|[)\[\]])/,{pattern:/(\s)\.(?=\s)/,lookbehind:!0}]},x={"lisp-marker":RegExp(a),varform:{pattern:RegExp(/\(/.source+i+/\s+(?=\S)/.source+d+/\)/.source),inside:h},argument:{pattern:RegExp(/(^|[\s(])/.source+i),lookbehind:!0,alias:"variable"},rest:h},g="\\S+(?:\\s+\\S+)*",A={pattern:RegExp(o+d+l),lookbehind:!0,inside:{"rest-vars":{pattern:RegExp("&(?:body|rest)\\s+"+g),inside:x},"other-marker-vars":{pattern:RegExp("&(?:aux|optional)\\s+"+g),inside:x},keys:{pattern:RegExp("&key\\s+"+g+"(?:\\s+&allow-other-keys)?"),inside:x},argument:{pattern:RegExp(i),alias:"variable"},punctuation:/[()]/}};h.lambda.inside.arguments=A,h.defun.inside.arguments=n.util.clone(A),h.defun.inside.arguments.inside.sublist=A,n.languages.lisp=h,n.languages.elisp=h,n.languages.emacs=h,n.languages["emacs-lisp"]=h})(t)}_m.displayName="livescript";_m.aliases=[];function _m(t){t.languages.livescript={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?\*\//,lookbehind:!0},{pattern:/(^|[^\\])#.*/,lookbehind:!0}],"interpolated-string":{pattern:/(^|[^"])("""|")(?:\\[\s\S]|(?!\2)[^\\])*\2(?!")/,lookbehind:!0,greedy:!0,inside:{variable:{pattern:/(^|[^\\])#[a-z_](?:-?[a-z]|[\d_])*/m,lookbehind:!0},interpolation:{pattern:/(^|[^\\])#\{[^}]+\}/m,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^#\{|\}$/,alias:"variable"}}},string:/[\s\S]+/}},string:[{pattern:/('''|')(?:\\[\s\S]|(?!\1)[^\\])*\1/,greedy:!0},{pattern:/<\[[\s\S]*?\]>/,greedy:!0},/\\[^\s,;\])}]+/],regex:[{pattern:/\/\/(?:\[[^\r\n\]]*\]|\\.|(?!\/\/)[^\\\[])+\/\/[gimyu]{0,5}/,greedy:!0,inside:{comment:{pattern:/(^|[^\\])#.*/,lookbehind:!0}}},{pattern:/\/(?:\[[^\r\n\]]*\]|\\.|[^/\\\r\n\[])+\/[gimyu]{0,5}/,greedy:!0}],keyword:{pattern:/(^|(?!-).)\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\b/m,lookbehind:!0},"keyword-operator":{pattern:/(^|[^-])\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?: not|nt)?|not|of|or|til|to|typeof|with|xor)(?!-)\b)/m,lookbehind:!0,alias:"operator"},boolean:{pattern:/(^|[^-])\b(?:false|no|off|on|true|yes)(?!-)\b/m,lookbehind:!0},argument:{pattern:/(^|(?!\.&\.)[^&])&(?!&)\d*/m,lookbehind:!0,alias:"variable"},number:/\b(?:\d+~[\da-z]+|\d[\d_]*(?:\.\d[\d_]*)?(?:[a-z]\w*)?)/i,identifier:/[a-z_](?:-?[a-z]|[\d_])*/i,operator:[{pattern:/( )\.(?= )/,lookbehind:!0},/\.(?:[=~]|\.\.?)|\.(?:[&|^]|<<|>>>?)\.|:(?:=|:=?)|&&|\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\+\+?|@@?|%%?|\*\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\^\^?|[\/?]/],punctuation:/[(){}\[\]|.,:;`]/},t.languages.livescript["interpolated-string"].inside.interpolation.inside.rest=t.languages.livescript}vm.displayName="llvm";vm.aliases=[];function vm(t){(function(n){n.languages.llvm={comment:/;.*/,string:{pattern:/"[^"]*"/,greedy:!0},boolean:/\b(?:false|true)\b/,variable:/[%@!#](?:(?!\d)(?:[-$.\w]|\\[a-f\d]{2})+|\d+)/i,label:/(?!\d)(?:[-$.\w]|\\[a-f\d]{2})+:/i,type:{pattern:/\b(?:double|float|fp128|half|i[1-9]\d*|label|metadata|ppc_fp128|token|void|x86_fp80|x86_mmx)\b/,alias:"class-name"},keyword:/\b[a-z_][a-z_0-9]*\b/,number:/[+-]?\b\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\b|\b0x[\dA-Fa-f]+\b|\b0xK[\dA-Fa-f]{20}\b|\b0x[ML][\dA-Fa-f]{32}\b|\b0xH[\dA-Fa-f]{4}\b/,punctuation:/[{}[\];(),.!*=<>]/}})(t)}Rm.displayName="log";Rm.aliases=[];function Rm(t){t.languages.log={string:{pattern:/"(?:[^"\\\r\n]|\\.)*"|'(?![st] | \w)(?:[^'\\\r\n]|\\.)*'/,greedy:!0},exception:{pattern:/(^|[^\w.])[a-z][\w.]*(?:Error|Exception):.*(?:(?:\r\n?|\n)[ \t]*(?:at[ \t].+|\.{3}.*|Caused by:.*))+(?:(?:\r\n?|\n)[ \t]*\.\.\. .*)?/,lookbehind:!0,greedy:!0,alias:["javastacktrace","language-javastacktrace"],inside:t.languages.javastacktrace||{keyword:/\bat\b/,function:/[a-z_][\w$]*(?=\()/,punctuation:/[.:()]/}},level:[{pattern:/\b(?:ALERT|CRIT|CRITICAL|EMERG|EMERGENCY|ERR|ERROR|FAILURE|FATAL|SEVERE)\b/,alias:["error","important"]},{pattern:/\b(?:WARN|WARNING|WRN)\b/,alias:["warning","important"]},{pattern:/\b(?:DISPLAY|INF|INFO|NOTICE|STATUS)\b/,alias:["info","keyword"]},{pattern:/\b(?:DBG|DEBUG|FINE)\b/,alias:["debug","keyword"]},{pattern:/\b(?:FINER|FINEST|TRACE|TRC|VERBOSE|VRB)\b/,alias:["trace","comment"]}],property:{pattern:/((?:^|[\]|])[ \t]*)[a-z_](?:[\w-]|\b\/\b)*(?:[. ]\(?\w(?:[\w-]|\b\/\b)*\)?)*:(?=\s)/im,lookbehind:!0},separator:{pattern:/(^|[^-+])-{3,}|={3,}|\*{3,}|- - /m,lookbehind:!0,alias:"comment"},url:/\b(?:file|ftp|https?):\/\/[^\s|,;'"]*[^\s|,;'">.]/,email:{pattern:/(^|\s)[-\w+.]+@[a-z][a-z0-9-]*(?:\.[a-z][a-z0-9-]*)+(?=\s)/,lookbehind:!0,alias:"url"},"ip-address":{pattern:/\b(?:\d{1,3}(?:\.\d{1,3}){3})\b/,alias:"constant"},"mac-address":{pattern:/\b[a-f0-9]{2}(?::[a-f0-9]{2}){5}\b/i,alias:"constant"},domain:{pattern:/(^|\s)[a-z][a-z0-9-]*(?:\.[a-z][a-z0-9-]*)*\.[a-z][a-z0-9-]+(?=\s)/,lookbehind:!0,alias:"constant"},uuid:{pattern:/\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\b/i,alias:"constant"},hash:{pattern:/\b(?:[a-f0-9]{32}){1,2}\b/i,alias:"constant"},"file-path":{pattern:/\b[a-z]:[\\/][^\s|,;:(){}\[\]"']+|(^|[\s:\[\](>|])\.{0,2}\/\w[^\s|,;:(){}\[\]"']*/i,lookbehind:!0,greedy:!0,alias:"string"},date:{pattern:RegExp(/\b\d{4}[-/]\d{2}[-/]\d{2}(?:T(?=\d{1,2}:)|(?=\s\d{1,2}:))/.source+"|"+/\b\d{1,4}[-/ ](?:\d{1,2}|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)[-/ ]\d{2,4}T?\b/.source+"|"+/\b(?:(?:Fri|Mon|Sat|Sun|Thu|Tue|Wed)(?:\s{1,2}(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep))?|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)\s{1,2}\d{1,2}\b/.source,"i"),alias:"number"},time:{pattern:/\b\d{1,2}:\d{1,2}:\d{1,2}(?:[.,:]\d+)?(?:\s?[+-]\d{2}:?\d{2}|Z)?\b/,alias:"number"},boolean:/\b(?:false|null|true)\b/i,number:{pattern:/(^|[^.\w])(?:0x[a-f0-9]+|0o[0-7]+|0b[01]+|v?\d[\da-f]*(?:\.\d+)*(?:e[+-]?\d+)?[a-z]{0,3}\b)\b(?!\.\w)/i,lookbehind:!0},operator:/[;:?<=>~/@!$%&+\-|^(){}*#]/,punctuation:/[\[\].,]/}}wm.displayName="lolcode";wm.aliases=[];function wm(t){t.languages.lolcode={comment:[/\bOBTW\s[\s\S]*?\sTLDR\b/,/\bBTW.+/],string:{pattern:/"(?::.|[^":])*"/,inside:{variable:/:\{[^}]+\}/,symbol:[/:\([a-f\d]+\)/i,/:\[[^\]]+\]/,/:[)>o":]/]},greedy:!0},number:/(?:\B-)?(?:\b\d+(?:\.\d*)?|\B\.\d+)/,symbol:{pattern:/(^|\s)(?:A )?(?:BUKKIT|NOOB|NUMBAR|NUMBR|TROOF|YARN)(?=\s|,|$)/,lookbehind:!0,inside:{keyword:/A(?=\s)/}},label:{pattern:/((?:^|\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\w*/,lookbehind:!0,alias:"string"},function:{pattern:/((?:^|\s)(?:HOW IZ I|I IZ|IZ) )[a-zA-Z]\w*/,lookbehind:!0},keyword:[{pattern:/(^|\s)(?:AN|FOUND YR|GIMMEH|GTFO|HAI|HAS A|HOW IZ I|I HAS A|I IZ|IF U SAY SO|IM IN YR|IM OUTTA YR|IS NOW(?: A)?|ITZ(?: A)?|IZ|KTHX|KTHXBYE|LIEK(?: A)?|MAEK|MEBBE|MKAY|NERFIN|NO WAI|O HAI IM|O RLY\?|OIC|OMG|OMGWTF|R|SMOOSH|SRS|TIL|UPPIN|VISIBLE|WILE|WTF\?|YA RLY|YR)(?=\s|,|$)/,lookbehind:!0},/'Z(?=\s|,|$)/],boolean:{pattern:/(^|\s)(?:FAIL|WIN)(?=\s|,|$)/,lookbehind:!0},variable:{pattern:/(^|\s)IT(?=\s|,|$)/,lookbehind:!0},operator:{pattern:/(^|\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:ALL|ANY|BIGGR|BOTH|DIFF|EITHER|MOD|PRODUKT|QUOSHUNT|SMALLR|SUM|WON) OF)(?=\s|,|$)/,lookbehind:!0},punctuation:/\.{3}|…|,|!/}}Im.displayName="magma";Im.aliases=[];function Im(t){t.languages.magma={output:{pattern:/^(>.*(?:\r(?:\n|(?!\n))|\n))(?!>)(?:.+|(?:\r(?:\n|(?!\n))|\n)(?!>).*)(?:(?:\r(?:\n|(?!\n))|\n)(?!>).*)*/m,lookbehind:!0,greedy:!0},comment:{pattern:/\/\/.*|\/\*[\s\S]*?\*\//,greedy:!0},string:{pattern:/(^|[^\\"])"(?:[^\r\n\\"]|\\.)*"/,lookbehind:!0,greedy:!0},keyword:/\b(?:_|adj|and|assert|assert2|assert3|assigned|break|by|case|cat|catch|clear|cmpeq|cmpne|continue|declare|default|delete|diff|div|do|elif|else|end|eq|error|eval|exists|exit|for|forall|forward|fprintf|freeze|function|ge|gt|if|iload|import|in|intrinsic|is|join|le|load|local|lt|meet|mod|ne|not|notadj|notin|notsubset|or|print|printf|procedure|quit|random|read|readi|repeat|require|requirege|requirerange|restore|return|save|sdiff|select|subset|then|time|to|try|until|vprint|vprintf|vtime|when|where|while|xor)\b/,boolean:/\b(?:false|true)\b/,generator:{pattern:/\b[a-z_]\w*(?=\s*<)/i,alias:"class-name"},function:/\b[a-z_]\w*(?=\s*\()/i,number:{pattern:/(^|[^\w.]|\.\.)(?:\d+(?:\.\d*)?|\.\d+)(?:[eE][+-]?\d+)?(?:_[a-z]?)?(?=$|[^\w.]|\.\.)/,lookbehind:!0},operator:/->|[-+*/^~!|#=]|:=|\.\./,punctuation:/[()[\]{}<>,;.:]/}}hc.displayName="mata";hc.aliases=[];function hc(t){(function(n){var r=/\b(?:(?:col|row)?vector|matrix|scalar)\b/.source,s=/\bvoid\b|<org>|\b(?:complex|numeric|pointer(?:\s*\([^()]*\))?|real|string|(?:class|struct)\s+\w+|transmorphic)(?:\s*<org>)?/.source.replace(/<org>/g,r);n.languages.mata={comment:{pattern:/\/\/.*|\/\*(?:[^*/]|\*(?!\/)|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/)*\*\//,greedy:!0},string:{pattern:/"[^"\r\n]*"|[‘`']".*?"[’`']/,greedy:!0},"class-name":{pattern:/(\b(?:class|extends|struct)\s+)\w+(?=\s*(?:\{|\bextends\b))/,lookbehind:!0},type:{pattern:RegExp(s),alias:"class-name",inside:{punctuation:/[()]/,keyword:/\b(?:class|function|struct|void)\b/}},keyword:/\b(?:break|class|continue|do|else|end|extends|external|final|for|function|goto|if|pragma|private|protected|public|return|static|struct|unset|unused|version|virtual|while)\b/,constant:/\bNULL\b/,number:{pattern:/(^|[^\w.])(?:\d+(?:\.\d+)?(?:e[+-]?\d+)?|\d[a-f0-9]*(?:\.[a-f0-9]+)?x[+-]?\d+)i?(?![\w.])/i,lookbehind:!0},missing:{pattern:/(^|[^\w.])(?:\.[a-z]?)(?![\w.])/,lookbehind:!0,alias:"symbol"},function:/\b[a-z_]\w*(?=\s*\()/i,operator:/\.\.|\+\+|--|&&|\|\||:?(?:[!=<>]=|[+\-*/^<>&|:])|[!?=\\#’`']/,punctuation:/[()[\]{},;.]/}})(t)}Cm.displayName="matlab";Cm.aliases=[];function Cm(t){t.languages.matlab={comment:[/%\{[\s\S]*?\}%/,/%.+/],string:{pattern:/\B'(?:''|[^'\r\n])*'/,greedy:!0},number:/(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[eE][+-]?\d+)?(?:[ij])?|\b[ij]\b/,keyword:/\b(?:NaN|break|case|catch|continue|else|elseif|end|for|function|if|inf|otherwise|parfor|pause|pi|return|switch|try|while)\b/,function:/\b(?!\d)\w+(?=\s*\()/,operator:/\.?[*^\/\\']|[+\-:@]|[<>=~]=?|&&?|\|\|?/,punctuation:/\.{3}|[.,;\[\](){}!]/}}Om.displayName="maxscript";Om.aliases=[];function Om(t){(function(n){var r=/\b(?:about|and|animate|as|at|attributes|by|case|catch|collect|continue|coordsys|do|else|exit|fn|for|from|function|global|if|in|local|macroscript|mapped|max|not|of|off|on|or|parameters|persistent|plugin|rcmenu|return|rollout|set|struct|then|throw|to|tool|try|undo|utility|when|where|while|with)\b/i;n.languages.maxscript={comment:{pattern:/\/\*[\s\S]*?(?:\*\/|$)|--.*/,greedy:!0},string:{pattern:/(^|[^"\\@])(?:"(?:[^"\\]|\\[\s\S])*"|@"[^"]*")/,lookbehind:!0,greedy:!0},path:{pattern:/\$(?:[\w/\\.*?]|'[^']*')*/,greedy:!0,alias:"string"},"function-call":{pattern:RegExp("((?:"+(/^/.source+"|"+/[;=<>+\-*/^({\[]/.source+"|"+/\b(?:and|by|case|catch|collect|do|else|if|in|not|or|return|then|to|try|where|while|with)\b/.source)+")[ 	]*)(?!"+r.source+")"+/[a-z_]\w*\b/.source+"(?=[ 	]*(?:"+("(?!"+r.source+")"+/[a-z_]/.source+"|"+/\d|-\.?\d/.source+"|"+/[({'"$@#?]/.source)+"))","im"),lookbehind:!0,greedy:!0,alias:"function"},"function-definition":{pattern:/(\b(?:fn|function)\s+)\w+\b/i,lookbehind:!0,alias:"function"},argument:{pattern:/\b[a-z_]\w*(?=:)/i,alias:"attr-name"},keyword:r,boolean:/\b(?:false|true)\b/,time:{pattern:/(^|[^\w.])(?:(?:(?:\d+(?:\.\d*)?|\.\d+)(?:[eEdD][+-]\d+|[LP])?[msft])+|\d+:\d+(?:\.\d*)?)(?![\w.:])/,lookbehind:!0,alias:"number"},number:[{pattern:/(^|[^\w.])(?:(?:\d+(?:\.\d*)?|\.\d+)(?:[eEdD][+-]\d+|[LP])?|0x[a-fA-F0-9]+)(?![\w.:])/,lookbehind:!0},/\b(?:e|pi)\b/],constant:/\b(?:dontcollect|ok|silentValue|undefined|unsupplied)\b/,color:{pattern:/\b(?:black|blue|brown|gray|green|orange|red|white|yellow)\b/i,alias:"constant"},operator:/[-+*/<>=!]=?|[&^?]|#(?!\()/,punctuation:/[()\[\]{}.:,;]|#(?=\()|\\$/m}})(t)}km.displayName="mel";km.aliases=[];function km(t){t.languages.mel={comment:{pattern:/\/\/.*|\/\*[\s\S]*?\*\//,greedy:!0},code:{pattern:/`(?:\\.|[^\\`])*`/,greedy:!0,alias:"italic",inside:{delimiter:{pattern:/^`|`$/,alias:"punctuation"},statement:{pattern:/[\s\S]+/,inside:null}}},string:{pattern:/"(?:\\.|[^\\"\r\n])*"/,greedy:!0},variable:/\$\w+/,number:/\b0x[\da-fA-F]+\b|\b\d+(?:\.\d*)?|\B\.\d+/,flag:{pattern:/-[^\d\W]\w*/,alias:"operator"},keyword:/\b(?:break|case|continue|default|do|else|float|for|global|if|in|int|matrix|proc|return|string|switch|vector|while)\b/,function:{pattern:/((?:^|[{;])[ \t]*)[a-z_]\w*\b(?!\s*(?:\.(?!\.)|[[{=]))|\b[a-z_]\w*(?=[ \t]*\()/im,lookbehind:!0,greedy:!0},"tensor-punctuation":{pattern:/<<|>>/,alias:"punctuation"},operator:/\+[+=]?|-[-=]?|&&|\|\||[<>]=?|[*\/!=]=?|[%^]/,punctuation:/[.,:;?\[\](){}]/},t.languages.mel.code.inside.statement.inside=t.languages.mel}Lm.displayName="mermaid";Lm.aliases=[];function Lm(t){t.languages.mermaid={comment:{pattern:/%%.*/,greedy:!0},style:{pattern:/^([ \t]*(?:classDef|linkStyle|style)[ \t]+[\w$-]+[ \t]+)\w.*[^\s;]/m,lookbehind:!0,inside:{property:/\b\w[\w-]*(?=[ \t]*:)/,operator:/:/,punctuation:/,/}},"inter-arrow-label":{pattern:/([^<>ox.=-])(?:-[-.]|==)(?![<>ox.=-])[ \t]*(?:"[^"\r\n]*"|[^\s".=-](?:[^\r\n.=-]*[^\s.=-])?)[ \t]*(?:\.+->?|--+[->]|==+[=>])(?![<>ox.=-])/,lookbehind:!0,greedy:!0,inside:{arrow:{pattern:/(?:\.+->?|--+[->]|==+[=>])$/,alias:"operator"},label:{pattern:/^([\s\S]{2}[ \t]*)\S(?:[\s\S]*\S)?/,lookbehind:!0,alias:"property"},"arrow-head":{pattern:/^\S+/,alias:["arrow","operator"]}}},arrow:[{pattern:/(^|[^{}|o.-])[|}][|o](?:--|\.\.)[|o][|{](?![{}|o.-])/,lookbehind:!0,alias:"operator"},{pattern:/(^|[^<>ox.=-])(?:[<ox](?:==+|--+|-\.*-)[>ox]?|(?:==+|--+|-\.*-)[>ox]|===+|---+|-\.+-)(?![<>ox.=-])/,lookbehind:!0,alias:"operator"},{pattern:/(^|[^<>()x-])(?:--?(?:>>|[x>)])(?![<>()x])|(?:<<|[x<(])--?(?!-))/,lookbehind:!0,alias:"operator"},{pattern:/(^|[^<>|*o.-])(?:[*o]--|--[*o]|<\|?(?:--|\.\.)|(?:--|\.\.)\|?>|--|\.\.)(?![<>|*o.-])/,lookbehind:!0,alias:"operator"}],label:{pattern:/(^|[^|<])\|(?:[^\r\n"|]|"[^"\r\n]*")+\|/,lookbehind:!0,greedy:!0,alias:"property"},text:{pattern:/(?:[(\[{]+|\b>)(?:[^\r\n"()\[\]{}]|"[^"\r\n]*")+(?:[)\]}]+|>)/,alias:"string"},string:{pattern:/"[^"\r\n]*"/,greedy:!0},annotation:{pattern:/<<(?:abstract|choice|enumeration|fork|interface|join|service)>>|\[\[(?:choice|fork|join)\]\]/i,alias:"important"},keyword:[{pattern:/(^[ \t]*)(?:action|callback|class|classDef|classDiagram|click|direction|erDiagram|flowchart|gantt|gitGraph|graph|journey|link|linkStyle|pie|requirementDiagram|sequenceDiagram|stateDiagram|stateDiagram-v2|style|subgraph)(?![\w$-])/m,lookbehind:!0,greedy:!0},{pattern:/(^[ \t]*)(?:activate|alt|and|as|autonumber|deactivate|else|end(?:[ \t]+note)?|loop|opt|par|participant|rect|state|note[ \t]+(?:over|(?:left|right)[ \t]+of))(?![\w$-])/im,lookbehind:!0,greedy:!0}],entity:/#[a-z0-9]+;/,operator:{pattern:/(\w[ \t]*)&(?=[ \t]*\w)|:::|:/,lookbehind:!0},punctuation:/[(){};]/}}Dm.displayName="metafont";Dm.aliases=[];function Dm(t){t.languages.metafont={comment:{pattern:/%.*/,greedy:!0},string:{pattern:/"[^\r\n"]*"/,greedy:!0},number:/\d*\.?\d+/,boolean:/\b(?:false|true)\b/,punctuation:[/[,;()]/,{pattern:/(^|[^{}])(?:\{|\})(?![{}])/,lookbehind:!0},{pattern:/(^|[^[])\[(?!\[)/,lookbehind:!0},{pattern:/(^|[^\]])\](?!\])/,lookbehind:!0}],constant:[{pattern:/(^|[^!?])\?\?\?(?![!?])/,lookbehind:!0},{pattern:/(^|[^/*\\])(?:\\|\\\\)(?![/*\\])/,lookbehind:!0},/\b(?:_|blankpicture|bp|cc|cm|dd|ditto|down|eps|epsilon|fullcircle|halfcircle|identity|in|infinity|left|mm|nullpen|nullpicture|origin|pc|penrazor|penspeck|pensquare|penstroke|proof|pt|quartercircle|relax|right|smoke|unitpixel|unitsquare|up)\b/],quantity:{pattern:/\b(?:autorounding|blacker|boundarychar|charcode|chardp|chardx|chardy|charext|charht|charic|charwd|currentwindow|day|designsize|displaying|fillin|fontmaking|granularity|hppp|join_radius|month|o_correction|pausing|pen_(?:bot|lft|rt|top)|pixels_per_inch|proofing|showstopping|smoothing|time|tolerance|tracingcapsules|tracingchoices|tracingcommands|tracingedges|tracingequations|tracingmacros|tracingonline|tracingoutput|tracingpens|tracingrestores|tracingspecs|tracingstats|tracingtitles|turningcheck|vppp|warningcheck|xoffset|year|yoffset)\b/,alias:"keyword"},command:{pattern:/\b(?:addto|batchmode|charlist|cull|display|errhelp|errmessage|errorstopmode|everyjob|extensible|fontdimen|headerbyte|inner|interim|let|ligtable|message|newinternal|nonstopmode|numspecial|openwindow|outer|randomseed|save|scrollmode|shipout|show|showdependencies|showstats|showtoken|showvariable|special)\b/,alias:"builtin"},operator:[{pattern:/(^|[^>=<:|])(?:<|<=|=|=:|\|=:|\|=:>|=:\|>|=:\||\|=:\||\|=:\|>|\|=:\|>>|>|>=|:|:=|<>|::|\|\|:)(?![>=<:|])/,lookbehind:!0},{pattern:/(^|[^+-])(?:\+|\+\+|-{1,3}|\+-\+)(?![+-])/,lookbehind:!0},{pattern:/(^|[^/*\\])(?:\*|\*\*|\/)(?![/*\\])/,lookbehind:!0},{pattern:/(^|[^.])(?:\.{2,3})(?!\.)/,lookbehind:!0},{pattern:/(^|[^@#&$])&(?![@#&$])/,lookbehind:!0},/\b(?:and|not|or)\b/],macro:{pattern:/\b(?:abs|beginchar|bot|byte|capsule_def|ceiling|change_width|clear_pen_memory|clearit|clearpen|clearxy|counterclockwise|cullit|cutdraw|cutoff|decr|define_blacker_pixels|define_corrected_pixels|define_good_x_pixels|define_good_y_pixels|define_horizontal_corrected_pixels|define_pixels|define_whole_blacker_pixels|define_whole_pixels|define_whole_vertical_blacker_pixels|define_whole_vertical_pixels|dir|direction|directionpoint|div|dotprod|downto|draw|drawdot|endchar|erase|fill|filldraw|fix_units|flex|font_coding_scheme|font_extra_space|font_identifier|font_normal_shrink|font_normal_space|font_normal_stretch|font_quad|font_size|font_slant|font_x_height|gfcorners|gobble|gobbled|good\.(?:bot|lft|rt|top|x|y)|grayfont|hide|hround|imagerules|incr|interact|interpath|intersectionpoint|inverse|italcorr|killtext|labelfont|labels|lft|loggingall|lowres_fix|makegrid|makelabel(?:\.(?:bot|lft|rt|top)(?:\.nodot)?)?|max|min|mod|mode_def|mode_setup|nodisplays|notransforms|numtok|openit|penlabels|penpos|pickup|proofoffset|proofrule|proofrulethickness|range|reflectedabout|rotatedabout|rotatedaround|round|rt|savepen|screenchars|screenrule|screenstrokes|shipit|showit|slantfont|softjoin|solve|stop|superellipse|tensepath|thru|titlefont|top|tracingall|tracingnone|undraw|undrawdot|unfill|unfilldraw|upto|vround)\b/,alias:"function"},builtin:/\b(?:ASCII|angle|char|cosd|decimal|directiontime|floor|hex|intersectiontimes|jobname|known|length|makepath|makepen|mexp|mlog|normaldeviate|oct|odd|pencircle|penoffset|point|postcontrol|precontrol|reverse|rotated|sind|sqrt|str|subpath|substring|totalweight|turningnumber|uniformdeviate|unknown|xpart|xxpart|xypart|ypart|yxpart|yypart)\b/,keyword:/\b(?:also|at|atleast|begingroup|charexists|contour|controls|curl|cycle|def|delimiters|doublepath|dropping|dump|else|elseif|end|enddef|endfor|endgroup|endinput|exitif|exitunless|expandafter|fi|for|forever|forsuffixes|from|if|input|inwindow|keeping|kern|of|primarydef|quote|readstring|scaled|scantokens|secondarydef|shifted|skipto|slanted|step|tension|tertiarydef|to|transformed|until|vardef|withpen|withweight|xscaled|yscaled|zscaled)\b/,type:{pattern:/\b(?:boolean|expr|numeric|pair|path|pen|picture|primary|secondary|string|suffix|tertiary|text|transform)\b/,alias:"property"},variable:{pattern:/(^|[^@#&$])(?:@#|#@|#|@)(?![@#&$])|\b(?:aspect_ratio|currentpen|currentpicture|currenttransform|d|extra_beginchar|extra_endchar|extra_setup|h|localfont|mag|mode|screen_cols|screen_rows|w|whatever|x|y|z)\b/,lookbehind:!0}}}Mm.displayName="mizar";Mm.aliases=[];function Mm(t){t.languages.mizar={comment:/::.+/,keyword:/@proof\b|\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|end|environ|equals|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:ies|y)|when|where|with|wrt)\b/,parameter:{pattern:/\$(?:10|\d)/,alias:"variable"},variable:/\b\w+(?=:)/,number:/(?:\b|-)\d+\b/,operator:/\.\.\.|->|&|\.?=/,punctuation:/\(#|#\)|[,:;\[\](){}]/}}Fm.displayName="mongodb";Fm.aliases=[];function Fm(t){t.register(at),function(n){var r=["$eq","$gt","$gte","$in","$lt","$lte","$ne","$nin","$and","$not","$nor","$or","$exists","$type","$expr","$jsonSchema","$mod","$regex","$text","$where","$geoIntersects","$geoWithin","$near","$nearSphere","$all","$elemMatch","$size","$bitsAllClear","$bitsAllSet","$bitsAnyClear","$bitsAnySet","$comment","$elemMatch","$meta","$slice","$currentDate","$inc","$min","$max","$mul","$rename","$set","$setOnInsert","$unset","$addToSet","$pop","$pull","$push","$pullAll","$each","$position","$slice","$sort","$bit","$addFields","$bucket","$bucketAuto","$collStats","$count","$currentOp","$facet","$geoNear","$graphLookup","$group","$indexStats","$limit","$listLocalSessions","$listSessions","$lookup","$match","$merge","$out","$planCacheStats","$project","$redact","$replaceRoot","$replaceWith","$sample","$set","$skip","$sort","$sortByCount","$unionWith","$unset","$unwind","$setWindowFields","$abs","$accumulator","$acos","$acosh","$add","$addToSet","$allElementsTrue","$and","$anyElementTrue","$arrayElemAt","$arrayToObject","$asin","$asinh","$atan","$atan2","$atanh","$avg","$binarySize","$bsonSize","$ceil","$cmp","$concat","$concatArrays","$cond","$convert","$cos","$dateFromParts","$dateToParts","$dateFromString","$dateToString","$dayOfMonth","$dayOfWeek","$dayOfYear","$degreesToRadians","$divide","$eq","$exp","$filter","$first","$floor","$function","$gt","$gte","$hour","$ifNull","$in","$indexOfArray","$indexOfBytes","$indexOfCP","$isArray","$isNumber","$isoDayOfWeek","$isoWeek","$isoWeekYear","$last","$last","$let","$literal","$ln","$log","$log10","$lt","$lte","$ltrim","$map","$max","$mergeObjects","$meta","$min","$millisecond","$minute","$mod","$month","$multiply","$ne","$not","$objectToArray","$or","$pow","$push","$radiansToDegrees","$range","$reduce","$regexFind","$regexFindAll","$regexMatch","$replaceOne","$replaceAll","$reverseArray","$round","$rtrim","$second","$setDifference","$setEquals","$setIntersection","$setIsSubset","$setUnion","$size","$sin","$slice","$split","$sqrt","$stdDevPop","$stdDevSamp","$strcasecmp","$strLenBytes","$strLenCP","$substr","$substrBytes","$substrCP","$subtract","$sum","$switch","$tan","$toBool","$toDate","$toDecimal","$toDouble","$toInt","$toLong","$toObjectId","$toString","$toLower","$toUpper","$trim","$trunc","$type","$week","$year","$zip","$count","$dateAdd","$dateDiff","$dateSubtract","$dateTrunc","$getField","$rand","$sampleRate","$setField","$unsetField","$comment","$explain","$hint","$max","$maxTimeMS","$min","$orderby","$query","$returnKey","$showDiskLoc","$natural"],s=["ObjectId","Code","BinData","DBRef","Timestamp","NumberLong","NumberDecimal","MaxKey","MinKey","RegExp","ISODate","UUID"];r=r.map(function(a){return a.replace("$","\\$")});var i="(?:"+r.join("|")+")\\b";n.languages.mongodb=n.languages.extend("javascript",{}),n.languages.insertBefore("mongodb","string",{property:{pattern:/(?:(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)(?=\s*:)/,greedy:!0,inside:{keyword:RegExp(`^(['"])?`+i+"(?:\\1)?$")}}}),n.languages.mongodb.string.inside={url:{pattern:/https?:\/\/[-\w@:%.+~#=]{1,256}\.[a-z0-9()]{1,6}\b[-\w()@:%+.~#?&/=]*/i,greedy:!0},entity:{pattern:/\b(?:(?:[01]?\d\d?|2[0-4]\d|25[0-5])\.){3}(?:[01]?\d\d?|2[0-4]\d|25[0-5])\b/,greedy:!0}},n.languages.insertBefore("mongodb","constant",{builtin:{pattern:RegExp("\\b(?:"+s.join("|")+")\\b"),alias:"keyword"}})}(t)}Pm.displayName="monkey";Pm.aliases=[];function Pm(t){t.languages.monkey={comment:{pattern:/^#Rem\s[\s\S]*?^#End|'.+/im,greedy:!0},string:{pattern:/"[^"\r\n]*"/,greedy:!0},preprocessor:{pattern:/(^[ \t]*)#.+/m,lookbehind:!0,greedy:!0,alias:"property"},function:/\b\w+(?=\()/,"type-char":{pattern:/\b[?%#$]/,alias:"class-name"},number:{pattern:/((?:\.\.)?)(?:(?:\b|\B-\.?|\B\.)\d+(?:(?!\.\.)\.\d*)?|\$[\da-f]+)/i,lookbehind:!0},keyword:/\b(?:Abstract|Array|Bool|Case|Catch|Class|Const|Continue|Default|Eachin|Else|ElseIf|End|EndIf|Exit|Extends|Extern|False|Field|Final|Float|For|Forever|Function|Global|If|Implements|Import|Inline|Int|Interface|Local|Method|Module|New|Next|Null|Object|Private|Property|Public|Repeat|Return|Select|Self|Step|Strict|String|Super|Then|Throw|To|True|Try|Until|Void|Wend|While)\b/i,operator:/\.\.|<[=>]?|>=?|:?=|(?:[+\-*\/&~|]|\b(?:Mod|Shl|Shr)\b)=?|\b(?:And|Not|Or)\b/i,punctuation:/[.,:;()\[\]]/}}Um.displayName="moonscript";Um.aliases=["moon"];function Um(t){t.languages.moonscript={comment:/--.*/,string:[{pattern:/'[^']*'|\[(=*)\[[\s\S]*?\]\1\]/,greedy:!0},{pattern:/"[^"]*"/,greedy:!0,inside:{interpolation:{pattern:/#\{[^{}]*\}/,inside:{moonscript:{pattern:/(^#\{)[\s\S]+(?=\})/,lookbehind:!0,inside:null},"interpolation-punctuation":{pattern:/#\{|\}/,alias:"punctuation"}}}}}],"class-name":[{pattern:/(\b(?:class|extends)[ \t]+)\w+/,lookbehind:!0},/\b[A-Z]\w*/],keyword:/\b(?:class|continue|do|else|elseif|export|extends|for|from|if|import|in|local|nil|return|self|super|switch|then|unless|using|when|while|with)\b/,variable:/@@?\w*/,property:{pattern:/\b(?!\d)\w+(?=:)|(:)(?!\d)\w+/,lookbehind:!0},function:{pattern:/\b(?:_G|_VERSION|assert|collectgarbage|coroutine\.(?:create|resume|running|status|wrap|yield)|debug\.(?:debug|getfenv|gethook|getinfo|getlocal|getmetatable|getregistry|getupvalue|setfenv|sethook|setlocal|setmetatable|setupvalue|traceback)|dofile|error|getfenv|getmetatable|io\.(?:close|flush|input|lines|open|output|popen|read|stderr|stdin|stdout|tmpfile|type|write)|ipairs|load|loadfile|loadstring|math\.(?:abs|acos|asin|atan|atan2|ceil|cos|cosh|deg|exp|floor|fmod|frexp|ldexp|log|log10|max|min|modf|pi|pow|rad|random|randomseed|sin|sinh|sqrt|tan|tanh)|module|next|os\.(?:clock|date|difftime|execute|exit|getenv|remove|rename|setlocale|time|tmpname)|package\.(?:cpath|loaded|loadlib|path|preload|seeall)|pairs|pcall|print|rawequal|rawget|rawset|require|select|setfenv|setmetatable|string\.(?:byte|char|dump|find|format|gmatch|gsub|len|lower|match|rep|reverse|sub|upper)|table\.(?:concat|insert|maxn|remove|sort)|tonumber|tostring|type|unpack|xpcall)\b/,inside:{punctuation:/\./}},boolean:/\b(?:false|true)\b/,number:/(?:\B\.\d+|\b\d+\.\d+|\b\d+(?=[eE]))(?:[eE][-+]?\d+)?\b|\b(?:0x[a-fA-F\d]+|\d+)(?:U?LL)?\b/,operator:/\.{3}|[-=]>|~=|(?:[-+*/%<>!=]|\.\.)=?|[:#^]|\b(?:and|or)\b=?|\b(?:not)\b/,punctuation:/[.,()[\]{}\\]/},t.languages.moonscript.string[1].inside.interpolation.inside.moonscript.inside=t.languages.moonscript,t.languages.moon=t.languages.moonscript}Bm.displayName="n1ql";Bm.aliases=[];function Bm(t){t.languages.n1ql={comment:{pattern:/\/\*[\s\S]*?(?:$|\*\/)|--.*/,greedy:!0},string:{pattern:/(["'])(?:\\[\s\S]|(?!\1)[^\\]|\1\1)*\1/,greedy:!0},identifier:{pattern:/`(?:\\[\s\S]|[^\\`]|``)*`/,greedy:!0},parameter:/\$[\w.]+/,keyword:/\b(?:ADVISE|ALL|ALTER|ANALYZE|AS|ASC|AT|BEGIN|BINARY|BOOLEAN|BREAK|BUCKET|BUILD|BY|CALL|CAST|CLUSTER|COLLATE|COLLECTION|COMMIT|COMMITTED|CONNECT|CONTINUE|CORRELATE|CORRELATED|COVER|CREATE|CURRENT|DATABASE|DATASET|DATASTORE|DECLARE|DECREMENT|DELETE|DERIVED|DESC|DESCRIBE|DISTINCT|DO|DROP|EACH|ELEMENT|EXCEPT|EXCLUDE|EXECUTE|EXPLAIN|FETCH|FILTER|FLATTEN|FLUSH|FOLLOWING|FOR|FORCE|FROM|FTS|FUNCTION|GOLANG|GRANT|GROUP|GROUPS|GSI|HASH|HAVING|IF|IGNORE|ILIKE|INCLUDE|INCREMENT|INDEX|INFER|INLINE|INNER|INSERT|INTERSECT|INTO|IS|ISOLATION|JAVASCRIPT|JOIN|KEY|KEYS|KEYSPACE|KNOWN|LANGUAGE|LAST|LEFT|LET|LETTING|LEVEL|LIMIT|LSM|MAP|MAPPING|MATCHED|MATERIALIZED|MERGE|MINUS|MISSING|NAMESPACE|NEST|NL|NO|NTH_VALUE|NULL|NULLS|NUMBER|OBJECT|OFFSET|ON|OPTION|OPTIONS|ORDER|OTHERS|OUTER|OVER|PARSE|PARTITION|PASSWORD|PATH|POOL|PRECEDING|PREPARE|PRIMARY|PRIVATE|PRIVILEGE|PROBE|PROCEDURE|PUBLIC|RANGE|RAW|REALM|REDUCE|RENAME|RESPECT|RETURN|RETURNING|REVOKE|RIGHT|ROLE|ROLLBACK|ROW|ROWS|SATISFIES|SAVEPOINT|SCHEMA|SCOPE|SELECT|SELF|SEMI|SET|SHOW|SOME|START|STATISTICS|STRING|SYSTEM|TIES|TO|TRAN|TRANSACTION|TRIGGER|TRUNCATE|UNBOUNDED|UNDER|UNION|UNIQUE|UNKNOWN|UNNEST|UNSET|UPDATE|UPSERT|USE|USER|USING|VALIDATE|VALUE|VALUES|VIA|VIEW|WHERE|WHILE|WINDOW|WITH|WORK|XOR)\b/i,function:/\b[a-z_]\w*(?=\s*\()/i,boolean:/\b(?:FALSE|TRUE)\b/i,number:/(?:\b\d+\.|\B\.)\d+e[+\-]?\d+\b|\b\d+(?:\.\d*)?|\B\.\d+\b/i,operator:/[-+*\/%]|!=|==?|\|\||<[>=]?|>=?|\b(?:AND|ANY|ARRAY|BETWEEN|CASE|ELSE|END|EVERY|EXISTS|FIRST|IN|LIKE|NOT|OR|THEN|VALUED|WHEN|WITHIN)\b/i,punctuation:/[;[\](),.{}:]/}}Hm.displayName="nand2tetris-hdl";Hm.aliases=[];function Hm(t){t.languages["nand2tetris-hdl"]={comment:/\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,keyword:/\b(?:BUILTIN|CHIP|CLOCKED|IN|OUT|PARTS)\b/,boolean:/\b(?:false|true)\b/,function:/\b[A-Za-z][A-Za-z0-9]*(?=\()/,number:/\b\d+\b/,operator:/=|\.\./,punctuation:/[{}[\];(),:]/}}Gm.displayName="naniscript";Gm.aliases=["nani"];function Gm(t){(function(n){var r=/\{[^\r\n\[\]{}]*\}/,s={"quoted-string":{pattern:/"(?:[^"\\]|\\.)*"/,alias:"operator"},"command-param-id":{pattern:/(\s)\w+:/,lookbehind:!0,alias:"property"},"command-param-value":[{pattern:r,alias:"selector"},{pattern:/([\t ])\S+/,lookbehind:!0,greedy:!0,alias:"operator"},{pattern:/\S(?:.*\S)?/,alias:"operator"}]};n.languages.naniscript={comment:{pattern:/^([\t ]*);.*/m,lookbehind:!0},define:{pattern:/^>.+/m,alias:"tag",inside:{value:{pattern:/(^>\w+[\t ]+)(?!\s)[^{}\r\n]+/,lookbehind:!0,alias:"operator"},key:{pattern:/(^>)\w+/,lookbehind:!0}}},label:{pattern:/^([\t ]*)#[\t ]*\w+[\t ]*$/m,lookbehind:!0,alias:"regex"},command:{pattern:/^([\t ]*)@\w+(?=[\t ]|$).*/m,lookbehind:!0,alias:"function",inside:{"command-name":/^@\w+/,expression:{pattern:r,greedy:!0,alias:"selector"},"command-params":{pattern:/\s*\S[\s\S]*/,inside:s}}},"generic-text":{pattern:/(^[ \t]*)[^#@>;\s].*/m,lookbehind:!0,alias:"punctuation",inside:{"escaped-char":/\\[{}\[\]"]/,expression:{pattern:r,greedy:!0,alias:"selector"},"inline-command":{pattern:/\[[\t ]*\w[^\r\n\[\]]*\]/,greedy:!0,alias:"function",inside:{"command-params":{pattern:/(^\[[\t ]*\w+\b)[\s\S]+(?=\]$)/,lookbehind:!0,inside:s},"command-param-name":{pattern:/^(\[[\t ]*)\w+/,lookbehind:!0,alias:"name"},"start-stop-char":/[\[\]]/}}}}},n.languages.nani=n.languages.naniscript,n.hooks.add("after-tokenize",function(o){var l=o.tokens;l.forEach(function(c){if(typeof c!="string"&&c.type==="generic-text"){var d=a(c);i(d)||(c.type="bad-line",c.content=d)}})});function i(o){for(var l="[]{}",c=[],d=0;d<o.length;d++){var h=o[d],x=l.indexOf(h);if(x!==-1){if(x%2===0)c.push(x+1);else if(c.pop()!==x)return!1}}return c.length===0}function a(o){return typeof o=="string"?o:Array.isArray(o)?o.map(a).join(""):a(o.content)}})(t)}$m.displayName="nasm";$m.aliases=[];function $m(t){t.languages.nasm={comment:/;.*$/m,string:/(["'`])(?:\\.|(?!\1)[^\\\r\n])*\1/,label:{pattern:/(^\s*)[A-Za-z._?$][\w.?$@~#]*:/m,lookbehind:!0,alias:"function"},keyword:[/\[?BITS (?:16|32|64)\]?/,{pattern:/(^\s*)section\s*[a-z.]+:?/im,lookbehind:!0},/(?:extern|global)[^;\r\n]*/i,/(?:CPU|DEFAULT|FLOAT).*$/m],register:{pattern:/\b(?:st\d|[xyz]mm\d\d?|[cdt]r\d|r\d\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s)\b/i,alias:"variable"},number:/(?:\b|(?=\$))(?:0[hx](?:\.[\da-f]+|[\da-f]+(?:\.[\da-f]+)?)(?:p[+-]?\d+)?|\d[\da-f]+[hx]|\$\d[\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\d+|(?:\d+(?:\.\d+)?|\.\d+)(?:\.?e[+-]?\d+)?[dt]?)\b/i,operator:/[\[\]*+\-\/%<>=&|$!]/}}zm.displayName="neon";zm.aliases=[];function zm(t){t.languages.neon={comment:{pattern:/#.*/,greedy:!0},datetime:{pattern:/(^|[[{(=:,\s])\d\d\d\d-\d\d?-\d\d?(?:(?:[Tt]| +)\d\d?:\d\d:\d\d(?:\.\d*)? *(?:Z|[-+]\d\d?(?::?\d\d)?)?)?(?=$|[\]}),\s])/,lookbehind:!0,alias:"number"},key:{pattern:/(^|[[{(,\s])[^,:=[\]{}()'"\s]+(?=\s*:(?:$|[\]}),\s])|\s*=)/,lookbehind:!0,alias:"property"},number:{pattern:/(^|[[{(=:,\s])[+-]?(?:0x[\da-fA-F]+|0o[0-7]+|0b[01]+|(?:\d+(?:\.\d*)?|\.?\d+)(?:[eE][+-]?\d+)?)(?=$|[\]}),:=\s])/,lookbehind:!0},boolean:{pattern:/(^|[[{(=:,\s])(?:false|no|true|yes)(?=$|[\]}),:=\s])/i,lookbehind:!0},null:{pattern:/(^|[[{(=:,\s])(?:null)(?=$|[\]}),:=\s])/i,lookbehind:!0,alias:"keyword"},string:{pattern:/(^|[[{(=:,\s])(?:('''|""")\r?\n(?:(?:[^\r\n]|\r?\n(?![\t ]*\2))*\r?\n)?[\t ]*\2|'[^'\r\n]*'|"(?:\\.|[^\\"\r\n])*")/,lookbehind:!0,greedy:!0},literal:{pattern:/(^|[[{(=:,\s])(?:[^#"',:=[\]{}()\s`-]|[:-][^"',=[\]{}()\s])(?:[^,:=\]})(\s]|:(?![\s,\]})]|$)|[ \t]+[^#,:=\]})(\s])*/,lookbehind:!0,alias:"string"},punctuation:/[,:=[\]{}()-]/}}Wm.displayName="nevod";Wm.aliases=[];function Wm(t){t.languages.nevod={comment:/\/\/.*|(?:\/\*[\s\S]*?(?:\*\/|$))/,string:{pattern:/(?:"(?:""|[^"])*"(?!")|'(?:''|[^'])*'(?!'))!?\*?/,greedy:!0,inside:{"string-attrs":/!$|!\*$|\*$/}},namespace:{pattern:/(@namespace\s+)[a-zA-Z0-9\-.]+(?=\s*\{)/,lookbehind:!0},pattern:{pattern:/(@pattern\s+)?#?[a-zA-Z0-9\-.]+(?:\s*\(\s*(?:~\s*)?[a-zA-Z0-9\-.]+\s*(?:,\s*(?:~\s*)?[a-zA-Z0-9\-.]*)*\))?(?=\s*=)/,lookbehind:!0,inside:{"pattern-name":{pattern:/^#?[a-zA-Z0-9\-.]+/,alias:"class-name"},fields:{pattern:/\(.*\)/,inside:{"field-name":{pattern:/[a-zA-Z0-9\-.]+/,alias:"variable"},punctuation:/[,()]/,operator:{pattern:/~/,alias:"field-hidden-mark"}}}}},search:{pattern:/(@search\s+|#)[a-zA-Z0-9\-.]+(?:\.\*)?(?=\s*;)/,alias:"function",lookbehind:!0},keyword:/@(?:having|inside|namespace|outside|pattern|require|search|where)\b/,"standard-pattern":{pattern:/\b(?:Alpha|AlphaNum|Any|Blank|End|LineBreak|Num|NumAlpha|Punct|Space|Start|Symbol|Word|WordBreak)\b(?:\([a-zA-Z0-9\-.,\s+]*\))?/,inside:{"standard-pattern-name":{pattern:/^[a-zA-Z0-9\-.]+/,alias:"builtin"},quantifier:{pattern:/\b\d+(?:\s*\+|\s*-\s*\d+)?(?!\w)/,alias:"number"},"standard-pattern-attr":{pattern:/[a-zA-Z0-9\-.]+/,alias:"builtin"},punctuation:/[,()]/}},quantifier:{pattern:/\b\d+(?:\s*\+|\s*-\s*\d+)?(?!\w)/,alias:"number"},operator:[{pattern:/=/,alias:"pattern-def"},{pattern:/&/,alias:"conjunction"},{pattern:/~/,alias:"exception"},{pattern:/\?/,alias:"optionality"},{pattern:/[[\]]/,alias:"repetition"},{pattern:/[{}]/,alias:"variation"},{pattern:/[+_]/,alias:"sequence"},{pattern:/\.{2,3}/,alias:"span"}],"field-capture":[{pattern:/([a-zA-Z0-9\-.]+\s*\()\s*[a-zA-Z0-9\-.]+\s*:\s*[a-zA-Z0-9\-.]+(?:\s*,\s*[a-zA-Z0-9\-.]+\s*:\s*[a-zA-Z0-9\-.]+)*(?=\s*\))/,lookbehind:!0,inside:{"field-name":{pattern:/[a-zA-Z0-9\-.]+/,alias:"variable"},colon:/:/}},{pattern:/[a-zA-Z0-9\-.]+\s*:/,inside:{"field-name":{pattern:/[a-zA-Z0-9\-.]+/,alias:"variable"},colon:/:/}}],punctuation:/[:;,()]/,name:/[a-zA-Z0-9\-.]+/}}Vm.displayName="nginx";Vm.aliases=[];function Vm(t){(function(n){var r=/\$(?:\w[a-z\d]*(?:_[^\x00-\x1F\s"'\\()$]*)?|\{[^}\s"'\\]+\})/i;n.languages.nginx={comment:{pattern:/(^|[\s{};])#.*/,lookbehind:!0,greedy:!0},directive:{pattern:/(^|\s)\w(?:[^;{}"'\\\s]|\\.|"(?:[^"\\]|\\.)*"|'(?:[^'\\]|\\.)*'|\s+(?:#.*(?!.)|(?![#\s])))*?(?=\s*[;{])/,lookbehind:!0,greedy:!0,inside:{string:{pattern:/((?:^|[^\\])(?:\\\\)*)(?:"(?:[^"\\]|\\.)*"|'(?:[^'\\]|\\.)*')/,lookbehind:!0,greedy:!0,inside:{escape:{pattern:/\\["'\\nrt]/,alias:"entity"},variable:r}},comment:{pattern:/(\s)#.*/,lookbehind:!0,greedy:!0},keyword:{pattern:/^\S+/,greedy:!0},boolean:{pattern:/(\s)(?:off|on)(?!\S)/,lookbehind:!0},number:{pattern:/(\s)\d+[a-z]*(?!\S)/i,lookbehind:!0},variable:r}},punctuation:/[{};]/}})(t)}Km.displayName="nim";Km.aliases=[];function Km(t){t.languages.nim={comment:{pattern:/#.*/,greedy:!0},string:{pattern:/(?:\b(?!\d)(?:\w|\\x[89a-fA-F][0-9a-fA-F])+)?(?:"""[\s\S]*?"""(?!")|"(?:\\[\s\S]|""|[^"\\])*")/,greedy:!0},char:{pattern:/'(?:\\(?:\d+|x[\da-fA-F]{0,2}|.)|[^'])'/,greedy:!0},function:{pattern:/(?:(?!\d)(?:\w|\\x[89a-fA-F][0-9a-fA-F])+|`[^`\r\n]+`)\*?(?:\[[^\]]+\])?(?=\s*\()/,greedy:!0,inside:{operator:/\*$/}},identifier:{pattern:/`[^`\r\n]+`/,greedy:!0,inside:{punctuation:/`/}},number:/\b(?:0[xXoObB][\da-fA-F_]+|\d[\d_]*(?:(?!\.\.)\.[\d_]*)?(?:[eE][+-]?\d[\d_]*)?)(?:'?[iuf]\d*)?/,keyword:/\b(?:addr|as|asm|atomic|bind|block|break|case|cast|concept|const|continue|converter|defer|discard|distinct|do|elif|else|end|enum|except|export|finally|for|from|func|generic|if|import|include|interface|iterator|let|macro|method|mixin|nil|object|out|proc|ptr|raise|ref|return|static|template|try|tuple|type|using|var|when|while|with|without|yield)\b/,operator:{pattern:/(^|[({\[](?=\.\.)|(?![({\[]\.).)(?:(?:[=+\-*\/<>@$~&%|!?^:\\]|\.\.|\.(?![)}\]]))+|\b(?:and|div|in|is|isnot|mod|not|notin|of|or|shl|shr|xor)\b)/m,lookbehind:!0},punctuation:/[({\[]\.|\.[)}\]]|[`(){}\[\],:]/}}Ym.displayName="nix";Ym.aliases=[];function Ym(t){t.languages.nix={comment:{pattern:/\/\*[\s\S]*?\*\/|#.*/,greedy:!0},string:{pattern:/"(?:[^"\\]|\\[\s\S])*"|''(?:(?!'')[\s\S]|''(?:'|\\|\$\{))*''/,greedy:!0,inside:{interpolation:{pattern:/(^|(?:^|(?!'').)[^\\])\$\{(?:[^{}]|\{[^}]*\})*\}/,lookbehind:!0,inside:null}}},url:[/\b(?:[a-z]{3,7}:\/\/)[\w\-+%~\/.:#=?&]+/,{pattern:/([^\/])(?:[\w\-+%~.:#=?&]*(?!\/\/)[\w\-+%~\/.:#=?&])?(?!\/\/)\/[\w\-+%~\/.:#=?&]*/,lookbehind:!0}],antiquotation:{pattern:/\$(?=\{)/,alias:"important"},number:/\b\d+\b/,keyword:/\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\b/,function:/\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:Tarball|url)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\b|\bfoldl'\B/,boolean:/\b(?:false|true)\b/,operator:/[=!<>]=?|\+\+?|\|\||&&|\/\/|->?|[?@]/,punctuation:/[{}()[\].,:;]/},t.languages.nix.string.inside.interpolation.inside=t.languages.nix}qm.displayName="nsis";qm.aliases=[];function qm(t){t.languages.nsis={comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|[#;].*)/,lookbehind:!0,greedy:!0},string:{pattern:/("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,greedy:!0},keyword:{pattern:/(^[\t ]*)(?:Abort|Add(?:BrandingImage|Size)|AdvSplash|Allow(?:RootDirInstall|SkipFiles)|AutoCloseWindow|BG(?:Font|Gradient|Image)|Banner|BrandingText|BringToFront|CRCCheck|Call(?:InstDLL)?|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|Create(?:Directory|Font|ShortCut)|Delete(?:INISec|INIStr|RegKey|RegValue)?|Detail(?:Print|sButtonText)|Dialer|Dir(?:Text|Var|Verify)|EnableWindow|Enum(?:RegKey|RegValue)|Exch|Exec(?:Shell(?:Wait)?|Wait)?|ExpandEnvStrings|File(?:BufSize|Close|ErrorText|Open|Read|ReadByte|ReadUTF16LE|ReadWord|Seek|Write|WriteByte|WriteUTF16LE|WriteWord)?|Find(?:Close|First|Next|Window)|FlushINI|Get(?:CurInstType|CurrentAddress|DLLVersion(?:Local)?|DlgItem|ErrorLevel|FileTime(?:Local)?|FullPathName|Function(?:Address|End)?|InstDirError|KnownFolderPath|LabelAddress|TempFileName|WinVer)|Goto|HideWindow|Icon|If(?:Abort|Errors|FileExists|RebootFlag|RtlLanguage|ShellVarContextAll|Silent)|InitPluginsDir|InstProgressFlags|Inst(?:Type(?:GetText|SetText)?)|Install(?:ButtonText|Colors|Dir(?:RegKey)?)|Int(?:64|Ptr)?CmpU?|Int(?:64)?Fmt|Int(?:Ptr)?Op|IsWindow|Lang(?:DLL|String)|License(?:BkColor|Data|ForceSelection|LangString|Text)|LoadLanguageFile|LockWindow|Log(?:Set|Text)|Manifest(?:DPIAware|SupportedOS)|Math|MessageBox|MiscButtonText|NSISdl|Name|Nop|OutFile|PE(?:DllCharacteristics|SubsysVer)|Page(?:Callbacks)?|Pop|Push|Quit|RMDir|Read(?:EnvStr|INIStr|RegDWORD|RegStr)|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|SearchPath|Section(?:End|GetFlags|GetInstTypes|GetSize|GetText|Group|In|SetFlags|SetInstTypes|SetSize|SetText)?|SendMessage|Set(?:AutoClose|BrandingImage|Compress|Compressor(?:DictSize)?|CtlColors|CurInstType|DatablockOptimize|DateSave|Details(?:Print|View)|ErrorLevel|Errors|FileAttributes|Font|OutPath|Overwrite|PluginUnload|RebootFlag|RegView|ShellVarContext|Silent)|Show(?:InstDetails|UninstDetails|Window)|Silent(?:Install|UnInstall)|Sleep|SpaceTexts|Splash|StartMenu|Str(?:CmpS?|Cpy|Len)|SubCaption|System|Target|UnRegDLL|Unicode|UninstPage|Uninstall(?:ButtonText|Caption|Icon|SubCaption|Text)|UserInfo|VI(?:AddVersionKey|FileVersion|ProductVersion)|VPatch|Var|WindowIcon|Write(?:INIStr|Reg(?:Bin|DWORD|ExpandStr|MultiStr|None|Str)|Uninstaller)|XPStyle|ns(?:Dialogs|Exec))\b/m,lookbehind:!0},property:/\b(?:ARCHIVE|FILE_(?:ATTRIBUTE_ARCHIVE|ATTRIBUTE_NORMAL|ATTRIBUTE_OFFLINE|ATTRIBUTE_READONLY|ATTRIBUTE_SYSTEM|ATTRIBUTE_TEMPORARY)|HK(?:(?:CR|CU|LM)(?:32|64)?|DD|PD|U)|HKEY_(?:CLASSES_ROOT|CURRENT_CONFIG|CURRENT_USER|DYN_DATA|LOCAL_MACHINE|PERFORMANCE_DATA|USERS)|ID(?:ABORT|CANCEL|IGNORE|NO|OK|RETRY|YES)|MB_(?:ABORTRETRYIGNORE|DEFBUTTON1|DEFBUTTON2|DEFBUTTON3|DEFBUTTON4|ICONEXCLAMATION|ICONINFORMATION|ICONQUESTION|ICONSTOP|OK|OKCANCEL|RETRYCANCEL|RIGHT|RTLREADING|SETFOREGROUND|TOPMOST|USERICON|YESNO)|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY|admin|all|auto|both|colored|false|force|hide|highest|lastused|leave|listonly|none|normal|notset|off|on|open|print|show|silent|silentlog|smooth|textonly|true|user)\b/,constant:/\$\{[!\w\.:\^-]+\}|\$\([!\w\.:\^-]+\)/,variable:/\$\w[\w\.]*/,number:/\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,operator:/--?|\+\+?|<=?|>=?|==?=?|&&?|\|\|?|[?*\/~^%]/,punctuation:/[{}[\];(),.:]/,important:{pattern:/(^[\t ]*)!(?:addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversion|gettlbversion|if|ifdef|ifmacrodef|ifmacrondef|ifndef|include|insertmacro|macro|macroend|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|verbose|warning)\b/im,lookbehind:!0}}}Xm.displayName="ocaml";Xm.aliases=[];function Xm(t){t.languages.ocaml={comment:{pattern:/\(\*[\s\S]*?\*\)/,greedy:!0},char:{pattern:/'(?:[^\\\r\n']|\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,greedy:!0},string:[{pattern:/"(?:\\(?:[\s\S]|\r\n)|[^\\\r\n"])*"/,greedy:!0},{pattern:/\{([a-z_]*)\|[\s\S]*?\|\1\}/,greedy:!0}],number:[/\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\b/i,/\b0x[a-f0-9][a-f0-9_]*(?:\.[a-f0-9_]*)?(?:p[+-]?\d[\d_]*)?(?!\w)/i,/\b\d[\d_]*(?:\.[\d_]*)?(?:e[+-]?\d[\d_]*)?(?!\w)/i],directive:{pattern:/\B#\w+/,alias:"property"},label:{pattern:/\B~\w+/,alias:"property"},"type-variable":{pattern:/\B'\w+/,alias:"function"},variant:{pattern:/`\w+/,alias:"symbol"},keyword:/\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\b/,boolean:/\b(?:false|true)\b/,"operator-like-punctuation":{pattern:/\[[<>|]|[>|]\]|\{<|>\}/,alias:"punctuation"},operator:/\.[.~]|:[=>]|[=<>@^|&+\-*\/$%!?~][!$%&*+\-.\/:<=>?@^|~]*|\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\b/,punctuation:/;;|::|[(){}\[\].,:;#]|\b_\b/}}Zm.displayName="odin";Zm.aliases=[];function Zm(t){(function(n){var r=/\\(?:["'\\abefnrtv]|0[0-7]{2}|U[\dA-Fa-f]{6}|u[\dA-Fa-f]{4}|x[\dA-Fa-f]{2})/;n.languages.odin={comment:[{pattern:/\/\*(?:[^/*]|\/(?!\*)|\*(?!\/)|\/\*(?:\*(?!\/)|[^*])*(?:\*\/|$))*(?:\*\/|$)/,greedy:!0},{pattern:/#![^\n\r]*/,greedy:!0},{pattern:/\/\/[^\n\r]*/,greedy:!0}],char:{pattern:/'(?:\\(?:.|[0Uux][0-9A-Fa-f]{1,6})|[^\n\r'\\])'/,greedy:!0,inside:{symbol:r}},string:[{pattern:/`[^`]*`/,greedy:!0},{pattern:/"(?:\\.|[^\n\r"\\])*"/,greedy:!0,inside:{symbol:r}}],directive:{pattern:/#\w+/,alias:"property"},number:/\b0(?:b[01_]+|d[\d_]+|h_*(?:(?:(?:[\dA-Fa-f]_*){8}){1,2}|(?:[\dA-Fa-f]_*){4})|o[0-7_]+|x[\dA-F_a-f]+|z[\dAB_ab]+)\b|(?:\b\d+(?:\.(?!\.)\d*)?|\B\.\d+)(?:[Ee][+-]?\d*)?[ijk]?(?!\w)/,discard:{pattern:/\b_\b/,alias:"keyword"},"procedure-definition":{pattern:/\b\w+(?=[ \t]*(?::\s*){2}proc\b)/,alias:"function"},keyword:/\b(?:asm|auto_cast|bit_set|break|case|cast|context|continue|defer|distinct|do|dynamic|else|enum|fallthrough|for|foreign|if|import|in|map|matrix|not_in|or_else|or_return|package|proc|return|struct|switch|transmute|typeid|union|using|when|where)\b/,"procedure-name":{pattern:/\b\w+(?=[ \t]*\()/,alias:"function"},boolean:/\b(?:false|nil|true)\b/,"constant-parameter-sign":{pattern:/\$/,alias:"important"},undefined:{pattern:/---/,alias:"operator"},arrow:{pattern:/->/,alias:"punctuation"},operator:/\+\+|--|\.\.[<=]?|(?:&~|[-!*+/=~]|[%&<>|]{1,2})=?|[?^]/,punctuation:/[(),.:;@\[\]{}]/}})(t)}Qm.displayName="opencl";Qm.aliases=[];function Qm(t){t.register(un),function(n){n.languages.opencl=n.languages.extend("c",{keyword:/\b(?:(?:__)?(?:constant|global|kernel|local|private|read_only|read_write|write_only)|__attribute__|auto|(?:bool|u?(?:char|int|long|short)|half|quad)(?:2|3|4|8|16)?|break|case|complex|const|continue|(?:double|float)(?:16(?:x(?:1|2|4|8|16))?|1x(?:1|2|4|8|16)|2(?:x(?:1|2|4|8|16))?|3|4(?:x(?:1|2|4|8|16))?|8(?:x(?:1|2|4|8|16))?)?|default|do|else|enum|extern|for|goto|if|imaginary|inline|packed|pipe|register|restrict|return|signed|sizeof|static|struct|switch|typedef|uniform|union|unsigned|void|volatile|while)\b/,number:/(?:\b0x(?:[\da-f]+(?:\.[\da-f]*)?|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[fuhl]{0,4}/i,boolean:/\b(?:false|true)\b/,"constant-opencl-kernel":{pattern:/\b(?:CHAR_(?:BIT|MAX|MIN)|CLK_(?:ADDRESS_(?:CLAMP(?:_TO_EDGE)?|NONE|REPEAT)|FILTER_(?:LINEAR|NEAREST)|(?:GLOBAL|LOCAL)_MEM_FENCE|NORMALIZED_COORDS_(?:FALSE|TRUE))|CL_(?:BGRA|(?:HALF_)?FLOAT|INTENSITY|LUMINANCE|A?R?G?B?[Ax]?|(?:(?:UN)?SIGNED|[US]NORM)_(?:INT(?:8|16|32))|UNORM_(?:INT_101010|SHORT_(?:555|565)))|(?:DBL|FLT|HALF)_(?:DIG|EPSILON|(?:MAX|MIN)(?:(?:_10)?_EXP)?|MANT_DIG)|FLT_RADIX|HUGE_VALF?|(?:INT|LONG|SCHAR|SHRT)_(?:MAX|MIN)|INFINITY|MAXFLOAT|M_(?:[12]_PI|2_SQRTPI|E|LN(?:2|10)|LOG(?:2|10)E?|PI(?:_[24])?|SQRT(?:1_2|2))(?:_F|_H)?|NAN|(?:UCHAR|UINT|ULONG|USHRT)_MAX)\b/,alias:"constant"}}),n.languages.insertBefore("opencl","class-name",{"builtin-type":{pattern:/\b(?:_cl_(?:command_queue|context|device_id|event|kernel|mem|platform_id|program|sampler)|cl_(?:image_format|mem_fence_flags)|clk_event_t|event_t|image(?:1d_(?:array_|buffer_)?t|2d_(?:array_(?:depth_|msaa_depth_|msaa_)?|depth_|msaa_depth_|msaa_)?t|3d_t)|intptr_t|ndrange_t|ptrdiff_t|queue_t|reserve_id_t|sampler_t|size_t|uintptr_t)\b/,alias:"keyword"}});var r={"type-opencl-host":{pattern:/\b(?:cl_(?:GLenum|GLint|GLuin|addressing_mode|bitfield|bool|buffer_create_type|build_status|channel_(?:order|type)|(?:u?(?:char|int|long|short)|double|float)(?:2|3|4|8|16)?|command_(?:queue(?:_info|_properties)?|type)|context(?:_info|_properties)?|device_(?:exec_capabilities|fp_config|id|info|local_mem_type|mem_cache_type|type)|(?:event|sampler)(?:_info)?|filter_mode|half|image_info|kernel(?:_info|_work_group_info)?|map_flags|mem(?:_flags|_info|_object_type)?|platform_(?:id|info)|profiling_info|program(?:_build_info|_info)?))\b/,alias:"keyword"},"boolean-opencl-host":{pattern:/\bCL_(?:FALSE|TRUE)\b/,alias:"boolean"},"constant-opencl-host":{pattern:/\bCL_(?:A|ABGR|ADDRESS_(?:CLAMP(?:_TO_EDGE)?|MIRRORED_REPEAT|NONE|REPEAT)|ARGB|BGRA|BLOCKING|BUFFER_CREATE_TYPE_REGION|BUILD_(?:ERROR|IN_PROGRESS|NONE|PROGRAM_FAILURE|SUCCESS)|COMMAND_(?:ACQUIRE_GL_OBJECTS|BARRIER|COPY_(?:BUFFER(?:_RECT|_TO_IMAGE)?|IMAGE(?:_TO_BUFFER)?)|FILL_(?:BUFFER|IMAGE)|MAP(?:_BUFFER|_IMAGE)|MARKER|MIGRATE(?:_SVM)?_MEM_OBJECTS|NATIVE_KERNEL|NDRANGE_KERNEL|READ_(?:BUFFER(?:_RECT)?|IMAGE)|RELEASE_GL_OBJECTS|SVM_(?:FREE|MAP|MEMCPY|MEMFILL|UNMAP)|TASK|UNMAP_MEM_OBJECT|USER|WRITE_(?:BUFFER(?:_RECT)?|IMAGE))|COMPILER_NOT_AVAILABLE|COMPILE_PROGRAM_FAILURE|COMPLETE|CONTEXT_(?:DEVICES|INTEROP_USER_SYNC|NUM_DEVICES|PLATFORM|PROPERTIES|REFERENCE_COUNT)|DEPTH(?:_STENCIL)?|DEVICE_(?:ADDRESS_BITS|AFFINITY_DOMAIN_(?:L[1-4]_CACHE|NEXT_PARTITIONABLE|NUMA)|AVAILABLE|BUILT_IN_KERNELS|COMPILER_AVAILABLE|DOUBLE_FP_CONFIG|ENDIAN_LITTLE|ERROR_CORRECTION_SUPPORT|EXECUTION_CAPABILITIES|EXTENSIONS|GLOBAL_(?:MEM_(?:CACHELINE_SIZE|CACHE_SIZE|CACHE_TYPE|SIZE)|VARIABLE_PREFERRED_TOTAL_SIZE)|HOST_UNIFIED_MEMORY|IL_VERSION|IMAGE(?:2D_MAX_(?:HEIGHT|WIDTH)|3D_MAX_(?:DEPTH|HEIGHT|WIDTH)|_BASE_ADDRESS_ALIGNMENT|_MAX_ARRAY_SIZE|_MAX_BUFFER_SIZE|_PITCH_ALIGNMENT|_SUPPORT)|LINKER_AVAILABLE|LOCAL_MEM_SIZE|LOCAL_MEM_TYPE|MAX_(?:CLOCK_FREQUENCY|COMPUTE_UNITS|CONSTANT_ARGS|CONSTANT_BUFFER_SIZE|GLOBAL_VARIABLE_SIZE|MEM_ALLOC_SIZE|NUM_SUB_GROUPS|ON_DEVICE_(?:EVENTS|QUEUES)|PARAMETER_SIZE|PIPE_ARGS|READ_IMAGE_ARGS|READ_WRITE_IMAGE_ARGS|SAMPLERS|WORK_GROUP_SIZE|WORK_ITEM_DIMENSIONS|WORK_ITEM_SIZES|WRITE_IMAGE_ARGS)|MEM_BASE_ADDR_ALIGN|MIN_DATA_TYPE_ALIGN_SIZE|NAME|NATIVE_VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT)|NOT_(?:AVAILABLE|FOUND)|OPENCL_C_VERSION|PARENT_DEVICE|PARTITION_(?:AFFINITY_DOMAIN|BY_AFFINITY_DOMAIN|BY_COUNTS|BY_COUNTS_LIST_END|EQUALLY|FAILED|MAX_SUB_DEVICES|PROPERTIES|TYPE)|PIPE_MAX_(?:ACTIVE_RESERVATIONS|PACKET_SIZE)|PLATFORM|PREFERRED_(?:GLOBAL_ATOMIC_ALIGNMENT|INTEROP_USER_SYNC|LOCAL_ATOMIC_ALIGNMENT|PLATFORM_ATOMIC_ALIGNMENT|VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT))|PRINTF_BUFFER_SIZE|PROFILE|PROFILING_TIMER_RESOLUTION|QUEUE_(?:ON_(?:DEVICE_(?:MAX_SIZE|PREFERRED_SIZE|PROPERTIES)|HOST_PROPERTIES)|PROPERTIES)|REFERENCE_COUNT|SINGLE_FP_CONFIG|SUB_GROUP_INDEPENDENT_FORWARD_PROGRESS|SVM_(?:ATOMICS|CAPABILITIES|COARSE_GRAIN_BUFFER|FINE_GRAIN_BUFFER|FINE_GRAIN_SYSTEM)|TYPE(?:_ACCELERATOR|_ALL|_CPU|_CUSTOM|_DEFAULT|_GPU)?|VENDOR(?:_ID)?|VERSION)|DRIVER_VERSION|EVENT_(?:COMMAND_(?:EXECUTION_STATUS|QUEUE|TYPE)|CONTEXT|REFERENCE_COUNT)|EXEC_(?:KERNEL|NATIVE_KERNEL|STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST)|FILTER_(?:LINEAR|NEAREST)|FLOAT|FP_(?:CORRECTLY_ROUNDED_DIVIDE_SQRT|DENORM|FMA|INF_NAN|ROUND_TO_INF|ROUND_TO_NEAREST|ROUND_TO_ZERO|SOFT_FLOAT)|GLOBAL|HALF_FLOAT|IMAGE_(?:ARRAY_SIZE|BUFFER|DEPTH|ELEMENT_SIZE|FORMAT|FORMAT_MISMATCH|FORMAT_NOT_SUPPORTED|HEIGHT|NUM_MIP_LEVELS|NUM_SAMPLES|ROW_PITCH|SLICE_PITCH|WIDTH)|INTENSITY|INVALID_(?:ARG_INDEX|ARG_SIZE|ARG_VALUE|BINARY|BUFFER_SIZE|BUILD_OPTIONS|COMMAND_QUEUE|COMPILER_OPTIONS|CONTEXT|DEVICE|DEVICE_PARTITION_COUNT|DEVICE_QUEUE|DEVICE_TYPE|EVENT|EVENT_WAIT_LIST|GLOBAL_OFFSET|GLOBAL_WORK_SIZE|GL_OBJECT|HOST_PTR|IMAGE_DESCRIPTOR|IMAGE_FORMAT_DESCRIPTOR|IMAGE_SIZE|KERNEL|KERNEL_ARGS|KERNEL_DEFINITION|KERNEL_NAME|LINKER_OPTIONS|MEM_OBJECT|MIP_LEVEL|OPERATION|PIPE_SIZE|PLATFORM|PROGRAM|PROGRAM_EXECUTABLE|PROPERTY|QUEUE_PROPERTIES|SAMPLER|VALUE|WORK_DIMENSION|WORK_GROUP_SIZE|WORK_ITEM_SIZE)|KERNEL_(?:ARG_(?:ACCESS_(?:NONE|QUALIFIER|READ_ONLY|READ_WRITE|WRITE_ONLY)|ADDRESS_(?:CONSTANT|GLOBAL|LOCAL|PRIVATE|QUALIFIER)|INFO_NOT_AVAILABLE|NAME|TYPE_(?:CONST|NAME|NONE|PIPE|QUALIFIER|RESTRICT|VOLATILE))|ATTRIBUTES|COMPILE_NUM_SUB_GROUPS|COMPILE_WORK_GROUP_SIZE|CONTEXT|EXEC_INFO_SVM_FINE_GRAIN_SYSTEM|EXEC_INFO_SVM_PTRS|FUNCTION_NAME|GLOBAL_WORK_SIZE|LOCAL_MEM_SIZE|LOCAL_SIZE_FOR_SUB_GROUP_COUNT|MAX_NUM_SUB_GROUPS|MAX_SUB_GROUP_SIZE_FOR_NDRANGE|NUM_ARGS|PREFERRED_WORK_GROUP_SIZE_MULTIPLE|PRIVATE_MEM_SIZE|PROGRAM|REFERENCE_COUNT|SUB_GROUP_COUNT_FOR_NDRANGE|WORK_GROUP_SIZE)|LINKER_NOT_AVAILABLE|LINK_PROGRAM_FAILURE|LOCAL|LUMINANCE|MAP_(?:FAILURE|READ|WRITE|WRITE_INVALIDATE_REGION)|MEM_(?:ALLOC_HOST_PTR|ASSOCIATED_MEMOBJECT|CONTEXT|COPY_HOST_PTR|COPY_OVERLAP|FLAGS|HOST_NO_ACCESS|HOST_PTR|HOST_READ_ONLY|HOST_WRITE_ONLY|KERNEL_READ_AND_WRITE|MAP_COUNT|OBJECT_(?:ALLOCATION_FAILURE|BUFFER|IMAGE1D|IMAGE1D_ARRAY|IMAGE1D_BUFFER|IMAGE2D|IMAGE2D_ARRAY|IMAGE3D|PIPE)|OFFSET|READ_ONLY|READ_WRITE|REFERENCE_COUNT|SIZE|SVM_ATOMICS|SVM_FINE_GRAIN_BUFFER|TYPE|USES_SVM_POINTER|USE_HOST_PTR|WRITE_ONLY)|MIGRATE_MEM_OBJECT_(?:CONTENT_UNDEFINED|HOST)|MISALIGNED_SUB_BUFFER_OFFSET|NONE|NON_BLOCKING|OUT_OF_(?:HOST_MEMORY|RESOURCES)|PIPE_(?:MAX_PACKETS|PACKET_SIZE)|PLATFORM_(?:EXTENSIONS|HOST_TIMER_RESOLUTION|NAME|PROFILE|VENDOR|VERSION)|PROFILING_(?:COMMAND_(?:COMPLETE|END|QUEUED|START|SUBMIT)|INFO_NOT_AVAILABLE)|PROGRAM_(?:BINARIES|BINARY_SIZES|BINARY_TYPE(?:_COMPILED_OBJECT|_EXECUTABLE|_LIBRARY|_NONE)?|BUILD_(?:GLOBAL_VARIABLE_TOTAL_SIZE|LOG|OPTIONS|STATUS)|CONTEXT|DEVICES|IL|KERNEL_NAMES|NUM_DEVICES|NUM_KERNELS|REFERENCE_COUNT|SOURCE)|QUEUED|QUEUE_(?:CONTEXT|DEVICE|DEVICE_DEFAULT|ON_DEVICE|ON_DEVICE_DEFAULT|OUT_OF_ORDER_EXEC_MODE_ENABLE|PROFILING_ENABLE|PROPERTIES|REFERENCE_COUNT|SIZE)|R|RA|READ_(?:ONLY|WRITE)_CACHE|RG|RGB|RGBA|RGBx|RGx|RUNNING|Rx|SAMPLER_(?:ADDRESSING_MODE|CONTEXT|FILTER_MODE|LOD_MAX|LOD_MIN|MIP_FILTER_MODE|NORMALIZED_COORDS|REFERENCE_COUNT)|(?:UN)?SIGNED_INT(?:8|16|32)|SNORM_INT(?:8|16)|SUBMITTED|SUCCESS|UNORM_INT(?:8|16|24|_101010|_101010_2)|UNORM_SHORT_(?:555|565)|VERSION_(?:1_0|1_1|1_2|2_0|2_1)|sBGRA|sRGB|sRGBA|sRGBx)\b/,alias:"constant"},"function-opencl-host":{pattern:/\bcl(?:BuildProgram|CloneKernel|CompileProgram|Create(?:Buffer|CommandQueue(?:WithProperties)?|Context|ContextFromType|Image|Image2D|Image3D|Kernel|KernelsInProgram|Pipe|ProgramWith(?:Binary|BuiltInKernels|IL|Source)|Sampler|SamplerWithProperties|SubBuffer|SubDevices|UserEvent)|Enqueue(?:(?:Barrier|Marker)(?:WithWaitList)?|Copy(?:Buffer(?:Rect|ToImage)?|Image(?:ToBuffer)?)|(?:Fill|Map)(?:Buffer|Image)|MigrateMemObjects|NDRangeKernel|NativeKernel|(?:Read|Write)(?:Buffer(?:Rect)?|Image)|SVM(?:Free|Map|MemFill|Memcpy|MigrateMem|Unmap)|Task|UnmapMemObject|WaitForEvents)|Finish|Flush|Get(?:CommandQueueInfo|ContextInfo|Device(?:AndHostTimer|IDs|Info)|Event(?:Profiling)?Info|ExtensionFunctionAddress(?:ForPlatform)?|HostTimer|ImageInfo|Kernel(?:ArgInfo|Info|SubGroupInfo|WorkGroupInfo)|MemObjectInfo|PipeInfo|Platform(?:IDs|Info)|Program(?:Build)?Info|SamplerInfo|SupportedImageFormats)|LinkProgram|(?:Release|Retain)(?:CommandQueue|Context|Device|Event|Kernel|MemObject|Program|Sampler)|SVM(?:Alloc|Free)|Set(?:CommandQueueProperty|DefaultDeviceCommandQueue|EventCallback|Kernel|Kernel(?:Arg(?:SVMPointer)?|ExecInfo)|MemObjectDestructorCallback|UserEventStatus)|Unload(?:Platform)?Compiler|WaitForEvents)\b/,alias:"function"}};n.languages.insertBefore("c","keyword",r),n.languages.cpp&&(r["type-opencl-host-cpp"]={pattern:/\b(?:Buffer|BufferGL|BufferRenderGL|CommandQueue|Context|Device|DeviceCommandQueue|EnqueueArgs|Event|Image|Image1D|Image1DArray|Image1DBuffer|Image2D|Image2DArray|Image2DGL|Image3D|Image3DGL|ImageFormat|ImageGL|Kernel|KernelFunctor|LocalSpaceArg|Memory|NDRange|Pipe|Platform|Program|SVMAllocator|SVMTraitAtomic|SVMTraitCoarse|SVMTraitFine|SVMTraitReadOnly|SVMTraitReadWrite|SVMTraitWriteOnly|Sampler|UserEvent)\b/,alias:"keyword"},n.languages.insertBefore("cpp","keyword",r))}(t)}Jm.displayName="openqasm";Jm.aliases=["qasm"];function Jm(t){t.languages.openqasm={comment:/\/\*[\s\S]*?\*\/|\/\/.*/,string:{pattern:/"[^"\r\n\t]*"|'[^'\r\n\t]*'/,greedy:!0},keyword:/\b(?:CX|OPENQASM|U|barrier|boxas|boxto|break|const|continue|ctrl|def|defcal|defcalgrammar|delay|else|end|for|gate|gphase|if|in|include|inv|kernel|lengthof|let|measure|pow|reset|return|rotary|stretchinf|while)\b|#pragma\b/,"class-name":/\b(?:angle|bit|bool|creg|fixed|float|int|length|qreg|qubit|stretch|uint)\b/,function:/\b(?:cos|exp|ln|popcount|rotl|rotr|sin|sqrt|tan)\b(?=\s*\()/,constant:/\b(?:euler|pi|tau)\b|π|𝜏|ℇ/,number:{pattern:/(^|[^.\w$])(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?(?:dt|ns|us|µs|ms|s)?/i,lookbehind:!0},operator:/->|>>=?|<<=?|&&|\|\||\+\+|--|[!=<>&|~^+\-*/%]=?|@/,punctuation:/[(){}\[\];,:.]/},t.languages.qasm=t.languages.openqasm}ef.displayName="oz";ef.aliases=[];function ef(t){t.languages.oz={comment:{pattern:/\/\*[\s\S]*?\*\/|%.*/,greedy:!0},string:{pattern:/"(?:[^"\\]|\\[\s\S])*"/,greedy:!0},atom:{pattern:/'(?:[^'\\]|\\[\s\S])*'/,greedy:!0,alias:"builtin"},keyword:/\$|\[\]|\b(?:_|at|attr|case|catch|choice|class|cond|declare|define|dis|else(?:case|if)?|end|export|fail|false|feat|finally|from|fun|functor|if|import|in|local|lock|meth|nil|not|of|or|prepare|proc|prop|raise|require|self|skip|then|thread|true|try|unit)\b/,function:[/\b[a-z][A-Za-z\d]*(?=\()/,{pattern:/(\{)[A-Z][A-Za-z\d]*\b/,lookbehind:!0}],number:/\b(?:0[bx][\da-f]+|\d+(?:\.\d*)?(?:e~?\d+)?)\b|&(?:[^\\]|\\(?:\d{3}|.))/i,variable:/`(?:[^`\\]|\\.)+`/,"attr-name":/\b\w+(?=[ \t]*:(?![:=]))/,operator:/:(?:=|::?)|<[-:=]?|=(?:=|<?:?)|>=?:?|\\=:?|!!?|[|#+\-*\/,~^@]|\b(?:andthen|div|mod|orelse)\b/,punctuation:/[\[\](){}.:;?]/}}tf.displayName="parigp";tf.aliases=[];function tf(t){t.languages.parigp={comment:/\/\*[\s\S]*?\*\/|\\\\.*/,string:{pattern:/"(?:[^"\\\r\n]|\\.)*"/,greedy:!0},keyword:function(){var n=["breakpoint","break","dbg_down","dbg_err","dbg_up","dbg_x","forcomposite","fordiv","forell","forpart","forprime","forstep","forsubgroup","forvec","for","iferr","if","local","my","next","return","until","while"];return n=n.map(function(r){return r.split("").join(" *")}).join("|"),RegExp("\\b(?:"+n+")\\b")}(),function:/\b\w(?:[\w ]*\w)?(?= *\()/,number:{pattern:/((?:\. *\. *)?)(?:\b\d(?: *\d)*(?: *(?!\. *\.)\.(?: *\d)*)?|\. *\d(?: *\d)*)(?: *e *(?:[+-] *)?\d(?: *\d)*)?/i,lookbehind:!0},operator:/\. *\.|[*\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\+(?: *[+=])?|-(?: *[-=>])?|<(?: *>|(?: *<)?(?: *=)?)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\(?: *\/)?(?: *=)?|&(?: *&)?|\| *\||['#~^]/,punctuation:/[\[\]{}().,:;|]/}}nf.displayName="parser";nf.aliases=[];function nf(t){t.register(Ze),function(n){var r=n.languages.parser=n.languages.extend("markup",{keyword:{pattern:/(^|[^^])(?:\^(?:case|eval|for|if|switch|throw)\b|@(?:BASE|CLASS|GET(?:_DEFAULT)?|OPTIONS|SET_DEFAULT|USE)\b)/,lookbehind:!0},variable:{pattern:/(^|[^^])\B\$(?:\w+|(?=[.{]))(?:(?:\.|::?)\w+)*(?:\.|::?)?/,lookbehind:!0,inside:{punctuation:/\.|:+/}},function:{pattern:/(^|[^^])\B[@^]\w+(?:(?:\.|::?)\w+)*(?:\.|::?)?/,lookbehind:!0,inside:{keyword:{pattern:/(^@)(?:GET_|SET_)/,lookbehind:!0},punctuation:/\.|:+/}},escape:{pattern:/\^(?:[$^;@()\[\]{}"':]|#[a-f\d]*)/i,alias:"builtin"},punctuation:/[\[\](){};]/});r=n.languages.insertBefore("parser","keyword",{"parser-comment":{pattern:/(\s)#.*/,lookbehind:!0,alias:"comment"},expression:{pattern:/(^|[^^])\((?:[^()]|\((?:[^()]|\((?:[^()])*\))*\))*\)/,greedy:!0,lookbehind:!0,inside:{string:{pattern:/(^|[^^])(["'])(?:(?!\2)[^^]|\^[\s\S])*\2/,lookbehind:!0},keyword:r.keyword,variable:r.variable,function:r.function,boolean:/\b(?:false|true)\b/,number:/\b(?:0x[a-f\d]+|\d+(?:\.\d*)?(?:e[+-]?\d+)?)\b/i,escape:r.escape,operator:/[~+*\/\\%]|!(?:\|\|?|=)?|&&?|\|\|?|==|<[<=]?|>[>=]?|-[fd]?|\b(?:def|eq|ge|gt|in|is|le|lt|ne)\b/,punctuation:r.punctuation}}}),n.languages.insertBefore("inside","punctuation",{expression:r.expression,keyword:r.keyword,variable:r.variable,function:r.function,escape:r.escape,"parser-punctuation":{pattern:r.punctuation,alias:"punctuation"}},r.tag.inside["attr-value"])}(t)}rf.displayName="pascal";rf.aliases=["objectpascal"];function rf(t){t.languages.pascal={directive:{pattern:/\{\$[\s\S]*?\}/,greedy:!0,alias:["marco","property"]},comment:{pattern:/\(\*[\s\S]*?\*\)|\{[\s\S]*?\}|\/\/.*/,greedy:!0},string:{pattern:/(?:'(?:''|[^'\r\n])*'(?!')|#[&$%]?[a-f\d]+)+|\^[a-z]/i,greedy:!0},asm:{pattern:/(\basm\b)[\s\S]+?(?=\bend\s*[;[])/i,lookbehind:!0,greedy:!0,inside:null},keyword:[{pattern:/(^|[^&])\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\b/i,lookbehind:!0},{pattern:/(^|[^&])\b(?:dispose|exit|false|new|true)\b/i,lookbehind:!0},{pattern:/(^|[^&])\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\b/i,lookbehind:!0},{pattern:/(^|[^&])\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\b/i,lookbehind:!0}],number:[/(?:[&%]\d+|\$[a-f\d]+)/i,/\b\d+(?:\.\d+)?(?:e[+-]?\d+)?/i],operator:[/\.\.|\*\*|:=|<[<=>]?|>[>=]?|[+\-*\/]=?|[@^=]/,{pattern:/(^|[^&])\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\b/,lookbehind:!0}],punctuation:/\(\.|\.\)|[()\[\]:;,.]/},t.languages.pascal.asm.inside=t.languages.extend("pascal",{asm:void 0,keyword:void 0,operator:void 0}),t.languages.objectpascal=t.languages.pascal}sf.displayName="pascaligo";sf.aliases=[];function sf(t){(function(n){var r=/\((?:[^()]|\((?:[^()]|\([^()]*\))*\))*\)/.source,s=/(?:\b\w+(?:<braces>)?|<braces>)/.source.replace(/<braces>/g,function(){return r}),i=n.languages.pascaligo={comment:/\(\*[\s\S]+?\*\)|\/\/.*/,string:{pattern:/(["'`])(?:\\[\s\S]|(?!\1)[^\\])*\1|\^[a-z]/i,greedy:!0},"class-name":[{pattern:RegExp(/(\btype\s+\w+\s+is\s+)<type>/.source.replace(/<type>/g,function(){return s}),"i"),lookbehind:!0,inside:null},{pattern:RegExp(/<type>(?=\s+is\b)/.source.replace(/<type>/g,function(){return s}),"i"),inside:null},{pattern:RegExp(/(:\s*)<type>/.source.replace(/<type>/g,function(){return s})),lookbehind:!0,inside:null}],keyword:{pattern:/(^|[^&])\b(?:begin|block|case|const|else|end|fail|for|from|function|if|is|nil|of|remove|return|skip|then|type|var|while|with)\b/i,lookbehind:!0},boolean:{pattern:/(^|[^&])\b(?:False|True)\b/i,lookbehind:!0},builtin:{pattern:/(^|[^&])\b(?:bool|int|list|map|nat|record|string|unit)\b/i,lookbehind:!0},function:/\b\w+(?=\s*\()/,number:[/%[01]+|&[0-7]+|\$[a-f\d]+/i,/\b\d+(?:\.\d+)?(?:e[+-]?\d+)?(?:mtz|n)?/i],operator:/->|=\/=|\.\.|\*\*|:=|<[<=>]?|>[>=]?|[+\-*\/]=?|[@^=|]|\b(?:and|mod|or)\b/,punctuation:/\(\.|\.\)|[()\[\]:;,.{}]/},a=["comment","keyword","builtin","operator","punctuation"].reduce(function(o,l){return o[l]=i[l],o},{});i["class-name"].forEach(function(o){o.inside=a})})(t)}af.displayName="psl";af.aliases=[];function af(t){t.languages.psl={comment:{pattern:/#.*/,greedy:!0},string:{pattern:/"(?:\\.|[^\\"])*"/,greedy:!0,inside:{symbol:/\\[ntrbA-Z"\\]/}},"heredoc-string":{pattern:/<<<([a-zA-Z_]\w*)[\r\n](?:.*[\r\n])*?\1\b/,alias:"string",greedy:!0},keyword:/\b(?:__multi|__single|case|default|do|else|elsif|exit|export|for|foreach|function|if|last|line|local|next|requires|return|switch|until|while|word)\b/,constant:/\b(?:ALARM|CHART_ADD_GRAPH|CHART_DELETE_GRAPH|CHART_DESTROY|CHART_LOAD|CHART_PRINT|EOF|OFFLINE|OK|PSL_PROF_LOG|R_CHECK_HORIZ|R_CHECK_VERT|R_CLICKER|R_COLUMN|R_FRAME|R_ICON|R_LABEL|R_LABEL_CENTER|R_LIST_MULTIPLE|R_LIST_MULTIPLE_ND|R_LIST_SINGLE|R_LIST_SINGLE_ND|R_MENU|R_POPUP|R_POPUP_SCROLLED|R_RADIO_HORIZ|R_RADIO_VERT|R_ROW|R_SCALE_HORIZ|R_SCALE_VERT|R_SEP_HORIZ|R_SEP_VERT|R_SPINNER|R_TEXT_FIELD|R_TEXT_FIELD_LABEL|R_TOGGLE|TRIM_LEADING|TRIM_LEADING_AND_TRAILING|TRIM_REDUNDANT|TRIM_TRAILING|VOID|WARN)\b/,boolean:/\b(?:FALSE|False|NO|No|TRUE|True|YES|Yes|false|no|true|yes)\b/,variable:/\b(?:PslDebug|errno|exit_status)\b/,builtin:{pattern:/\b(?:PslExecute|PslFunctionCall|PslFunctionExists|PslSetOptions|_snmp_debug|acos|add_diary|annotate|annotate_get|ascii_to_ebcdic|asctime|asin|atan|atexit|batch_set|blackout|cat|ceil|chan_exists|change_state|close|code_cvt|cond_signal|cond_wait|console_type|convert_base|convert_date|convert_locale_date|cos|cosh|create|date|dcget_text|destroy|destroy_lock|dget_text|difference|dump_hist|ebcdic_to_ascii|encrypt|event_archive|event_catalog_get|event_check|event_query|event_range_manage|event_range_query|event_report|event_schedule|event_trigger|event_trigger2|execute|exists|exp|fabs|file|floor|fmod|fopen|fseek|ftell|full_discovery|get|get_chan_info|get_ranges|get_text|get_vars|getenv|gethostinfo|getpid|getpname|grep|history|history_get_retention|in_transition|index|int|internal|intersection|is_var|isnumber|join|kill|length|lines|lock|lock_info|log|log10|loge|matchline|msg_check|msg_get_format|msg_get_severity|msg_printf|msg_sprintf|ntharg|nthargf|nthline|nthlinef|num_bytes|num_consoles|pconfig|popen|poplines|pow|print|printf|proc_exists|process|random|read|readln|refresh_parameters|remote_check|remote_close|remote_event_query|remote_event_trigger|remote_file_send|remote_open|remove|replace|rindex|sec_check_priv|sec_store_get|sec_store_set|set|set_alarm_ranges|set_locale|share|sin|sinh|sleep|snmp_agent_config|snmp_agent_start|snmp_agent_stop|snmp_close|snmp_config|snmp_get|snmp_get_next|snmp_h_get|snmp_h_get_next|snmp_h_set|snmp_open|snmp_set|snmp_trap_ignore|snmp_trap_listen|snmp_trap_raise_std_trap|snmp_trap_receive|snmp_trap_register_im|snmp_trap_send|snmp_walk|sopen|sort|splitline|sprintf|sqrt|srandom|str_repeat|strcasecmp|subset|substr|system|tail|tan|tanh|text_domain|time|tmpnam|tolower|toupper|trace_psl_process|trim|union|unique|unlock|unset|va_arg|va_start|write)\b/,alias:"builtin-function"},"foreach-variable":{pattern:/(\bforeach\s+(?:(?:\w+\b|"(?:\\.|[^\\"])*")\s+){0,2})[_a-zA-Z]\w*(?=\s*\()/,lookbehind:!0,greedy:!0},function:/\b[_a-z]\w*\b(?=\s*\()/i,number:/\b(?:0x[0-9a-f]+|\d+(?:\.\d+)?)\b/i,operator:/--|\+\+|&&=?|\|\|=?|<<=?|>>=?|[=!]~|[-+*/%&|^!=<>]=?|\.|[:?]/,punctuation:/[(){}\[\];,]/}}of.displayName="pcaxis";of.aliases=["px"];function of(t){t.languages.pcaxis={string:/"[^"]*"/,keyword:{pattern:/((?:^|;)\s*)[-A-Z\d]+(?:\s*\[[-\w]+\])?(?:\s*\("[^"]*"(?:,\s*"[^"]*")*\))?(?=\s*=)/,lookbehind:!0,greedy:!0,inside:{keyword:/^[-A-Z\d]+/,language:{pattern:/^(\s*)\[[-\w]+\]/,lookbehind:!0,inside:{punctuation:/^\[|\]$/,property:/[-\w]+/}},"sub-key":{pattern:/^(\s*)\S[\s\S]*/,lookbehind:!0,inside:{parameter:{pattern:/"[^"]*"/,alias:"property"},punctuation:/^\(|\)$|,/}}}},operator:/=/,tlist:{pattern:/TLIST\s*\(\s*\w+(?:(?:\s*,\s*"[^"]*")+|\s*,\s*"[^"]*"-"[^"]*")?\s*\)/,greedy:!0,inside:{function:/^TLIST/,property:{pattern:/^(\s*\(\s*)\w+/,lookbehind:!0},string:/"[^"]*"/,punctuation:/[(),]/,operator:/-/}},punctuation:/[;,]/,number:{pattern:/(^|\s)\d+(?:\.\d+)?(?!\S)/,lookbehind:!0},boolean:/NO|YES/},t.languages.px=t.languages.pcaxis}lf.displayName="peoplecode";lf.aliases=["pcode"];function lf(t){t.languages.peoplecode={comment:RegExp([/\/\*[\s\S]*?\*\//.source,/\bREM[^;]*;/.source,/<\*(?:[^<*]|\*(?!>)|<(?!\*)|<\*(?:(?!\*>)[\s\S])*\*>)*\*>/.source,/\/\+[\s\S]*?\+\//.source].join("|")),string:{pattern:/'(?:''|[^'\r\n])*'(?!')|"(?:""|[^"\r\n])*"(?!")/,greedy:!0},variable:/%\w+/,"function-definition":{pattern:/((?:^|[^\w-])(?:function|method)\s+)\w+/i,lookbehind:!0,alias:"function"},"class-name":{pattern:/((?:^|[^-\w])(?:as|catch|class|component|create|extends|global|implements|instance|local|of|property|returns)\s+)\w+(?::\w+)*/i,lookbehind:!0,inside:{punctuation:/:/}},keyword:/\b(?:abstract|alias|as|catch|class|component|constant|create|declare|else|end-(?:class|evaluate|for|function|get|if|method|set|try|while)|evaluate|extends|for|function|get|global|if|implements|import|instance|library|local|method|null|of|out|peopleCode|private|program|property|protected|readonly|ref|repeat|returns?|set|step|then|throw|to|try|until|value|when(?:-other)?|while)\b/i,"operator-keyword":{pattern:/\b(?:and|not|or)\b/i,alias:"operator"},function:/[_a-z]\w*(?=\s*\()/i,boolean:/\b(?:false|true)\b/i,number:/\b\d+(?:\.\d+)?\b/,operator:/<>|[<>]=?|!=|\*\*|[-+*/|=@]/,punctuation:/[:.;,()[\]]/},t.languages.pcode=t.languages.peoplecode}cf.displayName="phpdoc";cf.aliases=[];function cf(t){t.register(si),t.register(ns),function(n){var r=/(?:\b[a-zA-Z]\w*|[|\\[\]])+/.source;n.languages.phpdoc=n.languages.extend("javadoclike",{parameter:{pattern:RegExp("(@(?:global|param|property(?:-read|-write)?|var)\\s+(?:"+r+"\\s+)?)\\$\\w+"),lookbehind:!0}}),n.languages.insertBefore("phpdoc","keyword",{"class-name":[{pattern:RegExp("(@(?:global|package|param|property(?:-read|-write)?|return|subpackage|throws|var)\\s+)"+r),lookbehind:!0,inside:{keyword:/\b(?:array|bool|boolean|callback|double|false|float|int|integer|mixed|null|object|resource|self|string|true|void)\b/,punctuation:/[|\\[\]()]/}}]}),n.languages.javadoclike.addSupport("php",n.languages.phpdoc)}(t)}df.displayName="php-extras";df.aliases=[];function df(t){t.register(ns),t.languages.insertBefore("php","variable",{this:{pattern:/\$this\b/,alias:"keyword"},global:/\$(?:GLOBALS|HTTP_RAW_POST_DATA|_(?:COOKIE|ENV|FILES|GET|POST|REQUEST|SERVER|SESSION)|argc|argv|http_response_header|php_errormsg)\b/,scope:{pattern:/\b[\w\\]+::/,inside:{keyword:/\b(?:parent|self|static)\b/,punctuation:/::|\\/}}})}uf.displayName="plant-uml";uf.aliases=["plantuml"];function uf(t){(function(n){var r=/\$\w+|%[a-z]+%/,s=/\[[^[\]]*\]/.source,i=/(?:[drlu]|do|down|le|left|ri|right|up)/.source,a="(?:-+"+i+"-+|\\.+"+i+"\\.+|-+(?:"+s+"-*)?|"+s+"-+|\\.+(?:"+s+"\\.*)?|"+s+"\\.+)",o=/(?:<{1,2}|\/{1,2}|\\{1,2}|<\||[#*^+}xo])/.source,l=/(?:>{1,2}|\/{1,2}|\\{1,2}|\|>|[#*^+{xo])/.source,c=/[[?]?[ox]?/.source,d=/[ox]?[\]?]?/.source,h=c+"(?:"+a+l+"|"+o+a+"(?:"+l+")?)"+d;n.languages["plant-uml"]={comment:{pattern:/(^[ \t]*)(?:'.*|\/'[\s\S]*?'\/)/m,lookbehind:!0,greedy:!0},preprocessor:{pattern:/(^[ \t]*)!.*/m,lookbehind:!0,greedy:!0,alias:"property",inside:{variable:r}},delimiter:{pattern:/(^[ \t]*)@(?:end|start)uml\b/m,lookbehind:!0,greedy:!0,alias:"punctuation"},arrow:{pattern:RegExp(/(^|[^-.<>?|\\[\]ox])/.source+h+/(?![-.<>?|\\\]ox])/.source),lookbehind:!0,greedy:!0,alias:"operator",inside:{expression:{pattern:/(\[)[^[\]]+(?=\])/,lookbehind:!0,inside:null},punctuation:/\[(?=$|\])|^\]/}},string:{pattern:/"[^"]*"/,greedy:!0},text:{pattern:/(\[[ \t]*[\r\n]+(?![\r\n]))[^\]]*(?=\])/,lookbehind:!0,greedy:!0,alias:"string"},keyword:[{pattern:/^([ \t]*)(?:abstract\s+class|end\s+(?:box|fork|group|merge|note|ref|split|title)|(?:fork|split)(?:\s+again)?|activate|actor|agent|alt|annotation|artifact|autoactivate|autonumber|backward|binary|boundary|box|break|caption|card|case|circle|class|clock|cloud|collections|component|concise|control|create|critical|database|deactivate|destroy|detach|diamond|else|elseif|end|end[hr]note|endif|endswitch|endwhile|entity|enum|file|folder|footer|frame|group|[hr]?note|header|hexagon|hide|if|interface|label|legend|loop|map|namespace|network|newpage|node|nwdiag|object|opt|package|page|par|participant|person|queue|rectangle|ref|remove|repeat|restore|return|robust|scale|set|show|skinparam|stack|start|state|stop|storage|switch|title|together|usecase|usecase\/|while)(?=\s|$)/m,lookbehind:!0,greedy:!0},/\b(?:elseif|equals|not|while)(?=\s*\()/,/\b(?:as|is|then)\b/],divider:{pattern:/^==.+==$/m,greedy:!0,alias:"important"},time:{pattern:/@(?:\d+(?:[:/]\d+){2}|[+-]?\d+|:[a-z]\w*(?:[+-]\d+)?)\b/i,greedy:!0,alias:"number"},color:{pattern:/#(?:[a-z_]+|[a-fA-F0-9]+)\b/,alias:"symbol"},variable:r,punctuation:/[:,;()[\]{}]|\.{3}/},n.languages["plant-uml"].arrow.inside.expression.inside=n.languages["plant-uml"],n.languages.plantuml=n.languages["plant-uml"]})(t)}hf.displayName="plsql";hf.aliases=[];function hf(t){t.register(ti),t.languages.plsql=t.languages.extend("sql",{comment:{pattern:/\/\*[\s\S]*?\*\/|--.*/,greedy:!0},keyword:/\b(?:A|ACCESSIBLE|ADD|AGENT|AGGREGATE|ALL|ALTER|AND|ANY|ARRAY|AS|ASC|AT|ATTRIBUTE|AUTHID|AVG|BEGIN|BETWEEN|BFILE_BASE|BINARY|BLOB_BASE|BLOCK|BODY|BOTH|BOUND|BULK|BY|BYTE|C|CALL|CALLING|CASCADE|CASE|CHAR|CHARACTER|CHARSET|CHARSETFORM|CHARSETID|CHAR_BASE|CHECK|CLOB_BASE|CLONE|CLOSE|CLUSTER|CLUSTERS|COLAUTH|COLLECT|COLUMNS|COMMENT|COMMIT|COMMITTED|COMPILED|COMPRESS|CONNECT|CONSTANT|CONSTRUCTOR|CONTEXT|CONTINUE|CONVERT|COUNT|CRASH|CREATE|CREDENTIAL|CURRENT|CURSOR|CUSTOMDATUM|DANGLING|DATA|DATE|DATE_BASE|DAY|DECLARE|DEFAULT|DEFINE|DELETE|DESC|DETERMINISTIC|DIRECTORY|DISTINCT|DOUBLE|DROP|DURATION|ELEMENT|ELSE|ELSIF|EMPTY|END|ESCAPE|EXCEPT|EXCEPTION|EXCEPTIONS|EXCLUSIVE|EXECUTE|EXISTS|EXIT|EXTERNAL|FETCH|FINAL|FIRST|FIXED|FLOAT|FOR|FORALL|FORCE|FROM|FUNCTION|GENERAL|GOTO|GRANT|GROUP|HASH|HAVING|HEAP|HIDDEN|HOUR|IDENTIFIED|IF|IMMEDIATE|IMMUTABLE|IN|INCLUDING|INDEX|INDEXES|INDICATOR|INDICES|INFINITE|INSERT|INSTANTIABLE|INT|INTERFACE|INTERSECT|INTERVAL|INTO|INVALIDATE|IS|ISOLATION|JAVA|LANGUAGE|LARGE|LEADING|LENGTH|LEVEL|LIBRARY|LIKE|LIKE2|LIKE4|LIKEC|LIMIT|LIMITED|LOCAL|LOCK|LONG|LOOP|MAP|MAX|MAXLEN|MEMBER|MERGE|MIN|MINUS|MINUTE|MOD|MODE|MODIFY|MONTH|MULTISET|MUTABLE|NAME|NAN|NATIONAL|NATIVE|NCHAR|NEW|NOCOMPRESS|NOCOPY|NOT|NOWAIT|NULL|NUMBER_BASE|OBJECT|OCICOLL|OCIDATE|OCIDATETIME|OCIDURATION|OCIINTERVAL|OCILOBLOCATOR|OCINUMBER|OCIRAW|OCIREF|OCIREFCURSOR|OCIROWID|OCISTRING|OCITYPE|OF|OLD|ON|ONLY|OPAQUE|OPEN|OPERATOR|OPTION|OR|ORACLE|ORADATA|ORDER|ORGANIZATION|ORLANY|ORLVARY|OTHERS|OUT|OVERLAPS|OVERRIDING|PACKAGE|PARALLEL_ENABLE|PARAMETER|PARAMETERS|PARENT|PARTITION|PASCAL|PERSISTABLE|PIPE|PIPELINED|PLUGGABLE|POLYMORPHIC|PRAGMA|PRECISION|PRIOR|PRIVATE|PROCEDURE|PUBLIC|RAISE|RANGE|RAW|READ|RECORD|REF|REFERENCE|RELIES_ON|REM|REMAINDER|RENAME|RESOURCE|RESULT|RESULT_CACHE|RETURN|RETURNING|REVERSE|REVOKE|ROLLBACK|ROW|SAMPLE|SAVE|SAVEPOINT|SB1|SB2|SB4|SECOND|SEGMENT|SELECT|SELF|SEPARATE|SEQUENCE|SERIALIZABLE|SET|SHARE|SHORT|SIZE|SIZE_T|SOME|SPARSE|SQL|SQLCODE|SQLDATA|SQLNAME|SQLSTATE|STANDARD|START|STATIC|STDDEV|STORED|STRING|STRUCT|STYLE|SUBMULTISET|SUBPARTITION|SUBSTITUTABLE|SUBTYPE|SUM|SYNONYM|TABAUTH|TABLE|TDO|THE|THEN|TIME|TIMESTAMP|TIMEZONE_ABBR|TIMEZONE_HOUR|TIMEZONE_MINUTE|TIMEZONE_REGION|TO|TRAILING|TRANSACTION|TRANSACTIONAL|TRUSTED|TYPE|UB1|UB2|UB4|UNDER|UNION|UNIQUE|UNPLUG|UNSIGNED|UNTRUSTED|UPDATE|USE|USING|VALIST|VALUE|VALUES|VARIABLE|VARIANCE|VARRAY|VARYING|VIEW|VIEWS|VOID|WHEN|WHERE|WHILE|WITH|WORK|WRAPPED|WRITE|YEAR|ZONE)\b/i,operator:/:=?|=>|[<>^~!]=|\.\.|\|\||\*\*|[-+*/%<>=@]/}),t.languages.insertBefore("plsql","operator",{label:{pattern:/<<\s*\w+\s*>>/,alias:"symbol"}})}pf.displayName="powerquery";pf.aliases=["mscript","pq"];function pf(t){t.languages.powerquery={comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,lookbehind:!0,greedy:!0},"quoted-identifier":{pattern:/#"(?:[^"\r\n]|"")*"(?!")/,greedy:!0},string:{pattern:/(?:#!)?"(?:[^"\r\n]|"")*"(?!")/,greedy:!0},constant:[/\bDay\.(?:Friday|Monday|Saturday|Sunday|Thursday|Tuesday|Wednesday)\b/,/\bTraceLevel\.(?:Critical|Error|Information|Verbose|Warning)\b/,/\bOccurrence\.(?:All|First|Last)\b/,/\bOrder\.(?:Ascending|Descending)\b/,/\bRoundingMode\.(?:AwayFromZero|Down|ToEven|TowardZero|Up)\b/,/\bMissingField\.(?:Error|Ignore|UseNull)\b/,/\bQuoteStyle\.(?:Csv|None)\b/,/\bJoinKind\.(?:FullOuter|Inner|LeftAnti|LeftOuter|RightAnti|RightOuter)\b/,/\bGroupKind\.(?:Global|Local)\b/,/\bExtraValues\.(?:Error|Ignore|List)\b/,/\bJoinAlgorithm\.(?:Dynamic|LeftHash|LeftIndex|PairwiseHash|RightHash|RightIndex|SortMerge)\b/,/\bJoinSide\.(?:Left|Right)\b/,/\bPrecision\.(?:Decimal|Double)\b/,/\bRelativePosition\.From(?:End|Start)\b/,/\bTextEncoding\.(?:Ascii|BigEndianUnicode|Unicode|Utf16|Utf8|Windows)\b/,/\b(?:Any|Binary|Date|DateTime|DateTimeZone|Duration|Function|Int16|Int32|Int64|Int8|List|Logical|None|Number|Record|Table|Text|Time)\.Type\b/,/\bnull\b/],boolean:/\b(?:false|true)\b/,keyword:/\b(?:and|as|each|else|error|if|in|is|let|meta|not|nullable|optional|or|otherwise|section|shared|then|try|type)\b|#(?:binary|date|datetime|datetimezone|duration|infinity|nan|sections|shared|table|time)\b/,function:{pattern:/(^|[^#\w.])[a-z_][\w.]*(?=\s*\()/i,lookbehind:!0},"data-type":{pattern:/\b(?:any|anynonnull|binary|date|datetime|datetimezone|duration|function|list|logical|none|number|record|table|text|time)\b/,alias:"class-name"},number:{pattern:/\b0x[\da-f]+\b|(?:[+-]?(?:\b\d+\.)?\b\d+|[+-]\.\d+|(^|[^.])\B\.\d+)(?:e[+-]?\d+)?\b/i,lookbehind:!0},operator:/[-+*\/&?@^]|<(?:=>?|>)?|>=?|=>?|\.\.\.?/,punctuation:/[,;\[\](){}]/},t.languages.pq=t.languages.powerquery,t.languages.mscript=t.languages.powerquery}mf.displayName="powershell";mf.aliases=[];function mf(t){(function(n){var r=n.languages.powershell={comment:[{pattern:/(^|[^`])<#[\s\S]*?#>/,lookbehind:!0},{pattern:/(^|[^`])#.*/,lookbehind:!0}],string:[{pattern:/"(?:`[\s\S]|[^`"])*"/,greedy:!0,inside:null},{pattern:/'(?:[^']|'')*'/,greedy:!0}],namespace:/\[[a-z](?:\[(?:\[[^\]]*\]|[^\[\]])*\]|[^\[\]])*\]/i,boolean:/\$(?:false|true)\b/i,variable:/\$\w+\b/,function:[/\b(?:Add|Approve|Assert|Backup|Block|Checkpoint|Clear|Close|Compare|Complete|Compress|Confirm|Connect|Convert|ConvertFrom|ConvertTo|Copy|Debug|Deny|Disable|Disconnect|Dismount|Edit|Enable|Enter|Exit|Expand|Export|Find|ForEach|Format|Get|Grant|Group|Hide|Import|Initialize|Install|Invoke|Join|Limit|Lock|Measure|Merge|Move|New|Open|Optimize|Out|Ping|Pop|Protect|Publish|Push|Read|Receive|Redo|Register|Remove|Rename|Repair|Request|Reset|Resize|Resolve|Restart|Restore|Resume|Revoke|Save|Search|Select|Send|Set|Show|Skip|Sort|Split|Start|Step|Stop|Submit|Suspend|Switch|Sync|Tee|Test|Trace|Unblock|Undo|Uninstall|Unlock|Unprotect|Unpublish|Unregister|Update|Use|Wait|Watch|Where|Write)-[a-z]+\b/i,/\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\b/i],keyword:/\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\b/i,operator:{pattern:/(^|\W)(?:!|-(?:b?(?:and|x?or)|as|(?:Not)?(?:Contains|In|Like|Match)|eq|ge|gt|is(?:Not)?|Join|le|lt|ne|not|Replace|sh[lr])\b|-[-=]?|\+[+=]?|[*\/%]=?)/i,lookbehind:!0},punctuation:/[|{}[\];(),.]/};r.string[0].inside={function:{pattern:/(^|[^`])\$\((?:\$\([^\r\n()]*\)|(?!\$\()[^\r\n)])*\)/,lookbehind:!0,inside:r},boolean:r.boolean,variable:r.variable}})(t)}ff.displayName="processing";ff.aliases=[];function ff(t){t.register(le),t.languages.processing=t.languages.extend("clike",{keyword:/\b(?:break|case|catch|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\b/,function:/\b\w+(?=\s*\()/,operator:/<[<=]?|>[>=]?|&&?|\|\|?|[%?]|[!=+\-*\/]=?/}),t.languages.insertBefore("processing","number",{constant:/\b(?!XML\b)[A-Z][A-Z\d_]+\b/,type:{pattern:/\b(?:boolean|byte|char|color|double|float|int|[A-Z]\w*)\b/,alias:"class-name"}})}gf.displayName="prolog";gf.aliases=[];function gf(t){t.languages.prolog={comment:{pattern:/\/\*[\s\S]*?\*\/|%.*/,greedy:!0},string:{pattern:/(["'])(?:\1\1|\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1(?!\1)/,greedy:!0},builtin:/\b(?:fx|fy|xf[xy]?|yfx?)\b/,function:/\b[a-z]\w*(?:(?=\()|\/\d+)/,number:/\b\d+(?:\.\d*)?/,operator:/[:\\=><\-?*@\/;+^|!$.]+|\b(?:is|mod|not|xor)\b/,punctuation:/[(){}\[\],]/}}bf.displayName="promql";bf.aliases=[];function bf(t){(function(n){var r=["sum","min","max","avg","group","stddev","stdvar","count","count_values","bottomk","topk","quantile"],s=["on","ignoring","group_right","group_left","by","without"],i=["offset"],a=r.concat(s,i);n.languages.promql={comment:{pattern:/(^[ \t]*)#.*/m,lookbehind:!0},"vector-match":{pattern:new RegExp("((?:"+s.join("|")+")\\s*)\\([^)]*\\)"),lookbehind:!0,inside:{"label-key":{pattern:/\b[^,]+\b/,alias:"attr-name"},punctuation:/[(),]/}},"context-labels":{pattern:/\{[^{}]*\}/,inside:{"label-key":{pattern:/\b[a-z_]\w*(?=\s*(?:=|![=~]))/,alias:"attr-name"},"label-value":{pattern:/(["'`])(?:\\[\s\S]|(?!\1)[^\\])*\1/,greedy:!0,alias:"attr-value"},punctuation:/\{|\}|=~?|![=~]|,/}},"context-range":[{pattern:/\[[\w\s:]+\]/,inside:{punctuation:/\[|\]|:/,"range-duration":{pattern:/\b(?:\d+(?:[smhdwy]|ms))+\b/i,alias:"number"}}},{pattern:/(\boffset\s+)\w+/,lookbehind:!0,inside:{"range-duration":{pattern:/\b(?:\d+(?:[smhdwy]|ms))+\b/i,alias:"number"}}}],keyword:new RegExp("\\b(?:"+a.join("|")+")\\b","i"),function:/\b[a-z_]\w*(?=\s*\()/i,number:/[-+]?(?:(?:\b\d+(?:\.\d+)?|\B\.\d+)(?:e[-+]?\d+)?\b|\b(?:0x[0-9a-f]+|nan|inf)\b)/i,operator:/[\^*/%+-]|==|!=|<=|<|>=|>|\b(?:and|or|unless)\b/i,punctuation:/[{};()`,.[\]]/}})(t)}xf.displayName="properties";xf.aliases=[];function xf(t){t.languages.properties={comment:/^[ \t]*[#!].*$/m,value:{pattern:/(^[ \t]*(?:\\(?:\r\n|[\s\S])|[^\\\s:=])+(?: *[=:] *(?! )| ))(?:\\(?:\r\n|[\s\S])|[^\\\r\n])+/m,lookbehind:!0,alias:"attr-value"},key:{pattern:/^[ \t]*(?:\\(?:\r\n|[\s\S])|[^\\\s:=])+(?= *[=:]| )/m,alias:"attr-name"},punctuation:/[=:]/}}Ef.displayName="protobuf";Ef.aliases=[];function Ef(t){t.register(le),function(n){var r=/\b(?:bool|bytes|double|s?fixed(?:32|64)|float|[su]?int(?:32|64)|string)\b/;n.languages.protobuf=n.languages.extend("clike",{"class-name":[{pattern:/(\b(?:enum|extend|message|service)\s+)[A-Za-z_]\w*(?=\s*\{)/,lookbehind:!0},{pattern:/(\b(?:rpc\s+\w+|returns)\s*\(\s*(?:stream\s+)?)\.?[A-Za-z_]\w*(?:\.[A-Za-z_]\w*)*(?=\s*\))/,lookbehind:!0}],keyword:/\b(?:enum|extend|extensions|import|message|oneof|option|optional|package|public|repeated|required|reserved|returns|rpc(?=\s+\w)|service|stream|syntax|to)\b(?!\s*=\s*\d)/,function:/\b[a-z_]\w*(?=\s*\()/i}),n.languages.insertBefore("protobuf","operator",{map:{pattern:/\bmap<\s*[\w.]+\s*,\s*[\w.]+\s*>(?=\s+[a-z_]\w*\s*[=;])/i,alias:"class-name",inside:{punctuation:/[<>.,]/,builtin:r}},builtin:r,"positional-class-name":{pattern:/(?:\b|\B\.)[a-z_]\w*(?:\.[a-z_]\w*)*(?=\s+[a-z_]\w*\s*[=;])/i,alias:"class-name",inside:{punctuation:/\./}},annotation:{pattern:/(\[\s*)[a-z_]\w*(?=\s*=)/i,lookbehind:!0}})}(t)}Tf.displayName="stylus";Tf.aliases=[];function Tf(t){(function(n){var r={pattern:/(\b\d+)(?:%|[a-z]+)/,lookbehind:!0},s={pattern:/(^|[^\w.-])-?(?:\d+(?:\.\d+)?|\.\d+)/,lookbehind:!0},i={comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,lookbehind:!0},url:{pattern:/\burl\((["']?).*?\1\)/i,greedy:!0},string:{pattern:/("|')(?:(?!\1)[^\\\r\n]|\\(?:\r\n|[\s\S]))*\1/,greedy:!0},interpolation:null,func:null,important:/\B!(?:important|optional)\b/i,keyword:{pattern:/(^|\s+)(?:(?:else|for|if|return|unless)(?=\s|$)|@[\w-]+)/,lookbehind:!0},hexcode:/#[\da-f]{3,6}/i,color:[/\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\b/i,{pattern:/\b(?:hsl|rgb)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:hsl|rgb)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B/i,inside:{unit:r,number:s,function:/[\w-]+(?=\()/,punctuation:/[(),]/}}],entity:/\\[\da-f]{1,8}/i,unit:r,boolean:/\b(?:false|true)\b/,operator:[/~|[+!\/%<>?=]=?|[-:]=|\*[*=]?|\.{2,3}|&&|\|\||\B-\B|\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\b/],number:s,punctuation:/[{}()\[\];:,]/};i.interpolation={pattern:/\{[^\r\n}:]+\}/,alias:"variable",inside:{delimiter:{pattern:/^\{|\}$/,alias:"punctuation"},rest:i}},i.func={pattern:/[\w-]+\([^)]*\).*/,inside:{function:/^[^(]+/,rest:i}},n.languages.stylus={"atrule-declaration":{pattern:/(^[ \t]*)@.+/m,lookbehind:!0,inside:{atrule:/^@[\w-]+/,rest:i}},"variable-declaration":{pattern:/(^[ \t]*)[\w$-]+\s*.?=[ \t]*(?:\{[^{}]*\}|\S.*|$)/m,lookbehind:!0,inside:{variable:/^\S+/,rest:i}},statement:{pattern:/(^[ \t]*)(?:else|for|if|return|unless)[ \t].+/m,lookbehind:!0,inside:{keyword:/^\S+/,rest:i}},"property-declaration":{pattern:/((?:^|\{)([ \t]*))(?:[\w-]|\{[^}\r\n]+\})+(?:\s*:\s*|[ \t]+)(?!\s)[^{\r\n]*(?:;|[^{\r\n,]$(?!(?:\r?\n|\r)(?:\{|\2[ \t])))/m,lookbehind:!0,inside:{property:{pattern:/^[^\s:]+/,inside:{interpolation:i.interpolation}},rest:i}},selector:{pattern:/(^[ \t]*)(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\)|(?![\w-]))|\{[^}\r\n]+\})+)(?:(?:\r?\n|\r)(?:\1(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\)|(?![\w-]))|\{[^}\r\n]+\})+)))*(?:,$|\{|(?=(?:\r?\n|\r)(?:\{|\1[ \t])))/m,lookbehind:!0,inside:{interpolation:i.interpolation,comment:i.comment,punctuation:/[{},]/}},func:i.func,string:i.string,comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,lookbehind:!0,greedy:!0},interpolation:i.interpolation,punctuation:/[{}()\[\];:.]/}})(t)}yf.displayName="twig";yf.aliases=[];function yf(t){t.register(ot),t.languages.twig={comment:/^\{#[\s\S]*?#\}$/,"tag-name":{pattern:/(^\{%-?\s*)\w+/,lookbehind:!0,alias:"keyword"},delimiter:{pattern:/^\{[{%]-?|-?[%}]\}$/,alias:"punctuation"},string:{pattern:/("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,inside:{punctuation:/^['"]|['"]$/}},keyword:/\b(?:even|if|odd)\b/,boolean:/\b(?:false|null|true)\b/,number:/\b0x[\dA-Fa-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee][-+]?\d+)?/,operator:[{pattern:/(\s)(?:and|b-and|b-or|b-xor|ends with|in|is|matches|not|or|same as|starts with)(?=\s)/,lookbehind:!0},/[=<>]=?|!=|\*\*?|\/\/?|\?:?|[-+~%|]/],punctuation:/[()\[\]{}:.,]/},t.hooks.add("before-tokenize",function(n){if(n.language==="twig"){var r=/\{(?:#[\s\S]*?#|%[\s\S]*?%|\{[\s\S]*?\})\}/g;t.languages["markup-templating"].buildPlaceholders(n,"twig",r)}}),t.hooks.add("after-tokenize",function(n){t.languages["markup-templating"].tokenizePlaceholders(n,"twig")})}Sf.displayName="pug";Sf.aliases=[];function Sf(t){t.register(at),t.register(Ze),function(n){n.languages.pug={comment:{pattern:/(^([\t ]*))\/\/.*(?:(?:\r?\n|\r)\2[\t ].+)*/m,lookbehind:!0},"multiline-script":{pattern:/(^([\t ]*)script\b.*\.[\t ]*)(?:(?:\r?\n|\r(?!\n))(?:\2[\t ].+|\s*?(?=\r?\n|\r)))+/m,lookbehind:!0,inside:n.languages.javascript},filter:{pattern:/(^([\t ]*)):.+(?:(?:\r?\n|\r(?!\n))(?:\2[\t ].+|\s*?(?=\r?\n|\r)))+/m,lookbehind:!0,inside:{"filter-name":{pattern:/^:[\w-]+/,alias:"variable"},text:/\S[\s\S]*/}},"multiline-plain-text":{pattern:/(^([\t ]*)[\w\-#.]+\.[\t ]*)(?:(?:\r?\n|\r(?!\n))(?:\2[\t ].+|\s*?(?=\r?\n|\r)))+/m,lookbehind:!0},markup:{pattern:/(^[\t ]*)<.+/m,lookbehind:!0,inside:n.languages.markup},doctype:{pattern:/((?:^|\n)[\t ]*)doctype(?: .+)?/,lookbehind:!0},"flow-control":{pattern:/(^[\t ]*)(?:case|default|each|else|if|unless|when|while)\b(?: .+)?/m,lookbehind:!0,inside:{each:{pattern:/^each .+? in\b/,inside:{keyword:/\b(?:each|in)\b/,punctuation:/,/}},branch:{pattern:/^(?:case|default|else|if|unless|when|while)\b/,alias:"keyword"},rest:n.languages.javascript}},keyword:{pattern:/(^[\t ]*)(?:append|block|extends|include|prepend)\b.+/m,lookbehind:!0},mixin:[{pattern:/(^[\t ]*)mixin .+/m,lookbehind:!0,inside:{keyword:/^mixin/,function:/\w+(?=\s*\(|\s*$)/,punctuation:/[(),.]/}},{pattern:/(^[\t ]*)\+.+/m,lookbehind:!0,inside:{name:{pattern:/^\+\w+/,alias:"function"},rest:n.languages.javascript}}],script:{pattern:/(^[\t ]*script(?:(?:&[^(]+)?\([^)]+\))*[\t ]).+/m,lookbehind:!0,inside:n.languages.javascript},"plain-text":{pattern:/(^[\t ]*(?!-)[\w\-#.]*[\w\-](?:(?:&[^(]+)?\([^)]+\))*\/?[\t ]).+/m,lookbehind:!0},tag:{pattern:/(^[\t ]*)(?!-)[\w\-#.]*[\w\-](?:(?:&[^(]+)?\([^)]+\))*\/?:?/m,lookbehind:!0,inside:{attributes:[{pattern:/&[^(]+\([^)]+\)/,inside:n.languages.javascript},{pattern:/\([^)]+\)/,inside:{"attr-value":{pattern:/(=\s*(?!\s))(?:\{[^}]*\}|[^,)\r\n]+)/,lookbehind:!0,inside:n.languages.javascript},"attr-name":/[\w-]+(?=\s*!?=|\s*[,)])/,punctuation:/[!=(),]+/}}],punctuation:/:/,"attr-id":/#[\w\-]+/,"attr-class":/\.[\w\-]+/}},code:[{pattern:/(^[\t ]*(?:-|!?=)).+/m,lookbehind:!0,inside:n.languages.javascript}],punctuation:/[.\-!=|]+/};for(var r=/(^([\t ]*)):<filter_name>(?:(?:\r?\n|\r(?!\n))(?:\2[\t ].+|\s*?(?=\r?\n|\r)))+/.source,s=[{filter:"atpl",language:"twig"},{filter:"coffee",language:"coffeescript"},"ejs","handlebars","less","livescript","markdown",{filter:"sass",language:"scss"},"stylus"],i={},a=0,o=s.length;a<o;a++){var l=s[a];l=typeof l=="string"?{filter:l,language:l}:l,n.languages[l.language]&&(i["filter-"+l.filter]={pattern:RegExp(r.replace("<filter_name>",function(){return l.filter}),"m"),lookbehind:!0,inside:{"filter-name":{pattern:/^:[\w-]+/,alias:"variable"},text:{pattern:/\S[\s\S]*/,alias:[l.language,"language-"+l.language],inside:n.languages[l.language]}}})}n.languages.insertBefore("pug","filter",i)}(t)}Nf.displayName="puppet";Nf.aliases=[];function Nf(t){(function(n){n.languages.puppet={heredoc:[{pattern:/(@\("([^"\r\n\/):]+)"(?:\/[nrts$uL]*)?\).*(?:\r?\n|\r))(?:.*(?:\r?\n|\r(?!\n)))*?[ \t]*(?:\|[ \t]*)?(?:-[ \t]*)?\2/,lookbehind:!0,alias:"string",inside:{punctuation:/(?=\S).*\S(?= *$)/}},{pattern:/(@\(([^"\r\n\/):]+)(?:\/[nrts$uL]*)?\).*(?:\r?\n|\r))(?:.*(?:\r?\n|\r(?!\n)))*?[ \t]*(?:\|[ \t]*)?(?:-[ \t]*)?\2/,lookbehind:!0,greedy:!0,alias:"string",inside:{punctuation:/(?=\S).*\S(?= *$)/}},{pattern:/@\("?(?:[^"\r\n\/):]+)"?(?:\/[nrts$uL]*)?\)/,alias:"string",inside:{punctuation:{pattern:/(\().+?(?=\))/,lookbehind:!0}}}],"multiline-comment":{pattern:/(^|[^\\])\/\*[\s\S]*?\*\//,lookbehind:!0,greedy:!0,alias:"comment"},regex:{pattern:/((?:\bnode\s+|[~=\(\[\{,]\s*|[=+]>\s*|^\s*))\/(?:[^\/\\]|\\[\s\S])+\/(?:[imx]+\b|\B)/,lookbehind:!0,greedy:!0,inside:{"extended-regex":{pattern:/^\/(?:[^\/\\]|\\[\s\S])+\/[im]*x[im]*$/,inside:{comment:/#.*/}}}},comment:{pattern:/(^|[^\\])#.*/,lookbehind:!0,greedy:!0},string:{pattern:/(["'])(?:\$\{(?:[^'"}]|(["'])(?:(?!\2)[^\\]|\\[\s\S])*\2)+\}|\$(?!\{)|(?!\1)[^\\$]|\\[\s\S])*\1/,greedy:!0,inside:{"double-quoted":{pattern:/^"[\s\S]*"$/,inside:{}}}},variable:{pattern:/\$(?:::)?\w+(?:::\w+)*/,inside:{punctuation:/::/}},"attr-name":/(?:\b\w+|\*)(?=\s*=>)/,function:[{pattern:/(\.)(?!\d)\w+/,lookbehind:!0},/\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\b|\b(?!\d)\w+(?=\()/],number:/\b(?:0x[a-f\d]+|\d+(?:\.\d+)?(?:e-?\d+)?)\b/i,boolean:/\b(?:false|true)\b/,keyword:/\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\b/,datatype:{pattern:/\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\b/,alias:"symbol"},operator:/=[=~>]?|![=~]?|<(?:<\|?|[=~|-])?|>[>=]?|->?|~>|\|>?>?|[*\/%+?]|\b(?:and|in|or)\b/,punctuation:/[\[\]{}().,;]|:+/};var r=[{pattern:/(^|[^\\])\$\{(?:[^'"{}]|\{[^}]*\}|(["'])(?:(?!\2)[^\\]|\\[\s\S])*\2)+\}/,lookbehind:!0,inside:{"short-variable":{pattern:/(^\$\{)(?!\w+\()(?:::)?\w+(?:::\w+)*/,lookbehind:!0,alias:"variable",inside:{punctuation:/::/}},delimiter:{pattern:/^\$/,alias:"variable"},rest:n.languages.puppet}},{pattern:/(^|[^\\])\$(?:::)?\w+(?:::\w+)*/,lookbehind:!0,alias:"variable",inside:{punctuation:/::/}}];n.languages.puppet.heredoc[0].inside.interpolation=r,n.languages.puppet.string.inside["double-quoted"].inside.interpolation=r})(t)}jf.displayName="pure";jf.aliases=[];function jf(t){(function(n){n.languages.pure={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?\*\//,lookbehind:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0},/#!.+/],"inline-lang":{pattern:/%<[\s\S]+?%>/,greedy:!0,inside:{lang:{pattern:/(^%< *)-\*-.+?-\*-/,lookbehind:!0,alias:"comment"},delimiter:{pattern:/^%<.*|%>$/,alias:"punctuation"}}},string:{pattern:/"(?:\\.|[^"\\\r\n])*"/,greedy:!0},number:{pattern:/((?:\.\.)?)(?:\b(?:inf|nan)\b|\b0x[\da-f]+|(?:\b(?:0b)?\d+(?:\.\d+)?|\B\.\d+)(?:e[+-]?\d+)?L?)/i,lookbehind:!0},keyword:/\b(?:NULL|ans|break|bt|case|catch|cd|clear|const|def|del|dump|else|end|exit|extern|false|force|help|if|infix[lr]?|interface|let|ls|mem|namespace|nonfix|of|otherwise|outfix|override|postfix|prefix|private|public|pwd|quit|run|save|show|stats|then|throw|trace|true|type|underride|using|when|with)\b/,function:/\b(?:abs|add_(?:addr|constdef|(?:fundef|interface|macdef|typedef)(?:_at)?|vardef)|all|any|applp?|arity|bigintp?|blob(?:_crc|_size|p)?|boolp?|byte_c?string(?:_pointer)?|byte_(?:matrix|pointer)|calloc|cat|catmap|ceil|char[ps]?|check_ptrtag|chr|clear_sentry|clearsym|closurep?|cmatrixp?|cols?|colcat(?:map)?|colmap|colrev|colvector(?:p|seq)?|complex(?:_float_(?:matrix|pointer)|_matrix(?:_view)?|_pointer|p)?|conj|cookedp?|cst|cstring(?:_(?:dup|list|vector))?|curry3?|cyclen?|del_(?:constdef|fundef|interface|macdef|typedef|vardef)|delete|diag(?:mat)?|dim|dmatrixp?|do|double(?:_matrix(?:_view)?|_pointer|p)?|dowith3?|drop|dropwhile|eval(?:cmd)?|exactp|filter|fix|fixity|flip|float(?:_matrix|_pointer)|floor|fold[lr]1?|frac|free|funp?|functionp?|gcd|get(?:_(?:byte|constdef|double|float|fundef|int(?:64)?|interface(?:_typedef)?|long|macdef|pointer|ptrtag|sentry|short|string|typedef|vardef))?|globsym|hash|head|id|im|imatrixp?|index|inexactp|infp|init|insert|int(?:_matrix(?:_view)?|_pointer|p)?|int64_(?:matrix|pointer)|integerp?|iteraten?|iterwhile|join|keys?|lambdap?|last(?:err(?:pos)?)?|lcd|list[2p]?|listmap|make_ptrtag|malloc|map|matcat|matrixp?|max|member|min|nanp|nargs|nmatrixp?|null|numberp?|ord|pack(?:ed)?|pointer(?:_cast|_tag|_type|p)?|pow|pred|ptrtag|put(?:_(?:byte|double|float|int(?:64)?|long|pointer|short|string))?|rationalp?|re|realp?|realloc|recordp?|redim|reduce(?:_with)?|refp?|repeatn?|reverse|rlistp?|round|rows?|rowcat(?:map)?|rowmap|rowrev|rowvector(?:p|seq)?|same|scan[lr]1?|sentry|sgn|short_(?:matrix|pointer)|slice|smatrixp?|sort|split|str|strcat|stream|stride|string(?:_(?:dup|list|vector)|p)?|subdiag(?:mat)?|submat|subseq2?|substr|succ|supdiag(?:mat)?|symbolp?|tail|take|takewhile|thunkp?|transpose|trunc|tuplep?|typep|ubyte|uint(?:64)?|ulong|uncurry3?|unref|unzip3?|update|ushort|vals?|varp?|vector(?:p|seq)?|void|zip3?|zipwith3?)\b/,special:{pattern:/\b__[a-z]+__\b/i,alias:"builtin"},operator:/(?:[!"#$%&'*+,\-.\/:<=>?@\\^`|~\u00a1-\u00bf\u00d7-\u00f7\u20d0-\u2bff]|\b_+\b)+|\b(?:and|div|mod|not|or)\b/,punctuation:/[(){}\[\];,|]/};var r=["c",{lang:"c++",alias:"cpp"},"fortran"],s=/%< *-\*- *<lang>\d* *-\*-[\s\S]+?%>/.source;r.forEach(function(i){var a=i;if(typeof i!="string"&&(a=i.alias,i=i.lang),n.languages[a]){var o={};o["inline-lang-"+a]={pattern:RegExp(s.replace("<lang>",i.replace(/([.+*?\/\\(){}\[\]])/g,"\\$1")),"i"),inside:n.util.clone(n.languages.pure["inline-lang"].inside)},o["inline-lang-"+a].inside.rest=n.util.clone(n.languages[a]),n.languages.insertBefore("pure","inline-lang",o)}}),n.languages.c&&(n.languages.pure["inline-lang"].inside.rest=n.util.clone(n.languages.c))})(t)}Af.displayName="purebasic";Af.aliases=["pbfasm"];function Af(t){t.register(le),t.languages.purebasic=t.languages.extend("clike",{comment:/;.*/,keyword:/\b(?:align|and|as|break|calldebugger|case|compilercase|compilerdefault|compilerelse|compilerelseif|compilerendif|compilerendselect|compilererror|compilerif|compilerselect|continue|data|datasection|debug|debuglevel|declare|declarec|declarecdll|declaredll|declaremodule|default|define|dim|disableasm|disabledebugger|disableexplicit|else|elseif|enableasm|enabledebugger|enableexplicit|end|enddatasection|enddeclaremodule|endenumeration|endif|endimport|endinterface|endmacro|endmodule|endprocedure|endselect|endstructure|endstructureunion|endwith|enumeration|extends|fakereturn|for|foreach|forever|global|gosub|goto|if|import|importc|includebinary|includefile|includepath|interface|macro|module|newlist|newmap|next|not|or|procedure|procedurec|procedurecdll|proceduredll|procedurereturn|protected|prototype|prototypec|read|redim|repeat|restore|return|runtime|select|shared|static|step|structure|structureunion|swap|threaded|to|until|wend|while|with|xincludefile|xor)\b/i,function:/\b\w+(?:\.\w+)?\s*(?=\()/,number:/(?:\$[\da-f]+|\b-?(?:\d+(?:\.\d+)?|\.\d+)(?:e[+-]?\d+)?)\b/i,operator:/(?:@\*?|\?|\*)\w+\$?|-[>-]?|\+\+?|!=?|<<?=?|>>?=?|==?|&&?|\|?\||[~^%?*/@]/}),t.languages.insertBefore("purebasic","keyword",{tag:/#\w+\$?/,asm:{pattern:/(^[\t ]*)!.*/m,lookbehind:!0,alias:"tag",inside:{comment:/;.*/,string:{pattern:/(["'`])(?:\\.|(?!\1)[^\\\r\n])*\1/,greedy:!0},"label-reference-anonymous":{pattern:/(!\s*j[a-z]+\s+)@[fb]/i,lookbehind:!0,alias:"fasm-label"},"label-reference-addressed":{pattern:/(!\s*j[a-z]+\s+)[A-Z._?$@][\w.?$@~#]*/i,lookbehind:!0,alias:"fasm-label"},keyword:[/\b(?:extern|global)\b[^;\r\n]*/i,/\b(?:CPU|DEFAULT|FLOAT)\b.*/],function:{pattern:/^([\t ]*!\s*)[\da-z]+(?=\s|$)/im,lookbehind:!0},"function-inline":{pattern:/(:\s*)[\da-z]+(?=\s)/i,lookbehind:!0,alias:"function"},label:{pattern:/^([\t ]*!\s*)[A-Za-z._?$@][\w.?$@~#]*(?=:)/m,lookbehind:!0,alias:"fasm-label"},register:/\b(?:st\d|[xyz]mm\d\d?|[cdt]r\d|r\d\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s|mm\d+)\b/i,number:/(?:\b|-|(?=\$))(?:0[hx](?:[\da-f]*\.)?[\da-f]+(?:p[+-]?\d+)?|\d[\da-f]+[hx]|\$\d[\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\d+|(?:\d+(?:\.\d+)?|\.\d+)(?:\.?e[+-]?\d+)?[dt]?)\b/i,operator:/[\[\]*+\-/%<>=&|$!,.:]/}}}),delete t.languages.purebasic["class-name"],delete t.languages.purebasic.boolean,t.languages.pbfasm=t.languages.purebasic}_f.displayName="purescript";_f.aliases=["purs"];function _f(t){t.register(Da),t.languages.purescript=t.languages.extend("haskell",{keyword:/\b(?:ado|case|class|data|derive|do|else|forall|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\b|∀/,"import-statement":{pattern:/(^[\t ]*)import\s+[A-Z][\w']*(?:\.[A-Z][\w']*)*(?:\s+as\s+[A-Z][\w']*(?:\.[A-Z][\w']*)*)?(?:\s+hiding\b)?/m,lookbehind:!0,inside:{keyword:/\b(?:as|hiding|import)\b/,punctuation:/\./}},builtin:/\b(?:absurd|add|ap|append|apply|between|bind|bottom|clamp|compare|comparing|compose|conj|const|degree|discard|disj|div|eq|flap|flip|gcd|identity|ifM|join|lcm|liftA1|liftM1|map|max|mempty|min|mod|mul|negate|not|notEq|one|otherwise|recip|show|sub|top|unit|unless|unlessM|void|when|whenM|zero)\b/,operator:[t.languages.haskell.operator[0],t.languages.haskell.operator[2],/[\xa2-\xa6\xa8\xa9\xac\xae-\xb1\xb4\xb8\xd7\xf7\u02c2-\u02c5\u02d2-\u02df\u02e5-\u02eb\u02ed\u02ef-\u02ff\u0375\u0384\u0385\u03f6\u0482\u058d-\u058f\u0606-\u0608\u060b\u060e\u060f\u06de\u06e9\u06fd\u06fe\u07f6\u07fe\u07ff\u09f2\u09f3\u09fa\u09fb\u0af1\u0b70\u0bf3-\u0bfa\u0c7f\u0d4f\u0d79\u0e3f\u0f01-\u0f03\u0f13\u0f15-\u0f17\u0f1a-\u0f1f\u0f34\u0f36\u0f38\u0fbe-\u0fc5\u0fc7-\u0fcc\u0fce\u0fcf\u0fd5-\u0fd8\u109e\u109f\u1390-\u1399\u166d\u17db\u1940\u19de-\u19ff\u1b61-\u1b6a\u1b74-\u1b7c\u1fbd\u1fbf-\u1fc1\u1fcd-\u1fcf\u1fdd-\u1fdf\u1fed-\u1fef\u1ffd\u1ffe\u2044\u2052\u207a-\u207c\u208a-\u208c\u20a0-\u20bf\u2100\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211e-\u2123\u2125\u2127\u2129\u212e\u213a\u213b\u2140-\u2144\u214a-\u214d\u214f\u218a\u218b\u2190-\u2307\u230c-\u2328\u232b-\u2426\u2440-\u244a\u249c-\u24e9\u2500-\u2767\u2794-\u27c4\u27c7-\u27e5\u27f0-\u2982\u2999-\u29d7\u29dc-\u29fb\u29fe-\u2b73\u2b76-\u2b95\u2b97-\u2bff\u2ce5-\u2cea\u2e50\u2e51\u2e80-\u2e99\u2e9b-\u2ef3\u2f00-\u2fd5\u2ff0-\u2ffb\u3004\u3012\u3013\u3020\u3036\u3037\u303e\u303f\u309b\u309c\u3190\u3191\u3196-\u319f\u31c0-\u31e3\u3200-\u321e\u322a-\u3247\u3250\u3260-\u327f\u328a-\u32b0\u32c0-\u33ff\u4dc0-\u4dff\ua490-\ua4c6\ua700-\ua716\ua720\ua721\ua789\ua78a\ua828-\ua82b\ua836-\ua839\uaa77-\uaa79\uab5b\uab6a\uab6b\ufb29\ufbb2-\ufbc1\ufdfc\ufdfd\ufe62\ufe64-\ufe66\ufe69\uff04\uff0b\uff1c-\uff1e\uff3e\uff40\uff5c\uff5e\uffe0-\uffe6\uffe8-\uffee\ufffc\ufffd]/]}),t.languages.purs=t.languages.purescript}vf.displayName="qsharp";vf.aliases=["qs"];function vf(t){t.register(le),function(n){function r(A,S){return A.replace(/<<(\d+)>>/g,function(y,_){return"(?:"+S[+_]+")"})}function s(A,S,y){return RegExp(r(A,S),y||"")}function i(A,S){for(var y=0;y<S;y++)A=A.replace(/<<self>>/g,function(){return"(?:"+A+")"});return A.replace(/<<self>>/g,"[^\\s\\S]")}var a={type:"Adj BigInt Bool Ctl Double false Int One Pauli PauliI PauliX PauliY PauliZ Qubit Range Result String true Unit Zero",other:"Adjoint adjoint apply as auto body borrow borrowing Controlled controlled distribute elif else fail fixup for function if in internal intrinsic invert is let mutable namespace new newtype open operation repeat return self set until use using while within"};function o(A){return"\\b(?:"+A.trim().replace(/ /g,"|")+")\\b"}var l=RegExp(o(a.type+" "+a.other)),c=/\b[A-Za-z_]\w*\b/.source,d=r(/<<0>>(?:\s*\.\s*<<0>>)*/.source,[c]),h={keyword:l,punctuation:/[<>()?,.:[\]]/},x=/"(?:\\.|[^\\"])*"/.source;n.languages.qsharp=n.languages.extend("clike",{comment:/\/\/.*/,string:[{pattern:s(/(^|[^$\\])<<0>>/.source,[x]),lookbehind:!0,greedy:!0}],"class-name":[{pattern:s(/(\b(?:as|open)\s+)<<0>>(?=\s*(?:;|as\b))/.source,[d]),lookbehind:!0,inside:h},{pattern:s(/(\bnamespace\s+)<<0>>(?=\s*\{)/.source,[d]),lookbehind:!0,inside:h}],keyword:l,number:/(?:\b0(?:x[\da-f]+|b[01]+|o[0-7]+)|(?:\B\.\d+|\b\d+(?:\.\d*)?)(?:e[-+]?\d+)?)l?\b/i,operator:/\band=|\bor=|\band\b|\bnot\b|\bor\b|<[-=]|[-=]>|>>>=?|<<<=?|\^\^\^=?|\|\|\|=?|&&&=?|w\/=?|~~~|[*\/+\-^=!%]=?/,punctuation:/::|[{}[\];(),.:]/}),n.languages.insertBefore("qsharp","number",{range:{pattern:/\.\./,alias:"operator"}});var g=i(r(/\{(?:[^"{}]|<<0>>|<<self>>)*\}/.source,[x]),2);n.languages.insertBefore("qsharp","string",{"interpolation-string":{pattern:s(/\$"(?:\\.|<<0>>|[^\\"{])*"/.source,[g]),greedy:!0,inside:{interpolation:{pattern:s(/((?:^|[^\\])(?:\\\\)*)<<0>>/.source,[g]),lookbehind:!0,inside:{punctuation:/^\{|\}$/,expression:{pattern:/[\s\S]+/,alias:"language-qsharp",inside:n.languages.qsharp}}},string:/[\s\S]+/}}})}(t),t.languages.qs=t.languages.qsharp}Rf.displayName="q";Rf.aliases=[];function Rf(t){t.languages.q={string:/"(?:\\.|[^"\\\r\n])*"/,comment:[{pattern:/([\t )\]}])\/.*/,lookbehind:!0,greedy:!0},{pattern:/(^|\r?\n|\r)\/[\t ]*(?:(?:\r?\n|\r)(?:.*(?:\r?\n|\r(?!\n)))*?(?:\\(?=[\t ]*(?:\r?\n|\r))|$)|\S.*)/,lookbehind:!0,greedy:!0},{pattern:/^\\[\t ]*(?:\r?\n|\r)[\s\S]+/m,greedy:!0},{pattern:/^#!.+/m,greedy:!0}],symbol:/`(?::\S+|[\w.]*)/,datetime:{pattern:/0N[mdzuvt]|0W[dtz]|\d{4}\.\d\d(?:m|\.\d\d(?:T(?:\d\d(?::\d\d(?::\d\d(?:[.:]\d\d\d)?)?)?)?)?[dz]?)|\d\d:\d\d(?::\d\d(?:[.:]\d\d\d)?)?[uvt]?/,alias:"number"},number:/\b(?![01]:)(?:0N[hje]?|0W[hj]?|0[wn]|0x[\da-fA-F]+|\d+(?:\.\d*)?(?:e[+-]?\d+)?[hjfeb]?)/,keyword:/\\\w+\b|\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\b/,adverb:{pattern:/['\/\\]:?|\beach\b/,alias:"function"},verb:{pattern:/(?:\B\.\B|\b[01]:|<[=>]?|>=?|[:+\-*%,!?~=|$&#@^]):?|\b_\b:?/,alias:"operator"},punctuation:/[(){}\[\];.]/}}wf.displayName="qml";wf.aliases=[];function wf(t){t.register(at),function(n){for(var r=/"(?:\\.|[^\\"\r\n])*"|'(?:\\.|[^\\'\r\n])*'/.source,s=/\/\/.*(?!.)|\/\*(?:[^*]|\*(?!\/))*\*\//.source,i=/(?:[^\\()[\]{}"'/]|<string>|\/(?![*/])|<comment>|\(<expr>*\)|\[<expr>*\]|\{<expr>*\}|\\[\s\S])/.source.replace(/<string>/g,function(){return r}).replace(/<comment>/g,function(){return s}),a=0;a<2;a++)i=i.replace(/<expr>/g,function(){return i});i=i.replace(/<expr>/g,"[^\\s\\S]"),n.languages.qml={comment:{pattern:/\/\/.*|\/\*[\s\S]*?\*\//,greedy:!0},"javascript-function":{pattern:RegExp(/((?:^|;)[ \t]*)function\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*\(<js>*\)\s*\{<js>*\}/.source.replace(/<js>/g,function(){return i}),"m"),lookbehind:!0,greedy:!0,alias:"language-javascript",inside:n.languages.javascript},"class-name":{pattern:/((?:^|[:;])[ \t]*)(?!\d)\w+(?=[ \t]*\{|[ \t]+on\b)/m,lookbehind:!0},property:[{pattern:/((?:^|[;{])[ \t]*)(?!\d)\w+(?:\.\w+)*(?=[ \t]*:)/m,lookbehind:!0},{pattern:/((?:^|[;{])[ \t]*)property[ \t]+(?!\d)\w+(?:\.\w+)*[ \t]+(?!\d)\w+(?:\.\w+)*(?=[ \t]*:)/m,lookbehind:!0,inside:{keyword:/^property/,property:/\w+(?:\.\w+)*/}}],"javascript-expression":{pattern:RegExp(/(:[ \t]*)(?![\s;}[])(?:(?!$|[;}])<js>)+/.source.replace(/<js>/g,function(){return i}),"m"),lookbehind:!0,greedy:!0,alias:"language-javascript",inside:n.languages.javascript},string:{pattern:/"(?:\\.|[^\\"\r\n])*"/,greedy:!0},keyword:/\b(?:as|import|on)\b/,punctuation:/[{}[\]:;,]/}}(t)}If.displayName="qore";If.aliases=[];function If(t){t.register(le),t.languages.qore=t.languages.extend("clike",{comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:\/\/|#).*)/,lookbehind:!0},string:{pattern:/("|')(?:\\[\s\S]|(?!\1)[^\\])*\1/,greedy:!0},keyword:/\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:bool|date|float|int|list|number|string)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\b/,boolean:/\b(?:false|true)\b/i,function:/\$?\b(?!\d)\w+(?=\()/,number:/\b(?:0b[01]+|0x(?:[\da-f]*\.)?[\da-fp\-]+|(?:\d+(?:\.\d+)?|\.\d+)(?:e\d+)?[df]|(?:\d+(?:\.\d+)?|\.\d+))\b/i,operator:{pattern:/(^|[^.])(?:\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\|[|=]?|[*\/%^]=?|[~?])/,lookbehind:!0},variable:/\$(?!\d)\w+\b/})}Cf.displayName="racket";Cf.aliases=["rkt"];function Cf(t){t.register(Ma),t.languages.racket=t.languages.extend("scheme",{"lambda-parameter":{pattern:/([(\[]lambda\s+[(\[])[^()\[\]'\s]+/,lookbehind:!0}}),t.languages.insertBefore("racket","string",{lang:{pattern:/^#lang.+/m,greedy:!0,alias:"keyword"}}),t.languages.rkt=t.languages.racket}Of.displayName="cshtml";Of.aliases=["razor"];function Of(t){t.register(es),t.register(Ze),function(n){var r=/\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\//.source,s=/@(?!")|"(?:[^\r\n\\"]|\\.)*"|@"(?:[^\\"]|""|\\[\s\S])*"(?!")/.source+"|"+/'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!')))/.source;function i(b,T){for(var E=0;E<T;E++)b=b.replace(/<self>/g,function(){return"(?:"+b+")"});return b.replace(/<self>/g,"[^\\s\\S]").replace(/<str>/g,"(?:"+s+")").replace(/<comment>/g,"(?:"+r+")")}var a=i(/\((?:[^()'"@/]|<str>|<comment>|<self>)*\)/.source,2),o=i(/\[(?:[^\[\]'"@/]|<str>|<comment>|<self>)*\]/.source,1),l=i(/\{(?:[^{}'"@/]|<str>|<comment>|<self>)*\}/.source,2),c=i(/<(?:[^<>'"@/]|<comment>|<self>)*>/.source,1),d=/@/.source+/(?:await\b\s*)?/.source+"(?:"+/(?!await\b)\w+\b/.source+"|"+a+")(?:"+/[?!]?\.\w+\b/.source+"|(?:"+c+")?"+a+"|"+o+")*"+/(?![?!\.(\[]|<(?!\/))/.source,h=/@(?![\w()])/.source+"|"+d,x="(?:"+/"[^"@]*"|'[^'@]*'|[^\s'"@>=]+(?=[\s>])/.source+`|["'][^"'@]*(?:(?:`+h+`)[^"'@]*)+["'])`,g=/(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*<tagAttrValue>|(?=[\s/>])))+)?/.source.replace(/<tagAttrValue>/,x),A=/(?!\d)[^\s>\/=$<%]+/.source+g+/\s*\/?>/.source,S=/\B@?/.source+"(?:"+/<([a-zA-Z][\w:]*)/.source+g+/\s*>/.source+"(?:"+(/[^<]/.source+"|"+/<\/?(?!\1\b)/.source+A+"|"+i(/<\1/.source+g+/\s*>/.source+"(?:"+(/[^<]/.source+"|"+/<\/?(?!\1\b)/.source+A+"|<self>")+")*"+/<\/\1\s*>/.source,2))+")*"+/<\/\1\s*>/.source+"|"+/</.source+A+")";n.languages.cshtml=n.languages.extend("markup",{});var y=n.languages.insertBefore("csharp","string",{html:{pattern:RegExp(S),greedy:!0,inside:n.languages.cshtml}},{csharp:n.languages.extend("csharp",{})}),_={pattern:/\S[\s\S]*/,alias:"language-csharp",inside:y},f={pattern:RegExp(/(^|[^@])/.source+d),lookbehind:!0,greedy:!0,alias:"variable",inside:{keyword:/^@/,csharp:_}};n.languages.cshtml.tag.pattern=RegExp(/<\/?/.source+A),n.languages.cshtml.tag.inside["attr-value"].pattern=RegExp(/=\s*/.source+x),n.languages.insertBefore("inside","punctuation",{value:f},n.languages.cshtml.tag.inside["attr-value"]),n.languages.insertBefore("cshtml","prolog",{"razor-comment":{pattern:/@\*[\s\S]*?\*@/,greedy:!0,alias:"comment"},block:{pattern:RegExp(/(^|[^@])@/.source+"(?:"+[l,/(?:code|functions)\s*/.source+l,/(?:for|foreach|lock|switch|using|while)\s*/.source+a+/\s*/.source+l,/do\s*/.source+l+/\s*while\s*/.source+a+/(?:\s*;)?/.source,/try\s*/.source+l+/\s*catch\s*/.source+a+/\s*/.source+l+/\s*finally\s*/.source+l,/if\s*/.source+a+/\s*/.source+l+"(?:"+/\s*else/.source+"(?:"+/\s+if\s*/.source+a+")?"+/\s*/.source+l+")*",/helper\s+\w+\s*/.source+a+/\s*/.source+l].join("|")+")"),lookbehind:!0,greedy:!0,inside:{keyword:/^@\w*/,csharp:_}},directive:{pattern:/^([ \t]*)@(?:addTagHelper|attribute|implements|inherits|inject|layout|model|namespace|page|preservewhitespace|removeTagHelper|section|tagHelperPrefix|using)(?=\s).*/m,lookbehind:!0,greedy:!0,inside:{keyword:/^@\w+/,csharp:_}},value:f,"delegate-operator":{pattern:/(^|[^@])@(?=<)/,lookbehind:!0,alias:"operator"}}),n.languages.razor=n.languages.cshtml}(t)}pc.displayName="jsx";pc.aliases=[];function pc(t){t.register(at),t.register(Ze),function(n){var r=n.util.clone(n.languages.javascript),s=/(?:\s|\/\/.*(?!.)|\/\*(?:[^*]|\*(?!\/))\*\/)/.source,i=/(?:\{(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])*\})/.source,a=/(?:\{<S>*\.{3}(?:[^{}]|<BRACES>)*\})/.source;function o(d,h){return d=d.replace(/<S>/g,function(){return s}).replace(/<BRACES>/g,function(){return i}).replace(/<SPREAD>/g,function(){return a}),RegExp(d,h)}a=o(a).source,n.languages.jsx=n.languages.extend("markup",r),n.languages.jsx.tag.pattern=o(/<\/?(?:[\w.:-]+(?:<S>+(?:[\w.:$-]+(?:=(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s{'"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\/?)?>/.source),n.languages.jsx.tag.inside.tag.pattern=/^<\/?[^\s>\/]*/,n.languages.jsx.tag.inside["attr-value"].pattern=/=(?!\{)(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s'">]+)/,n.languages.jsx.tag.inside.tag.inside["class-name"]=/^[A-Z]\w*(?:\.[A-Z]\w*)*$/,n.languages.jsx.tag.inside.comment=r.comment,n.languages.insertBefore("inside","attr-name",{spread:{pattern:o(/<SPREAD>/.source),inside:n.languages.jsx}},n.languages.jsx.tag),n.languages.insertBefore("inside","special-attr",{script:{pattern:o(/=<BRACES>/.source),alias:"language-javascript",inside:{"script-punctuation":{pattern:/^=(?=\{)/,alias:"punctuation"},rest:n.languages.jsx}}},n.languages.jsx.tag);var l=function(d){return d?typeof d=="string"?d:typeof d.content=="string"?d.content:d.content.map(l).join(""):""},c=function(d){for(var h=[],x=0;x<d.length;x++){var g=d[x],A=!1;if(typeof g!="string"&&(g.type==="tag"&&g.content[0]&&g.content[0].type==="tag"?g.content[0].content[0].content==="</"?h.length>0&&h[h.length-1].tagName===l(g.content[0].content[1])&&h.pop():g.content[g.content.length-1].content==="/>"||h.push({tagName:l(g.content[0].content[1]),openedBraces:0}):h.length>0&&g.type==="punctuation"&&g.content==="{"?h[h.length-1].openedBraces++:h.length>0&&h[h.length-1].openedBraces>0&&g.type==="punctuation"&&g.content==="}"?h[h.length-1].openedBraces--:A=!0),(A||typeof g=="string")&&h.length>0&&h[h.length-1].openedBraces===0){var S=l(g);x<d.length-1&&(typeof d[x+1]=="string"||d[x+1].type==="plain-text")&&(S+=l(d[x+1]),d.splice(x+1,1)),x>0&&(typeof d[x-1]=="string"||d[x-1].type==="plain-text")&&(S=l(d[x-1])+S,d.splice(x-1,1),x--),d[x]=new n.Token("plain-text",S,null,S)}g.content&&typeof g.content!="string"&&c(g.content)}};n.hooks.add("after-tokenize",function(d){d.language!=="jsx"&&d.language!=="tsx"||c(d.tokens)})}(t)}kf.displayName="tsx";kf.aliases=[];function kf(t){t.register(pc),t.register(ni),function(n){var r=n.util.clone(n.languages.typescript);n.languages.tsx=n.languages.extend("jsx",r),delete n.languages.tsx.parameter,delete n.languages.tsx["literal-property"];var s=n.languages.tsx.tag;s.pattern=RegExp(/(^|[^\w$]|(?=<\/))/.source+"(?:"+s.pattern.source+")",s.pattern.flags),s.lookbehind=!0}(t)}Lf.displayName="reason";Lf.aliases=[];function Lf(t){t.register(le),t.languages.reason=t.languages.extend("clike",{string:{pattern:/"(?:\\(?:\r\n|[\s\S])|[^\\\r\n"])*"/,greedy:!0},"class-name":/\b[A-Z]\w*/,keyword:/\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\b/,operator:/\.{3}|:[:=]|\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\-*\/]\.?|\b(?:asr|land|lor|lsl|lsr|lxor|mod)\b/}),t.languages.insertBefore("reason","class-name",{char:{pattern:/'(?:\\x[\da-f]{2}|\\o[0-3][0-7][0-7]|\\\d{3}|\\.|[^'\\\r\n])'/,greedy:!0},constructor:/\b[A-Z]\w*\b(?!\s*\.)/,label:{pattern:/\b[a-z]\w*(?=::)/,alias:"symbol"}}),delete t.languages.reason.function}Df.displayName="rego";Df.aliases=[];function Df(t){t.languages.rego={comment:/#.*/,property:{pattern:/(^|[^\\.])(?:"(?:\\.|[^\\"\r\n])*"|`[^`]*`|\b[a-z_]\w*\b)(?=\s*:(?!=))/i,lookbehind:!0,greedy:!0},string:{pattern:/(^|[^\\])"(?:\\.|[^\\"\r\n])*"|`[^`]*`/,lookbehind:!0,greedy:!0},keyword:/\b(?:as|default|else|import|not|null|package|set(?=\s*\()|some|with)\b/,boolean:/\b(?:false|true)\b/,function:{pattern:/\b[a-z_]\w*\b(?:\s*\.\s*\b[a-z_]\w*\b)*(?=\s*\()/i,inside:{namespace:/\b\w+\b(?=\s*\.)/,punctuation:/\./}},number:/-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,operator:/[-+*/%|&]|[<>:=]=?|!=|\b_\b/,punctuation:/[,;.\[\]{}()]/}}Mf.displayName="renpy";Mf.aliases=["rpy"];function Mf(t){t.languages.renpy={comment:{pattern:/(^|[^\\])#.+/,lookbehind:!0},string:{pattern:/("""|''')[\s\S]+?\1|("|')(?:\\.|(?!\2)[^\\])*\2|(?:^#?(?:(?:[0-9a-fA-F]){3}|[0-9a-fA-F]{6})$)/m,greedy:!0},function:/\b[a-z_]\w*(?=\()/i,property:/\b(?:Update|UpdateVersion|action|activate_sound|adv_nvl_transition|after_load_transition|align|alpha|alt|anchor|antialias|area|auto|background|bar_invert|bar_resizing|bar_vertical|black_color|bold|bottom_bar|bottom_gutter|bottom_margin|bottom_padding|box_reverse|box_wrap|can_update|caret|child|color|crop|default_afm_enable|default_afm_time|default_fullscreen|default_text_cps|developer|directory_name|drag_handle|drag_joined|drag_name|drag_raise|draggable|dragged|drop_shadow|drop_shadow_color|droppable|dropped|easein|easeout|edgescroll|end_game_transition|end_splash_transition|enter_replay_transition|enter_sound|enter_transition|enter_yesno_transition|executable_name|exit_replay_transition|exit_sound|exit_transition|exit_yesno_transition|fadein|fadeout|first_indent|first_spacing|fit_first|focus|focus_mask|font|foreground|game_main_transition|get_installed_packages|google_play_key|google_play_salt|ground|has_music|has_sound|has_voice|height|help|hinting|hover|hover_background|hover_color|hover_sound|hovered|hyperlink_functions|idle|idle_color|image_style|include_update|insensitive|insensitive_background|insensitive_color|inside|intra_transition|italic|justify|kerning|keyboard_focus|language|layer_clipping|layers|layout|left_bar|left_gutter|left_margin|left_padding|length|line_leading|line_overlap_split|line_spacing|linear|main_game_transition|main_menu_music|maximum|min_width|minimum|minwidth|modal|mouse|mousewheel|name|narrator_menu|newline_indent|nvl_adv_transition|offset|order_reverse|outlines|overlay_functions|pos|position|prefix|radius|range|rest_indent|right_bar|right_gutter|right_margin|right_padding|rotate|rotate_pad|ruby_style|sample_sound|save_directory|say_attribute_transition|screen_height|screen_width|scrollbars|selected_hover|selected_hover_color|selected_idle|selected_idle_color|selected_insensitive|show_side_image|show_two_window|side_spacing|side_xpos|side_ypos|size|size_group|slow_cps|slow_cps_multiplier|spacing|strikethrough|subpixel|text_align|text_style|text_xpos|text_y_fudge|text_ypos|thumb|thumb_offset|thumb_shadow|thumbnail_height|thumbnail_width|time|top_bar|top_gutter|top_margin|top_padding|translations|underline|unscrollable|update|value|version|version_name|version_tuple|vertical|width|window_hide_transition|window_icon|window_left_padding|window_show_transition|window_title|windows_icon|xadjustment|xalign|xanchor|xanchoraround|xaround|xcenter|xfill|xinitial|xmargin|xmaximum|xminimum|xoffset|xofsset|xpadding|xpos|xsize|xzoom|yadjustment|yalign|yanchor|yanchoraround|yaround|ycenter|yfill|yinitial|ymargin|ymaximum|yminimum|yoffset|ypadding|ypos|ysize|ysizexysize|yzoom|zoom|zorder)\b/,tag:/\b(?:bar|block|button|buttoscreenn|drag|draggroup|fixed|frame|grid|[hv]box|hotbar|hotspot|image|imagebutton|imagemap|input|key|label|menu|mm_menu_frame|mousearea|nvl|parallel|screen|self|side|tag|text|textbutton|timer|vbar|viewport|window)\b|\$/,keyword:/\b(?:None|add|adjustment|alignaround|allow|angle|animation|around|as|assert|behind|box_layout|break|build|cache|call|center|changed|child_size|choice|circles|class|clear|clicked|clipping|clockwise|config|contains|continue|corner1|corner2|counterclockwise|def|default|define|del|delay|disabled|disabled_text|dissolve|elif|else|event|except|exclude|exec|expression|fade|finally|for|from|function|global|gm_root|has|hide|id|if|import|in|init|is|jump|knot|lambda|left|less_rounded|mm_root|movie|music|null|on|onlayer|pass|pause|persistent|play|print|python|queue|raise|random|renpy|repeat|return|right|rounded_window|scene|scope|set|show|slow|slow_abortable|slow_done|sound|stop|store|style|style_group|substitute|suffix|theme|transform|transform_anchor|transpose|try|ui|unhovered|updater|use|voice|while|widget|widget_hover|widget_selected|widget_text|yield)\b/,boolean:/\b(?:[Ff]alse|[Tt]rue)\b/,number:/(?:\b(?:0[bo])?(?:(?:\d|0x[\da-f])[\da-f]*(?:\.\d*)?)|\B\.\d+)(?:e[+-]?\d+)?j?/i,operator:/[-+%=]=?|!=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]|\b(?:and|at|not|or|with)\b/,punctuation:/[{}[\];(),.:]/},t.languages.rpy=t.languages.renpy}Ff.displayName="rescript";Ff.aliases=["res"];function Ff(t){t.languages.rescript={comment:{pattern:/\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,greedy:!0},char:{pattern:/'(?:[^\r\n\\]|\\(?:.|\w+))'/,greedy:!0},string:{pattern:/"(?:\\(?:\r\n|[\s\S])|[^\\\r\n"])*"/,greedy:!0},"class-name":/\b[A-Z]\w*|@[a-z.]*|#[A-Za-z]\w*|#\d/,function:{pattern:/[a-zA-Z]\w*(?=\()|(\.)[a-z]\w*/,lookbehind:!0},number:/(?:\b0x(?:[\da-f]+(?:\.[\da-f]*)?|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[ful]{0,4}/i,boolean:/\b(?:false|true)\b/,"attr-value":/[A-Za-z]\w*(?==)/,constant:{pattern:/(\btype\s+)[a-z]\w*/,lookbehind:!0},tag:{pattern:/(<)[a-z]\w*|(?:<\/)[a-z]\w*/,lookbehind:!0,inside:{operator:/<|>|\//}},keyword:/\b(?:and|as|assert|begin|bool|class|constraint|do|done|downto|else|end|exception|external|float|for|fun|function|if|in|include|inherit|initializer|int|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|string|switch|then|to|try|type|when|while|with)\b/,operator:/\.{3}|:[:=]?|\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\-*\/]\.?|\b(?:asr|land|lor|lsl|lsr|lxor|mod)\b/,punctuation:/[(){}[\],;.]/},t.languages.insertBefore("rescript","string",{"template-string":{pattern:/`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\$\{|\}$/,alias:"tag"},rest:t.languages.rescript}},string:/[\s\S]+/}}}),t.languages.res=t.languages.rescript}Pf.displayName="rest";Pf.aliases=[];function Pf(t){t.languages.rest={table:[{pattern:/(^[\t ]*)(?:\+[=-]+)+\+(?:\r?\n|\r)(?:\1[+|].+[+|](?:\r?\n|\r))+\1(?:\+[=-]+)+\+/m,lookbehind:!0,inside:{punctuation:/\||(?:\+[=-]+)+\+/}},{pattern:/(^[\t ]*)=+ [ =]*=(?:(?:\r?\n|\r)\1.+)+(?:\r?\n|\r)\1=+ [ =]*=(?=(?:\r?\n|\r){2}|\s*$)/m,lookbehind:!0,inside:{punctuation:/[=-]+/}}],"substitution-def":{pattern:/(^[\t ]*\.\. )\|(?:[^|\s](?:[^|]*[^|\s])?)\| [^:]+::/m,lookbehind:!0,inside:{substitution:{pattern:/^\|(?:[^|\s]|[^|\s][^|]*[^|\s])\|/,alias:"attr-value",inside:{punctuation:/^\||\|$/}},directive:{pattern:/( )(?! )[^:]+::/,lookbehind:!0,alias:"function",inside:{punctuation:/::$/}}}},"link-target":[{pattern:/(^[\t ]*\.\. )\[[^\]]+\]/m,lookbehind:!0,alias:"string",inside:{punctuation:/^\[|\]$/}},{pattern:/(^[\t ]*\.\. )_(?:`[^`]+`|(?:[^:\\]|\\.)+):/m,lookbehind:!0,alias:"string",inside:{punctuation:/^_|:$/}}],directive:{pattern:/(^[\t ]*\.\. )[^:]+::/m,lookbehind:!0,alias:"function",inside:{punctuation:/::$/}},comment:{pattern:/(^[\t ]*\.\.)(?:(?: .+)?(?:(?:\r?\n|\r).+)+| .+)(?=(?:\r?\n|\r){2}|$)/m,lookbehind:!0},title:[{pattern:/^(([!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~])\2+)(?:\r?\n|\r).+(?:\r?\n|\r)\1$/m,inside:{punctuation:/^[!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~]+|[!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~]+$/,important:/.+/}},{pattern:/(^|(?:\r?\n|\r){2}).+(?:\r?\n|\r)([!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~])\2+(?=\r?\n|\r|$)/,lookbehind:!0,inside:{punctuation:/[!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~]+$/,important:/.+/}}],hr:{pattern:/((?:\r?\n|\r){2})([!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~])\2{3,}(?=(?:\r?\n|\r){2})/,lookbehind:!0,alias:"punctuation"},field:{pattern:/(^[\t ]*):[^:\r\n]+:(?= )/m,lookbehind:!0,alias:"attr-name"},"command-line-option":{pattern:/(^[\t ]*)(?:[+-][a-z\d]|(?:--|\/)[a-z\d-]+)(?:[ =](?:[a-z][\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\d]|(?:--|\/)[a-z\d-]+)(?:[ =](?:[a-z][\w-]*|<[^<>]+>))?)*(?=(?:\r?\n|\r)? {2,}\S)/im,lookbehind:!0,alias:"symbol"},"literal-block":{pattern:/::(?:\r?\n|\r){2}([ \t]+)(?![ \t]).+(?:(?:\r?\n|\r)\1.+)*/,inside:{"literal-block-punctuation":{pattern:/^::/,alias:"punctuation"}}},"quoted-literal-block":{pattern:/::(?:\r?\n|\r){2}([!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~]).*(?:(?:\r?\n|\r)\1.*)*/,inside:{"literal-block-punctuation":{pattern:/^(?:::|([!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~])\1*)/m,alias:"punctuation"}}},"list-bullet":{pattern:/(^[\t ]*)(?:[*+\-•‣⁃]|\(?(?:\d+|[a-z]|[ivxdclm]+)\)|(?:\d+|[a-z]|[ivxdclm]+)\.)(?= )/im,lookbehind:!0,alias:"punctuation"},"doctest-block":{pattern:/(^[\t ]*)>>> .+(?:(?:\r?\n|\r).+)*/m,lookbehind:!0,inside:{punctuation:/^>>>/}},inline:[{pattern:/(^|[\s\-:\/'"<(\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\*\*?|``?|\|)(?!\s)(?:(?!\2).)*\S\2(?=[\s\-.,:;!?\\\/'")\]}]|$))/m,lookbehind:!0,inside:{bold:{pattern:/(^\*\*).+(?=\*\*$)/,lookbehind:!0},italic:{pattern:/(^\*).+(?=\*$)/,lookbehind:!0},"inline-literal":{pattern:/(^``).+(?=``$)/,lookbehind:!0,alias:"symbol"},role:{pattern:/^:[^:]+:|:[^:]+:$/,alias:"function",inside:{punctuation:/^:|:$/}},"interpreted-text":{pattern:/(^`).+(?=`$)/,lookbehind:!0,alias:"attr-value"},substitution:{pattern:/(^\|).+(?=\|$)/,lookbehind:!0,alias:"attr-value"},punctuation:/\*\*?|``?|\|/}}],link:[{pattern:/\[[^\[\]]+\]_(?=[\s\-.,:;!?\\\/'")\]}]|$)/,alias:"string",inside:{punctuation:/^\[|\]_$/}},{pattern:/(?:\b[a-z\d]+(?:[_.:+][a-z\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\s\-.,:;!?\\\/'")\]}]|$)/i,alias:"string",inside:{punctuation:/^_?`|`$|`?_?_$/}}],punctuation:{pattern:/(^[\t ]*)(?:\|(?= |$)|(?:---?|—|\.\.|__)(?= )|\.\.$)/m,lookbehind:!0}}}Uf.displayName="rip";Uf.aliases=[];function Uf(t){t.languages.rip={comment:{pattern:/#.*/,greedy:!0},char:{pattern:/\B`[^\s`'",.:;#\/\\()<>\[\]{}]\b/,greedy:!0},string:{pattern:/("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,greedy:!0},regex:{pattern:/(^|[^/])\/(?!\/)(?:\[[^\n\r\]]*\]|\\.|[^/\\\r\n\[])+\/(?=\s*(?:$|[\r\n,.;})]))/,lookbehind:!0,greedy:!0},keyword:/(?:=>|->)|\b(?:case|catch|class|else|exit|finally|if|raise|return|switch|try)\b/,builtin:/@|\bSystem\b/,boolean:/\b(?:false|true)\b/,date:/\b\d{4}-\d{2}-\d{2}\b/,time:/\b\d{2}:\d{2}:\d{2}\b/,datetime:/\b\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\b/,symbol:/:[^\d\s`'",.:;#\/\\()<>\[\]{}][^\s`'",.:;#\/\\()<>\[\]{}]*/,number:/[+-]?\b(?:\d+\.\d+|\d+)\b/,punctuation:/(?:\.{2,3})|[`,.:;=\/\\()<>\[\]{}]/,reference:/[^\d\s`'",.:;#\/\\()<>\[\]{}][^\s`'",.:;#\/\\()<>\[\]{}]*/}}Bf.displayName="roboconf";Bf.aliases=[];function Bf(t){t.languages.roboconf={comment:/#.*/,keyword:{pattern:/(^|\s)(?:(?:external|import)\b|(?:facet|instance of)(?=[ \t]+[\w-]+[ \t]*\{))/,lookbehind:!0},component:{pattern:/[\w-]+(?=[ \t]*\{)/,alias:"variable"},property:/[\w.-]+(?=[ \t]*:)/,value:{pattern:/(=[ \t]*(?![ \t]))[^,;]+/,lookbehind:!0,alias:"attr-value"},optional:{pattern:/\(optional\)/,alias:"builtin"},wildcard:{pattern:/(\.)\*/,lookbehind:!0,alias:"operator"},punctuation:/[{},.;:=]/}}Hf.displayName="robotframework";Hf.aliases=["robot"];function Hf(t){(function(n){var r={pattern:/(^[ \t]*| {2}|\t)#.*/m,lookbehind:!0,greedy:!0},s={pattern:/((?:^|[^\\])(?:\\{2})*)[$@&%]\{(?:[^{}\r\n]|\{[^{}\r\n]*\})*\}/,lookbehind:!0,inside:{punctuation:/^[$@&%]\{|\}$/}};function i(c,d){var h={};h["section-header"]={pattern:/^ ?\*{3}.+?\*{3}/,alias:"keyword"};for(var x in d)h[x]=d[x];return h.tag={pattern:/([\r\n](?: {2}|\t)[ \t]*)\[[-\w]+\]/,lookbehind:!0,inside:{punctuation:/\[|\]/}},h.variable=s,h.comment=r,{pattern:RegExp(/^ ?\*{3}[ \t]*<name>[ \t]*\*{3}(?:.|[\r\n](?!\*{3}))*/.source.replace(/<name>/g,function(){return c}),"im"),alias:"section",inside:h}}var a={pattern:/(\[Documentation\](?: {2}|\t)[ \t]*)(?![ \t]|#)(?:.|(?:\r\n?|\n)[ \t]*\.{3})+/,lookbehind:!0,alias:"string"},o={pattern:/([\r\n] ?)(?!#)(?:\S(?:[ \t]\S)*)+/,lookbehind:!0,alias:"function",inside:{variable:s}},l={pattern:/([\r\n](?: {2}|\t)[ \t]*)(?!\[|\.{3}|#)(?:\S(?:[ \t]\S)*)+/,lookbehind:!0,inside:{variable:s}};n.languages.robotframework={settings:i("Settings",{documentation:{pattern:/([\r\n] ?Documentation(?: {2}|\t)[ \t]*)(?![ \t]|#)(?:.|(?:\r\n?|\n)[ \t]*\.{3})+/,lookbehind:!0,alias:"string"},property:{pattern:/([\r\n] ?)(?!\.{3}|#)(?:\S(?:[ \t]\S)*)+/,lookbehind:!0}}),variables:i("Variables"),"test-cases":i("Test Cases",{"test-name":o,documentation:a,property:l}),keywords:i("Keywords",{"keyword-name":o,documentation:a,property:l}),tasks:i("Tasks",{"task-name":o,documentation:a,property:l}),comment:r},n.languages.robot=n.languages.robotframework})(t)}Gf.displayName="sas";Gf.aliases=[];function Gf(t){(function(n){var r=/(?:"(?:""|[^"])*"(?!")|'(?:''|[^'])*'(?!'))/.source,s=/\b(?:\d[\da-f]*x|\d+(?:\.\d+)?(?:e[+-]?\d+)?)\b/i,i={pattern:RegExp(r+"[bx]"),alias:"number"},a={pattern:/&[a-z_]\w*/i},o={pattern:/((?:^|\s|=|\())%(?:ABORT|BY|CMS|COPY|DISPLAY|DO|ELSE|END|EVAL|GLOBAL|GO|GOTO|IF|INC|INCLUDE|INDEX|INPUT|KTRIM|LENGTH|LET|LIST|LOCAL|PUT|QKTRIM|QSCAN|QSUBSTR|QSYSFUNC|QUPCASE|RETURN|RUN|SCAN|SUBSTR|SUPERQ|SYMDEL|SYMEXIST|SYMGLOBL|SYMLOCAL|SYSCALL|SYSEVALF|SYSEXEC|SYSFUNC|SYSGET|SYSRPUT|THEN|TO|TSO|UNQUOTE|UNTIL|UPCASE|WHILE|WINDOW)\b/i,lookbehind:!0,alias:"keyword"},l={pattern:/(^|\s)(?:proc\s+\w+|data(?!=)|quit|run)\b/i,alias:"keyword",lookbehind:!0},c=[/\/\*[\s\S]*?\*\//,{pattern:/(^[ \t]*|;\s*)\*[^;]*;/m,lookbehind:!0}],d={pattern:RegExp(r),greedy:!0},h=/[$%@.(){}\[\];,\\]/,x={pattern:/%?\b\w+(?=\()/,alias:"keyword"},g={function:x,"arg-value":{pattern:/(=\s*)[A-Z\.]+/i,lookbehind:!0},operator:/=/,"macro-variable":a,arg:{pattern:/[A-Z]+/i,alias:"keyword"},number:s,"numeric-constant":i,punctuation:h,string:d},A={pattern:/\b(?:format|put)\b=?[\w'$.]+/i,inside:{keyword:/^(?:format|put)(?==)/i,equals:/=/,format:{pattern:/(?:\w|\$\d)+\.\d?/,alias:"number"}}},S={pattern:/\b(?:format|put)\s+[\w']+(?:\s+[$.\w]+)+(?=;)/i,inside:{keyword:/^(?:format|put)/i,format:{pattern:/[\w$]+\.\d?/,alias:"number"}}},y={pattern:/((?:^|\s)=?)(?:catname|checkpoint execute_always|dm|endsas|filename|footnote|%include|libname|%list|lock|missing|options|page|resetline|%run|sasfile|skip|sysecho|title\d?)\b/i,lookbehind:!0,alias:"keyword"},_={pattern:/(^|\s)(?:submit(?:\s+(?:load|norun|parseonly))?|endsubmit)\b/i,lookbehind:!0,alias:"keyword"},f=/aStore|accessControl|aggregation|audio|autotune|bayesianNetClassifier|bioMedImage|boolRule|builtins|cardinality|cdm|clustering|conditionalRandomFields|configuration|copula|countreg|dataDiscovery|dataPreprocess|dataSciencePilot|dataStep|decisionTree|deduplication|deepLearn|deepNeural|deepRnn|ds2|ecm|entityRes|espCluster|explainModel|factmac|fastKnn|fcmpact|fedSql|freqTab|gVarCluster|gam|gleam|graphSemiSupLearn|hiddenMarkovModel|hyperGroup|ica|image|iml|kernalPca|langModel|ldaTopic|loadStreams|mbc|mixed|mlTools|modelPublishing|network|neuralNet|nmf|nonParametricBayes|nonlinear|optNetwork|optimization|panel|pca|percentile|phreg|pls|qkb|qlim|quantreg|recommend|regression|reinforcementLearn|robustPca|ruleMining|sampling|sandwich|sccasl|search(?:Analytics)?|sentimentAnalysis|sequence|session(?:Prop)?|severity|simSystem|simple|smartData|sparkEmbeddedProcess|sparseML|spatialreg|spc|stabilityMonitoring|svDataDescription|svm|table|text(?:Filters|Frequency|Mining|Parse|Rule(?:Develop|Score)|Topic|Util)|timeData|transpose|tsInfo|tsReconcile|uniTimeSeries|varReduce/.source,b={pattern:RegExp(/(^|\s)(?:action\s+)?(?:<act>)\.[a-z]+\b[^;]+/.source.replace(/<act>/g,function(){return f}),"i"),lookbehind:!0,inside:{keyword:RegExp(/(?:<act>)\.[a-z]+\b/.source.replace(/<act>/g,function(){return f}),"i"),action:{pattern:/(?:action)/i,alias:"keyword"},comment:c,function:x,"arg-value":g["arg-value"],operator:g.operator,argument:g.arg,number:s,"numeric-constant":i,punctuation:h,string:d}},T={pattern:/((?:^|\s)=?)(?:after|analysis|and|array|barchart|barwidth|begingraph|by|call|cas|cbarline|cfill|class(?:lev)?|close|column|computed?|contains|continue|data(?==)|define|delete|describe|document|do\s+over|do|dol|drop|dul|else|end(?:comp|source)?|entryTitle|eval(?:uate)?|exec(?:ute)?|exit|file(?:name)?|fill(?:attrs)?|flist|fnc|function(?:list)?|global|goto|group(?:by)?|headline|headskip|histogram|if|infile|keep|keylabel|keyword|label|layout|leave|legendlabel|length|libname|loadactionset|merge|midpoints|_?null_|name|noobs|nowd|ods|options|or|otherwise|out(?:put)?|over(?:lay)?|plot|print|put|raise|ranexp|rannor|rbreak|retain|return|select|session|sessref|set|source|statgraph|sum|summarize|table|temp|terminate|then\s+do|then|title\d?|to|var|when|where|xaxisopts|y2axisopts|yaxisopts)\b/i,lookbehind:!0};n.languages.sas={datalines:{pattern:/^([ \t]*)(?:cards|(?:data)?lines);[\s\S]+?^[ \t]*;/im,lookbehind:!0,alias:"string",inside:{keyword:{pattern:/^(?:cards|(?:data)?lines)/i},punctuation:/;/}},"proc-sql":{pattern:/(^proc\s+(?:fed)?sql(?:\s+[\w|=]+)?;)[\s\S]+?(?=^(?:proc\s+\w+|data|quit|run);|(?![\s\S]))/im,lookbehind:!0,inside:{sql:{pattern:RegExp(/^[ \t]*(?:select|alter\s+table|(?:create|describe|drop)\s+(?:index|table(?:\s+constraints)?|view)|create\s+unique\s+index|insert\s+into|update)(?:<str>|[^;"'])+;/.source.replace(/<str>/g,function(){return r}),"im"),alias:"language-sql",inside:n.languages.sql},"global-statements":y,"sql-statements":{pattern:/(^|\s)(?:disconnect\s+from|begin|commit|exec(?:ute)?|reset|rollback|validate)\b/i,lookbehind:!0,alias:"keyword"},number:s,"numeric-constant":i,punctuation:h,string:d}},"proc-groovy":{pattern:/(^proc\s+groovy(?:\s+[\w|=]+)?;)[\s\S]+?(?=^(?:proc\s+\w+|data|quit|run);|(?![\s\S]))/im,lookbehind:!0,inside:{comment:c,groovy:{pattern:RegExp(/(^[ \t]*submit(?:\s+(?:load|norun|parseonly))?)(?:<str>|[^"'])+?(?=endsubmit;)/.source.replace(/<str>/g,function(){return r}),"im"),lookbehind:!0,alias:"language-groovy",inside:n.languages.groovy},keyword:T,"submit-statement":_,"global-statements":y,number:s,"numeric-constant":i,punctuation:h,string:d}},"proc-lua":{pattern:/(^proc\s+lua(?:\s+[\w|=]+)?;)[\s\S]+?(?=^(?:proc\s+\w+|data|quit|run);|(?![\s\S]))/im,lookbehind:!0,inside:{comment:c,lua:{pattern:RegExp(/(^[ \t]*submit(?:\s+(?:load|norun|parseonly))?)(?:<str>|[^"'])+?(?=endsubmit;)/.source.replace(/<str>/g,function(){return r}),"im"),lookbehind:!0,alias:"language-lua",inside:n.languages.lua},keyword:T,"submit-statement":_,"global-statements":y,number:s,"numeric-constant":i,punctuation:h,string:d}},"proc-cas":{pattern:/(^proc\s+cas(?:\s+[\w|=]+)?;)[\s\S]+?(?=^(?:proc\s+\w+|quit|data);|(?![\s\S]))/im,lookbehind:!0,inside:{comment:c,"statement-var":{pattern:/((?:^|\s)=?)saveresult\s[^;]+/im,lookbehind:!0,inside:{statement:{pattern:/^saveresult\s+\S+/i,inside:{keyword:/^(?:saveresult)/i}},rest:g}},"cas-actions":b,statement:{pattern:/((?:^|\s)=?)(?:default|(?:un)?set|on|output|upload)[^;]+/im,lookbehind:!0,inside:g},step:l,keyword:T,function:x,format:A,altformat:S,"global-statements":y,number:s,"numeric-constant":i,punctuation:h,string:d}},"proc-args":{pattern:RegExp(/(^proc\s+\w+\s+)(?!\s)(?:[^;"']|<str>)+;/.source.replace(/<str>/g,function(){return r}),"im"),lookbehind:!0,inside:g},"macro-keyword":o,"macro-variable":a,"macro-string-functions":{pattern:/((?:^|\s|=))%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)\(.*?(?:[^%]\))/i,lookbehind:!0,inside:{function:{pattern:/%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)/i,alias:"keyword"},"macro-keyword":o,"macro-variable":a,"escaped-char":{pattern:/%['"()<>=¬^~;,#]/},punctuation:h}},"macro-declaration":{pattern:/^%macro[^;]+(?=;)/im,inside:{keyword:/%macro/i}},"macro-end":{pattern:/^%mend[^;]+(?=;)/im,inside:{keyword:/%mend/i}},macro:{pattern:/%_\w+(?=\()/,alias:"keyword"},input:{pattern:/\binput\s[-\w\s/*.$&]+;/i,inside:{input:{alias:"keyword",pattern:/^input/i},comment:c,number:s,"numeric-constant":i}},"options-args":{pattern:/(^options)[-'"|/\\<>*+=:()\w\s]*(?=;)/im,lookbehind:!0,inside:g},"cas-actions":b,comment:c,function:x,format:A,altformat:S,"numeric-constant":i,datetime:{pattern:RegExp(r+"(?:dt?|t)"),alias:"number"},string:d,step:l,keyword:T,"operator-keyword":{pattern:/\b(?:eq|ge|gt|in|le|lt|ne|not)\b/i,alias:"operator"},number:s,operator:/\*\*?|\|\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\/=&]|[~¬^]=?/,punctuation:h}})(t)}$f.displayName="shell-session";$f.aliases=["sh-session","shellsession"];function $f(t){t.register(wa),function(n){var r=[/"(?:\\[\s\S]|\$\([^)]+\)|\$(?!\()|`[^`]+`|[^"\\`$])*"/.source,/'[^']*'/.source,/\$'(?:[^'\\]|\\[\s\S])*'/.source,/<<-?\s*(["']?)(\w+)\1\s[\s\S]*?[\r\n]\2/.source].join("|");n.languages["shell-session"]={command:{pattern:RegExp(/^/.source+"(?:"+(/[^\s@:$#%*!/\\]+@[^\r\n@:$#%*!/\\]+(?::[^\0-\x1F$#%*?"<>:;|]+)?/.source+"|"+/[/~.][^\0-\x1F$#%*?"<>@:;|]*/.source)+")?"+/[$#%](?=\s)/.source+/(?:[^\\\r\n \t'"<$]|[ \t](?:(?!#)|#.*$)|\\(?:[^\r]|\r\n?)|\$(?!')|<(?!<)|<<str>>)+/.source.replace(/<<str>>/g,function(){return r}),"m"),greedy:!0,inside:{info:{pattern:/^[^#$%]+/,alias:"punctuation",inside:{user:/^[^\s@:$#%*!/\\]+@[^\r\n@:$#%*!/\\]+/,punctuation:/:/,path:/[\s\S]+/}},bash:{pattern:/(^[$#%]\s*)\S[\s\S]*/,lookbehind:!0,alias:"language-bash",inside:n.languages.bash},"shell-symbol":{pattern:/^[$#%]/,alias:"important"}}},output:/.(?:.*(?:[\r\n]|.$))*/},n.languages["sh-session"]=n.languages.shellsession=n.languages["shell-session"]}(t)}zf.displayName="smali";zf.aliases=[];function zf(t){t.languages.smali={comment:/#.*/,string:{pattern:/"(?:[^\r\n\\"]|\\.)*"|'(?:[^\r\n\\']|\\(?:.|u[\da-fA-F]{4}))'/,greedy:!0},"class-name":{pattern:/(^|[^L])L(?:(?:\w+|`[^`\r\n]*`)\/)*(?:[\w$]+|`[^`\r\n]*`)(?=\s*;)/,lookbehind:!0,inside:{"class-name":{pattern:/(^L|\/)(?:[\w$]+|`[^`\r\n]*`)$/,lookbehind:!0},namespace:{pattern:/^(L)(?:(?:\w+|`[^`\r\n]*`)\/)+/,lookbehind:!0,inside:{punctuation:/\//}},builtin:/^L/}},builtin:[{pattern:/([();\[])[BCDFIJSVZ]+/,lookbehind:!0},{pattern:/([\w$>]:)[BCDFIJSVZ]/,lookbehind:!0}],keyword:[{pattern:/(\.end\s+)[\w-]+/,lookbehind:!0},{pattern:/(^|[^\w.-])\.(?!\d)[\w-]+/,lookbehind:!0},{pattern:/(^|[^\w.-])(?:abstract|annotation|bridge|constructor|enum|final|interface|private|protected|public|runtime|static|synthetic|system|transient)(?![\w.-])/,lookbehind:!0}],function:{pattern:/(^|[^\w.-])(?:\w+|<[\w$-]+>)(?=\()/,lookbehind:!0},field:{pattern:/[\w$]+(?=:)/,alias:"variable"},register:{pattern:/(^|[^\w.-])[vp]\d(?![\w.-])/,lookbehind:!0,alias:"variable"},boolean:{pattern:/(^|[^\w.-])(?:false|true)(?![\w.-])/,lookbehind:!0},number:{pattern:/(^|[^/\w.-])-?(?:NAN|INFINITY|0x(?:[\dA-F]+(?:\.[\dA-F]*)?|\.[\dA-F]+)(?:p[+-]?[\dA-F]+)?|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?)[dflst]?(?![\w.-])/i,lookbehind:!0},label:{pattern:/(:)\w+/,lookbehind:!0,alias:"property"},operator:/->|\.\.|[\[=]/,punctuation:/[{}(),;:]/}}Wf.displayName="smalltalk";Wf.aliases=[];function Wf(t){t.languages.smalltalk={comment:{pattern:/"(?:""|[^"])*"/,greedy:!0},char:{pattern:/\$./,greedy:!0},string:{pattern:/'(?:''|[^'])*'/,greedy:!0},symbol:/#[\da-z]+|#(?:-|([+\/\\*~<>=@%|&?!])\1?)|#(?=\()/i,"block-arguments":{pattern:/(\[\s*):[^\[|]*\|/,lookbehind:!0,inside:{variable:/:[\da-z]+/i,punctuation:/\|/}},"temporary-variables":{pattern:/\|[^|]+\|/,inside:{variable:/[\da-z]+/i,punctuation:/\|/}},keyword:/\b(?:new|nil|self|super)\b/,boolean:/\b(?:false|true)\b/,number:[/\d+r-?[\dA-Z]+(?:\.[\dA-Z]+)?(?:e-?\d+)?/,/\b\d+(?:\.\d+)?(?:e-?\d+)?/],operator:/[<=]=?|:=|~[~=]|\/\/?|\\\\|>[>=]?|[!^+\-*&|,@]/,punctuation:/[.;:?\[\](){}]/}}Vf.displayName="smarty";Vf.aliases=[];function Vf(t){t.register(ot),function(n){n.languages.smarty={comment:{pattern:/^\{\*[\s\S]*?\*\}/,greedy:!0},"embedded-php":{pattern:/^\{php\}[\s\S]*?\{\/php\}/,greedy:!0,inside:{smarty:{pattern:/^\{php\}|\{\/php\}$/,inside:null},php:{pattern:/[\s\S]+/,alias:"language-php",inside:n.languages.php}}},string:[{pattern:/"(?:\\.|[^"\\\r\n])*"/,greedy:!0,inside:{interpolation:{pattern:/\{[^{}]*\}|`[^`]*`/,inside:{"interpolation-punctuation":{pattern:/^[{`]|[`}]$/,alias:"punctuation"},expression:{pattern:/[\s\S]+/,inside:null}}},variable:/\$\w+/}},{pattern:/'(?:\\.|[^'\\\r\n])*'/,greedy:!0}],keyword:{pattern:/(^\{\/?)[a-z_]\w*\b(?!\()/i,lookbehind:!0,greedy:!0},delimiter:{pattern:/^\{\/?|\}$/,greedy:!0,alias:"punctuation"},number:/\b0x[\dA-Fa-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee][-+]?\d+)?/,variable:[/\$(?!\d)\w+/,/#(?!\d)\w+#/,{pattern:/(\.|->|\w\s*=)(?!\d)\w+\b(?!\()/,lookbehind:!0},{pattern:/(\[)(?!\d)\w+(?=\])/,lookbehind:!0}],function:{pattern:/(\|\s*)@?[a-z_]\w*|\b[a-z_]\w*(?=\()/i,lookbehind:!0},"attr-name":/\b[a-z_]\w*(?=\s*=)/i,boolean:/\b(?:false|no|off|on|true|yes)\b/,punctuation:/[\[\](){}.,:`]|->/,operator:[/[+\-*\/%]|==?=?|[!<>]=?|&&|\|\|?/,/\bis\s+(?:not\s+)?(?:div|even|odd)(?:\s+by)?\b/,/\b(?:and|eq|gt?e|gt|lt?e|lt|mod|neq?|not|or)\b/]},n.languages.smarty["embedded-php"].inside.smarty.inside=n.languages.smarty,n.languages.smarty.string[0].inside.interpolation.inside.expression.inside=n.languages.smarty;var r=/"(?:\\.|[^"\\\r\n])*"|'(?:\\.|[^'\\\r\n])*'/,s=RegExp(/\{\*[\s\S]*?\*\}/.source+"|"+/\{php\}[\s\S]*?\{\/php\}/.source+"|"+/\{(?:[^{}"']|<str>|\{(?:[^{}"']|<str>|\{(?:[^{}"']|<str>)*\})*\})*\}/.source.replace(/<str>/g,function(){return r.source}),"g");n.hooks.add("before-tokenize",function(i){var a="{literal}",o="{/literal}",l=!1;n.languages["markup-templating"].buildPlaceholders(i,"smarty",s,function(c){return c===o&&(l=!1),l?!1:(c===a&&(l=!0),!0)})}),n.hooks.add("after-tokenize",function(i){n.languages["markup-templating"].tokenizePlaceholders(i,"smarty")})}(t)}Kf.displayName="sml";Kf.aliases=["smlnj"];function Kf(t){(function(n){var r=/\b(?:abstype|and|andalso|as|case|datatype|do|else|end|eqtype|exception|fn|fun|functor|handle|if|in|include|infix|infixr|let|local|nonfix|of|op|open|orelse|raise|rec|sharing|sig|signature|struct|structure|then|type|val|where|while|with|withtype)\b/i;n.languages.sml={comment:/\(\*(?:[^*(]|\*(?!\))|\((?!\*)|\(\*(?:[^*(]|\*(?!\))|\((?!\*))*\*\))*\*\)/,string:{pattern:/#?"(?:[^"\\]|\\.)*"/,greedy:!0},"class-name":[{pattern:RegExp(/((?:^|[^:]):\s*)<TERMINAL>(?:\s*(?:(?:\*|->)\s*<TERMINAL>|,\s*<TERMINAL>(?:(?=<NOT-LAST>)|(?!<NOT-LAST>)\s+<LONG-ID>)))*/.source.replace(/<NOT-LAST>/g,function(){return/\s*(?:[*,]|->)/.source}).replace(/<TERMINAL>/g,function(){return/(?:'[\w']*|<LONG-ID>|\((?:[^()]|\([^()]*\))*\)|\{(?:[^{}]|\{[^{}]*\})*\})(?:\s+<LONG-ID>)*/.source}).replace(/<LONG-ID>/g,function(){return/(?!<KEYWORD>)[a-z\d_][\w'.]*/.source}).replace(/<KEYWORD>/g,function(){return r.source}),"i"),lookbehind:!0,greedy:!0,inside:null},{pattern:/((?:^|[^\w'])(?:datatype|exception|functor|signature|structure|type)\s+)[a-z_][\w'.]*/i,lookbehind:!0}],function:{pattern:/((?:^|[^\w'])fun\s+)[a-z_][\w'.]*/i,lookbehind:!0},keyword:r,variable:{pattern:/(^|[^\w'])'[\w']*/,lookbehind:!0},number:/~?\b(?:\d+(?:\.\d+)?(?:e~?\d+)?|0x[\da-f]+)\b/i,word:{pattern:/\b0w(?:\d+|x[\da-f]+)\b/i,alias:"constant"},boolean:/\b(?:false|true)\b/i,operator:/\.\.\.|:[>=:]|=>?|->|[<>]=?|[!+\-*/^#|@~]/,punctuation:/[(){}\[\].:,;]/},n.languages.sml["class-name"][0].inside=n.languages.sml,n.languages.smlnj=n.languages.sml})(t)}Yf.displayName="solidity";Yf.aliases=["sol"];function Yf(t){t.register(le),t.languages.solidity=t.languages.extend("clike",{"class-name":{pattern:/(\b(?:contract|enum|interface|library|new|struct|using)\s+)(?!\d)[\w$]+/,lookbehind:!0},keyword:/\b(?:_|anonymous|as|assembly|assert|break|calldata|case|constant|constructor|continue|contract|default|delete|do|else|emit|enum|event|external|for|from|function|if|import|indexed|inherited|interface|internal|is|let|library|mapping|memory|modifier|new|payable|pragma|private|public|pure|require|returns?|revert|selfdestruct|solidity|storage|struct|suicide|switch|this|throw|using|var|view|while)\b/,operator:/=>|->|:=|=:|\*\*|\+\+|--|\|\||&&|<<=?|>>=?|[-+*/%^&|<>!=]=?|[~?]/}),t.languages.insertBefore("solidity","keyword",{builtin:/\b(?:address|bool|byte|u?int(?:8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?|string|bytes(?:[1-9]|[12]\d|3[0-2])?)\b/}),t.languages.insertBefore("solidity","number",{version:{pattern:/([<>]=?|\^)\d+\.\d+\.\d+\b/,lookbehind:!0,alias:"number"}}),t.languages.sol=t.languages.solidity}qf.displayName="solution-file";qf.aliases=["sln"];function qf(t){(function(n){var r={pattern:/\{[\da-f]{8}-[\da-f]{4}-[\da-f]{4}-[\da-f]{4}-[\da-f]{12}\}/i,alias:"constant",inside:{punctuation:/[{}]/}};n.languages["solution-file"]={comment:{pattern:/#.*/,greedy:!0},string:{pattern:/"[^"\r\n]*"|'[^'\r\n]*'/,greedy:!0,inside:{guid:r}},object:{pattern:/^([ \t]*)(?:([A-Z]\w*)\b(?=.*(?:\r\n?|\n)(?:\1[ \t].*(?:\r\n?|\n))*\1End\2(?=[ \t]*$))|End[A-Z]\w*(?=[ \t]*$))/m,lookbehind:!0,greedy:!0,alias:"keyword"},property:{pattern:/^([ \t]*)(?!\s)[^\r\n"#=()]*[^\s"#=()](?=\s*=)/m,lookbehind:!0,inside:{guid:r}},guid:r,number:/\b\d+(?:\.\d+)*\b/,boolean:/\b(?:FALSE|TRUE)\b/,operator:/=/,punctuation:/[(),]/},n.languages.sln=n.languages["solution-file"]})(t)}Xf.displayName="soy";Xf.aliases=[];function Xf(t){t.register(ot),function(n){var r=/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,s=/\b\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\b|\b0x[\dA-F]+\b/;n.languages.soy={comment:[/\/\*[\s\S]*?\*\//,{pattern:/(\s)\/\/.*/,lookbehind:!0,greedy:!0}],"command-arg":{pattern:/(\{+\/?\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\s+)\.?[\w.]+/,lookbehind:!0,alias:"string",inside:{punctuation:/\./}},parameter:{pattern:/(\{+\/?\s*@?param\??\s+)\.?[\w.]+/,lookbehind:!0,alias:"variable"},keyword:[{pattern:/(\{+\/?[^\S\r\n]*)(?:\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\??|rb|sp|switch|template|xid)/,lookbehind:!0},/\b(?:any|as|attributes|bool|css|float|html|in|int|js|list|map|null|number|string|uri)\b/],delimiter:{pattern:/^\{+\/?|\/?\}+$/,alias:"punctuation"},property:/\w+(?==)/,variable:{pattern:/\$[^\W\d]\w*(?:\??(?:\.\w+|\[[^\]]+\]))*/,inside:{string:{pattern:r,greedy:!0},number:s,punctuation:/[\[\].?]/}},string:{pattern:r,greedy:!0},function:[/\w+(?=\()/,{pattern:/(\|[^\S\r\n]*)\w+/,lookbehind:!0}],boolean:/\b(?:false|true)\b/,number:s,operator:/\?:?|<=?|>=?|==?|!=|[+*/%-]|\b(?:and|not|or)\b/,punctuation:/[{}()\[\]|.,:]/},n.hooks.add("before-tokenize",function(i){var a=/\{\{.+?\}\}|\{.+?\}|\s\/\/.*|\/\*[\s\S]*?\*\//g,o="{literal}",l="{/literal}",c=!1;n.languages["markup-templating"].buildPlaceholders(i,"soy",a,function(d){return d===l&&(c=!1),c?!1:(d===o&&(c=!0),!0)})}),n.hooks.add("after-tokenize",function(i){n.languages["markup-templating"].tokenizePlaceholders(i,"soy")})}(t)}mc.displayName="turtle";mc.aliases=["trig"];function mc(t){t.languages.turtle={comment:{pattern:/#.*/,greedy:!0},"multiline-string":{pattern:/"""(?:(?:""?)?(?:[^"\\]|\\.))*"""|'''(?:(?:''?)?(?:[^'\\]|\\.))*'''/,greedy:!0,alias:"string",inside:{comment:/#.*/}},string:{pattern:/"(?:[^\\"\r\n]|\\.)*"|'(?:[^\\'\r\n]|\\.)*'/,greedy:!0},url:{pattern:/<(?:[^\x00-\x20<>"{}|^`\\]|\\(?:u[\da-fA-F]{4}|U[\da-fA-F]{8}))*>/,greedy:!0,inside:{punctuation:/[<>]/}},function:{pattern:/(?:(?![-.\d\xB7])[-.\w\xB7\xC0-\uFFFD]+)?:(?:(?![-.])(?:[-.:\w\xC0-\uFFFD]|%[\da-f]{2}|\\.)+)?/i,inside:{"local-name":{pattern:/([^:]*:)[\s\S]+/,lookbehind:!0},prefix:{pattern:/[\s\S]+/,inside:{punctuation:/:/}}}},number:/[+-]?\b\d+(?:\.\d*)?(?:e[+-]?\d+)?/i,punctuation:/[{}.,;()[\]]|\^\^/,boolean:/\b(?:false|true)\b/,keyword:[/(?:\ba|@prefix|@base)\b|=/,/\b(?:base|graph|prefix)\b/i],tag:{pattern:/@[a-z]+(?:-[a-z\d]+)*/i,inside:{punctuation:/@/}}},t.languages.trig=t.languages.turtle}Zf.displayName="sparql";Zf.aliases=["rq"];function Zf(t){t.register(mc),t.languages.sparql=t.languages.extend("turtle",{boolean:/\b(?:false|true)\b/i,variable:{pattern:/[?$]\w+/,greedy:!0}}),t.languages.insertBefore("sparql","punctuation",{keyword:[/\b(?:A|ADD|ALL|AS|ASC|ASK|BNODE|BY|CLEAR|CONSTRUCT|COPY|CREATE|DATA|DEFAULT|DELETE|DESC|DESCRIBE|DISTINCT|DROP|EXISTS|FILTER|FROM|GROUP|HAVING|INSERT|INTO|LIMIT|LOAD|MINUS|MOVE|NAMED|NOT|NOW|OFFSET|OPTIONAL|ORDER|RAND|REDUCED|SELECT|SEPARATOR|SERVICE|SILENT|STRUUID|UNION|USING|UUID|VALUES|WHERE)\b/i,/\b(?:ABS|AVG|BIND|BOUND|CEIL|COALESCE|CONCAT|CONTAINS|COUNT|DATATYPE|DAY|ENCODE_FOR_URI|FLOOR|GROUP_CONCAT|HOURS|IF|IRI|isBLANK|isIRI|isLITERAL|isNUMERIC|isURI|LANG|LANGMATCHES|LCASE|MAX|MD5|MIN|MINUTES|MONTH|REGEX|REPLACE|ROUND|sameTerm|SAMPLE|SECONDS|SHA1|SHA256|SHA384|SHA512|STR|STRAFTER|STRBEFORE|STRDT|STRENDS|STRLANG|STRLEN|STRSTARTS|SUBSTR|SUM|TIMEZONE|TZ|UCASE|URI|YEAR)\b(?=\s*\()/i,/\b(?:BASE|GRAPH|PREFIX)\b/i]}),t.languages.rq=t.languages.sparql}Qf.displayName="splunk-spl";Qf.aliases=[];function Qf(t){t.languages["splunk-spl"]={comment:/`comment\("(?:\\.|[^\\"])*"\)`/,string:{pattern:/"(?:\\.|[^\\"])*"/,greedy:!0},keyword:/\b(?:abstract|accum|addcoltotals|addinfo|addtotals|analyzefields|anomalies|anomalousvalue|anomalydetection|append|appendcols|appendcsv|appendlookup|appendpipe|arules|associate|audit|autoregress|bin|bucket|bucketdir|chart|cluster|cofilter|collect|concurrency|contingency|convert|correlate|datamodel|dbinspect|dedup|delete|delta|diff|erex|eval|eventcount|eventstats|extract|fieldformat|fields|fieldsummary|filldown|fillnull|findtypes|folderize|foreach|format|from|gauge|gentimes|geom|geomfilter|geostats|head|highlight|history|iconify|input|inputcsv|inputlookup|iplocation|join|kmeans|kv|kvform|loadjob|localize|localop|lookup|makecontinuous|makemv|makeresults|map|mcollect|metadata|metasearch|meventcollect|mstats|multikv|multisearch|mvcombine|mvexpand|nomv|outlier|outputcsv|outputlookup|outputtext|overlap|pivot|predict|rangemap|rare|regex|relevancy|reltime|rename|replace|rest|return|reverse|rex|rtorder|run|savedsearch|script|scrub|search|searchtxn|selfjoin|sendemail|set|setfields|sichart|sirare|sistats|sitimechart|sitop|sort|spath|stats|strcat|streamstats|table|tags|tail|timechart|timewrap|top|transaction|transpose|trendline|tscollect|tstats|typeahead|typelearner|typer|union|uniq|untable|where|x11|xmlkv|xmlunescape|xpath|xyseries)\b/i,"operator-word":{pattern:/\b(?:and|as|by|not|or|xor)\b/i,alias:"operator"},function:/\b\w+(?=\s*\()/,property:/\b\w+(?=\s*=(?!=))/,date:{pattern:/\b\d{1,2}\/\d{1,2}\/\d{1,4}(?:(?::\d{1,2}){3})?\b/,alias:"number"},number:/\b\d+(?:\.\d+)?\b/,boolean:/\b(?:f|false|t|true)\b/i,operator:/[<>=]=?|[-+*/%|]/,punctuation:/[()[\],]/}}Jf.displayName="sqf";Jf.aliases=[];function Jf(t){t.register(le),t.languages.sqf=t.languages.extend("clike",{string:{pattern:/"(?:(?:"")?[^"])*"(?!")|'(?:[^'])*'/,greedy:!0},keyword:/\b(?:breakOut|breakTo|call|case|catch|default|do|echo|else|execFSM|execVM|exitWith|for|forEach|forEachMember|forEachMemberAgent|forEachMemberTeam|from|goto|if|nil|preprocessFile|preprocessFileLineNumbers|private|scopeName|spawn|step|switch|then|throw|to|try|while|with)\b/i,boolean:/\b(?:false|true)\b/i,function:/\b(?:abs|accTime|acos|action|actionIDs|actionKeys|actionKeysImages|actionKeysNames|actionKeysNamesArray|actionName|actionParams|activateAddons|activatedAddons|activateKey|add3DENConnection|add3DENEventHandler|add3DENLayer|addAction|addBackpack|addBackpackCargo|addBackpackCargoGlobal|addBackpackGlobal|addCamShake|addCuratorAddons|addCuratorCameraArea|addCuratorEditableObjects|addCuratorEditingArea|addCuratorPoints|addEditorObject|addEventHandler|addForce|addForceGeneratorRTD|addGoggles|addGroupIcon|addHandgunItem|addHeadgear|addItem|addItemCargo|addItemCargoGlobal|addItemPool|addItemToBackpack|addItemToUniform|addItemToVest|addLiveStats|addMagazine|addMagazineAmmoCargo|addMagazineCargo|addMagazineCargoGlobal|addMagazineGlobal|addMagazinePool|addMagazines|addMagazineTurret|addMenu|addMenuItem|addMissionEventHandler|addMPEventHandler|addMusicEventHandler|addOwnedMine|addPlayerScores|addPrimaryWeaponItem|addPublicVariableEventHandler|addRating|addResources|addScore|addScoreSide|addSecondaryWeaponItem|addSwitchableUnit|addTeamMember|addToRemainsCollector|addTorque|addUniform|addVehicle|addVest|addWaypoint|addWeapon|addWeaponCargo|addWeaponCargoGlobal|addWeaponGlobal|addWeaponItem|addWeaponPool|addWeaponTurret|admin|agent|agents|AGLToASL|aimedAtTarget|aimPos|airDensityCurveRTD|airDensityRTD|airplaneThrottle|airportSide|AISFinishHeal|alive|all3DENEntities|allAirports|allControls|allCurators|allCutLayers|allDead|allDeadMen|allDisplays|allGroups|allMapMarkers|allMines|allMissionObjects|allow3DMode|allowCrewInImmobile|allowCuratorLogicIgnoreAreas|allowDamage|allowDammage|allowFileOperations|allowFleeing|allowGetIn|allowSprint|allPlayers|allSimpleObjects|allSites|allTurrets|allUnits|allUnitsUAV|allVariables|ammo|ammoOnPylon|animate|animateBay|animateDoor|animatePylon|animateSource|animationNames|animationPhase|animationSourcePhase|animationState|append|apply|armoryPoints|arrayIntersect|asin|ASLToAGL|ASLToATL|assert|assignAsCargo|assignAsCargoIndex|assignAsCommander|assignAsDriver|assignAsGunner|assignAsTurret|assignCurator|assignedCargo|assignedCommander|assignedDriver|assignedGunner|assignedItems|assignedTarget|assignedTeam|assignedVehicle|assignedVehicleRole|assignItem|assignTeam|assignToAirport|atan|atan2|atg|ATLToASL|attachedObject|attachedObjects|attachedTo|attachObject|attachTo|attackEnabled|backpack|backpackCargo|backpackContainer|backpackItems|backpackMagazines|backpackSpaceFor|behaviour|benchmark|binocular|blufor|boundingBox|boundingBoxReal|boundingCenter|briefingName|buildingExit|buildingPos|buldozer_EnableRoadDiag|buldozer_IsEnabledRoadDiag|buldozer_LoadNewRoads|buldozer_reloadOperMap|buttonAction|buttonSetAction|cadetMode|callExtension|camCommand|camCommit|camCommitPrepared|camCommitted|camConstuctionSetParams|camCreate|camDestroy|cameraEffect|cameraEffectEnableHUD|cameraInterest|cameraOn|cameraView|campaignConfigFile|camPreload|camPreloaded|camPrepareBank|camPrepareDir|camPrepareDive|camPrepareFocus|camPrepareFov|camPrepareFovRange|camPreparePos|camPrepareRelPos|camPrepareTarget|camSetBank|camSetDir|camSetDive|camSetFocus|camSetFov|camSetFovRange|camSetPos|camSetRelPos|camSetTarget|camTarget|camUseNVG|canAdd|canAddItemToBackpack|canAddItemToUniform|canAddItemToVest|cancelSimpleTaskDestination|canFire|canMove|canSlingLoad|canStand|canSuspend|canTriggerDynamicSimulation|canUnloadInCombat|canVehicleCargo|captive|captiveNum|cbChecked|cbSetChecked|ceil|channelEnabled|cheatsEnabled|checkAIFeature|checkVisibility|civilian|className|clear3DENAttribute|clear3DENInventory|clearAllItemsFromBackpack|clearBackpackCargo|clearBackpackCargoGlobal|clearForcesRTD|clearGroupIcons|clearItemCargo|clearItemCargoGlobal|clearItemPool|clearMagazineCargo|clearMagazineCargoGlobal|clearMagazinePool|clearOverlay|clearRadio|clearVehicleInit|clearWeaponCargo|clearWeaponCargoGlobal|clearWeaponPool|clientOwner|closeDialog|closeDisplay|closeOverlay|collapseObjectTree|collect3DENHistory|collectiveRTD|combatMode|commandArtilleryFire|commandChat|commander|commandFire|commandFollow|commandFSM|commandGetOut|commandingMenu|commandMove|commandRadio|commandStop|commandSuppressiveFire|commandTarget|commandWatch|comment|commitOverlay|compile|compileFinal|completedFSM|composeText|configClasses|configFile|configHierarchy|configName|configNull|configProperties|configSourceAddonList|configSourceMod|configSourceModList|confirmSensorTarget|connectTerminalToUAV|controlNull|controlsGroupCtrl|copyFromClipboard|copyToClipboard|copyWaypoints|cos|count|countEnemy|countFriendly|countSide|countType|countUnknown|create3DENComposition|create3DENEntity|createAgent|createCenter|createDialog|createDiaryLink|createDiaryRecord|createDiarySubject|createDisplay|createGearDialog|createGroup|createGuardedPoint|createLocation|createMarker|createMarkerLocal|createMenu|createMine|createMissionDisplay|createMPCampaignDisplay|createSimpleObject|createSimpleTask|createSite|createSoundSource|createTask|createTeam|createTrigger|createUnit|createVehicle|createVehicleCrew|createVehicleLocal|crew|ctAddHeader|ctAddRow|ctClear|ctCurSel|ctData|ctFindHeaderRows|ctFindRowHeader|ctHeaderControls|ctHeaderCount|ctRemoveHeaders|ctRemoveRows|ctrlActivate|ctrlAddEventHandler|ctrlAngle|ctrlAutoScrollDelay|ctrlAutoScrollRewind|ctrlAutoScrollSpeed|ctrlChecked|ctrlClassName|ctrlCommit|ctrlCommitted|ctrlCreate|ctrlDelete|ctrlEnable|ctrlEnabled|ctrlFade|ctrlHTMLLoaded|ctrlIDC|ctrlIDD|ctrlMapAnimAdd|ctrlMapAnimClear|ctrlMapAnimCommit|ctrlMapAnimDone|ctrlMapCursor|ctrlMapMouseOver|ctrlMapScale|ctrlMapScreenToWorld|ctrlMapWorldToScreen|ctrlModel|ctrlModelDirAndUp|ctrlModelScale|ctrlParent|ctrlParentControlsGroup|ctrlPosition|ctrlRemoveAllEventHandlers|ctrlRemoveEventHandler|ctrlScale|ctrlSetActiveColor|ctrlSetAngle|ctrlSetAutoScrollDelay|ctrlSetAutoScrollRewind|ctrlSetAutoScrollSpeed|ctrlSetBackgroundColor|ctrlSetChecked|ctrlSetDisabledColor|ctrlSetEventHandler|ctrlSetFade|ctrlSetFocus|ctrlSetFont|ctrlSetFontH1|ctrlSetFontH1B|ctrlSetFontH2|ctrlSetFontH2B|ctrlSetFontH3|ctrlSetFontH3B|ctrlSetFontH4|ctrlSetFontH4B|ctrlSetFontH5|ctrlSetFontH5B|ctrlSetFontH6|ctrlSetFontH6B|ctrlSetFontHeight|ctrlSetFontHeightH1|ctrlSetFontHeightH2|ctrlSetFontHeightH3|ctrlSetFontHeightH4|ctrlSetFontHeightH5|ctrlSetFontHeightH6|ctrlSetFontHeightSecondary|ctrlSetFontP|ctrlSetFontPB|ctrlSetFontSecondary|ctrlSetForegroundColor|ctrlSetModel|ctrlSetModelDirAndUp|ctrlSetModelScale|ctrlSetPixelPrecision|ctrlSetPosition|ctrlSetScale|ctrlSetStructuredText|ctrlSetText|ctrlSetTextColor|ctrlSetTextColorSecondary|ctrlSetTextSecondary|ctrlSetTooltip|ctrlSetTooltipColorBox|ctrlSetTooltipColorShade|ctrlSetTooltipColorText|ctrlShow|ctrlShown|ctrlText|ctrlTextHeight|ctrlTextSecondary|ctrlTextWidth|ctrlType|ctrlVisible|ctRowControls|ctRowCount|ctSetCurSel|ctSetData|ctSetHeaderTemplate|ctSetRowTemplate|ctSetValue|ctValue|curatorAddons|curatorCamera|curatorCameraArea|curatorCameraAreaCeiling|curatorCoef|curatorEditableObjects|curatorEditingArea|curatorEditingAreaType|curatorMouseOver|curatorPoints|curatorRegisteredObjects|curatorSelected|curatorWaypointCost|current3DENOperation|currentChannel|currentCommand|currentMagazine|currentMagazineDetail|currentMagazineDetailTurret|currentMagazineTurret|currentMuzzle|currentNamespace|currentTask|currentTasks|currentThrowable|currentVisionMode|currentWaypoint|currentWeapon|currentWeaponMode|currentWeaponTurret|currentZeroing|cursorObject|cursorTarget|customChat|customRadio|cutFadeOut|cutObj|cutRsc|cutText|damage|date|dateToNumber|daytime|deActivateKey|debriefingText|debugFSM|debugLog|deg|delete3DENEntities|deleteAt|deleteCenter|deleteCollection|deleteEditorObject|deleteGroup|deleteGroupWhenEmpty|deleteIdentity|deleteLocation|deleteMarker|deleteMarkerLocal|deleteRange|deleteResources|deleteSite|deleteStatus|deleteTeam|deleteVehicle|deleteVehicleCrew|deleteWaypoint|detach|detectedMines|diag_activeMissionFSMs|diag_activeScripts|diag_activeSQFScripts|diag_activeSQSScripts|diag_captureFrame|diag_captureFrameToFile|diag_captureSlowFrame|diag_codePerformance|diag_drawMode|diag_dynamicSimulationEnd|diag_enable|diag_enabled|diag_fps|diag_fpsMin|diag_frameNo|diag_lightNewLoad|diag_list|diag_log|diag_logSlowFrame|diag_mergeConfigFile|diag_recordTurretLimits|diag_setLightNew|diag_tickTime|diag_toggle|dialog|diarySubjectExists|didJIP|didJIPOwner|difficulty|difficultyEnabled|difficultyEnabledRTD|difficultyOption|direction|directSay|disableAI|disableCollisionWith|disableConversation|disableDebriefingStats|disableMapIndicators|disableNVGEquipment|disableRemoteSensors|disableSerialization|disableTIEquipment|disableUAVConnectability|disableUserInput|displayAddEventHandler|displayCtrl|displayNull|displayParent|displayRemoveAllEventHandlers|displayRemoveEventHandler|displaySetEventHandler|dissolveTeam|distance|distance2D|distanceSqr|distributionRegion|do3DENAction|doArtilleryFire|doFire|doFollow|doFSM|doGetOut|doMove|doorPhase|doStop|doSuppressiveFire|doTarget|doWatch|drawArrow|drawEllipse|drawIcon|drawIcon3D|drawLine|drawLine3D|drawLink|drawLocation|drawPolygon|drawRectangle|drawTriangle|driver|drop|dynamicSimulationDistance|dynamicSimulationDistanceCoef|dynamicSimulationEnabled|dynamicSimulationSystemEnabled|east|edit3DENMissionAttributes|editObject|editorSetEventHandler|effectiveCommander|emptyPositions|enableAI|enableAIFeature|enableAimPrecision|enableAttack|enableAudioFeature|enableAutoStartUpRTD|enableAutoTrimRTD|enableCamShake|enableCaustics|enableChannel|enableCollisionWith|enableCopilot|enableDebriefingStats|enableDiagLegend|enableDynamicSimulation|enableDynamicSimulationSystem|enableEndDialog|enableEngineArtillery|enableEnvironment|enableFatigue|enableGunLights|enableInfoPanelComponent|enableIRLasers|enableMimics|enablePersonTurret|enableRadio|enableReload|enableRopeAttach|enableSatNormalOnDetail|enableSaving|enableSentences|enableSimulation|enableSimulationGlobal|enableStamina|enableStressDamage|enableTeamSwitch|enableTraffic|enableUAVConnectability|enableUAVWaypoints|enableVehicleCargo|enableVehicleSensor|enableWeaponDisassembly|endl|endLoadingScreen|endMission|engineOn|enginesIsOnRTD|enginesPowerRTD|enginesRpmRTD|enginesTorqueRTD|entities|environmentEnabled|estimatedEndServerTime|estimatedTimeLeft|evalObjectArgument|everyBackpack|everyContainer|exec|execEditorScript|exp|expectedDestination|exportJIPMessages|eyeDirection|eyePos|face|faction|fadeMusic|fadeRadio|fadeSound|fadeSpeech|failMission|fillWeaponsFromPool|find|findCover|findDisplay|findEditorObject|findEmptyPosition|findEmptyPositionReady|findIf|findNearestEnemy|finishMissionInit|finite|fire|fireAtTarget|firstBackpack|flag|flagAnimationPhase|flagOwner|flagSide|flagTexture|fleeing|floor|flyInHeight|flyInHeightASL|fog|fogForecast|fogParams|forceAddUniform|forceAtPositionRTD|forcedMap|forceEnd|forceFlagTexture|forceFollowRoad|forceGeneratorRTD|forceMap|forceRespawn|forceSpeed|forceWalk|forceWeaponFire|forceWeatherChange|forgetTarget|format|formation|formationDirection|formationLeader|formationMembers|formationPosition|formationTask|formatText|formLeader|freeLook|fromEditor|fuel|fullCrew|gearIDCAmmoCount|gearSlotAmmoCount|gearSlotData|get3DENActionState|get3DENAttribute|get3DENCamera|get3DENConnections|get3DENEntity|get3DENEntityID|get3DENGrid|get3DENIconsVisible|get3DENLayerEntities|get3DENLinesVisible|get3DENMissionAttribute|get3DENMouseOver|get3DENSelected|getAimingCoef|getAllEnvSoundControllers|getAllHitPointsDamage|getAllOwnedMines|getAllSoundControllers|getAmmoCargo|getAnimAimPrecision|getAnimSpeedCoef|getArray|getArtilleryAmmo|getArtilleryComputerSettings|getArtilleryETA|getAssignedCuratorLogic|getAssignedCuratorUnit|getBackpackCargo|getBleedingRemaining|getBurningValue|getCameraViewDirection|getCargoIndex|getCenterOfMass|getClientState|getClientStateNumber|getCompatiblePylonMagazines|getConnectedUAV|getContainerMaxLoad|getCursorObjectParams|getCustomAimCoef|getDammage|getDescription|getDir|getDirVisual|getDLCAssetsUsage|getDLCAssetsUsageByName|getDLCs|getDLCUsageTime|getEditorCamera|getEditorMode|getEditorObjectScope|getElevationOffset|getEngineTargetRpmRTD|getEnvSoundController|getFatigue|getFieldManualStartPage|getForcedFlagTexture|getFriend|getFSMVariable|getFuelCargo|getGroupIcon|getGroupIconParams|getGroupIcons|getHideFrom|getHit|getHitIndex|getHitPointDamage|getItemCargo|getMagazineCargo|getMarkerColor|getMarkerPos|getMarkerSize|getMarkerType|getMass|getMissionConfig|getMissionConfigValue|getMissionDLCs|getMissionLayerEntities|getMissionLayers|getModelInfo|getMousePosition|getMusicPlayedTime|getNumber|getObjectArgument|getObjectChildren|getObjectDLC|getObjectMaterials|getObjectProxy|getObjectTextures|getObjectType|getObjectViewDistance|getOxygenRemaining|getPersonUsedDLCs|getPilotCameraDirection|getPilotCameraPosition|getPilotCameraRotation|getPilotCameraTarget|getPlateNumber|getPlayerChannel|getPlayerScores|getPlayerUID|getPlayerUIDOld|getPos|getPosASL|getPosASLVisual|getPosASLW|getPosATL|getPosATLVisual|getPosVisual|getPosWorld|getPylonMagazines|getRelDir|getRelPos|getRemoteSensorsDisabled|getRepairCargo|getResolution|getRotorBrakeRTD|getShadowDistance|getShotParents|getSlingLoad|getSoundController|getSoundControllerResult|getSpeed|getStamina|getStatValue|getSuppression|getTerrainGrid|getTerrainHeightASL|getText|getTotalDLCUsageTime|getTrimOffsetRTD|getUnitLoadout|getUnitTrait|getUserMFDText|getUserMFDValue|getVariable|getVehicleCargo|getWeaponCargo|getWeaponSway|getWingsOrientationRTD|getWingsPositionRTD|getWPPos|glanceAt|globalChat|globalRadio|goggles|group|groupChat|groupFromNetId|groupIconSelectable|groupIconsVisible|groupId|groupOwner|groupRadio|groupSelectedUnits|groupSelectUnit|grpNull|gunner|gusts|halt|handgunItems|handgunMagazine|handgunWeapon|handsHit|hasInterface|hasPilotCamera|hasWeapon|hcAllGroups|hcGroupParams|hcLeader|hcRemoveAllGroups|hcRemoveGroup|hcSelected|hcSelectGroup|hcSetGroup|hcShowBar|hcShownBar|headgear|hideBody|hideObject|hideObjectGlobal|hideSelection|hint|hintC|hintCadet|hintSilent|hmd|hostMission|htmlLoad|HUDMovementLevels|humidity|image|importAllGroups|importance|in|inArea|inAreaArray|incapacitatedState|independent|inflame|inflamed|infoPanel|infoPanelComponentEnabled|infoPanelComponents|infoPanels|inGameUISetEventHandler|inheritsFrom|initAmbientLife|inPolygon|inputAction|inRangeOfArtillery|insertEditorObject|intersect|is3DEN|is3DENMultiplayer|isAbleToBreathe|isAgent|isAimPrecisionEnabled|isArray|isAutoHoverOn|isAutonomous|isAutoStartUpEnabledRTD|isAutotest|isAutoTrimOnRTD|isBleeding|isBurning|isClass|isCollisionLightOn|isCopilotEnabled|isDamageAllowed|isDedicated|isDLCAvailable|isEngineOn|isEqualTo|isEqualType|isEqualTypeAll|isEqualTypeAny|isEqualTypeArray|isEqualTypeParams|isFilePatchingEnabled|isFlashlightOn|isFlatEmpty|isForcedWalk|isFormationLeader|isGroupDeletedWhenEmpty|isHidden|isInRemainsCollector|isInstructorFigureEnabled|isIRLaserOn|isKeyActive|isKindOf|isLaserOn|isLightOn|isLocalized|isManualFire|isMarkedForCollection|isMultiplayer|isMultiplayerSolo|isNil|isNull|isNumber|isObjectHidden|isObjectRTD|isOnRoad|isPipEnabled|isPlayer|isRealTime|isRemoteExecuted|isRemoteExecutedJIP|isServer|isShowing3DIcons|isSimpleObject|isSprintAllowed|isStaminaEnabled|isSteamMission|isStreamFriendlyUIEnabled|isStressDamageEnabled|isText|isTouchingGround|isTurnedOut|isTutHintsEnabled|isUAVConnectable|isUAVConnected|isUIContext|isUniformAllowed|isVehicleCargo|isVehicleRadarOn|isVehicleSensorEnabled|isWalking|isWeaponDeployed|isWeaponRested|itemCargo|items|itemsWithMagazines|join|joinAs|joinAsSilent|joinSilent|joinString|kbAddDatabase|kbAddDatabaseTargets|kbAddTopic|kbHasTopic|kbReact|kbRemoveTopic|kbTell|kbWasSaid|keyImage|keyName|knowsAbout|land|landAt|landResult|language|laserTarget|lbAdd|lbClear|lbColor|lbColorRight|lbCurSel|lbData|lbDelete|lbIsSelected|lbPicture|lbPictureRight|lbSelection|lbSetColor|lbSetColorRight|lbSetCurSel|lbSetData|lbSetPicture|lbSetPictureColor|lbSetPictureColorDisabled|lbSetPictureColorSelected|lbSetPictureRight|lbSetPictureRightColor|lbSetPictureRightColorDisabled|lbSetPictureRightColorSelected|lbSetSelectColor|lbSetSelectColorRight|lbSetSelected|lbSetText|lbSetTextRight|lbSetTooltip|lbSetValue|lbSize|lbSort|lbSortByValue|lbText|lbTextRight|lbValue|leader|leaderboardDeInit|leaderboardGetRows|leaderboardInit|leaderboardRequestRowsFriends|leaderboardRequestRowsGlobal|leaderboardRequestRowsGlobalAroundUser|leaderboardsRequestUploadScore|leaderboardsRequestUploadScoreKeepBest|leaderboardState|leaveVehicle|libraryCredits|libraryDisclaimers|lifeState|lightAttachObject|lightDetachObject|lightIsOn|lightnings|limitSpeed|linearConversion|lineBreak|lineIntersects|lineIntersectsObjs|lineIntersectsSurfaces|lineIntersectsWith|linkItem|list|listObjects|listRemoteTargets|listVehicleSensors|ln|lnbAddArray|lnbAddColumn|lnbAddRow|lnbClear|lnbColor|lnbColorRight|lnbCurSelRow|lnbData|lnbDeleteColumn|lnbDeleteRow|lnbGetColumnsPosition|lnbPicture|lnbPictureRight|lnbSetColor|lnbSetColorRight|lnbSetColumnsPos|lnbSetCurSelRow|lnbSetData|lnbSetPicture|lnbSetPictureColor|lnbSetPictureColorRight|lnbSetPictureColorSelected|lnbSetPictureColorSelectedRight|lnbSetPictureRight|lnbSetText|lnbSetTextRight|lnbSetValue|lnbSize|lnbSort|lnbSortByValue|lnbText|lnbTextRight|lnbValue|load|loadAbs|loadBackpack|loadFile|loadGame|loadIdentity|loadMagazine|loadOverlay|loadStatus|loadUniform|loadVest|local|localize|locationNull|locationPosition|lock|lockCameraTo|lockCargo|lockDriver|locked|lockedCargo|lockedDriver|lockedTurret|lockIdentity|lockTurret|lockWP|log|logEntities|logNetwork|logNetworkTerminate|lookAt|lookAtPos|magazineCargo|magazines|magazinesAllTurrets|magazinesAmmo|magazinesAmmoCargo|magazinesAmmoFull|magazinesDetail|magazinesDetailBackpack|magazinesDetailUniform|magazinesDetailVest|magazinesTurret|magazineTurretAmmo|mapAnimAdd|mapAnimClear|mapAnimCommit|mapAnimDone|mapCenterOnCamera|mapGridPosition|markAsFinishedOnSteam|markerAlpha|markerBrush|markerColor|markerDir|markerPos|markerShape|markerSize|markerText|markerType|max|members|menuAction|menuAdd|menuChecked|menuClear|menuCollapse|menuData|menuDelete|menuEnable|menuEnabled|menuExpand|menuHover|menuPicture|menuSetAction|menuSetCheck|menuSetData|menuSetPicture|menuSetValue|menuShortcut|menuShortcutText|menuSize|menuSort|menuText|menuURL|menuValue|min|mineActive|mineDetectedBy|missionConfigFile|missionDifficulty|missionName|missionNamespace|missionStart|missionVersion|modelToWorld|modelToWorldVisual|modelToWorldVisualWorld|modelToWorldWorld|modParams|moonIntensity|moonPhase|morale|move|move3DENCamera|moveInAny|moveInCargo|moveInCommander|moveInDriver|moveInGunner|moveInTurret|moveObjectToEnd|moveOut|moveTime|moveTo|moveToCompleted|moveToFailed|musicVolume|name|nameSound|nearEntities|nearestBuilding|nearestLocation|nearestLocations|nearestLocationWithDubbing|nearestObject|nearestObjects|nearestTerrainObjects|nearObjects|nearObjectsReady|nearRoads|nearSupplies|nearTargets|needReload|netId|netObjNull|newOverlay|nextMenuItemIndex|nextWeatherChange|nMenuItems|numberOfEnginesRTD|numberToDate|objectCurators|objectFromNetId|objectParent|objNull|objStatus|onBriefingGear|onBriefingGroup|onBriefingNotes|onBriefingPlan|onBriefingTeamSwitch|onCommandModeChanged|onDoubleClick|onEachFrame|onGroupIconClick|onGroupIconOverEnter|onGroupIconOverLeave|onHCGroupSelectionChanged|onMapSingleClick|onPlayerConnected|onPlayerDisconnected|onPreloadFinished|onPreloadStarted|onShowNewObject|onTeamSwitch|openCuratorInterface|openDLCPage|openDSInterface|openMap|openSteamApp|openYoutubeVideo|opfor|orderGetIn|overcast|overcastForecast|owner|param|params|parseNumber|parseSimpleArray|parseText|parsingNamespace|particlesQuality|pi|pickWeaponPool|pitch|pixelGrid|pixelGridBase|pixelGridNoUIScale|pixelH|pixelW|playableSlotsNumber|playableUnits|playAction|playActionNow|player|playerRespawnTime|playerSide|playersNumber|playGesture|playMission|playMove|playMoveNow|playMusic|playScriptedMission|playSound|playSound3D|position|positionCameraToWorld|posScreenToWorld|posWorldToScreen|ppEffectAdjust|ppEffectCommit|ppEffectCommitted|ppEffectCreate|ppEffectDestroy|ppEffectEnable|ppEffectEnabled|ppEffectForceInNVG|precision|preloadCamera|preloadObject|preloadSound|preloadTitleObj|preloadTitleRsc|primaryWeapon|primaryWeaponItems|primaryWeaponMagazine|priority|processDiaryLink|processInitCommands|productVersion|profileName|profileNamespace|profileNameSteam|progressLoadingScreen|progressPosition|progressSetPosition|publicVariable|publicVariableClient|publicVariableServer|pushBack|pushBackUnique|putWeaponPool|queryItemsPool|queryMagazinePool|queryWeaponPool|rad|radioChannelAdd|radioChannelCreate|radioChannelRemove|radioChannelSetCallSign|radioChannelSetLabel|radioVolume|rain|rainbow|random|rank|rankId|rating|rectangular|registeredTasks|registerTask|reload|reloadEnabled|remoteControl|remoteExec|remoteExecCall|remoteExecutedOwner|remove3DENConnection|remove3DENEventHandler|remove3DENLayer|removeAction|removeAll3DENEventHandlers|removeAllActions|removeAllAssignedItems|removeAllContainers|removeAllCuratorAddons|removeAllCuratorCameraAreas|removeAllCuratorEditingAreas|removeAllEventHandlers|removeAllHandgunItems|removeAllItems|removeAllItemsWithMagazines|removeAllMissionEventHandlers|removeAllMPEventHandlers|removeAllMusicEventHandlers|removeAllOwnedMines|removeAllPrimaryWeaponItems|removeAllWeapons|removeBackpack|removeBackpackGlobal|removeCuratorAddons|removeCuratorCameraArea|removeCuratorEditableObjects|removeCuratorEditingArea|removeDrawIcon|removeDrawLinks|removeEventHandler|removeFromRemainsCollector|removeGoggles|removeGroupIcon|removeHandgunItem|removeHeadgear|removeItem|removeItemFromBackpack|removeItemFromUniform|removeItemFromVest|removeItems|removeMagazine|removeMagazineGlobal|removeMagazines|removeMagazinesTurret|removeMagazineTurret|removeMenuItem|removeMissionEventHandler|removeMPEventHandler|removeMusicEventHandler|removeOwnedMine|removePrimaryWeaponItem|removeSecondaryWeaponItem|removeSimpleTask|removeSwitchableUnit|removeTeamMember|removeUniform|removeVest|removeWeapon|removeWeaponAttachmentCargo|removeWeaponCargo|removeWeaponGlobal|removeWeaponTurret|reportRemoteTarget|requiredVersion|resetCamShake|resetSubgroupDirection|resistance|resize|resources|respawnVehicle|restartEditorCamera|reveal|revealMine|reverse|reversedMouseY|roadAt|roadsConnectedTo|roleDescription|ropeAttachedObjects|ropeAttachedTo|ropeAttachEnabled|ropeAttachTo|ropeCreate|ropeCut|ropeDestroy|ropeDetach|ropeEndPosition|ropeLength|ropes|ropeUnwind|ropeUnwound|rotorsForcesRTD|rotorsRpmRTD|round|runInitScript|safeZoneH|safeZoneW|safeZoneWAbs|safeZoneX|safeZoneXAbs|safeZoneY|save3DENInventory|saveGame|saveIdentity|saveJoysticks|saveOverlay|saveProfileNamespace|saveStatus|saveVar|savingEnabled|say|say2D|say3D|score|scoreSide|screenshot|screenToWorld|scriptDone|scriptName|scriptNull|scudState|secondaryWeapon|secondaryWeaponItems|secondaryWeaponMagazine|select|selectBestPlaces|selectDiarySubject|selectedEditorObjects|selectEditorObject|selectionNames|selectionPosition|selectLeader|selectMax|selectMin|selectNoPlayer|selectPlayer|selectRandom|selectRandomWeighted|selectWeapon|selectWeaponTurret|sendAUMessage|sendSimpleCommand|sendTask|sendTaskResult|sendUDPMessage|serverCommand|serverCommandAvailable|serverCommandExecutable|serverName|serverTime|set|set3DENAttribute|set3DENAttributes|set3DENGrid|set3DENIconsVisible|set3DENLayer|set3DENLinesVisible|set3DENLogicType|set3DENMissionAttribute|set3DENMissionAttributes|set3DENModelsVisible|set3DENObjectType|set3DENSelected|setAccTime|setActualCollectiveRTD|setAirplaneThrottle|setAirportSide|setAmmo|setAmmoCargo|setAmmoOnPylon|setAnimSpeedCoef|setAperture|setApertureNew|setArmoryPoints|setAttributes|setAutonomous|setBehaviour|setBleedingRemaining|setBrakesRTD|setCameraInterest|setCamShakeDefParams|setCamShakeParams|setCamUseTI|setCaptive|setCenterOfMass|setCollisionLight|setCombatMode|setCompassOscillation|setConvoySeparation|setCuratorCameraAreaCeiling|setCuratorCoef|setCuratorEditingAreaType|setCuratorWaypointCost|setCurrentChannel|setCurrentTask|setCurrentWaypoint|setCustomAimCoef|setCustomWeightRTD|setDamage|setDammage|setDate|setDebriefingText|setDefaultCamera|setDestination|setDetailMapBlendPars|setDir|setDirection|setDrawIcon|setDriveOnPath|setDropInterval|setDynamicSimulationDistance|setDynamicSimulationDistanceCoef|setEditorMode|setEditorObjectScope|setEffectCondition|setEngineRpmRTD|setFace|setFaceAnimation|setFatigue|setFeatureType|setFlagAnimationPhase|setFlagOwner|setFlagSide|setFlagTexture|setFog|setForceGeneratorRTD|setFormation|setFormationTask|setFormDir|setFriend|setFromEditor|setFSMVariable|setFuel|setFuelCargo|setGroupIcon|setGroupIconParams|setGroupIconsSelectable|setGroupIconsVisible|setGroupId|setGroupIdGlobal|setGroupOwner|setGusts|setHideBehind|setHit|setHitIndex|setHitPointDamage|setHorizonParallaxCoef|setHUDMovementLevels|setIdentity|setImportance|setInfoPanel|setLeader|setLightAmbient|setLightAttenuation|setLightBrightness|setLightColor|setLightDayLight|setLightFlareMaxDistance|setLightFlareSize|setLightIntensity|setLightnings|setLightUseFlare|setLocalWindParams|setMagazineTurretAmmo|setMarkerAlpha|setMarkerAlphaLocal|setMarkerBrush|setMarkerBrushLocal|setMarkerColor|setMarkerColorLocal|setMarkerDir|setMarkerDirLocal|setMarkerPos|setMarkerPosLocal|setMarkerShape|setMarkerShapeLocal|setMarkerSize|setMarkerSizeLocal|setMarkerText|setMarkerTextLocal|setMarkerType|setMarkerTypeLocal|setMass|setMimic|setMousePosition|setMusicEffect|setMusicEventHandler|setName|setNameSound|setObjectArguments|setObjectMaterial|setObjectMaterialGlobal|setObjectProxy|setObjectTexture|setObjectTextureGlobal|setObjectViewDistance|setOvercast|setOwner|setOxygenRemaining|setParticleCircle|setParticleClass|setParticleFire|setParticleParams|setParticleRandom|setPilotCameraDirection|setPilotCameraRotation|setPilotCameraTarget|setPilotLight|setPiPEffect|setPitch|setPlateNumber|setPlayable|setPlayerRespawnTime|setPos|setPosASL|setPosASL2|setPosASLW|setPosATL|setPosition|setPosWorld|setPylonLoadOut|setPylonsPriority|setRadioMsg|setRain|setRainbow|setRandomLip|setRank|setRectangular|setRepairCargo|setRotorBrakeRTD|setShadowDistance|setShotParents|setSide|setSimpleTaskAlwaysVisible|setSimpleTaskCustomData|setSimpleTaskDescription|setSimpleTaskDestination|setSimpleTaskTarget|setSimpleTaskType|setSimulWeatherLayers|setSize|setSkill|setSlingLoad|setSoundEffect|setSpeaker|setSpeech|setSpeedMode|setStamina|setStaminaScheme|setStatValue|setSuppression|setSystemOfUnits|setTargetAge|setTaskMarkerOffset|setTaskResult|setTaskState|setTerrainGrid|setText|setTimeMultiplier|setTitleEffect|setToneMapping|setToneMappingParams|setTrafficDensity|setTrafficDistance|setTrafficGap|setTrafficSpeed|setTriggerActivation|setTriggerArea|setTriggerStatements|setTriggerText|setTriggerTimeout|setTriggerType|setType|setUnconscious|setUnitAbility|setUnitLoadout|setUnitPos|setUnitPosWeak|setUnitRank|setUnitRecoilCoefficient|setUnitTrait|setUnloadInCombat|setUserActionText|setUserMFDText|setUserMFDValue|setVariable|setVectorDir|setVectorDirAndUp|setVectorUp|setVehicleAmmo|setVehicleAmmoDef|setVehicleArmor|setVehicleCargo|setVehicleId|setVehicleInit|setVehicleLock|setVehiclePosition|setVehicleRadar|setVehicleReceiveRemoteTargets|setVehicleReportOwnPosition|setVehicleReportRemoteTargets|setVehicleTIPars|setVehicleVarName|setVelocity|setVelocityModelSpace|setVelocityTransformation|setViewDistance|setVisibleIfTreeCollapsed|setWantedRpmRTD|setWaves|setWaypointBehaviour|setWaypointCombatMode|setWaypointCompletionRadius|setWaypointDescription|setWaypointForceBehaviour|setWaypointFormation|setWaypointHousePosition|setWaypointLoiterRadius|setWaypointLoiterType|setWaypointName|setWaypointPosition|setWaypointScript|setWaypointSpeed|setWaypointStatements|setWaypointTimeout|setWaypointType|setWaypointVisible|setWeaponReloadingTime|setWind|setWindDir|setWindForce|setWindStr|setWingForceScaleRTD|setWPPos|show3DIcons|showChat|showCinemaBorder|showCommandingMenu|showCompass|showCuratorCompass|showGPS|showHUD|showLegend|showMap|shownArtilleryComputer|shownChat|shownCompass|shownCuratorCompass|showNewEditorObject|shownGPS|shownHUD|shownMap|shownPad|shownRadio|shownScoretable|shownUAVFeed|shownWarrant|shownWatch|showPad|showRadio|showScoretable|showSubtitles|showUAVFeed|showWarrant|showWatch|showWaypoint|showWaypoints|side|sideAmbientLife|sideChat|sideEmpty|sideEnemy|sideFriendly|sideLogic|sideRadio|sideUnknown|simpleTasks|simulationEnabled|simulCloudDensity|simulCloudOcclusion|simulInClouds|simulWeatherSync|sin|size|sizeOf|skill|skillFinal|skipTime|sleep|sliderPosition|sliderRange|sliderSetPosition|sliderSetRange|sliderSetSpeed|sliderSpeed|slingLoadAssistantShown|soldierMagazines|someAmmo|sort|soundVolume|speaker|speed|speedMode|splitString|sqrt|squadParams|stance|startLoadingScreen|stop|stopEngineRTD|stopped|str|sunOrMoon|supportInfo|suppressFor|surfaceIsWater|surfaceNormal|surfaceType|swimInDepth|switchableUnits|switchAction|switchCamera|switchGesture|switchLight|switchMove|synchronizedObjects|synchronizedTriggers|synchronizedWaypoints|synchronizeObjectsAdd|synchronizeObjectsRemove|synchronizeTrigger|synchronizeWaypoint|systemChat|systemOfUnits|tan|targetKnowledge|targets|targetsAggregate|targetsQuery|taskAlwaysVisible|taskChildren|taskCompleted|taskCustomData|taskDescription|taskDestination|taskHint|taskMarkerOffset|taskNull|taskParent|taskResult|taskState|taskType|teamMember|teamMemberNull|teamName|teams|teamSwitch|teamSwitchEnabled|teamType|terminate|terrainIntersect|terrainIntersectASL|terrainIntersectAtASL|text|textLog|textLogFormat|tg|time|timeMultiplier|titleCut|titleFadeOut|titleObj|titleRsc|titleText|toArray|toFixed|toLower|toString|toUpper|triggerActivated|triggerActivation|triggerArea|triggerAttachedVehicle|triggerAttachObject|triggerAttachVehicle|triggerDynamicSimulation|triggerStatements|triggerText|triggerTimeout|triggerTimeoutCurrent|triggerType|turretLocal|turretOwner|turretUnit|tvAdd|tvClear|tvCollapse|tvCollapseAll|tvCount|tvCurSel|tvData|tvDelete|tvExpand|tvExpandAll|tvPicture|tvPictureRight|tvSetColor|tvSetCurSel|tvSetData|tvSetPicture|tvSetPictureColor|tvSetPictureColorDisabled|tvSetPictureColorSelected|tvSetPictureRight|tvSetPictureRightColor|tvSetPictureRightColorDisabled|tvSetPictureRightColorSelected|tvSetSelectColor|tvSetText|tvSetTooltip|tvSetValue|tvSort|tvSortByValue|tvText|tvTooltip|tvValue|type|typeName|typeOf|UAVControl|uiNamespace|uiSleep|unassignCurator|unassignItem|unassignTeam|unassignVehicle|underwater|uniform|uniformContainer|uniformItems|uniformMagazines|unitAddons|unitAimPosition|unitAimPositionVisual|unitBackpack|unitIsUAV|unitPos|unitReady|unitRecoilCoefficient|units|unitsBelowHeight|unlinkItem|unlockAchievement|unregisterTask|updateDrawIcon|updateMenuItem|updateObjectTree|useAIOperMapObstructionTest|useAISteeringComponent|useAudioTimeForMoves|userInputDisabled|vectorAdd|vectorCos|vectorCrossProduct|vectorDiff|vectorDir|vectorDirVisual|vectorDistance|vectorDistanceSqr|vectorDotProduct|vectorFromTo|vectorMagnitude|vectorMagnitudeSqr|vectorModelToWorld|vectorModelToWorldVisual|vectorMultiply|vectorNormalized|vectorUp|vectorUpVisual|vectorWorldToModel|vectorWorldToModelVisual|vehicle|vehicleCargoEnabled|vehicleChat|vehicleRadio|vehicleReceiveRemoteTargets|vehicleReportOwnPosition|vehicleReportRemoteTargets|vehicles|vehicleVarName|velocity|velocityModelSpace|verifySignature|vest|vestContainer|vestItems|vestMagazines|viewDistance|visibleCompass|visibleGPS|visibleMap|visiblePosition|visiblePositionASL|visibleScoretable|visibleWatch|waitUntil|waves|waypointAttachedObject|waypointAttachedVehicle|waypointAttachObject|waypointAttachVehicle|waypointBehaviour|waypointCombatMode|waypointCompletionRadius|waypointDescription|waypointForceBehaviour|waypointFormation|waypointHousePosition|waypointLoiterRadius|waypointLoiterType|waypointName|waypointPosition|waypoints|waypointScript|waypointsEnabledUAV|waypointShow|waypointSpeed|waypointStatements|waypointTimeout|waypointTimeoutCurrent|waypointType|waypointVisible|weaponAccessories|weaponAccessoriesCargo|weaponCargo|weaponDirection|weaponInertia|weaponLowered|weapons|weaponsItems|weaponsItemsCargo|weaponState|weaponsTurret|weightRTD|west|WFSideText|wind|windDir|windRTD|windStr|wingsForcesRTD|worldName|worldSize|worldToModel|worldToModelVisual|worldToScreen)\b/i,number:/(?:\$|\b0x)[\da-f]+\b|(?:\B\.\d+|\b\d+(?:\.\d+)?)(?:e[+-]?\d+)?\b/i,operator:/##|>>|&&|\|\||[!=<>]=?|[-+*/%#^]|\b(?:and|mod|not|or)\b/i,"magic-variable":{pattern:/\b(?:this|thisList|thisTrigger|_exception|_fnc_scriptName|_fnc_scriptNameParent|_forEachIndex|_this|_thisEventHandler|_thisFSM|_thisScript|_x)\b/i,alias:"keyword"},constant:/\bDIK(?:_[a-z\d]+)+\b/i}),t.languages.insertBefore("sqf","string",{macro:{pattern:/(^[ \t]*)#[a-z](?:[^\r\n\\]|\\(?:\r\n|[\s\S]))*/im,lookbehind:!0,greedy:!0,alias:"property",inside:{directive:{pattern:/#[a-z]+\b/i,alias:"keyword"},comment:t.languages.sqf.comment}}}),delete t.languages.sqf["class-name"]}eg.displayName="squirrel";eg.aliases=[];function eg(t){t.register(le),t.languages.squirrel=t.languages.extend("clike",{comment:[t.languages.clike.comment[0],{pattern:/(^|[^\\:])(?:\/\/|#).*/,lookbehind:!0,greedy:!0}],string:{pattern:/(^|[^\\"'@])(?:@"(?:[^"]|"")*"(?!")|"(?:[^\\\r\n"]|\\.)*")/,lookbehind:!0,greedy:!0},"class-name":{pattern:/(\b(?:class|enum|extends|instanceof)\s+)\w+(?:\.\w+)*/,lookbehind:!0,inside:{punctuation:/\./}},keyword:/\b(?:__FILE__|__LINE__|base|break|case|catch|class|clone|const|constructor|continue|default|delete|else|enum|extends|for|foreach|function|if|in|instanceof|local|null|resume|return|static|switch|this|throw|try|typeof|while|yield)\b/,number:/\b(?:0x[0-9a-fA-F]+|\d+(?:\.(?:\d+|[eE][+-]?\d+))?)\b/,operator:/\+\+|--|<=>|<[-<]|>>>?|&&?|\|\|?|[-+*/%!=<>]=?|[~^]|::?/,punctuation:/[(){}\[\],;.]/}),t.languages.insertBefore("squirrel","string",{char:{pattern:/(^|[^\\"'])'(?:[^\\']|\\(?:[xuU][0-9a-fA-F]{0,8}|[\s\S]))'/,lookbehind:!0,greedy:!0}}),t.languages.insertBefore("squirrel","operator",{"attribute-punctuation":{pattern:/<\/|\/>/,alias:"important"},lambda:{pattern:/@(?=\()/,alias:"operator"}})}tg.displayName="stan";tg.aliases=[];function tg(t){(function(n){var r=/\b(?:algebra_solver|algebra_solver_newton|integrate_1d|integrate_ode|integrate_ode_bdf|integrate_ode_rk45|map_rect|ode_(?:adams|bdf|ckrk|rk45)(?:_tol)?|ode_adjoint_tol_ctl|reduce_sum|reduce_sum_static)\b/;n.languages.stan={comment:/\/\/.*|\/\*[\s\S]*?\*\/|#(?!include).*/,string:{pattern:/"[\x20\x21\x23-\x5B\x5D-\x7E]*"/,greedy:!0},directive:{pattern:/^([ \t]*)#include\b.*/m,lookbehind:!0,alias:"property"},"function-arg":{pattern:RegExp("("+r.source+/\s*\(\s*/.source+")"+/[a-zA-Z]\w*/.source),lookbehind:!0,alias:"function"},constraint:{pattern:/(\b(?:int|matrix|real|row_vector|vector)\s*)<[^<>]*>/,lookbehind:!0,inside:{expression:{pattern:/(=\s*)\S(?:\S|\s+(?!\s))*?(?=\s*(?:>$|,\s*\w+\s*=))/,lookbehind:!0,inside:null},property:/\b[a-z]\w*(?=\s*=)/i,operator:/=/,punctuation:/^<|>$|,/}},keyword:[{pattern:/\bdata(?=\s*\{)|\b(?:functions|generated|model|parameters|quantities|transformed)\b/,alias:"program-block"},/\b(?:array|break|cholesky_factor_corr|cholesky_factor_cov|complex|continue|corr_matrix|cov_matrix|data|else|for|if|in|increment_log_prob|int|matrix|ordered|positive_ordered|print|real|reject|return|row_vector|simplex|target|unit_vector|vector|void|while)\b/,r],function:/\b[a-z]\w*(?=\s*\()/i,number:/(?:\b\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\B\.\d+(?:_\d+)*)(?:E[+-]?\d+(?:_\d+)*)?i?(?!\w)/i,boolean:/\b(?:false|true)\b/,operator:/<-|\.[*/]=?|\|\|?|&&|[!=<>+\-*/]=?|['^%~?:]/,punctuation:/[()\[\]{},;]/},n.languages.stan.constraint.inside.expression.inside=n.languages.stan})(t)}ng.displayName="stata";ng.aliases=[];function ng(t){t.register(ts),t.register(hc),t.register(Oa),t.languages.stata={comment:[{pattern:/(^[ \t]*)\*.*/m,lookbehind:!0,greedy:!0},{pattern:/(^|\s)\/\/.*|\/\*[\s\S]*?\*\//,lookbehind:!0,greedy:!0}],"string-literal":{pattern:/"[^"\r\n]*"|[‘`']".*?"[’`']/,greedy:!0,inside:{interpolation:{pattern:/\$\{[^{}]*\}|[‘`']\w[^’`'\r\n]*[’`']/,inside:{punctuation:/^\$\{|\}$/,expression:{pattern:/[\s\S]+/,inside:null}}},string:/[\s\S]+/}},mata:{pattern:/(^[ \t]*mata[ \t]*:)[\s\S]+?(?=^end\b)/m,lookbehind:!0,greedy:!0,alias:"language-mata",inside:t.languages.mata},java:{pattern:/(^[ \t]*java[ \t]*:)[\s\S]+?(?=^end\b)/m,lookbehind:!0,greedy:!0,alias:"language-java",inside:t.languages.java},python:{pattern:/(^[ \t]*python[ \t]*:)[\s\S]+?(?=^end\b)/m,lookbehind:!0,greedy:!0,alias:"language-python",inside:t.languages.python},command:{pattern:/(^[ \t]*(?:\.[ \t]+)?(?:(?:bayes|bootstrap|by|bysort|capture|collect|fmm|fp|frame|jackknife|mfp|mi|nestreg|noisily|permute|quietly|rolling|simulate|statsby|stepwise|svy|version|xi)\b[^:\r\n]*:[ \t]*|(?:capture|noisily|quietly|version)[ \t]+)?)[a-zA-Z]\w*/m,lookbehind:!0,greedy:!0,alias:"keyword"},variable:/\$\w+|[‘`']\w[^’`'\r\n]*[’`']/,keyword:/\b(?:bayes|bootstrap|by|bysort|capture|clear|collect|fmm|fp|frame|if|in|jackknife|mi[ \t]+estimate|mfp|nestreg|noisily|of|permute|quietly|rolling|simulate|sort|statsby|stepwise|svy|varlist|version|xi)\b/,boolean:/\b(?:off|on)\b/,number:/\b\d+(?:\.\d+)?\b|\B\.\d+/,function:/\b[a-z_]\w*(?=\()/i,operator:/\+\+|--|##?|[<>!=~]=?|[+\-*^&|/]/,punctuation:/[(){}[\],:]/},t.languages.stata["string-literal"].inside.interpolation.inside.expression.inside=t.languages.stata}rg.displayName="iecst";rg.aliases=[];function rg(t){t.languages.iecst={comment:[{pattern:/(^|[^\\])(?:\/\*[\s\S]*?(?:\*\/|$)|\(\*[\s\S]*?(?:\*\)|$)|\{[\s\S]*?(?:\}|$))/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},keyword:[/\b(?:END_)?(?:PROGRAM|CONFIGURATION|INTERFACE|FUNCTION_BLOCK|FUNCTION|ACTION|TRANSITION|TYPE|STRUCT|(?:INITIAL_)?STEP|NAMESPACE|LIBRARY|CHANNEL|FOLDER|RESOURCE|VAR_(?:ACCESS|CONFIG|EXTERNAL|GLOBAL|INPUT|IN_OUT|OUTPUT|TEMP)|VAR|METHOD|PROPERTY)\b/i,/\b(?:AT|BY|(?:END_)?(?:CASE|FOR|IF|REPEAT|WHILE)|CONSTANT|CONTINUE|DO|ELSE|ELSIF|EXIT|EXTENDS|FROM|GET|GOTO|IMPLEMENTS|JMP|NON_RETAIN|OF|PRIVATE|PROTECTED|PUBLIC|RETAIN|RETURN|SET|TASK|THEN|TO|UNTIL|USING|WITH|__CATCH|__ENDTRY|__FINALLY|__TRY)\b/],"class-name":/\b(?:ANY|ARRAY|BOOL|BYTE|U?(?:D|L|S)?INT|(?:D|L)?WORD|DATE(?:_AND_TIME)?|DT|L?REAL|POINTER|STRING|TIME(?:_OF_DAY)?|TOD)\b/,address:{pattern:/%[IQM][XBWDL][\d.]*|%[IQ][\d.]*/,alias:"symbol"},number:/\b(?:16#[\da-f]+|2#[01_]+|0x[\da-f]+)\b|\b(?:D|DT|T|TOD)#[\d_shmd:]*|\b[A-Z]*#[\d.,_]*|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,boolean:/\b(?:FALSE|NULL|TRUE)\b/,operator:/S?R?:?=>?|&&?|\*\*?|<[=>]?|>=?|[-:^/+#]|\b(?:AND|EQ|EXPT|GE|GT|LE|LT|MOD|NE|NOT|OR|XOR)\b/,function:/\b[a-z_]\w*(?=\s*\()/i,punctuation:/[()[\].,;]/}}sg.displayName="supercollider";sg.aliases=["sclang"];function sg(t){t.languages.supercollider={comment:{pattern:/\/\/.*|\/\*(?:[^*/]|\*(?!\/)|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/)*\*\//,greedy:!0},string:{pattern:/(^|[^\\])"(?:[^"\\]|\\[\s\S])*"/,lookbehind:!0,greedy:!0},char:{pattern:/\$(?:[^\\\r\n]|\\.)/,greedy:!0},symbol:{pattern:/(^|[^\\])'(?:[^'\\]|\\[\s\S])*'|\\\w+/,lookbehind:!0,greedy:!0},keyword:/\b(?:_|arg|classvar|const|nil|var|while)\b/,boolean:/\b(?:false|true)\b/,label:{pattern:/\b[a-z_]\w*(?=\s*:)/,alias:"property"},number:/\b(?:inf|pi|0x[0-9a-fA-F]+|\d+(?:\.\d+)?(?:[eE][+-]?\d+)?(?:pi)?|\d+r[0-9a-zA-Z]+(?:\.[0-9a-zA-Z]+)?|\d+[sb]{1,4}\d*)\b/,"class-name":/\b[A-Z]\w*\b/,operator:/\.{2,3}|#(?![[{])|&&|[!=]==?|\+>>|\+{1,3}|-[->]|=>|>>|\?\?|@\|?@|\|(?:@|[!=]=)?\||!\?|<[!=>]|\*{1,2}|<{2,3}\*?|[-!%&/<>?@|=`]/,punctuation:/[{}()[\].:,;]|#[[{]/},t.languages.sclang=t.languages.supercollider}ig.displayName="systemd";ig.aliases=[];function ig(t){(function(n){var r={pattern:/^[;#].*/m,greedy:!0},s=/"(?:[^\r\n"\\]|\\(?:[^\r]|\r\n?))*"(?!\S)/.source;n.languages.systemd={comment:r,section:{pattern:/^\[[^\n\r\[\]]*\](?=[ \t]*$)/m,greedy:!0,inside:{punctuation:/^\[|\]$/,"section-name":{pattern:/[\s\S]+/,alias:"selector"}}},key:{pattern:/^[^\s=]+(?=[ \t]*=)/m,greedy:!0,alias:"attr-name"},value:{pattern:RegExp(/(=[ \t]*(?!\s))/.source+"(?:"+s+`|(?=[^"\r
]))(?:`+(/[^\s\\]/.source+'|[ 	]+(?:(?![ 	"])|'+s+")|"+/\\[\r\n]+(?:[#;].*[\r\n]+)*(?![#;])/.source)+")*"),lookbehind:!0,greedy:!0,alias:"attr-value",inside:{comment:r,quoted:{pattern:RegExp(/(^|\s)/.source+s),lookbehind:!0,greedy:!0},punctuation:/\\$/m,boolean:{pattern:/^(?:false|no|off|on|true|yes)$/,greedy:!0}}},punctuation:/=/}})(t)}Fa.displayName="t4-templating";Fa.aliases=[];function Fa(t){(function(n){function r(i,a,o){return{pattern:RegExp("<#"+i+"[\\s\\S]*?#>"),alias:"block",inside:{delimiter:{pattern:RegExp("^<#"+i+"|#>$"),alias:"important"},content:{pattern:/[\s\S]+/,inside:a,alias:o}}}}function s(i){var a=n.languages[i],o="language-"+i;return{block:{pattern:/<#[\s\S]+?#>/,inside:{directive:r("@",{"attr-value":{pattern:/=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+)/,inside:{punctuation:/^=|^["']|["']$/}},keyword:/\b\w+(?=\s)/,"attr-name":/\b\w+/}),expression:r("=",a,o),"class-feature":r("\\+",a,o),standard:r("",a,o)}}}}n.languages["t4-templating"]=Object.defineProperty({},"createT4",{value:s})})(t)}ag.displayName="t4-cs";ag.aliases=["t4"];function ag(t){t.register(es),t.register(Fa),t.languages.t4=t.languages["t4-cs"]=t.languages["t4-templating"].createT4("csharp")}og.displayName="t4-vb";og.aliases=[];function og(t){t.register(Fa),t.register(La),t.languages["t4-vb"]=t.languages["t4-templating"].createT4("vbnet")}lg.displayName="tap";lg.aliases=[];function lg(t){t.register(Ca),t.languages.tap={fail:/not ok[^#{\n\r]*/,pass:/ok[^#{\n\r]*/,pragma:/pragma [+-][a-z]+/,bailout:/bail out!.*/i,version:/TAP version \d+/i,plan:/\b\d+\.\.\d+(?: +#.*)?/,subtest:{pattern:/# Subtest(?:: .*)?/,greedy:!0},punctuation:/[{}]/,directive:/#.*/,yamlish:{pattern:/(^[ \t]*)---[\s\S]*?[\r\n][ \t]*\.\.\.$/m,lookbehind:!0,inside:t.languages.yaml,alias:"language-yaml"}}}cg.displayName="tcl";cg.aliases=[];function cg(t){t.languages.tcl={comment:{pattern:/(^|[^\\])#.*/,lookbehind:!0},string:{pattern:/"(?:[^"\\\r\n]|\\(?:\r\n|[\s\S]))*"/,greedy:!0},variable:[{pattern:/(\$)(?:::)?(?:[a-zA-Z0-9]+::)*\w+/,lookbehind:!0},{pattern:/(\$)\{[^}]+\}/,lookbehind:!0},{pattern:/(^[\t ]*set[ \t]+)(?:::)?(?:[a-zA-Z0-9]+::)*\w+/m,lookbehind:!0}],function:{pattern:/(^[\t ]*proc[ \t]+)\S+/m,lookbehind:!0},builtin:[{pattern:/(^[\t ]*)(?:break|class|continue|error|eval|exit|for|foreach|if|proc|return|switch|while)\b/m,lookbehind:!0},/\b(?:else|elseif)\b/],scope:{pattern:/(^[\t ]*)(?:global|upvar|variable)\b/m,lookbehind:!0,alias:"constant"},keyword:{pattern:/(^[\t ]*|\[)(?:Safe_Base|Tcl|after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|scan|seek|set|socket|source|split|string|subst|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|test|vars|wordBreak(?:After|Before))|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\b/m,lookbehind:!0},operator:/!=?|\*\*?|==|&&?|\|\|?|<[=<]?|>[=>]?|[-+~\/%?^]|\b(?:eq|in|ne|ni)\b/,punctuation:/[{}()\[\]]/}}dg.displayName="tt2";dg.aliases=[];function dg(t){t.register(le),t.register(ot),function(n){n.languages.tt2=n.languages.extend("clike",{comment:/#.*|\[%#[\s\S]*?%\]/,keyword:/\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|SWITCH|TAGS|THROW|TRY|UNLESS|USE|WHILE|WRAPPER)\b/,punctuation:/[[\]{},()]/}),n.languages.insertBefore("tt2","number",{operator:/=[>=]?|!=?|<=?|>=?|&&|\|\|?|\b(?:and|not|or)\b/,variable:{pattern:/\b[a-z]\w*(?:\s*\.\s*(?:\d+|\$?[a-z]\w*))*\b/i}}),n.languages.insertBefore("tt2","keyword",{delimiter:{pattern:/^(?:\[%|%%)-?|-?%\]$/,alias:"punctuation"}}),n.languages.insertBefore("tt2","string",{"single-quoted-string":{pattern:/'[^\\']*(?:\\[\s\S][^\\']*)*'/,greedy:!0,alias:"string"},"double-quoted-string":{pattern:/"[^\\"]*(?:\\[\s\S][^\\"]*)*"/,greedy:!0,alias:"string",inside:{variable:{pattern:/\$(?:[a-z]\w*(?:\.(?:\d+|\$?[a-z]\w*))*)/i}}}}),delete n.languages.tt2.string,n.hooks.add("before-tokenize",function(r){var s=/\[%[\s\S]+?%\]/g;n.languages["markup-templating"].buildPlaceholders(r,"tt2",s)}),n.hooks.add("after-tokenize",function(r){n.languages["markup-templating"].tokenizePlaceholders(r,"tt2")})}(t)}ug.displayName="toml";ug.aliases=[];function ug(t){(function(n){var r=/(?:[\w-]+|'[^'\n\r]*'|"(?:\\.|[^\\"\r\n])*")/.source;function s(i){return i.replace(/__/g,function(){return r})}n.languages.toml={comment:{pattern:/#.*/,greedy:!0},table:{pattern:RegExp(s(/(^[\t ]*\[\s*(?:\[\s*)?)__(?:\s*\.\s*__)*(?=\s*\])/.source),"m"),lookbehind:!0,greedy:!0,alias:"class-name"},key:{pattern:RegExp(s(/(^[\t ]*|[{,]\s*)__(?:\s*\.\s*__)*(?=\s*=)/.source),"m"),lookbehind:!0,greedy:!0,alias:"property"},string:{pattern:/"""(?:\\[\s\S]|[^\\])*?"""|'''[\s\S]*?'''|'[^'\n\r]*'|"(?:\\.|[^\\"\r\n])*"/,greedy:!0},date:[{pattern:/\b\d{4}-\d{2}-\d{2}(?:[T\s]\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:Z|[+-]\d{2}:\d{2})?)?\b/i,alias:"number"},{pattern:/\b\d{2}:\d{2}:\d{2}(?:\.\d+)?\b/,alias:"number"}],number:/(?:\b0(?:x[\da-zA-Z]+(?:_[\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\b|[-+]?\b\d+(?:_\d+)*(?:\.\d+(?:_\d+)*)?(?:[eE][+-]?\d+(?:_\d+)*)?\b|[-+]?\b(?:inf|nan)\b/,boolean:/\b(?:false|true)\b/,punctuation:/[.,=[\]{}]/}})(t)}hg.displayName="tremor";hg.aliases=["trickle","troy"];function hg(t){(function(n){n.languages.tremor={comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/,lookbehind:!0},"interpolated-string":null,extractor:{pattern:/\b[a-z_]\w*\|(?:[^\r\n\\|]|\\(?:\r\n|[\s\S]))*\|/i,greedy:!0,inside:{regex:{pattern:/(^re)\|[\s\S]+/,lookbehind:!0},function:/^\w+/,value:/\|[\s\S]+/}},identifier:{pattern:/`[^`]*`/,greedy:!0},function:/\b[a-z_]\w*(?=\s*(?:::\s*<|\())\b/,keyword:/\b(?:args|as|by|case|config|connect|connector|const|copy|create|default|define|deploy|drop|each|emit|end|erase|event|flow|fn|for|from|group|having|insert|into|intrinsic|let|links|match|merge|mod|move|of|operator|patch|pipeline|recur|script|select|set|sliding|state|stream|to|tumbling|update|use|when|where|window|with)\b/,boolean:/\b(?:false|null|true)\b/i,number:/\b(?:0b[01_]*|0x[0-9a-fA-F_]*|\d[\d_]*(?:\.\d[\d_]*)?(?:[Ee][+-]?[\d_]+)?)\b/,"pattern-punctuation":{pattern:/%(?=[({[])/,alias:"punctuation"},operator:/[-+*\/%~!^]=?|=[=>]?|&[&=]?|\|[|=]?|<<?=?|>>?>?=?|(?:absent|and|not|or|present|xor)\b/,punctuation:/::|[;\[\]()\{\},.:]/};var r=/#\{(?:[^"{}]|\{[^{}]*\}|"(?:[^"\\\r\n]|\\(?:\r\n|[\s\S]))*")*\}/.source;n.languages.tremor["interpolated-string"]={pattern:RegExp(/(^|[^\\])/.source+'(?:"""(?:'+/[^"\\#]|\\[\s\S]|"(?!"")|#(?!\{)/.source+"|"+r+')*"""|"(?:'+/[^"\\\r\n#]|\\(?:\r\n|[\s\S])|#(?!\{)/.source+"|"+r+')*")'),lookbehind:!0,greedy:!0,inside:{interpolation:{pattern:RegExp(r),inside:{punctuation:/^#\{|\}$/,expression:{pattern:/[\s\S]+/,inside:n.languages.tremor}}},string:/[\s\S]+/}},n.languages.troy=n.languages.tremor,n.languages.trickle=n.languages.tremor})(t)}pg.displayName="typoscript";pg.aliases=["tsconfig"];function pg(t){(function(n){var r=/\b(?:ACT|ACTIFSUB|CARRAY|CASE|CLEARGIF|COA|COA_INT|CONSTANTS|CONTENT|CUR|EDITPANEL|EFFECT|EXT|FILE|FLUIDTEMPLATE|FORM|FRAME|FRAMESET|GIFBUILDER|GMENU|GMENU_FOLDOUT|GMENU_LAYERS|GP|HMENU|HRULER|HTML|IENV|IFSUB|IMAGE|IMGMENU|IMGMENUITEM|IMGTEXT|IMG_RESOURCE|INCLUDE_TYPOSCRIPT|JSMENU|JSMENUITEM|LLL|LOAD_REGISTER|NO|PAGE|RECORDS|RESTORE_REGISTER|TEMPLATE|TEXT|TMENU|TMENUITEM|TMENU_LAYERS|USER|USER_INT|_GIFBUILDER|global|globalString|globalVar)\b/;n.languages.typoscript={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0},{pattern:/(^|[^\\:= \t]|(?:^|[^= \t])[ \t]+)\/\/.*/,lookbehind:!0,greedy:!0},{pattern:/(^|[^"'])#.*/,lookbehind:!0,greedy:!0}],function:[{pattern:/<INCLUDE_TYPOSCRIPT:\s*source\s*=\s*(?:"[^"\r\n]*"|'[^'\r\n]*')\s*>/,inside:{string:{pattern:/"[^"\r\n]*"|'[^'\r\n]*'/,inside:{keyword:r}},keyword:{pattern:/INCLUDE_TYPOSCRIPT/}}},{pattern:/@import\s*(?:"[^"\r\n]*"|'[^'\r\n]*')/,inside:{string:/"[^"\r\n]*"|'[^'\r\n]*'/}}],string:{pattern:/^([^=]*=[< ]?)(?:(?!\]\n).)*/,lookbehind:!0,inside:{function:/\{\$.*\}/,keyword:r,number:/^\d+$/,punctuation:/[,|:]/}},keyword:r,number:{pattern:/\b\d+\s*[.{=]/,inside:{operator:/[.{=]/}},tag:{pattern:/\.?[-\w\\]+\.?/,inside:{punctuation:/\./}},punctuation:/[{}[\];(),.:|]/,operator:/[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/},n.languages.tsconfig=n.languages.typoscript})(t)}mg.displayName="unrealscript";mg.aliases=["uc","uscript"];function mg(t){t.languages.unrealscript={comment:/\/\/.*|\/\*[\s\S]*?\*\//,string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},category:{pattern:/(\b(?:(?:autoexpand|hide|show)categories|var)\s*\()[^()]+(?=\))/,lookbehind:!0,greedy:!0,alias:"property"},metadata:{pattern:/(\w\s*)<\s*\w+\s*=[^<>|=\r\n]+(?:\|\s*\w+\s*=[^<>|=\r\n]+)*>/,lookbehind:!0,greedy:!0,inside:{property:/\b\w+(?=\s*=)/,operator:/=/,punctuation:/[<>|]/}},macro:{pattern:/`\w+/,alias:"property"},"class-name":{pattern:/(\b(?:class|enum|extends|interface|state(?:\(\))?|struct|within)\s+)\w+/,lookbehind:!0},keyword:/\b(?:abstract|actor|array|auto|autoexpandcategories|bool|break|byte|case|class|classgroup|client|coerce|collapsecategories|config|const|continue|default|defaultproperties|delegate|dependson|deprecated|do|dontcollapsecategories|editconst|editinlinenew|else|enum|event|exec|export|extends|final|float|for|forcescriptorder|foreach|function|goto|guid|hidecategories|hidedropdown|if|ignores|implements|inherits|input|int|interface|iterator|latent|local|material|name|native|nativereplication|noexport|nontransient|noteditinlinenew|notplaceable|operator|optional|out|pawn|perobjectconfig|perobjectlocalized|placeable|postoperator|preoperator|private|protected|reliable|replication|return|server|showcategories|simulated|singular|state|static|string|struct|structdefault|structdefaultproperties|switch|texture|transient|travel|unreliable|until|var|vector|while|within)\b/,function:/\b[a-z_]\w*(?=\s*\()/i,boolean:/\b(?:false|true)\b/,number:/\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/>>|<<|--|\+\+|\*\*|[-+*/~!=<>$@]=?|&&?|\|\|?|\^\^?|[?:%]|\b(?:ClockwiseFrom|Cross|Dot)\b/,punctuation:/[()[\]{};,.]/},t.languages.uc=t.languages.uscript=t.languages.unrealscript}fg.displayName="uorazor";fg.aliases=[];function fg(t){t.languages.uorazor={"comment-hash":{pattern:/#.*/,alias:"comment",greedy:!0},"comment-slash":{pattern:/\/\/.*/,alias:"comment",greedy:!0},string:{pattern:/("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,inside:{punctuation:/^['"]|['"]$/},greedy:!0},"source-layers":{pattern:/\b(?:arms|backpack|blue|bracelet|cancel|clear|cloak|criminal|earrings|enemy|facialhair|friend|friendly|gloves|gray|grey|ground|hair|head|innerlegs|innertorso|innocent|lefthand|middletorso|murderer|neck|nonfriendly|onehandedsecondary|outerlegs|outertorso|pants|red|righthand|ring|self|shirt|shoes|talisman|waist)\b/i,alias:"function"},"source-commands":{pattern:/\b(?:alliance|attack|cast|clearall|clearignore|clearjournal|clearlist|clearsysmsg|createlist|createtimer|dclick|dclicktype|dclickvar|dress|dressconfig|drop|droprelloc|emote|getlabel|guild|gumpclose|gumpresponse|hotkey|ignore|lasttarget|lift|lifttype|menu|menuresponse|msg|org|organize|organizer|overhead|pause|poplist|potion|promptresponse|pushlist|removelist|removetimer|rename|restock|say|scav|scavenger|script|setability|setlasttarget|setskill|settimer|setvar|sysmsg|target|targetloc|targetrelloc|targettype|undress|unignore|unsetvar|useobject|useonce|useskill|usetype|virtue|wait|waitforgump|waitformenu|waitforprompt|waitforstat|waitforsysmsg|waitfortarget|walk|wfsysmsg|wft|whisper|yell)\b/,alias:"function"},"tag-name":{pattern:/(^\{%-?\s*)\w+/,lookbehind:!0,alias:"keyword"},delimiter:{pattern:/^\{[{%]-?|-?[%}]\}$/,alias:"punctuation"},function:/\b(?:atlist|close|closest|count|counter|counttype|dead|dex|diffhits|diffmana|diffstam|diffweight|find|findbuff|finddebuff|findlayer|findtype|findtypelist|followers|gumpexists|hidden|hits|hp|hue|human|humanoid|ingump|inlist|insysmessage|insysmsg|int|invul|lhandempty|list|listexists|mana|maxhits|maxhp|maxmana|maxstam|maxweight|monster|mounted|name|next|noto|paralyzed|poisoned|position|prev|previous|queued|rand|random|rhandempty|skill|stam|str|targetexists|timer|timerexists|varexist|warmode|weight)\b/,keyword:/\b(?:and|as|break|continue|else|elseif|endfor|endif|endwhile|for|if|loop|not|or|replay|stop|while)\b/,boolean:/\b(?:false|null|true)\b/,number:/\b0x[\dA-Fa-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee][-+]?\d+)?/,operator:[{pattern:/(\s)(?:and|b-and|b-or|b-xor|ends with|in|is|matches|not|or|same as|starts with)(?=\s)/,lookbehind:!0},/[=<>]=?|!=|\*\*?|\/\/?|\?:?|[-+~%|]/],punctuation:/[()\[\]{}:.,]/}}gg.displayName="v";gg.aliases=[];function gg(t){t.register(le),function(n){var r={pattern:/[\s\S]+/,inside:null};n.languages.v=n.languages.extend("clike",{string:{pattern:/r?(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,alias:"quoted-string",greedy:!0,inside:{interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\$(?:\{[^{}]*\}|\w+(?:\.\w+(?:\([^\(\)]*\))?|\[[^\[\]]+\])*)/,lookbehind:!0,inside:{"interpolation-variable":{pattern:/^\$\w[\s\S]*$/,alias:"variable"},"interpolation-punctuation":{pattern:/^\$\{|\}$/,alias:"punctuation"},"interpolation-expression":r}}}},"class-name":{pattern:/(\b(?:enum|interface|struct|type)\s+)(?:C\.)?\w+/,lookbehind:!0},keyword:/(?:\b(?:__global|as|asm|assert|atomic|break|chan|const|continue|defer|else|embed|enum|fn|for|go(?:to)?|if|import|in|interface|is|lock|match|module|mut|none|or|pub|return|rlock|select|shared|sizeof|static|struct|type(?:of)?|union|unsafe)|\$(?:else|for|if)|#(?:flag|include))\b/,number:/\b(?:0x[a-f\d]+(?:_[a-f\d]+)*|0b[01]+(?:_[01]+)*|0o[0-7]+(?:_[0-7]+)*|\d+(?:_\d+)*(?:\.\d+(?:_\d+)*)?)\b/i,operator:/~|\?|[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\.?/,builtin:/\b(?:any(?:_float|_int)?|bool|byte(?:ptr)?|charptr|f(?:32|64)|i(?:8|16|64|128|nt)|rune|size_t|string|u(?:16|32|64|128)|voidptr)\b/}),r.inside=n.languages.v,n.languages.insertBefore("v","string",{char:{pattern:/`(?:\\`|\\?[^`]{1,2})`/,alias:"rune"}}),n.languages.insertBefore("v","operator",{attribute:{pattern:/(^[\t ]*)\[(?:deprecated|direct_array_access|flag|inline|live|ref_only|typedef|unsafe_fn|windows_stdcall)\]/m,lookbehind:!0,alias:"annotation",inside:{punctuation:/[\[\]]/,keyword:/\w+/}},generic:{pattern:/<\w+>(?=\s*[\)\{])/,inside:{punctuation:/[<>]/,"class-name":/\w+/}}}),n.languages.insertBefore("v","function",{"generic-function":{pattern:/\b\w+\s*<\w+>(?=\()/,inside:{function:/^\w+/,generic:{pattern:/<\w+>/,inside:n.languages.v.generic.inside}}}})}(t)}bg.displayName="vala";bg.aliases=[];function bg(t){t.register(le),t.languages.vala=t.languages.extend("clike",{"class-name":[{pattern:/\b[A-Z]\w*(?:\.\w+)*\b(?=(?:\?\s+|\*?\s+\*?)\w)/,inside:{punctuation:/\./}},{pattern:/(\[)[A-Z]\w*(?:\.\w+)*\b/,lookbehind:!0,inside:{punctuation:/\./}},{pattern:/(\b(?:class|interface)\s+[A-Z]\w*(?:\.\w+)*\s*:\s*)[A-Z]\w*(?:\.\w+)*\b/,lookbehind:!0,inside:{punctuation:/\./}},{pattern:/((?:\b(?:class|enum|interface|new|struct)\s+)|(?:catch\s+\())[A-Z]\w*(?:\.\w+)*\b/,lookbehind:!0,inside:{punctuation:/\./}}],keyword:/\b(?:abstract|as|assert|async|base|bool|break|case|catch|char|class|const|construct|continue|default|delegate|delete|do|double|dynamic|else|ensures|enum|errordomain|extern|finally|float|for|foreach|get|if|in|inline|int|int16|int32|int64|int8|interface|internal|is|lock|long|namespace|new|null|out|override|owned|params|private|protected|public|ref|requires|return|set|short|signal|sizeof|size_t|ssize_t|static|string|struct|switch|this|throw|throws|try|typeof|uchar|uint|uint16|uint32|uint64|uint8|ulong|unichar|unowned|ushort|using|value|var|virtual|void|volatile|weak|while|yield)\b/i,function:/\b\w+(?=\s*\()/,number:/(?:\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)(?:f|u?l?)?/i,operator:/\+\+|--|&&|\|\||<<=?|>>=?|=>|->|~|[+\-*\/%&^|=!<>]=?|\?\??|\.\.\./,punctuation:/[{}[\];(),.:]/,constant:/\b[A-Z0-9_]+\b/}),t.languages.insertBefore("vala","string",{"raw-string":{pattern:/"""[\s\S]*?"""/,greedy:!0,alias:"string"},"template-string":{pattern:/@"[\s\S]*?"/,greedy:!0,inside:{interpolation:{pattern:/\$(?:\([^)]*\)|[a-zA-Z]\w*)/,inside:{delimiter:{pattern:/^\$\(?|\)$/,alias:"punctuation"},rest:t.languages.vala}},string:/[\s\S]+/}}}),t.languages.insertBefore("vala","keyword",{regex:{pattern:/\/(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[imsx]{0,4}(?=\s*(?:$|[\r\n,.;})\]]))/,greedy:!0,inside:{"regex-source":{pattern:/^(\/)[\s\S]+(?=\/[a-z]*$)/,lookbehind:!0,alias:"language-regex",inside:t.languages.regex},"regex-delimiter":/^\//,"regex-flags":/^[a-z]+$/}}})}xg.displayName="velocity";xg.aliases=[];function xg(t){t.register(Ze),function(n){n.languages.velocity=n.languages.extend("markup",{});var r={variable:{pattern:/(^|[^\\](?:\\\\)*)\$!?(?:[a-z][\w-]*(?:\([^)]*\))?(?:\.[a-z][\w-]*(?:\([^)]*\))?|\[[^\]]+\])*|\{[^}]+\})/i,lookbehind:!0,inside:{}},string:{pattern:/"[^"]*"|'[^']*'/,greedy:!0},number:/\b\d+\b/,boolean:/\b(?:false|true)\b/,operator:/[=!<>]=?|[+*/%-]|&&|\|\||\.\.|\b(?:eq|g[et]|l[et]|n(?:e|ot))\b/,punctuation:/[(){}[\]:,.]/};r.variable.inside={string:r.string,function:{pattern:/([^\w-])[a-z][\w-]*(?=\()/,lookbehind:!0},number:r.number,boolean:r.boolean,punctuation:r.punctuation},n.languages.insertBefore("velocity","comment",{unparsed:{pattern:/(^|[^\\])#\[\[[\s\S]*?\]\]#/,lookbehind:!0,greedy:!0,inside:{punctuation:/^#\[\[|\]\]#$/}},"velocity-comment":[{pattern:/(^|[^\\])#\*[\s\S]*?\*#/,lookbehind:!0,greedy:!0,alias:"comment"},{pattern:/(^|[^\\])##.*/,lookbehind:!0,greedy:!0,alias:"comment"}],directive:{pattern:/(^|[^\\](?:\\\\)*)#@?(?:[a-z][\w-]*|\{[a-z][\w-]*\})(?:\s*\((?:[^()]|\([^()]*\))*\))?/i,lookbehind:!0,inside:{keyword:{pattern:/^#@?(?:[a-z][\w-]*|\{[a-z][\w-]*\})|\bin\b/,inside:{punctuation:/[{}]/}},rest:r}},variable:r.variable}),n.languages.velocity.tag.inside["attr-value"].inside.rest=n.languages.velocity}(t)}Eg.displayName="verilog";Eg.aliases=[];function Eg(t){t.languages.verilog={comment:{pattern:/\/\/.*|\/\*[\s\S]*?\*\//,greedy:!0},string:{pattern:/"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,greedy:!0},"kernel-function":{pattern:/\B\$\w+\b/,alias:"property"},constant:/\B`\w+\b/,function:/\b\w+(?=\()/,keyword:/\b(?:alias|and|assert|assign|assume|automatic|before|begin|bind|bins|binsof|bit|break|buf|bufif0|bufif1|byte|case|casex|casez|cell|chandle|class|clocking|cmos|config|const|constraint|context|continue|cover|covergroup|coverpoint|cross|deassign|default|defparam|design|disable|dist|do|edge|else|end|endcase|endclass|endclocking|endconfig|endfunction|endgenerate|endgroup|endinterface|endmodule|endpackage|endprimitive|endprogram|endproperty|endsequence|endspecify|endtable|endtask|enum|event|expect|export|extends|extern|final|first_match|for|force|foreach|forever|fork|forkjoin|function|generate|genvar|highz0|highz1|if|iff|ifnone|ignore_bins|illegal_bins|import|incdir|include|initial|inout|input|inside|instance|int|integer|interface|intersect|join|join_any|join_none|large|liblist|library|local|localparam|logic|longint|macromodule|matches|medium|modport|module|nand|negedge|new|nmos|nor|noshowcancelled|not|notif0|notif1|null|or|output|package|packed|parameter|pmos|posedge|primitive|priority|program|property|protected|pull0|pull1|pulldown|pullup|pulsestyle_ondetect|pulsestyle_onevent|pure|rand|randc|randcase|randsequence|rcmos|real|realtime|ref|reg|release|repeat|return|rnmos|rpmos|rtran|rtranif0|rtranif1|scalared|sequence|shortint|shortreal|showcancelled|signed|small|solve|specify|specparam|static|string|strong0|strong1|struct|super|supply0|supply1|table|tagged|task|this|throughout|time|timeprecision|timeunit|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|type|typedef|union|unique|unsigned|use|uwire|var|vectored|virtual|void|wait|wait_order|wand|weak0|weak1|while|wildcard|wire|with|within|wor|xnor|xor)\b/,important:/\b(?:always|always_comb|always_ff|always_latch)\b(?: *@)?/,number:/\B##?\d+|(?:\b\d+)?'[odbh] ?[\da-fzx_?]+|\b(?:\d*[._])?\d+(?:e[-+]?\d+)?/i,operator:/[-+{}^~%*\/?=!<>&|]+/,punctuation:/[[\];(),.:]/}}Tg.displayName="vhdl";Tg.aliases=[];function Tg(t){t.languages.vhdl={comment:/--.+/,"vhdl-vectors":{pattern:/\b[oxb]"[\da-f_]+"|"[01uxzwlh-]+"/i,alias:"number"},"quoted-function":{pattern:/"\S+?"(?=\()/,alias:"function"},string:/"(?:[^\\"\r\n]|\\(?:\r\n|[\s\S]))*"/,attribute:{pattern:/\b'\w+/,alias:"attr-name"},keyword:/\b(?:access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|private|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|view|wait|when|while|with)\b/i,boolean:/\b(?:false|true)\b/i,function:/\w+(?=\()/,number:/'[01uxzwlh-]'|\b(?:\d+#[\da-f_.]+#|\d[\d_.]*)(?:e[-+]?\d+)?/i,operator:/[<>]=?|:=|[-+*/&=]|\b(?:abs|and|mod|nand|nor|not|or|rem|rol|ror|sla|sll|sra|srl|xnor|xor)\b/i,punctuation:/[{}[\];(),.:]/}}yg.displayName="vim";yg.aliases=[];function yg(t){t.languages.vim={string:/"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\r\n]|'')*'/,comment:/".*/,function:/\b\w+(?=\()/,keyword:/\b(?:N|Next|P|Print|X|XMLent|XMLns|ab|abbreviate|abc|abclear|abo|aboveleft|al|all|ar|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|args|argu|argument|as|ascii|b|bN|bNext|ba|bad|badd|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bo|botright|bp|bprevious|br|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|brewind|bro|browse|bufdo|buffer|buffers|bun|bunload|bw|bwipeout|c|cN|cNext|cNfcNfile|ca|cabbrev|cabc|cabclear|cad|caddb|caddbuffer|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cg|cgetb|cgetbuffer|cgete|cgetexpr|cgetfile|change|changes|chd|chdir|che|checkpath|checkt|checktime|cl|cla|clast|clist|clo|close|cmapc|cmapclear|cn|cnew|cnewer|cnext|cnf|cnfile|cnorea|cnoreabbrev|co|col|colder|colo|colorscheme|comc|comclear|comp|compiler|con|conf|confirm|continue|cope|copen|copy|cp|cpf|cpfile|cprevious|cq|cquit|cr|crewind|cu|cuna|cunabbrev|cunmap|cw|cwindow|d|debugg|debuggreedy|delc|delcommand|delete|delf|delfunction|delm|delmarks|di|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|e|earlier|echoe|echoerr|echom|echomsg|echon|edit|el|else|elsei|elseif|em|emenu|en|endf|endfo|endfor|endfun|endfunction|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fin|fina|finally|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|foldd|folddoc|folddoclosed|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|h|ha|hardcopy|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iu|iuna|iunabbrev|iunmap|j|join|ju|jumps|k|kee|keepalt|keepj|keepjumps|keepmarks|l|lN|lNext|lNf|lNfile|la|lad|laddb|laddbuffer|laddexpr|laddf|laddfile|lan|language|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|left|lefta|leftabove|let|lex|lexpr|lf|lfile|lfir|lfirst|lg|lgetb|lgetbuffer|lgete|lgetexpr|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|list|ll|lla|llast|lli|llist|lm|lmak|lmake|lmap|lmapc|lmapclear|ln|lne|lnew|lnewer|lnext|lnf|lnfile|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lp|lpf|lpfile|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|m|ma|mak|make|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkv|mkvie|mkview|mkvimrc|mod|mode|move|mz|mzf|mzfile|mzscheme|n|nbkey|new|next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|o|omapc|omapclear|on|only|open|opt|options|ou|ounmap|p|pc|pclose|pe|ped|pedit|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|print|prof|profd|profdel|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|ptN|ptNext|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|py|pyf|pyfile|python|q|qa|qall|quit|quita|quitall|r|read|rec|recover|red|redi|redir|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|ru|rub|ruby|rubyd|rubydo|rubyf|rubyfile|runtime|rv|rviminfo|sN|sNext|sa|sal|sall|san|sandbox|sargument|sav|saveas|sb|sbN|sbNext|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbp|sbprevious|sbr|sbrewind|sbuffer|scrip|scripte|scriptencoding|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sl|sla|slast|sleep|sm|smagic|smap|smapc|smapclear|sme|smenu|sn|snext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|so|sor|sort|source|sp|spe|spelld|spelldump|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|split|spr|sprevious|sre|srewind|st|sta|stag|star|startg|startgreplace|startinsert|startr|startreplace|stj|stjump|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tN|tNext|ta|tab|tabN|tabNext|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabn|tabnew|tabnext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tmenu|tn|tnext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tunmenu|u|una|unabbreviate|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|ve|verb|verbose|version|vert|vertical|vi|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|w|wN|wNext|wa|wall|wh|while|win|winc|wincmd|windo|winp|winpos|winsize|wn|wnext|wp|wprevious|wq|wqa|wqall|write|ws|wsverb|wv|wviminfo|x|xa|xall|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\b/,builtin:/\b(?:acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autocmd|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|t_AB|t_AF|t_AL|t_CS|t_CV|t_Ce|t_Co|t_Cs|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_IE|t_IS|t_K1|t_K3|t_K4|t_K5|t_K6|t_K7|t_K8|t_K9|t_KA|t_KB|t_KC|t_KD|t_KE|t_KF|t_KG|t_KH|t_KI|t_KJ|t_KK|t_KL|t_RI|t_RV|t_SI|t_Sb|t_Sf|t_WP|t_WS|t_ZH|t_ZR|t_al|t_bc|t_cd|t_ce|t_cl|t_cm|t_cs|t_da|t_db|t_dl|t_fs|t_k1|t_k2|t_k3|t_k4|t_k5|t_k6|t_k7|t_k8|t_k9|t_kB|t_kD|t_kI|t_kN|t_kP|t_kb|t_kd|t_ke|t_kh|t_kl|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_se|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_xs|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww)\b/,number:/\b(?:0x[\da-f]+|\d+(?:\.\d+)?)\b/i,operator:/\|\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\/%?]|\b(?:is(?:not)?)\b/,punctuation:/[{}[\](),;:]/}}Sg.displayName="visual-basic";Sg.aliases=["vb","vba"];function Sg(t){t.languages["visual-basic"]={comment:{pattern:/(?:['‘’]|REM\b)(?:[^\r\n_]|_(?:\r\n?|\n)?)*/i,inside:{keyword:/^REM/i}},directive:{pattern:/#(?:Const|Else|ElseIf|End|ExternalChecksum|ExternalSource|If|Region)(?:\b_[ \t]*(?:\r\n?|\n)|.)+/i,alias:"property",greedy:!0},string:{pattern:/\$?["“”](?:["“”]{2}|[^"“”])*["“”]C?/i,greedy:!0},date:{pattern:/#[ \t]*(?:\d+([/-])\d+\1\d+(?:[ \t]+(?:\d+[ \t]*(?:AM|PM)|\d+:\d+(?::\d+)?(?:[ \t]*(?:AM|PM))?))?|\d+[ \t]*(?:AM|PM)|\d+:\d+(?::\d+)?(?:[ \t]*(?:AM|PM))?)[ \t]*#/i,alias:"number"},number:/(?:(?:\b\d+(?:\.\d+)?|\.\d+)(?:E[+-]?\d+)?|&[HO][\dA-F]+)(?:[FRD]|U?[ILS])?/i,boolean:/\b(?:False|Nothing|True)\b/i,keyword:/\b(?:AddHandler|AddressOf|Alias|And(?:Also)?|As|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|C(?:Bool|Byte|Char|Date|Dbl|Dec|Int|Lng|Obj|SByte|Short|Sng|Str|Type|UInt|ULng|UShort)|Char|Class|Const|Continue|Currency|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else(?:If)?|End(?:If)?|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get(?:Type|XMLNamespace)?|Global|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|IsNot|Let|Lib|Like|Long|Loop|Me|Mod|Module|Must(?:Inherit|Override)|My(?:Base|Class)|Namespace|Narrowing|New|Next|Not(?:Inheritable|Overridable)?|Object|Of|On|Operator|Option(?:al)?|Or(?:Else)?|Out|Overloads|Overridable|Overrides|ParamArray|Partial|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|SByte|Select|Set|Shadows|Shared|short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TryCast|Type|TypeOf|U(?:Integer|Long|Short)|Until|Using|Variant|Wend|When|While|Widening|With(?:Events)?|WriteOnly|Xor)\b/i,operator:/[+\-*/\\^<=>&#@$%!]|\b_(?=[ \t]*[\r\n])/,punctuation:/[{}().,:?]/},t.languages.vb=t.languages["visual-basic"],t.languages.vba=t.languages["visual-basic"]}Ng.displayName="warpscript";Ng.aliases=[];function Ng(t){t.languages.warpscript={comment:/#.*|\/\/.*|\/\*[\s\S]*?\*\//,string:{pattern:/"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\\\r\n]|\\.)*'|<'(?:[^\\']|'(?!>)|\\.)*'>/,greedy:!0},variable:/\$\S+/,macro:{pattern:/@\S+/,alias:"property"},keyword:/\b(?:BREAK|CHECKMACRO|CONTINUE|CUDF|DEFINED|DEFINEDMACRO|EVAL|FAIL|FOR|FOREACH|FORSTEP|IFT|IFTE|MSGFAIL|NRETURN|RETHROW|RETURN|SWITCH|TRY|UDF|UNTIL|WHILE)\b/,number:/[+-]?\b(?:NaN|Infinity|\d+(?:\.\d*)?(?:[Ee][+-]?\d+)?|0x[\da-fA-F]+|0b[01]+)\b/,boolean:/\b(?:F|T|false|true)\b/,punctuation:/<%|%>|[{}[\]()]/,operator:/==|&&?|\|\|?|\*\*?|>>>?|<<|[<>!~]=?|[-/%^]|\+!?|\b(?:AND|NOT|OR)\b/}}jg.displayName="wasm";jg.aliases=[];function jg(t){t.languages.wasm={comment:[/\(;[\s\S]*?;\)/,{pattern:/;;.*/,greedy:!0}],string:{pattern:/"(?:\\[\s\S]|[^"\\])*"/,greedy:!0},keyword:[{pattern:/\b(?:align|offset)=/,inside:{operator:/=/}},{pattern:/\b(?:(?:f32|f64|i32|i64)(?:\.(?:abs|add|and|ceil|clz|const|convert_[su]\/i(?:32|64)|copysign|ctz|demote\/f64|div(?:_[su])?|eqz?|extend_[su]\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\/f32|reinterpret\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\/f(?:32|64))?|wrap\/i64|xor))?|memory\.(?:grow|size))\b/,inside:{punctuation:/\./}},/\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\b/],variable:/\$[\w!#$%&'*+\-./:<=>?@\\^`|~]+/,number:/[+-]?\b(?:\d(?:_?\d)*(?:\.\d(?:_?\d)*)?(?:[eE][+-]?\d(?:_?\d)*)?|0x[\da-fA-F](?:_?[\da-fA-F])*(?:\.[\da-fA-F](?:_?[\da-fA-D])*)?(?:[pP][+-]?\d(?:_?\d)*)?)\b|\binf\b|\bnan(?::0x[\da-fA-F](?:_?[\da-fA-D])*)?\b/,punctuation:/[()]/}}Ag.displayName="web-idl";Ag.aliases=["webidl"];function Ag(t){(function(n){var r=/(?:\B-|\b_|\b)[A-Za-z][\w-]*(?![\w-])/.source,s="(?:"+/\b(?:unsigned\s+)?long\s+long(?![\w-])/.source+"|"+/\b(?:unrestricted|unsigned)\s+[a-z]+(?![\w-])/.source+"|"+/(?!(?:unrestricted|unsigned)\b)/.source+r+/(?:\s*<(?:[^<>]|<[^<>]*>)*>)?/.source+")"+/(?:\s*\?)?/.source,i={};n.languages["web-idl"]={comment:{pattern:/\/\/.*|\/\*[\s\S]*?\*\//,greedy:!0},string:{pattern:/"[^"]*"/,greedy:!0},namespace:{pattern:RegExp(/(\bnamespace\s+)/.source+r),lookbehind:!0},"class-name":[{pattern:/(^|[^\w-])(?:iterable|maplike|setlike)\s*<(?:[^<>]|<[^<>]*>)*>/,lookbehind:!0,inside:i},{pattern:RegExp(/(\b(?:attribute|const|deleter|getter|optional|setter)\s+)/.source+s),lookbehind:!0,inside:i},{pattern:RegExp("("+/\bcallback\s+/.source+r+/\s*=\s*/.source+")"+s),lookbehind:!0,inside:i},{pattern:RegExp(/(\btypedef\b\s*)/.source+s),lookbehind:!0,inside:i},{pattern:RegExp(/(\b(?:callback|dictionary|enum|interface(?:\s+mixin)?)\s+)(?!(?:interface|mixin)\b)/.source+r),lookbehind:!0},{pattern:RegExp(/(:\s*)/.source+r),lookbehind:!0},RegExp(r+/(?=\s+(?:implements|includes)\b)/.source),{pattern:RegExp(/(\b(?:implements|includes)\s+)/.source+r),lookbehind:!0},{pattern:RegExp(s+"(?="+/\s*(?:\.{3}\s*)?/.source+r+/\s*[(),;=]/.source+")"),inside:i}],builtin:/\b(?:ArrayBuffer|BigInt64Array|BigUint64Array|ByteString|DOMString|DataView|Float32Array|Float64Array|FrozenArray|Int16Array|Int32Array|Int8Array|ObservableArray|Promise|USVString|Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray)\b/,keyword:[/\b(?:async|attribute|callback|const|constructor|deleter|dictionary|enum|getter|implements|includes|inherit|interface|mixin|namespace|null|optional|or|partial|readonly|required|setter|static|stringifier|typedef|unrestricted)\b/,/\b(?:any|bigint|boolean|byte|double|float|iterable|long|maplike|object|octet|record|sequence|setlike|short|symbol|undefined|unsigned|void)\b/],boolean:/\b(?:false|true)\b/,number:{pattern:/(^|[^\w-])-?(?:0x[0-9a-f]+|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?|NaN|Infinity)(?![\w-])/i,lookbehind:!0},operator:/\.{3}|[=:?<>-]/,punctuation:/[(){}[\].,;]/};for(var a in n.languages["web-idl"])a!=="class-name"&&(i[a]=n.languages["web-idl"][a]);n.languages.webidl=n.languages["web-idl"]})(t)}_g.displayName="wgsl";_g.aliases=[];function _g(t){t.languages.wgsl={comment:{pattern:/\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,greedy:!0},"builtin-attribute":{pattern:/(@)builtin\(.*?\)/,lookbehind:!0,inside:{attribute:{pattern:/^builtin/,alias:"attr-name"},punctuation:/[(),]/,"built-in-values":{pattern:/\b(?:frag_depth|front_facing|global_invocation_id|instance_index|local_invocation_id|local_invocation_index|num_workgroups|position|sample_index|sample_mask|vertex_index|workgroup_id)\b/,alias:"attr-value"}}},attributes:{pattern:/(@)(?:align|binding|compute|const|fragment|group|id|interpolate|invariant|location|size|vertex|workgroup_size)/i,lookbehind:!0,alias:"attr-name"},functions:{pattern:/\b(fn\s+)[_a-zA-Z]\w*(?=[(<])/,lookbehind:!0,alias:"function"},keyword:/\b(?:bitcast|break|case|const|continue|continuing|default|discard|else|enable|fallthrough|fn|for|function|if|let|loop|private|return|storage|struct|switch|type|uniform|var|while|workgroup)\b/,builtin:/\b(?:abs|acos|acosh|all|any|array|asin|asinh|atan|atan2|atanh|atomic|atomicAdd|atomicAnd|atomicCompareExchangeWeak|atomicExchange|atomicLoad|atomicMax|atomicMin|atomicOr|atomicStore|atomicSub|atomicXor|bool|ceil|clamp|cos|cosh|countLeadingZeros|countOneBits|countTrailingZeros|cross|degrees|determinant|distance|dot|dpdx|dpdxCoarse|dpdxFine|dpdy|dpdyCoarse|dpdyFine|exp|exp2|extractBits|f32|f64|faceForward|firstLeadingBit|floor|fma|fract|frexp|fwidth|fwidthCoarse|fwidthFine|i32|i64|insertBits|inverseSqrt|ldexp|length|log|log2|mat[2-4]x[2-4]|max|min|mix|modf|normalize|override|pack2x16float|pack2x16snorm|pack2x16unorm|pack4x8snorm|pack4x8unorm|pow|ptr|quantizeToF16|radians|reflect|refract|reverseBits|round|sampler|sampler_comparison|select|shiftLeft|shiftRight|sign|sin|sinh|smoothstep|sqrt|staticAssert|step|storageBarrier|tan|tanh|textureDimensions|textureGather|textureGatherCompare|textureLoad|textureNumLayers|textureNumLevels|textureNumSamples|textureSample|textureSampleBias|textureSampleCompare|textureSampleCompareLevel|textureSampleGrad|textureSampleLevel|textureStore|texture_1d|texture_2d|texture_2d_array|texture_3d|texture_cube|texture_cube_array|texture_depth_2d|texture_depth_2d_array|texture_depth_cube|texture_depth_cube_array|texture_depth_multisampled_2d|texture_multisampled_2d|texture_storage_1d|texture_storage_2d|texture_storage_2d_array|texture_storage_3d|transpose|trunc|u32|u64|unpack2x16float|unpack2x16snorm|unpack2x16unorm|unpack4x8snorm|unpack4x8unorm|vec[2-4]|workgroupBarrier)\b/,"function-calls":{pattern:/\b[_a-z]\w*(?=\()/i,alias:"function"},"class-name":/\b(?:[A-Z][A-Za-z0-9]*)\b/,"bool-literal":{pattern:/\b(?:false|true)\b/,alias:"boolean"},"hex-int-literal":{pattern:/\b0[xX][0-9a-fA-F]+[iu]?\b(?![.pP])/,alias:"number"},"hex-float-literal":{pattern:/\b0[xX][0-9a-fA-F]*(?:\.[0-9a-fA-F]*)?(?:[pP][+-]?\d+[fh]?)?/,alias:"number"},"decimal-float-literal":[{pattern:/\d*\.\d+(?:[eE](?:\+|-)?\d+)?[fh]?/,alias:"number"},{pattern:/\d+\.\d*(?:[eE](?:\+|-)?\d+)?[fh]?/,alias:"number"},{pattern:/\d+[eE](?:\+|-)?\d+[fh]?/,alias:"number"},{pattern:/\b\d+[fh]\b/,alias:"number"}],"int-literal":{pattern:/\b\d+[iu]?\b/,alias:"number"},operator:[{pattern:/(?:\^|~|\|(?!\|)|\|\||&&|<<|>>|!)(?!=)/},{pattern:/&(?![&=])/},{pattern:/(?:\+=|-=|\*=|\/=|%=|\^=|&=|\|=|<<=|>>=)/},{pattern:/(^|[^<>=!])=(?![=>])/,lookbehind:!0},{pattern:/(?:==|!=|<=|\+\+|--|(^|[^=])>=)/,lookbehind:!0},{pattern:/(?:(?:[+%]|(?:\*(?!\w)))(?!=))|(?:-(?!>))|(?:\/(?!\/))/},{pattern:/->/}],punctuation:/[@(){}[\],;<>:.]/}}vg.displayName="wiki";vg.aliases=[];function vg(t){t.register(Ze),t.languages.wiki=t.languages.extend("markup",{"block-comment":{pattern:/(^|[^\\])\/\*[\s\S]*?\*\//,lookbehind:!0,alias:"comment"},heading:{pattern:/^(=+)[^=\r\n].*?\1/m,inside:{punctuation:/^=+|=+$/,important:/.+/}},emphasis:{pattern:/('{2,5}).+?\1/,inside:{"bold-italic":{pattern:/(''''').+?(?=\1)/,lookbehind:!0,alias:["bold","italic"]},bold:{pattern:/(''')[^'](?:.*?[^'])?(?=\1)/,lookbehind:!0},italic:{pattern:/('')[^'](?:.*?[^'])?(?=\1)/,lookbehind:!0},punctuation:/^''+|''+$/}},hr:{pattern:/^-{4,}/m,alias:"punctuation"},url:[/ISBN +(?:97[89][ -]?)?(?:\d[ -]?){9}[\dx]\b|(?:PMID|RFC) +\d+/i,/\[\[.+?\]\]|\[.+?\]/],variable:[/__[A-Z]+__/,/\{{3}.+?\}{3}/,/\{\{.+?\}\}/],symbol:[/^#redirect/im,/~{3,5}/],"table-tag":{pattern:/((?:^|[|!])[|!])[^|\r\n]+\|(?!\|)/m,lookbehind:!0,inside:{"table-bar":{pattern:/\|$/,alias:"punctuation"},rest:t.languages.markup.tag.inside}},punctuation:/^(?:\{\||\|\}|\|-|[*#:;!|])|\|\||!!/m}),t.languages.insertBefore("wiki","tag",{nowiki:{pattern:/<(nowiki|pre|source)\b[^>]*>[\s\S]*?<\/\1>/i,inside:{tag:{pattern:/<(?:nowiki|pre|source)\b[^>]*>|<\/(?:nowiki|pre|source)>/i,inside:t.languages.markup.tag.inside}}}})}Rg.displayName="wolfram";Rg.aliases=["mathematica","nb","wl"];function Rg(t){t.languages.wolfram={comment:/\(\*(?:\(\*(?:[^*]|\*(?!\)))*\*\)|(?!\(\*)[\s\S])*?\*\)/,string:{pattern:/"(?:\\.|[^"\\\r\n])*"/,greedy:!0},keyword:/\b(?:Abs|AbsArg|Accuracy|Block|Do|For|Function|If|Manipulate|Module|Nest|NestList|None|Return|Switch|Table|Which|While)\b/,context:{pattern:/\b\w+`+\w*/,alias:"class-name"},blank:{pattern:/\b\w+_\b/,alias:"regex"},"global-variable":{pattern:/\$\w+/,alias:"variable"},boolean:/\b(?:False|True)\b/,number:/(?:\b(?=\d)|\B(?=\.))(?:0[bo])?(?:(?:\d|0x[\da-f])[\da-f]*(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?j?\b/i,operator:/\/\.|;|=\.|\^=|\^:=|:=|<<|>>|<\||\|>|:>|\|->|->|<-|@@@|@@|@|\/@|=!=|===|==|=|\+|-|\[\/-+%=\]=?|!=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,punctuation:/[{}[\];(),.:]/},t.languages.mathematica=t.languages.wolfram,t.languages.wl=t.languages.wolfram,t.languages.nb=t.languages.wolfram}wg.displayName="wren";wg.aliases=[];function wg(t){t.languages.wren={comment:[{pattern:/\/\*(?:[^*/]|\*(?!\/)|\/(?!\*)|\/\*(?:[^*/]|\*(?!\/)|\/(?!\*)|\/\*(?:[^*/]|\*(?!\/)|\/(?!\*))*\*\/)*\*\/)*\*\//,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],"triple-quoted-string":{pattern:/"""[\s\S]*?"""/,greedy:!0,alias:"string"},"string-literal":null,hashbang:{pattern:/^#!\/.+/,greedy:!0,alias:"comment"},attribute:{pattern:/#!?[ \t\u3000]*\w+/,alias:"keyword"},"class-name":[{pattern:/(\bclass\s+)\w+/,lookbehind:!0},/\b[A-Z][a-z\d_]*\b/],constant:/\b[A-Z][A-Z\d_]*\b/,null:{pattern:/\bnull\b/,alias:"keyword"},keyword:/\b(?:as|break|class|construct|continue|else|for|foreign|if|import|in|is|return|static|super|this|var|while)\b/,boolean:/\b(?:false|true)\b/,number:/\b(?:0x[\da-f]+|\d+(?:\.\d+)?(?:e[+-]?\d+)?)\b/i,function:/\b[a-z_]\w*(?=\s*[({])/i,operator:/<<|>>|[=!<>]=?|&&|\|\||[-+*/%~^&|?:]|\.{2,3}/,punctuation:/[\[\](){}.,;]/},t.languages.wren["string-literal"]={pattern:/(^|[^\\"])"(?:[^\\"%]|\\[\s\S]|%(?!\()|%\((?:[^()]|\((?:[^()]|\([^)]*\))*\))*\))*"/,lookbehind:!0,greedy:!0,inside:{interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)%\((?:[^()]|\((?:[^()]|\([^)]*\))*\))*\)/,lookbehind:!0,inside:{expression:{pattern:/^(%\()[\s\S]+(?=\)$)/,lookbehind:!0,inside:t.languages.wren},"interpolation-punctuation":{pattern:/^%\(|\)$/,alias:"punctuation"}}},string:/[\s\S]+/}}}Ig.displayName="xeora";Ig.aliases=["xeoracube"];function Ig(t){t.register(Ze),function(n){n.languages.xeora=n.languages.extend("markup",{constant:{pattern:/\$(?:DomainContents|PageRenderDuration)\$/,inside:{punctuation:{pattern:/\$/}}},variable:{pattern:/\$@?(?:#+|[-+*~=^])?[\w.]+\$/,inside:{punctuation:{pattern:/[$.]/},operator:{pattern:/#+|[-+*~=^@]/}}},"function-inline":{pattern:/\$F:[-\w.]+\?[-\w.]+(?:,(?:(?:@[-#]*\w+\.[\w+.]\.*)*\|)*(?:(?:[\w+]|[-#*.~^]+[\w+]|=\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\w+\.[\w+.]\.*)+(?:(?:[\w+]|[-#*~^][-#*.~^]*[\w+]|=\S)(?:[^$=]|=+[^=])*=*)?)?)?\$/,inside:{variable:{pattern:/(?:[,|])@?(?:#+|[-+*~=^])?[\w.]+/,inside:{punctuation:{pattern:/[,.|]/},operator:{pattern:/#+|[-+*~=^@]/}}},punctuation:{pattern:/\$\w:|[$:?.,|]/}},alias:"function"},"function-block":{pattern:/\$XF:\{[-\w.]+\?[-\w.]+(?:,(?:(?:@[-#]*\w+\.[\w+.]\.*)*\|)*(?:(?:[\w+]|[-#*.~^]+[\w+]|=\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\w+\.[\w+.]\.*)+(?:(?:[\w+]|[-#*~^][-#*.~^]*[\w+]|=\S)(?:[^$=]|=+[^=])*=*)?)?)?\}:XF\$/,inside:{punctuation:{pattern:/[$:{}?.,|]/}},alias:"function"},"directive-inline":{pattern:/\$\w(?:#\d+\+?)?(?:\[[-\w.]+\])?:[-\/\w.]+\$/,inside:{punctuation:{pattern:/\$(?:\w:|C(?:\[|#\d))?|[:{[\]]/,inside:{tag:{pattern:/#\d/}}}},alias:"function"},"directive-block-open":{pattern:/\$\w+:\{|\$\w(?:#\d+\+?)?(?:\[[-\w.]+\])?:[-\w.]+:\{(?:![A-Z]+)?/,inside:{punctuation:{pattern:/\$(?:\w:|C(?:\[|#\d))?|[:{[\]]/,inside:{tag:{pattern:/#\d/}}},attribute:{pattern:/![A-Z]+$/,inside:{punctuation:{pattern:/!/}},alias:"keyword"}},alias:"function"},"directive-block-separator":{pattern:/\}:[-\w.]+:\{/,inside:{punctuation:{pattern:/[:{}]/}},alias:"function"},"directive-block-close":{pattern:/\}:[-\w.]+\$/,inside:{punctuation:{pattern:/[:{}$]/}},alias:"function"}}),n.languages.insertBefore("inside","punctuation",{variable:n.languages.xeora["function-inline"].inside.variable},n.languages.xeora["function-block"]),n.languages.xeoracube=n.languages.xeora}(t)}Cg.displayName="xml-doc";Cg.aliases=[];function Cg(t){t.register(Ze),function(n){function r(o,l){n.languages[o]&&n.languages.insertBefore(o,"comment",{"doc-comment":l})}var s=n.languages.markup.tag,i={pattern:/\/\/\/.*/,greedy:!0,alias:"comment",inside:{tag:s}},a={pattern:/'''.*/,greedy:!0,alias:"comment",inside:{tag:s}};r("csharp",i),r("fsharp",i),r("vbnet",a)}(t)}Og.displayName="xojo";Og.aliases=[];function Og(t){t.languages.xojo={comment:{pattern:/(?:'|\/\/|Rem\b).+/i,greedy:!0},string:{pattern:/"(?:""|[^"])*"/,greedy:!0},number:[/(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:E[+-]?\d+)?/i,/&[bchou][a-z\d]+/i],directive:{pattern:/#(?:Else|ElseIf|Endif|If|Pragma)\b/i,alias:"property"},keyword:/\b(?:AddHandler|App|Array|As(?:signs)?|Auto|Boolean|Break|By(?:Ref|Val)|Byte|Call|Case|Catch|CFStringRef|CGFloat|Class|Color|Const|Continue|CString|Currency|CurrentMethodName|Declare|Delegate|Dim|Do(?:uble|wnTo)?|Each|Else(?:If)?|End|Enumeration|Event|Exception|Exit|Extends|False|Finally|For|Function|Get|GetTypeInfo|Global|GOTO|If|Implements|In|Inherits|Int(?:8|16|32|64|eger|erface)?|Lib|Loop|Me|Module|Next|Nil|Object|Optional|OSType|ParamArray|Private|Property|Protected|PString|Ptr|Raise(?:Event)?|ReDim|RemoveHandler|Return|Select(?:or)?|Self|Set|Shared|Short|Single|Soft|Static|Step|String|Sub|Super|Text|Then|To|True|Try|Ubound|UInt(?:8|16|32|64|eger)?|Until|Using|Var(?:iant)?|Wend|While|WindowPtr|WString)\b/i,operator:/<[=>]?|>=?|[+\-*\/\\^=]|\b(?:AddressOf|And|Ctype|IsA?|Mod|New|Not|Or|WeakAddressOf|Xor)\b/i,punctuation:/[.,;:()]/}}kg.displayName="xquery";kg.aliases=[];function kg(t){t.register(Ze),function(n){n.languages.xquery=n.languages.extend("markup",{"xquery-comment":{pattern:/\(:[\s\S]*?:\)/,greedy:!0,alias:"comment"},string:{pattern:/(["'])(?:\1\1|(?!\1)[\s\S])*\1/,greedy:!0},extension:{pattern:/\(#.+?#\)/,alias:"symbol"},variable:/\$[-\w:]+/,axis:{pattern:/(^|[^-])(?:ancestor(?:-or-self)?|attribute|child|descendant(?:-or-self)?|following(?:-sibling)?|parent|preceding(?:-sibling)?|self)(?=::)/,lookbehind:!0,alias:"operator"},"keyword-operator":{pattern:/(^|[^:-])\b(?:and|castable as|div|eq|except|ge|gt|idiv|instance of|intersect|is|le|lt|mod|ne|or|union)\b(?=$|[^:-])/,lookbehind:!0,alias:"operator"},keyword:{pattern:/(^|[^:-])\b(?:as|ascending|at|base-uri|boundary-space|case|cast as|collation|construction|copy-namespaces|declare|default|descending|else|empty (?:greatest|least)|encoding|every|external|for|function|if|import|in|inherit|lax|let|map|module|namespace|no-inherit|no-preserve|option|order(?: by|ed|ing)?|preserve|return|satisfies|schema|some|stable|strict|strip|then|to|treat as|typeswitch|unordered|validate|variable|version|where|xquery)\b(?=$|[^:-])/,lookbehind:!0},function:/[\w-]+(?::[\w-]+)*(?=\s*\()/,"xquery-element":{pattern:/(element\s+)[\w-]+(?::[\w-]+)*/,lookbehind:!0,alias:"tag"},"xquery-attribute":{pattern:/(attribute\s+)[\w-]+(?::[\w-]+)*/,lookbehind:!0,alias:"attr-name"},builtin:{pattern:/(^|[^:-])\b(?:attribute|comment|document|element|processing-instruction|text|xs:(?:ENTITIES|ENTITY|ID|IDREFS?|NCName|NMTOKENS?|NOTATION|Name|QName|anyAtomicType|anyType|anyURI|base64Binary|boolean|byte|date|dateTime|dayTimeDuration|decimal|double|duration|float|gDay|gMonth|gMonthDay|gYear|gYearMonth|hexBinary|int|integer|language|long|negativeInteger|nonNegativeInteger|nonPositiveInteger|normalizedString|positiveInteger|short|string|time|token|unsigned(?:Byte|Int|Long|Short)|untyped(?:Atomic)?|yearMonthDuration))\b(?=$|[^:-])/,lookbehind:!0},number:/\b\d+(?:\.\d+)?(?:E[+-]?\d+)?/,operator:[/[+*=?|@]|\.\.?|:=|!=|<[=<]?|>[=>]?/,{pattern:/(\s)-(?=\s)/,lookbehind:!0}],punctuation:/[[\](){},;:/]/}),n.languages.xquery.tag.pattern=/<\/?(?!\d)[^\s>\/=$<%]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\[\s\S]|\{(?!\{)(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])+\}|(?!\1)[^\\])*\1|[^\s'">=]+))?)*\s*\/?>/,n.languages.xquery.tag.inside["attr-value"].pattern=/=(?:("|')(?:\\[\s\S]|\{(?!\{)(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])+\}|(?!\1)[^\\])*\1|[^\s'">=]+)/,n.languages.xquery.tag.inside["attr-value"].inside.punctuation=/^="|"$/,n.languages.xquery.tag.inside["attr-value"].inside.expression={pattern:/\{(?!\{)(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])+\}/,inside:n.languages.xquery,alias:"language-xquery"};var r=function(i){return typeof i=="string"?i:typeof i.content=="string"?i.content:i.content.map(r).join("")},s=function(i){for(var a=[],o=0;o<i.length;o++){var l=i[o],c=!1;if(typeof l!="string"&&(l.type==="tag"&&l.content[0]&&l.content[0].type==="tag"?l.content[0].content[0].content==="</"?a.length>0&&a[a.length-1].tagName===r(l.content[0].content[1])&&a.pop():l.content[l.content.length-1].content==="/>"||a.push({tagName:r(l.content[0].content[1]),openedBraces:0}):a.length>0&&l.type==="punctuation"&&l.content==="{"&&(!i[o+1]||i[o+1].type!=="punctuation"||i[o+1].content!=="{")&&(!i[o-1]||i[o-1].type!=="plain-text"||i[o-1].content!=="{")?a[a.length-1].openedBraces++:a.length>0&&a[a.length-1].openedBraces>0&&l.type==="punctuation"&&l.content==="}"?a[a.length-1].openedBraces--:l.type!=="comment"&&(c=!0)),(c||typeof l=="string")&&a.length>0&&a[a.length-1].openedBraces===0){var d=r(l);o<i.length-1&&(typeof i[o+1]=="string"||i[o+1].type==="plain-text")&&(d+=r(i[o+1]),i.splice(o+1,1)),o>0&&(typeof i[o-1]=="string"||i[o-1].type==="plain-text")&&(d=r(i[o-1])+d,i.splice(o-1,1),o--),/^\s+$/.test(d)?i[o]=d:i[o]=new n.Token("plain-text",d,null,d)}l.content&&typeof l.content!="string"&&s(l.content)}};n.hooks.add("after-tokenize",function(i){i.language==="xquery"&&s(i.tokens)})}(t)}Lg.displayName="yang";Lg.aliases=[];function Lg(t){t.languages.yang={comment:/\/\*[\s\S]*?\*\/|\/\/.*/,string:{pattern:/"(?:[^\\"]|\\.)*"|'[^']*'/,greedy:!0},keyword:{pattern:/(^|[{};\r\n][ \t]*)[a-z_][\w.-]*/i,lookbehind:!0},namespace:{pattern:/(\s)[a-z_][\w.-]*(?=:)/i,lookbehind:!0},boolean:/\b(?:false|true)\b/,operator:/\+/,punctuation:/[{};:]/}}Dg.displayName="zig";Dg.aliases=[];function Dg(t){(function(n){function r(d){return function(){return d}}var s=/\b(?:align|allowzero|and|anyframe|anytype|asm|async|await|break|cancel|catch|comptime|const|continue|defer|else|enum|errdefer|error|export|extern|fn|for|if|inline|linksection|nakedcc|noalias|nosuspend|null|or|orelse|packed|promise|pub|resume|return|stdcallcc|struct|suspend|switch|test|threadlocal|try|undefined|union|unreachable|usingnamespace|var|volatile|while)\b/,i="\\b(?!"+s.source+")(?!\\d)\\w+\\b",a=/align\s*\((?:[^()]|\([^()]*\))*\)/.source,o=/(?:\?|\bpromise->|(?:\[[^[\]]*\]|\*(?!\*)|\*\*)(?:\s*<ALIGN>|\s*const\b|\s*volatile\b|\s*allowzero\b)*)/.source.replace(/<ALIGN>/g,r(a)),l=/(?:\bpromise\b|(?:\berror\.)?<ID>(?:\.<ID>)*(?!\s+<ID>))/.source.replace(/<ID>/g,r(i)),c="(?!\\s)(?:!?\\s*(?:"+o+"\\s*)*"+l+")+";n.languages.zig={comment:[{pattern:/\/\/[/!].*/,alias:"doc-comment"},/\/{2}.*/],string:[{pattern:/(^|[^\\@])c?"(?:[^"\\\r\n]|\\.)*"/,lookbehind:!0,greedy:!0},{pattern:/([\r\n])([ \t]+c?\\{2}).*(?:(?:\r\n?|\n)\2.*)*/,lookbehind:!0,greedy:!0}],char:{pattern:/(^|[^\\])'(?:[^'\\\r\n]|[\uD800-\uDFFF]{2}|\\(?:.|x[a-fA-F\d]{2}|u\{[a-fA-F\d]{1,6}\}))'/,lookbehind:!0,greedy:!0},builtin:/\B@(?!\d)\w+(?=\s*\()/,label:{pattern:/(\b(?:break|continue)\s*:\s*)\w+\b|\b(?!\d)\w+\b(?=\s*:\s*(?:\{|while\b))/,lookbehind:!0},"class-name":[/\b(?!\d)\w+(?=\s*=\s*(?:(?:extern|packed)\s+)?(?:enum|struct|union)\s*[({])/,{pattern:RegExp(/(:\s*)<TYPE>(?=\s*(?:<ALIGN>\s*)?[=;,)])|<TYPE>(?=\s*(?:<ALIGN>\s*)?\{)/.source.replace(/<TYPE>/g,r(c)).replace(/<ALIGN>/g,r(a))),lookbehind:!0,inside:null},{pattern:RegExp(/(\)\s*)<TYPE>(?=\s*(?:<ALIGN>\s*)?;)/.source.replace(/<TYPE>/g,r(c)).replace(/<ALIGN>/g,r(a))),lookbehind:!0,inside:null}],"builtin-type":{pattern:/\b(?:anyerror|bool|c_u?(?:int|long|longlong|short)|c_longdouble|c_void|comptime_(?:float|int)|f(?:16|32|64|128)|[iu](?:8|16|32|64|128|size)|noreturn|type|void)\b/,alias:"keyword"},keyword:s,function:/\b(?!\d)\w+(?=\s*\()/,number:/\b(?:0b[01]+|0o[0-7]+|0x[a-fA-F\d]+(?:\.[a-fA-F\d]*)?(?:[pP][+-]?[a-fA-F\d]+)?|\d+(?:\.\d*)?(?:[eE][+-]?\d+)?)\b/,boolean:/\b(?:false|true)\b/,operator:/\.[*?]|\.{2,3}|[-=]>|\*\*|\+\+|\|\||(?:<<|>>|[-+*]%|[-+*/%^&|<>!=])=?|[?~]/,punctuation:/[.:,;(){}[\]]/},n.languages.zig["class-name"].forEach(function(d){d.inside===null&&(d.inside=n.languages.zig)})})(t)}m.register(Ze);m.register(Sr);m.register(le);m.register(ec);m.register(at);m.register(Z1);m.register(Q1);m.register(J1);m.register(eh);m.register(th);m.register(nh);m.register(rh);m.register(sh);m.register(ti);m.register(ih);m.register(ah);m.register(oh);m.register(lh);m.register(un);m.register(Jr);m.register(Xl);m.register(ch);m.register(dh);m.register(wa);m.register(Ca);m.register(sc);m.register(uh);m.register(hh);m.register(es);m.register(ph);m.register(mh);m.register(fh);m.register(gh);m.register(bh);m.register(xh);m.register(Eh);m.register(Th);m.register(ka);m.register(yh);m.register(Sh);m.register(Nh);m.register(jh);m.register(Ah);m.register(_h);m.register(vh);m.register(Rh);m.register(wh);m.register(Ih);m.register(Ch);m.register(Oh);m.register(kh);m.register(Lh);m.register(Dh);m.register(Mh);m.register(Fh);m.register(Ph);m.register(Uh);m.register(Bh);m.register(Hh);m.register(Gh);m.register($h);m.register(zh);m.register(Wh);m.register(rs);m.register(Vh);m.register(Kh);m.register(Yh);m.register(qh);m.register(Xh);m.register(Zh);m.register(Qh);m.register(Jh);m.register(ep);m.register(tp);m.register(Zl);m.register(ot);m.register(np);m.register(rp);m.register(sp);m.register(ip);m.register(ap);m.register(op);m.register(lp);m.register(cp);m.register(dp);m.register(up);m.register(Ia);m.register(hp);m.register(pp);m.register(mp);m.register(fp);m.register(gp);m.register(bp);m.register(xp);m.register(Ep);m.register(Tp);m.register(yp);m.register(Sp);m.register(Np);m.register(jp);m.register(Ap);m.register(_p);m.register(vp);m.register(Rp);m.register(wp);m.register(Ip);m.register(Cp);m.register(Op);m.register(kp);m.register(Ql);m.register(Lp);m.register(Dp);m.register(Mp);m.register(Fp);m.register(nc);m.register(dc);m.register(Pp);m.register(Up);m.register(Bp);m.register(Da);m.register(Hp);m.register(Gp);m.register($p);m.register(zp);m.register(Wp);m.register(Vp);m.register(ei);m.register(Kp);m.register(Yp);m.register(qp);m.register(Xp);m.register(Zp);m.register(Qp);m.register(Jp);m.register(em);m.register(Jl);m.register(tm);m.register(nm);m.register(ts);m.register(ns);m.register(si);m.register(rm);m.register(sm);m.register(im);m.register(am);m.register(om);m.register(lm);m.register(cm);m.register(ni);m.register(dm);m.register(um);m.register(hm);m.register(pm);m.register(mm);m.register(fm);m.register(gm);m.register(bm);m.register(xm);m.register(tc);m.register(Em);m.register(Tm);m.register(ym);m.register(Sm);m.register(Ma);m.register(Nm);m.register(jm);m.register(Am);m.register(_m);m.register(vm);m.register(Rm);m.register(wm);m.register(Im);m.register(rc);m.register(hc);m.register(Cm);m.register(Om);m.register(km);m.register(Lm);m.register(Dm);m.register(Mm);m.register(Fm);m.register(Pm);m.register(Um);m.register(Bm);m.register(Hm);m.register(Gm);m.register($m);m.register(zm);m.register(Wm);m.register(Vm);m.register(Km);m.register(Ym);m.register(qm);m.register(ic);m.register(Xm);m.register(Zm);m.register(Qm);m.register(Jm);m.register(ef);m.register(tf);m.register(nf);m.register(rf);m.register(sf);m.register(af);m.register(of);m.register(lf);m.register(ac);m.register(cf);m.register(df);m.register(uf);m.register(hf);m.register(pf);m.register(mf);m.register(ff);m.register(gf);m.register(bf);m.register(xf);m.register(Ef);m.register(Tf);m.register(yf);m.register(Sf);m.register(Nf);m.register(jf);m.register(Af);m.register(_f);m.register(Oa);m.register(vf);m.register(Rf);m.register(wf);m.register(If);m.register(oc);m.register(Cf);m.register(Of);m.register(pc);m.register(kf);m.register(Lf);m.register(Df);m.register(Mf);m.register(Ff);m.register(Pf);m.register(Uf);m.register(Bf);m.register(Hf);m.register(lc);m.register(Gf);m.register(cc);m.register($f);m.register(zf);m.register(Wf);m.register(Vf);m.register(Kf);m.register(Yf);m.register(qf);m.register(Xf);m.register(mc);m.register(Zf);m.register(Qf);m.register(Jf);m.register(eg);m.register(tg);m.register(ng);m.register(rg);m.register(sg);m.register(uc);m.register(ig);m.register(Fa);m.register(ag);m.register(La);m.register(og);m.register(lg);m.register(cg);m.register(dg);m.register(ug);m.register(hg);m.register(pg);m.register(mg);m.register(fg);m.register(gg);m.register(bg);m.register(xg);m.register(Eg);m.register(Tg);m.register(yg);m.register(Sg);m.register(Ng);m.register(jg);m.register(Ag);m.register(_g);m.register(vg);m.register(Rg);m.register(wg);m.register(Ig);m.register(Cg);m.register(Og);m.register(kg);m.register(Lg);m.register(Dg);function Ou(){Ou=function(i,a){return new r(i,void 0,a)};var t=RegExp.prototype,n=new WeakMap;function r(i,a,o){var l=new RegExp(i,a);return n.set(l,o||n.get(i)),Tl(l,r.prototype)}function s(i,a){var o=n.get(a);return Object.keys(o).reduce(function(l,c){var d=o[c];if(typeof d=="number")l[c]=i[d];else{for(var h=0;i[d[h]]===void 0&&h+1<d.length;)h++;l[c]=i[d[h]]}return l},Object.create(null))}return function(i,a){if(typeof a!="function"&&a!==null)throw new TypeError("Super expression must either be null or a function");i.prototype=Object.create(a&&a.prototype,{constructor:{value:i,writable:!0,configurable:!0}}),Object.defineProperty(i,"prototype",{writable:!1}),a&&Tl(i,a)}(r,RegExp),r.prototype.exec=function(i){var a=t.exec.call(this,i);if(a){a.groups=s(a,this);var o=a.indices;o&&(o.groups=s(o,this))}return a},r.prototype[Symbol.replace]=function(i,a){if(typeof a=="string"){var o=n.get(this);return t[Symbol.replace].call(this,i,a.replace(/\$<([^>]+)>/g,function(c,d){var h=o[d];return"$"+(Array.isArray(h)?h.join("$"):h)}))}if(typeof a=="function"){var l=this;return t[Symbol.replace].call(this,i,function(){var c=arguments;return typeof c[c.length-1]!="object"&&(c=[].slice.call(c)).push(s(c,l)),a.apply(this,c)})}return t[Symbol.replace].call(this,i,a)},Ou.apply(this,arguments)}function Tl(t,n){return Tl=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(r,s){return r.__proto__=s,r},Tl(t,n)}function a0(t,n){(n==null||n>t.length)&&(n=t.length);for(var r=0,s=new Array(n);r<n;r++)s[r]=t[r];return s}function yd(t,n){var r=typeof Symbol<"u"&&t[Symbol.iterator]||t["@@iterator"];if(r)return(r=r.call(t)).next.bind(r);if(Array.isArray(t)||(r=function(i,a){if(i){if(typeof i=="string")return a0(i,a);var o=Object.prototype.toString.call(i).slice(8,-1);return o==="Object"&&i.constructor&&(o=i.constructor.name),o==="Map"||o==="Set"?Array.from(i):o==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?a0(i,a):void 0}}(t))||n&&t&&typeof t.length=="number"){r&&(t=r);var s=0;return function(){return s>=t.length?{done:!0}:{done:!1,value:t[s++]}}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var MI=function(t){return function(n){return n===void 0&&(n={}),function(s,i){if(i&&!s.registered(i))throw new Error('The default language "'+i+'" is not registered with refractor.')}(t,n.defaultLanguage),function(s){pI(s,"element",r)};function r(s,i,a){var o,l;if(a&&a.tagName==="pre"&&s.tagName==="code"){var c=(s==null||(o=s.data)==null?void 0:o.meta)||(s==null||(l=s.properties)==null?void 0:l.metastring)||"";s.properties.className?typeof s.properties.className=="boolean"?s.properties.className=[]:Array.isArray(s.properties.className)||(s.properties.className=[s.properties.className]):s.properties.className=[];var d,h,x=function(R){for(var I,v=yd(R.properties.className);!(I=v()).done;){var O=I.value;if(O.slice(0,9)==="language-")return O.slice(9).toLowerCase()}return null}(s);if(!x&&n.defaultLanguage&&s.properties.className.push("language-"+(x=n.defaultLanguage)),s.properties.className.push("code-highlight"),x)try{var g,A;A=(g=x)!=null&&g.includes("diff-")?x.split("-")[1]:x,d=t.highlight(So(s),A),a.properties.className=(a.properties.className||[]).concat("language-"+A)}catch(R){if(!n.ignoreMissing||!/Unknown language/.test(R.message))throw R;d=s}else d=s;d.children=(h=1,function R(I){return I.reduce(function(v,O){if(O.type==="text"){var F=O.value,H=(F.match(/\n/g)||"").length;if(H===0)O.position={start:{line:h,column:1},end:{line:h,column:1}},v.push(O);else for(var J,X=F.split(`
`),ie=yd(X.entries());!(J=ie()).done;){var Me=J.value,ue=Me[0],Qe=Me[1];v.push({type:"text",value:ue===X.length-1?Qe:Qe+`
`,position:{start:{line:h+ue,column:1},end:{line:h+ue,column:1}}})}return h+=H,v}if(Object.prototype.hasOwnProperty.call(O,"children")){var Oe=h;return O.children=R(O.children),v.push(O),O.position={start:{line:Oe,column:1},end:{line:h,column:1}},v}return v.push(O),v},[])})(d.children),d.position=d.children.length>0?{start:{line:d.children[0].position.start.line,column:0},end:{line:d.children[d.children.length-1].position.end.line,column:0}}:{start:{line:0,column:0},end:{line:0,column:0}};for(var S,y=function(R){var I=/{([\d,-]+)}/,v=R.split(",").map(function(H){return H.trim()}).join();if(I.test(v)){var O=I.exec(v)[1],F=xI(O);return function(H){return F.includes(H+1)}}return function(){return!1}}(c),_=function(R){var I=Ou(/showLineNumbers=(\d+)/i,{lines:1});if(I.test(R)){var v=I.exec(R);return Number(v.groups.lines)}return 1}(c),f=function(R){for(var I=new Array(R),v=0;v<R;v++)I[v]={type:"element",tagName:"span",properties:{className:[]},children:[]};return I}(d.position.end.line),b=["showlinenumbers=false",'showlinenumbers="false"',"showlinenumbers={false}"],T=function(){var R,I,v=S.value,O=v[0],F=v[1];F.properties.className=["code-line"];var H=gI(d,function(J){return J.position.start.line<=O+1&&J.position.end.line>=O+1});F.children=H.children,!c.toLowerCase().includes("showLineNumbers".toLowerCase())&&!n.showLineNumbers||b.some(function(J){return c.toLowerCase().includes(J)})||(F.properties.line=[(O+_).toString()],F.properties.className.push("line-number")),y(O)&&F.properties.className.push("highlight-line"),(x==="diff"||(R=x)!=null&&R.includes("diff-"))&&So(F).substring(0,1)==="-"?F.properties.className.push("deleted"):(x==="diff"||(I=x)!=null&&I.includes("diff-"))&&So(F).substring(0,1)==="+"&&F.properties.className.push("inserted")},E=yd(f.entries());!(S=E()).done;)T();f.length>0&&So(f[f.length-1]).trim()===""&&f.pop(),s.children=f}}}},FI=MI(m),PI=function(n,r){return r===void 0&&(r=[[FI,{ignoreMissing:!0}]]),sI().data("settings",{fragment:!0}).use([...r]).processSync(""+n).toString()};function UI(t){return t.replace(/```(tsx?|jsx?|html|xml)(.*)\s+([\s\S]*?)(\s.+)?```/g,n=>n.replace(/[<&"]/g,r=>({"<":"&lt;",">":"&gt;","&":"&amp;",'"':"&quot;"})[r])).replace(/[<&"]/g,n=>({"<":"&lt;",">":"&gt;","&":"&amp;",'"':"&quot;"})[n])}function Sd(t){t.stopPropagation(),t.preventDefault()}class BI{constructor(n){this.elm=void 0,this.start=void 0,this.end=void 0,this.value=void 0;var{selectionStart:r,selectionEnd:s}=n;this.elm=n,this.start=r,this.end=s,this.value=this.elm.value}position(n,r){var{selectionStart:s,selectionEnd:i}=this.elm;return this.start=typeof n=="number"&&!isNaN(n)?n:s,this.end=typeof r=="number"&&!isNaN(r)?r:i,this.elm.selectionStart=this.start,this.elm.selectionEnd=this.end,this}insertText(n){return this.elm.focus(),this.elm.setRangeText(n),this.value=this.elm.value,this.position(),this}getSelectedValue(n,r){var{selectionStart:s,selectionEnd:i}=this.elm;return this.value.slice(typeof n=="number"&&!isNaN(n)?n:s,typeof r=="number"&&!isNaN(r)?n:i)}getLineStartNumber(){for(var n=this.start;n>0;)if(n--,this.value.charAt(n)===`
`){n++;break}return n}getIndentText(){var n=this.getLineStartNumber(),r=this.getSelectedValue(n),s="";return r.replace(/(^(\s)+)/,(i,a)=>s=a),s}lineStarInstert(n){if(n){var r=this.start,s=this.getLineStartNumber(),i=this.getSelectedValue(s);this.position(s,this.end).insertText(i.split(`
`).map(a=>n+a).join(`
`)).position(r+n.length,this.end)}return this}lineStarRemove(n){if(n){var r=this.start,s=this.getLineStartNumber(),i=this.getSelectedValue(s),a=new RegExp("^"+n,"g"),o=r-n.length;a.test(i)||(o=r),this.position(s,this.end).insertText(i.split(`
`).map(l=>l.replace(a,"")).join(`
`)).position(o,this.end)}}notifyChange(){var n=new Event("input",{bubbles:!0,cancelable:!1});this.elm.dispatchEvent(n)}}function HI(t){var n=new BI(t.target),r=(t.code||t.nativeEvent.code).toLocaleLowerCase();if(r==="tab")Sd(t),n.start===n.end?t.shiftKey?n.lineStarRemove("  "):n.insertText("  ").position(n.start+2,n.end+2):n.getSelectedValue().indexOf(`
`)>-1&&t.shiftKey?n.lineStarRemove("  "):n.getSelectedValue().indexOf(`
`)>-1?n.lineStarInstert("  "):n.insertText("  ").position(n.start+2,n.end),n.notifyChange();else if(r==="enter"){Sd(t);var s=`
`+n.getIndentText();n.insertText(s).position(n.start+s.length,n.start+s.length),n.notifyChange()}else if(r&&/^(quote|backquote|bracketleft|digit9|comma)$/.test(r)&&n.getSelectedValue()){Sd(t);var i=n.getSelectedValue(),a="";switch(r){case"quote":a="'"+i+"'",t.shiftKey&&(a='"'+i+'"');break;case"backquote":a="`"+i+"`";break;case"bracketleft":a="["+i+"]",t.shiftKey&&(a="{"+i+"}");break;case"digit9":a="("+i+")";break;case"comma":a="<"+i+">";break}n.insertText(a),n.notifyChange()}}var GI={position:"relative",textAlign:"left",boxSizing:"border-box",padding:0,overflow:"hidden"},$I={position:"absolute",top:0,left:0,height:"100%",width:"100%",resize:"none",color:"inherit",opacity:.8,overflow:"hidden",MozOsxFontSmoothing:"grayscale",WebkitFontSmoothing:"antialiased",WebkitTextFillColor:"transparent"},o0={margin:0,border:0,background:"none",boxSizing:"inherit",display:"inherit",fontFamily:"inherit",fontSize:"inherit",fontStyle:"inherit",fontVariantLigatures:"inherit",fontWeight:"inherit",letterSpacing:"inherit",lineHeight:"inherit",tabSize:"inherit",textIndent:"inherit",textRendering:"inherit",textTransform:"inherit",whiteSpace:"pre-wrap",wordBreak:"keep-all",overflowWrap:"break-word",outline:0},zI=["prefixCls","value","padding","minHeight","placeholder","language","data-color-mode","className","style","rehypePlugins","onChange"];const WI=Fu.forwardRef((t,n)=>{var{prefixCls:r="w-tc-editor",padding:s=10,minHeight:i=16,placeholder:a,language:o,"data-color-mode":l,className:c,style:d,rehypePlugins:h,onChange:x}=t,g=N_(t,zI),[A,S]=M.useState(t.value||"");M.useEffect(()=>S(t.value||""),[t.value]);var y=M.useRef(null);M.useImperativeHandle(n,()=>y.current,[y]);var _={paddingTop:s,paddingRight:s,paddingBottom:s,paddingLeft:s},f=M.useMemo(()=>PI("<pre aria-hidden=true><code "+(o&&A?'class="language-'+o+'"':"")+" >"+UI(String(A||""))+"</code><br /></pre>",h),[A,o,h]),b=M.useMemo(()=>e.jsx("div",{style:Or({},o0,_,{minHeight:i}),className:r+"-preview "+(o?"language-"+o:""),dangerouslySetInnerHTML:{__html:f}}),[r,o,f]),T=I=>{S(I.target.value),x&&x(I)},E=I=>{g.readOnly||(!g.onKeyDown||g.onKeyDown(I)!==!1)&&HI(I)},R=Or({autoComplete:"off",autoCorrect:"off",spellCheck:"false",autoCapitalize:"off"},g,{placeholder:a,onKeyDown:E,style:Or({},o0,$I,_,{minHeight:i},a&&!A?{WebkitTextFillColor:"inherit"}:{}),onChange:T,className:r+"-text",value:A});return e.jsxs("div",{style:Or({},GI,d),className:r+" "+(c||""),"data-color-mode":l,children:[e.jsx("textarea",Or({},R,{ref:y})),b]})});function k({value:t}){return e.jsx("div",{className:"my-2 overflow-x-auto",children:e.jsx(WI,{className:"bg-gray-200/25 border-2 border-gray-300 border-solid font-mono min-w-full rounded text-base w-max","data-color-mode":"light",readOnly:!0,language:"js",value:t})})}const VI="/my-textbook/assets/adjacency-list-edges-9eDj1UNY.png",KI="/my-textbook/assets/adjacency-list-depth-first-search-XhxsPApS.png",YI="/my-textbook/assets/adjacency-list-breadth-first-search-IIom2C-w.png",qI=`// Узел графа для списка смежности
class GraphNode {
  constructor(value) {
    this.value = value;
    this.neighbors = [];
  }
} 

// Или используем хеш-карту
const adjList = new Map();

// Даны направленные рёбра, построим список смежности
const edges = [["A", "B"], ["B", "C"], ["B", "E"], ["C", "E"], ["E", "D"]];

for (const edge of edges) {
  const src = edge[0];
  const dst = edge[1];

  // Если текущий источник не существует, добавим его в хеш-карту
  if (!adjList.has(src)) {
    adjList.set(src, []);    
  }

  // Если текущий пункт назначения не существует, добавим его в хеш-карту
  if (!adjList.has(dst)) {
    adjList.set(dst, []);    
  }

  // Получим массив соседей по ключу (источник) и добавим в него пункт назначения
  adjList.get(src).push(dst);    
}`,XI=`function dfs(node, target, adjList, visit) {
  if (visit.has(node)) {
    return 0;
  }

  if (node === target) {
    return 1;
  }

  let count = 0;
  visit.add(node);

  for (const neighbor of adjList.get(node)) {
    count += dfs(neighbor, target, adjList, visit); 
  }

  visit.delete(node);
  return count;
}`,ZI=`function bfs(node, target, adjList) {
  let length = 0;
  const visit = new Set();
  const queue = []; // представим, что это очередь, чтобы не занимать место реализацией очереди
  visit.add(node);
  queue.push(node);

  while (queue.length !== 0) {
    const queueLength = queue.length;

    for (let i = 0; i < queueLength; i++) {
      const curr = queue.shift(); // представим, что это операция очереди dequeue

      if (curr === target) {
        return length;
      }

      for (const neighbor of adjList.get(curr)) {
        if (!visit.has(neighbor)) {
          visit.add(neighbor);
          queue.push(neighbor);
        }
      }
    }

    length++;
  }

  return length;
}`;function QI(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Список смежности, вероятно, является «самым приятным» форматом из трёх, которые мы рассмотрели. Здесь нам дан список направленных рёбер, и мы должны соединить источник с пунктами назначения. Другими словами, нам нужно построить список смежности по массиву рёбер."}),e.jsx("p",{className:"mb-2",children:"Код ниже демонстрирует, как мы можем построить список смежности. Мы можем использовать хеш-карту, где ключом является вершина, и он сопоставляется со списком своих соседей, которые также являются вершинами. Хеш-карта подходит, поскольку мы предполагаем, что все ключи значений уникальны."}),e.jsx(k,{value:qI}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Граф, представленный списком смежности",className:"mx-auto",height:"400",src:VI,width:"800"})}),e.jsx("h2",{className:"font-bold my-2",children:"DFS для списка смежности"}),e.jsx("p",{className:"mb-2",children:"Допустим, мы хотим посчитать количество путей, ведущих от источника к пункту назначения."}),e.jsxs("p",{className:"mb-2",children:["В приведённом ниже коде у нас есть список смежности, источник и цель"," ",e.jsx("code",{children:"target"}),". Подобно обходу матрицы, мы будем использовать"," ",e.jsx("code",{children:"Set"})," под названием ",e.jsx("code",{children:"visit"}),", чтобы отслеживать вершины, которые мы уже посетили."]}),e.jsxs("p",{className:"mb-2",children:["Затем мы будем рекурсивно запускать DFS в нашем списке, пока не достигнем целевого узла, после чего вернем ",e.jsx("code",{children:"1"}),". Как только мы найдём путь, мы вернёмся, удалив узлы из нашего ",e.jsx("code",{children:"Set"})," и вернув ",e.jsx("code",{children:"count"}),"."]}),e.jsx(k,{value:XI}),e.jsxs("p",{className:"mb-2",children:["На изображении ниже продемонстрирован описанный выше алгоритм. Красные галочки указывают, что узел был посещён и находится в ",e.jsx("code",{children:"Set"}),"."]}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Поиск в глубину в графе, представленным списком смежности",className:"mx-auto",height:"1260",src:KI,width:"1060"})}),e.jsx("h2",{className:"font-bold my-2",children:"Сложность по времени"}),e.jsxs("p",{className:"mb-2",children:["Этот бэктрекинг является экспоненциальным. В худшем случае каждый узел связан с каждым другим узлом графа. Напомним правило,"," ",e.jsxs("code",{children:["E <= V",e.jsx("sup",{children:"2"})]}),". Итак, предположим, что каждая вершина имеет ",e.jsx("i",{children:"N"})," рёбер. Если мы хотим создать дерево решений, определяющее, сколько вершин могут быть соседями каждой вершины, и высота этого дерева равна ",e.jsx("i",{children:"V"}),", это означает, что в худшем случае нам придется выполнить"," ",e.jsxs("i",{children:["N",e.jsx("sup",{children:"v"})]})," ","работы по очень схожим причинам к тому, что мы обсуждали в статье о матрицах."]}),e.jsx("h2",{className:"font-bold my-2",children:"BFS для списка смежности"}),e.jsxs("p",{className:"mb-2",children:["Запуск BFS аналогичен тому, что мы видели раньше. Допустим, наша цель — найти"," ",e.jsx("strong",{children:"кратчайший путь"})," от узла к цели. Под кратчайшим путем мы подразумеваем достижение пункта назначения путём посещения наименьшего количества возможных вершин."]}),e.jsxs("p",{className:"mb-2",children:["Наш код очень похож на код, когда мы рассматривали BFS для графа, представленного матрицей, за исключением того, что в этом случае нам не нужно беспокоиться о крайних случаях. Мы будем продолжать увеличивать длину на каждом уровне, пока не найдем целевую вершину ",e.jsx("code",{children:"target"}),"."]}),e.jsx(k,{value:ZI}),e.jsxs("p",{className:"mb-2",children:["Глядя на изображение ниже, приведённый выше фрагмент кода вернёт ",e.jsx("code",{children:"2"}),"."]}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Поиск в ширину в графе, представленным списком смежности",className:"mx-auto",height:"819",src:YI,width:"1060"})}),e.jsx("h2",{className:"font-bold my-2",children:"Сложность по времени"}),e.jsxs("p",{className:"mb-2",children:["Ранее мы узнали, что количество рёбер в графе ограничено ",e.jsx("i",{children:"V"}),e.jsx("sup",{children:"2"}),". Однако мы знаем, что в этом случае у нас нет петель и нет максимального количества рёбер. Следовательно, мы можем сказать, что сложность по времени равна ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"V"})," + ",e.jsx("i",{children:"E"}),"), где ",e.jsx("i",{children:"V"})," — количество вершин, а"," ",e.jsx("i",{children:"E"})," — количество рёбер. Это связано с тем, что в худшем случае наш BFS должен учитывать все пути ко всем возможным вершинам, а это означает, что общая работа будет равна количеству вершин и рёбер вместе взятых."]}),e.jsx("h2",{className:"font-bold my-2",children:"Итоги"}),e.jsx("p",{className:"mb-2",children:"Вы можете в это не поверить, но на самом деле это лишь поверхностное понимание и объяснение основ. В конце концов, существует целая область исследований под названием Теория графов."})]})}const JI=`const array = [1, 2, 3];

array[1];`,e5=`for (let i = 0; i < array.length; i++) {
  console.log(array[i]);
}`,t5="array.pop();",n5=`// удаление элемента по индексу i
for (let j = i + 1; j < array.length; j++) {
  array[j - 1] = array[j];
}

array.length--;`,r5="array.push(4);",s5=`// вставка элемента по индексу i
for (let j = array.length - 1; j > i - 1; j--) {
  array[j + 1] = array[j];
}

array[i] = 4;`;function i5(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{children:"Массив — это структура данных, в которой можно хранить коллекции элементов. Каждый элемент проиндексирован."}),e.jsx("p",{children:"Наиболее распространёнными операциями являются:"}),e.jsxs("ul",{className:"list-disc list-inside",children:[e.jsx("li",{className:"ml-6",children:"Чтение"}),e.jsx("li",{className:"ml-6",children:"Удаление"}),e.jsx("li",{className:"ml-6",children:"Вставка"})]}),e.jsx("h2",{className:"font-bold my-2",children:"Чтение из массива"}),e.jsx("p",{children:"Чтение из массива происходит через доступ по индексу:"}),e.jsx(k,{value:JI}),e.jsxs("p",{children:["Если известен индекс элемента, доступ происходит мгновенно. Сложность по времени составляет ",e.jsx("i",{children:"O"}),"(1)."]}),e.jsx("h2",{className:"font-bold my-2",children:"Обход массива"}),e.jsxs("p",{children:["Сложность обхода массива из n элементов — ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),")."]}),e.jsx(k,{value:e5}),e.jsxs("p",{children:["Количество операций линейно зависит от ",e.jsx("i",{children:"n"}),". Если ",e.jsx("i",{children:"n"})," удвоится, количество операций также удвоится."]}),e.jsx("h2",{className:"font-bold my-2",children:"Удаление из массива"}),e.jsxs("p",{children:["При удалении любого элемента из массива (кроме последнего) необходимо сдвинуть все последующие элементы на 1 позицию влево. В худшем случае придётся переместить все оставшиеся элементы. Таким образом, сложность будет ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),")."]}),e.jsx(k,{value:n5}),e.jsxs("p",{children:["Удаление последнего элемента из массива — ",e.jsx("i",{children:"O"}),"(1), так как другие элементы не придётся сдвигать."]}),e.jsx(k,{value:t5}),e.jsx("h2",{className:"font-bold my-2",children:"Вставка в массив"}),e.jsxs("p",{children:["При вставке в массив необходимо сдвигать элементы по аналогии с удалением, но вправо. Сложность аналогичная — в худшем случае ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),")."]}),e.jsx(k,{value:r5}),e.jsxs("p",{children:["При вставке в конец массива сложность ",e.jsx("i",{children:"O"}),"(1)."]}),e.jsx(k,{value:s5}),e.jsx("h2",{className:"font-bold my-2",children:"Итоги:"}),e.jsxs("table",{className:"border-collapse mb-2 table-auto w-full",children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{className:"border-2 border-gray-300 border-solid p-2 text-left",children:"Операция"}),e.jsx("th",{className:"border-2 border-gray-300 border-solid p-2 text-left",children:"Сложность по времени"}),e.jsx("th",{className:"border-2 border-gray-300 border-solid p-2 text-left",children:"Примечания"})]})}),e.jsxs("tbody",{children:[e.jsxs("tr",{children:[e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Чтение"}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:[e.jsx("i",{children:"O"}),"(1)"]}),e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"—"})]}),e.jsxs("tr",{children:[e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Удаление"}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:[e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),")",e.jsx("sup",{children:"*"})]}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:["При удалении последнего элемента ",e.jsx("i",{children:"O"}),"(1)"]})]}),e.jsxs("tr",{children:[e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Вставка"}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:[e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),")",e.jsx("sup",{children:"*"})]}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:["При вставке в конец массива ",e.jsx("i",{children:"O"}),"(1)"]})]})]})]})]})}const a5="/my-textbook/assets/backtracking1-BfJXCuoY.png",o5="/my-textbook/assets/backtracking2-5JuPTDHV.png",l5=`class TreeNode {
  left = null;
  right = null;

  constructor(val) {
    this.val = val;
  }
}

function canReachLeaf(root) {
  if (!root || root.val === 0) {
    return false;
  }

  if (!root.left && !root.right) {
    return true;
  }

  if (canReachLeaf(root.left)) {
    return true;
  }

  if (canReachLeaf(root.right)) {
    return true;
  }

  return false;
}`,c5=`function leafPath(root, path) {
  if (!root || root.val === 0) {
    return false;
  }

  path.push(root.val);
  
  if (!root.left && !root.right) {
    return true;
  }

  if (leafPath(root.left, path)) {
    return true;
  }

  if (leafPath(root.right, path)) {
    return true;
  }

  path.pop();

  return false;
}`;function d5(){return e.jsxs(e.Fragment,{children:[e.jsx("h2",{className:"font-bold my-2",children:"Бэктрекинг"}),e.jsx("p",{className:"mb-2",children:"Поиск с возвратом (бэктрекинг) — это алгоритм, который похож на алгоритм DFS для бинарных деревьев, который мы уже обсуждали. Он действует методом грубой силы. Мы исследуем возможный способ решения задачи, и если решить задачу этим способом нам не удаётся, мы возвращаемся назад и исследуем другие способы, пока не найдём решение."}),e.jsx("h2",{className:"font-bold my-2",children:"Мотивация с примером"}),e.jsx("p",{className:"mb-2",children:"Кратко обсудив, что такое бэктрекинг, и приняв во внимание всё, что мы знаем о DFS, давайте посмотрим, как мы будем решать следующую задачу."}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Определите, существует ли путь от корня дерева до листового узла. Путь не может содержать нулей."})}),e.jsxs("p",{className:"mb-2",children:["По сути, проблема заключается в том, можем ли мы пройти от корневого узла к листовому узлу, не встречая значения ",e.jsx("code",{children:"0"}),". Мы возвращаем"," ",e.jsx("code",{children:"true"}),", если путь существует, и ",e.jsx("code",{children:"false"}),", если его нет."]}),e.jsxs("p",{className:"mb-2",children:["Первое, что приходит на ум, — это использование поиска в глубину. Наше ограничение состоит в том, что на нашем пути не может быть узла со значением ",e.jsx("code",{children:"0"}),". Мы также знаем, что если дерево пусто, то не может существовать и валидного пути. Наконец, если мы достигли листового узла и не вернули ",e.jsx("code",{children:"false"}),", мы можем вернуть ",e.jsx("code",{children:"true"}),", поскольку это означает, что существует путь от корня до листа."]}),e.jsxs("p",{className:"mb-2",children:["Для решения этой проблемы предположим, что существует ровно один путь, поэтому он должен существовать либо в правом поддереве, либо в левом поддереве. Произвольно мы решаем попробовать левую сторону перед правой. Если ответ не найден в левом поддереве, алгоритм будет искать в правом поддереве и, если путь существует, вернёт ",e.jsx("code",{children:"true"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Дано дерево ",e.jsx("code",{children:"[4, 0, 1, null, 7, 2, 0]"}),", валидный путь будет выглядеть следующим образом, как показано на изображении. Путь недействителен, если в нем есть ",e.jsx("code",{children:"0"}),"."]}),e.jsx("p",{className:"mb-2",children:"Теперь, когда мы знаем наши базовые случаи, перевести это в код очень просто."}),e.jsx(k,{value:l5}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Поиск пути от корня до листового узла",className:"mx-auto",height:"600",src:a5,width:"1080"})}),e.jsx("p",{className:"mb-2",children:"Давайте взглянем на немного изменённую задачу, в которой нам нужно возвращать значения пути вместо простого возврата логического значения."}),e.jsxs("p",{className:"mb-2",children:["В этой задаче мы можем передать параметр ",e.jsx("code",{children:"path"}),", который представляет собой список для хранения всех узлов, находящихся на валидном пути. Итак, учитывая дерево ",e.jsx("code",{children:"[4, 0, 1, null, 7, 3, 2, null, null, null, 0]"}),", мы сначала добавляем корневой узел в наш список."]}),e.jsxs("p",{className:"mb-2",children:["Поскольку существует только один валидный путь, он будет находиться либо в левом поддереве, либо в правом поддереве. Приоритет левого над правым делает левое поддерево недопустимым, поскольку левый дочерний узел ",e.jsx("code",{children:"4"})," равен"," ",e.jsx("code",{children:"0"}),". Мы возвращаем ",e.jsx("code",{children:"false"})," и теперь рекурсивно проверяем правое поддерево. Двигаясь вправо, ",e.jsx("code",{children:"1"})," является валидным, поэтому мы добавляем его в наш список. Теперь мы проверяем ",e.jsx("code",{children:"3"}),", которое является валидным, поэтому оно добавляется в наш список. Левый дочерний узел ",e.jsx("code",{children:"3"})," ","равен ",e.jsx("code",{children:"null"}),", поэтому мы возвращаем ",e.jsx("code",{children:"false"}),". Проверяя правый дочерний узел ",e.jsx("code",{children:"3"}),", мы снова попадаем в базовый случай. Теперь мы должны удалить ",e.jsx("code",{children:"3"})," из нашего списка, потому что, если бы существовал валидный путь, мы бы уже вернули ",e.jsx("code",{children:"true"}),". Мы возвращаемся к родительскому узлу"," ",e.jsx("code",{children:"3"}),", то есть ",e.jsx("code",{children:"1"}),", и проверяем его правое поддерево. Добавляем ",e.jsx("code",{children:"2"})," в наш список. Затем мы исследуем ",e.jsx("code",{children:"2"}),", но"," ",e.jsx("code",{children:"2"})," — это листовой узел, что заставляет рекурсивный вызов возвратить"," ",e.jsx("code",{children:"true"}),", после чего функция возвращает ",e.jsx("code",{children:"true"}),". Наш валидный путь — ",e.jsx("code",{children:"[4, 1, 2]"}),"."]}),e.jsx("p",{className:"mb-2",children:"На изображении ниже показан этот процесс."}),e.jsx("img",{alt:"Поиск пути от корня до листового узла",className:"mb-2",height:"919",src:o5,width:"1540"}),e.jsx(k,{value:c5}),e.jsx("h2",{className:"font-bold my-2",children:"Сложность по времени"}),e.jsxs("p",{className:"mb-2",children:["Учитывая, что дерево имеет ",e.jsx("i",{children:"n"})," узлов, сложность по времени будет равна"," ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),"), поскольку нам придётся обойти всё дерево. Как и в любом алгоритме грубой силы, нам придётся пройти через входные данные, размер которых в данном случае соответствует размеру дерева."]}),e.jsx("h2",{className:"font-bold my-2",children:"Итоги"}),e.jsx("p",{className:"mb-2",children:"Бэктрекинг — это абстрактный алгоритм, и бинарные деревья — не единственная структура данных, к которой его можно применять. В следующих статьях мы увидим, как можно применить этот алгоритм к другим структурам данных."})]})}const u5="/my-textbook/assets/binary-search-exist-kkI1BJjD.png",h5="/my-textbook/assets/binary-search-not-exist-3p-mEddV.png",p5=`const arr = [1, 3, 3, 4, 5, 6, 7, 8];

function binarySearch(arr, target) {
  let l = 0;
  let r = arr.length - 1;

  while (l <= r) {
    const mid = Math.floor((l + r) / 2);
    
    if (target > arr[mid]) {
      l = mid + 1;
    } else if (target < arr[mid]) {
      r = mid - 1; 
    } else {
      return mid;
    }
  }
  
  return -1;
}`,m5=`// возвращает 1, если n слишком большое число, -1, если слишком маленькое, 0, если верное
function isCorrect(n) {
  if (n > 10) {
    return 1;
  } else if (n < 10) {
    return -1;
  } else {
    return 0;
  }
}`,f5=`function binarySearch(low, high) {
  while (low <= high) {
    const mid = Math.floor((low + high) / 2);
    
    if (isCorrect(mid) > 0) {
      high = mid - 1;
    } else if (isCorrect(mid) < 0) {
      low = mid + 1;
    } else {
      return mid;
    }
  }
  
  return -1;
}`;function g5(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Бинарный поиск — это эффективный способ поиска элементов в отсортированном массиве. Обычно нам дается массив и элемент ",e.jsx("code",{children:"target"}),", который нам нужно найти."]}),e.jsxs("p",{className:"mb-2",children:["В своей основе бинарный поиск делит массив посередине, называемой ",e.jsx("code",{children:"mid"}),", и сравнивает значение ",e.jsx("code",{children:"mid"})," со значением ",e.jsx("code",{children:"target"}),". Если значение ",e.jsx("code",{children:"mid"})," меньше, чем ",e.jsx("code",{children:"target"}),", он удаляет левую половину массива и продолжает поиск справа от ",e.jsx("code",{children:"mid"}),". Если значение"," ",e.jsx("code",{children:"mid"})," больше, чем ",e.jsx("code",{children:"target"}),", поиск продолжается слева от"," ",e.jsx("code",{children:"mid"}),". В итоге мы либо найдём ",e.jsx("code",{children:"target"}),", либо определим, что"," ",e.jsx("code",{children:"target"})," не существует в массиве."]}),e.jsx("h2",{className:"font-bold my-2",children:"Механика бинарного поиска"}),e.jsxs("p",{className:"mb-2",children:["Теперь, когда мы знаем общую идею бинарного поиска, мы можем определить, как он будет работать логистически. Значение ",e.jsx("code",{children:"target"})," поступает в качестве аргумента, но ",e.jsx("code",{children:"mid"})," нам необходимо вычислить. Значение ",e.jsx("code",{children:"mid"})," ","первоначально рассчитывается путём добавления ",e.jsx("b",{children:"крайнего левого"})," индекса к"," ",e.jsx("b",{children:"крайнему правому"})," индексу, а затем делением результата на ",e.jsx("b",{children:"2"}),". Это позволяет нам иметь две равные части массива. Мы будем иметь следующее:"]}),e.jsxs("ol",{className:"list-decimal list-inside mb-2",children:[e.jsxs("li",{children:[e.jsx("code",{children:"L"})," — крайний левый индекс текущего подмассива;"]}),e.jsxs("li",{children:[e.jsx("code",{children:"R"})," — крайний правый индекс текущего подмассива;"]}),e.jsxs("li",{children:[e.jsx("code",{children:"mid"})," — ",e.jsx("code",{children:"(L + R) / 2"}),", индекс, по которому текущий подмассив делится на две равные половины."]})]}),e.jsxs("p",{className:"mb-2",children:[e.jsx("code",{children:"L"})," и ",e.jsx("code",{children:"R"})," иногда называют ",e.jsx("code",{children:"low"})," и"," ",e.jsx("code",{children:"high"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Идея теперь состоит в том, что мы будем продолжать поиск ",e.jsx("code",{children:"target"})," до тех пор, пока либо не найдём ",e.jsx("code",{children:"target"}),", либо наш указатель"," ",e.jsx("code",{children:"L"})," не пересечёт указатель ",e.jsx("code",{children:"R"}),", что будет означать, что в массиве не существует ",e.jsx("code",{children:"target"}),"."]}),e.jsxs("ol",{className:"list-decimal list-inside mb-2",children:[e.jsxs("li",{children:[e.jsxs("strong",{children:[e.jsx("code",{children:"target"})," существует в массиве"]}),e.jsxs("p",{className:"mb-2",children:["Рассмотрим вышеизложенную концепцию на примере. Возьмём массив"," ",e.jsx("code",{children:"[1, 2, 3, 4, 5, 6, 7, 8]"})," и ",e.jsx("code",{children:"target = 5"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Мы знаем, что наш указатель ",e.jsx("code",{children:"L"})," начинается с 0-го индекса, а"," ",e.jsx("code",{children:"R"})," — с 7-го индекса (",e.jsx("code",{children:"arr.length - 1"}),"). Вычисляем"," ",e.jsx("code",{children:"mid"}),": (7 + 0) / 2 = ",e.jsx("code",{children:"3"}),". Теперь мы можем сравнить значение по индексу 3 с ",e.jsx("code",{children:"target"}),"."]}),e.jsxs("p",{className:"mb-2",children:["4 меньше, чем 5, что говорит о том, что нам нужно искать большее число, а поскольку массив отсортирован, большие числа располагаются справа. Следовательно, нам необходимо переместить ",e.jsx("code",{children:"L"})," в позицию"," ",e.jsx("code",{children:"mid + 1"}),", которая определяет нижнюю границу. Указатель"," ",e.jsx("code",{children:"R"})," остаётся на своём месте."]}),e.jsxs("p",{className:"mb-2",children:["На следующей итерации вычисление ",e.jsx("code",{children:"mid"})," даёт нам ",e.jsx("code",{children:"5"}),". Глядя на 5-й индекс, наш элемент равен ",e.jsx("code",{children:"6"}),", это больше, чем 5. Следовательно, указатель ",e.jsx("code",{children:"R"})," необходимо переместить в"," ",e.jsx("code",{children:"mid - 1"}),", так как нам нужно искать меньший элемент. Теперь оба указателя ",e.jsx("code",{children:"L"})," и ",e.jsx("code",{children:"R"})," указывают на 4-й индекс. Новое значение ",e.jsx("code",{children:"mid"})," равно 4, и действительно, ",e.jsx("code",{children:"target"})," ","находится в массиве по 4-му индексу, поэтому мы можем вернуть ",e.jsx("code",{children:"mid"}),"."]}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Бинарный поиск, элемент существует в массиве",className:"mx-auto",height:"840",src:u5,width:"1440"})}),e.jsx("p",{className:"mb-2",children:"Псевдокод демонстрирует описанный выше процесс:"}),e.jsx(k,{value:p5}),e.jsxs("strong",{children:["Для рассчёта ",e.jsx("code",{children:"mid"})," будет лучше использовать формулу"," ",e.jsx("code",{children:"L + (R - L) / 2"}),". Эта формула позволяет избежать целочисленного переполнения в некоторых ситуациях."]})]}),e.jsxs("li",{children:[e.jsxs("strong",{children:[e.jsx("code",{children:"target"})," не существует в массиве"]}),e.jsxs("p",{className:"mb-2",children:["Углубимся в то, что произойдёт, если ",e.jsx("code",{children:"target"})," не существует в массиве. Возьмём тот же самый массив"," ",e.jsx("code",{children:"arr = [1, 2, 3, 4, 5, 6, 7, 8]"})," и ",e.jsx("code",{children:"target = 9"}),"."]}),e.jsx("p",{className:"mb-2",children:"Наш левый указатель пересечёт правый."}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Бинарный поиск, элемент не существует в массиве",className:"mx-auto",height:"1200",src:h5,width:"1440"})})]})]}),e.jsx("h2",{className:"font-bold my-2",children:"Бинарный поиск в диапазоне"}),e.jsx("p",{className:"mb-2",children:"Представьте, что ваш друг дал вам диапазон от 1 до 100 и попросил угадать число, которое он загадал. Есть три исхода: либо ваше предположение верно, либо слишком маленькое, либо слишком большое."}),e.jsxs("p",{className:"mb-2",children:["Если ваша догадка слишком мала, вам придется угадать число среди тех, которые больше вашей догадки, а если слишком велика, то вам придется угадать число среди меньших чисел. Различие от поиска состоит в том, что вы не знаете, о каком числе думает ваш друг (значение ",e.jsx("code",{children:"target"}),"). Всё, что у вас есть — это обратная связь от друга каждый раз, когда вы угадываете, и вы соответствующим образом корректируете следующее предположение."]}),e.jsxs("p",{className:"mb-2",children:["Как мы будем устанавливать наши границы? Мы можем применить стандартный шаблон бинарного поиска, который мы изучили ранее, за исключением того, что вместо того, чтобы проверять, соответствует ли ваш ",e.jsx("code",{children:"mid"})," значению"," ",e.jsx("code",{children:"target"}),", вы должны спросить своего друга, верна ли ваша догадка."]}),e.jsx("p",{className:"mb-2",children:"Конечно, у вашего друга есть операция определения того, слишком ли ваша догадка велика или мала. Всё, что он делает, это сравнивает ваше предположение с числом, о котором он думает, и сообщает вам, следует ли вам угадать большее или меньшее число. Предположим, что ваш друг загадал число 10. Псевдокод этой операции будет выглядить следующим образом:"}),e.jsx(k,{value:m5}),e.jsx("p",{className:"mb-2",children:"Теперь всё, что нам нужно сделать, это вызвать эту функцию в нашей функции бинарного поиска."}),e.jsx(k,{value:f5}),e.jsxs("p",{className:"mb-2",children:["Как уже отмечалось, на основе значения, возвращаемого из функции"," ",e.jsx("code",{children:"isCorrect"}),", мы можем перемещать наши ",e.jsx("code",{children:"low"})," и"," ",e.jsx("code",{children:"high"}),", которые, как говорилось ранее, являются просто ещё одним способом представления указателей ",e.jsx("code",{children:"L"})," и ",e.jsx("code",{children:"R"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Поиск в диапазоне может сбивать с толку и может показаться очень тонким, потому что вам нужно придумать, как изменить типичную реализацию бинарного поиска. Для подобных задач предоставляется предопределённый метод API, в данном случае"," ",e.jsx("code",{children:"isCorrect"}),", и вы должны рассматривать функцию как чёрный ящик и использовать её в своём собственном методе бинарного поиска."]}),e.jsxs("p",{className:"mb-2",children:[e.jsx("strong",{children:"Сложность по времени"})," для бинарного поиска составляет ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"log n"}),")."]})]})}const b5="/my-textbook/assets/binary-search-tree-kloIB8qX.png",x5=`function search(root, target) {
  if (root === null) {
    return false;
  }

  if (target > root.value) {
    return search(root.right, target);
  } else if (target < root.value) {
    return search(root.left, target);
  } else {
    return true;
  }    
}`;function E5(){return e.jsxs(e.Fragment,{children:[e.jsx("h2",{className:"font-bold my-2",children:"Разница между бинарными деревьями и бинарными деревьями поиска"}),e.jsx("p",{className:"mb-2",children:"Бинарные деревья поиска (binary search tree — BST) — это разновидность бинарных деревьев, элементы в которых отсортированы по определённым правилам. Правила заключаются в том, что каждый левый дочерний элемент должен быть меньше своего родителя, а каждый правый дочерний элемент должен быть больше своего родителя. Бинарные деревья поиска не допускают дубликатов."}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Следует отметить, что правила BST применимы и к поддеревьям. Таким образом, хотя узел, значение которого меньше корня, будет находиться в левом поддереве, важно определить, где именно в левом поддереве будет находиться это значение."})}),e.jsx("h2",{className:"font-bold my-2",children:"Мотивация"}),e.jsxs("p",{className:"mb-2",children:["Зачем беспокоиться о BST, если у нас есть отсортированные массивы? С помощью бинарного поиска мы можем искать в них значения за ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"log n"}),") по времени, и если BST предлагает ту же функциональность, не можем ли мы просто использовать массив? Всё так и есть. Однако BST блистает, когда мы пытаемся вставить или удалить значение. Обе эти операции выполняются за ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"log n"}),") по времени для BST, но за ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),") по времени для массива."]}),e.jsx("p",{className:"mb-2",children:"Таким образом, хотя BST и не имеют преимуществ перед отсортированными массивами при поиске, они лучше подходят для вставки и удаления. В этой статье мы сосредоточимся конкретно на операции поиска."}),e.jsx("h2",{className:"font-bold my-2",children:"Поиск в BST"}),e.jsx("p",{className:"mb-2",children:"Деревья лучше всего обходить с помощью рекурсии. Хотя вы можете перемещаться по дереву итеративно, для этого потребуется поддерживать стек, что намного сложнее. Для рекурсии, как обсуждалось ранее, нам нужен базовый случай и вызывающая саму себя функция."}),e.jsxs("p",{className:"mb-2",children:["Возьмём для примера дерево ",e.jsx("code",{children:"[2, 1, 3, null, null, null, 4]"})," и найдём"," ",e.jsx("code",{children:"target = 3"}),"."]}),e.jsx("p",{className:"mb-2",children:"При бинарном поиске, если текущий элемент больше искомого, мы шли влево, а если текущий элемент меньше искомого, мы шли вправо. Аналогичный подход можно применить и здесь. Мы знаем, что все узлы слева меньше нашего текущего узла, а все узлы справа больше нашего текущего узла. Зная это, мы можем пойти направо, если наш текущий узел меньше искомого, и пойти налево, если текущий узел больше искомого."}),e.jsxs("p",{className:"mb-2",children:["Если искомое значение есть в дереве, мы вернём ",e.jsx("code",{children:"true"}),". В противном случае мы возвращаем ",e.jsx("code",{children:"false"}),"."]}),e.jsxs("p",{className:"mb-2",children:["В данном примере мы сначала начинаем со сравнения корневого значения с"," ",e.jsx("code",{children:"target"}),". ",e.jsx("code",{children:"2"})," слишком мало, поэтому наша цель должна находиться справа, то есть мы можем исключить левое поддерево. Когда мы идём направо, первый узел равен ",e.jsx("code",{children:"3"}),", что соответствует ",e.jsx("code",{children:"target"}),", поэтому мы возвращаем ",e.jsx("code",{children:"true"})," из рекурсивного вызова, что означает, что наша цель действительно существует в дереве."]}),e.jsx("p",{className:"mb-2",children:"Это продеманстрировано в псевдокоде и на изображении ниже."}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Бинарное дерево поиска",className:"mx-auto",height:"440",src:b5,width:"1160"})}),e.jsx(k,{value:x5}),e.jsx("h2",{className:"font-bold my-2",children:"Сложность по времени"}),e.jsxs("p",{className:"mb-2",children:["Если у нас сбалансированное бинарное дерево, наш алгоритм поиска будет работать за"," ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"log n"}),") по времени. Сбалансированное бинарное дерево означает, что высота левого поддерева равна высоте правого поддерева, или разница между этими высотами равна ",e.jsx("code",{children:"1"}),". В сбалансированном дереве мы можем каждый раз исключать половину узлов, в результате чего получается ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"log n"}),"). Если дерево не сбалансировано, то это приводит к сложности по времени ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),"). Это является худшим случаем."]}),e.jsx("h2",{className:"font-bold my-2",children:"Итоги"}),e.jsxs("p",{className:"mb-2",children:["Основное преимущество бинарных деревьев поиска по сравнению с отсортированными массивами заключается в том, что мы можем вставлять, удалять и выполнять поиск за"," ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"log n"}),") по времени."]})]})}const T5="/my-textbook/assets/binary-tree1-LR2spxBv.png",y5="/my-textbook/assets/binary-tree2-iSPJDWrt.png",S5="/my-textbook/assets/binary-tree3-PY4QE5vy.png",N5="/my-textbook/assets/binary-tree4-aqvNQMN1.png",j5=`class TreeNode {
    left = null;
    right = null;

    constructor(val) {
        this.val = val; 
    }
}`;function A5(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Бинарное дерево — это ещё одна структура данных, включающая узлы и указатели. Мы говорили об узлах в статьях, посвящённых связным спискам. Мы соединяли эти узлы прямой линией с помощью указателей ",e.jsx("code",{children:"next"})," и ",e.jsx("code",{children:"prev"}),". Узлы в бинарном дереве также имеют не более двух указателей, но мы называем их"," ",e.jsx("strong",{children:"левым дочерним"})," (",e.jsx("strong",{children:"left child"}),") и"," ",e.jsx("strong",{children:"правым дочерним"})," (",e.jsx("strong",{children:"right child"}),") указателями. Первый узел бинарного дерева называется ",e.jsx("strong",{children:"корневым"})," (",e.jsx("strong",{children:"root"}),") узлом. Вместо прямой линии мы рисуем указатели вниз."]}),e.jsxs("p",{className:"mb-2",children:["Значение узла может быть любым типом данных. Класс ",e.jsx("code",{children:"TreeNode"})," будет выглядеть следующим образом. Обратите внимание, насколько реализация похожа на"," ",e.jsx("code",{children:"ListNode"}),", обсуждавшийся в статье о связных списках, за исключением того, что теперь у нас есть ",e.jsx("code",{children:"left"})," и ",e.jsx("code",{children:"right"}),"."]}),e.jsx(k,{value:j5}),e.jsxs("p",{className:"mb-2",children:["Если у узла нет дочерних узлов, он классифицируется как ",e.jsx("strong",{children:"листовой"})," ","(",e.jsx("strong",{children:"leaf"}),") узел. Если у узла есть хотя бы один дочерний узел, левый или правый, он будет классифицироваться как ",e.jsx("strong",{children:"нелистовой"})," (",e.jsx("strong",{children:"non-leaf"}),") узел."]}),e.jsx("p",{className:"mb-2",children:"В отличие от связных списков, указатели бинарного дерева могут указывать только в одном направлении. Таким образом, в бинарных деревьях не допускаются циклы. С математической точки зрения бинарное дерево представляет собой неориентированный граф без циклов. Это означает, что листовой узел всегда гарантированно существует."}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"То же самое относится и к деревьям решений, которые используются в рекурсии."})}),e.jsx("p",{className:"mb-2",children:"В следующем разделе показано, как строятся бинарные деревья, и их терминология, которая имеет решающее значение для понимания проблем с бинарными деревьями."}),e.jsx("h2",{className:"font-bold my-2",children:"Свойства"}),e.jsxs("ul",{className:"mb-2",children:[e.jsxs("li",{className:"mb-2",children:[e.jsx("strong",{children:"Корневой узел"}),e.jsx("p",{children:"Корневой узел является самым высоким узлом в дереве и не имеет родительского узла. Ко всем узлам дерева можно получить доступ через корневой узел."})]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Листовые узлы"}),e.jsx("p",{className:"mb-2",children:"Листовые узлы — это узлы без дочерних элементов. Узлы на последнем уровне дерева гарантированно являются листовыми узлами, но их также можно найти на других уровнях."}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Корневой и листовые узлы",className:"mx-auto",height:"459",src:T5,width:"660"})})]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Дети"}),e.jsx("p",{className:"mb-2",children:"Детьми узла являются его левый и правый дочерние узлы."}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Родительский и дочерние узлы",className:"mx-auto",height:"459",src:y5,width:"720"})})]}),e.jsxs("li",{className:"mb-2",children:[e.jsx("strong",{children:"Высота"})," (",e.jsx("strong",{children:"Height"}),")",e.jsxs("p",{className:"mb-2",children:["Высота бинарного дерева измеряется от корневого узла до самого нижнего листового узла, как и высота чего-либо в реальной жизни. Высота дерева из одного узла составляет ",e.jsx("code",{children:"1"}),", если учитывается сам узел, или"," ",e.jsx("code",{children:"0"}),", если нет."]}),e.jsxs("p",{className:"mb-2",children:["Иногда высота считается по количеству рёбер, находящихся между узлами, а не по самим узлам. Используя этот метод, высота будет равна ",e.jsx("code",{children:"n - 1"}),", где"," ",e.jsx("code",{children:"n"})," — количество узлов на пути от корня до самого нижнего листа."]}),e.jsxs("p",{className:"mb-2",children:["Максимальная высота бинарного дерева, данного на изображении ниже, равна"," ",e.jsx("code",{children:"3"}),". Альтернативно, если бы мы считали по рёбрам, а не по узлам, высота была бы равна ",e.jsx("code",{children:"2"}),"."]}),e.jsx("p",{children:e.jsxs("strong",{children:["Количество рёбер в дереве равно"," ",e.jsxs("code",{children:[e.jsx("i",{children:"n"})," - 1"]}),", где"," ",e.jsx("code",{children:e.jsx("i",{children:"n"})})," ","— количество узлов."]})})]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Глубина"})," (",e.jsx("strong",{children:"Depth"}),")",e.jsxs("p",{className:"mb-2",children:["Глубина узла бинарного дерева измеряется от него самого до корня. Как видно на рисунке ниже, глубина в корневом узле равна ",e.jsx("code",{children:"1"}),", причём по мере спуска она увеличивается. Измерить глубину в определённом узле можно посмотрев, сколько узлов находится над ним, включая сам узел."]}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Высота и глубина бинарного дерева",className:"mx-auto",height:"459",src:S5,width:"1180"})})]}),e.jsxs("li",{className:"mb-2",children:[e.jsx("strong",{children:"Предок"})," (",e.jsx("strong",{children:"Ancestor"}),")",e.jsx("p",{children:"Узел, соединённый со всеми узлами ниже него, считается предком этих узлов."})]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Потомок"})," (",e.jsx("strong",{children:"Descendent"}),")",e.jsx("p",{className:"mb-2",children:"Потомком узла является либо дочерний элемент узла, либо дочерний элемент какого-либо другого потомка узла."}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Предок и потомки",className:"mx-auto",height:"459",src:N5,width:"630"})})]})]}),e.jsx("h2",{className:"font-bold my-2",children:"Итоги"}),e.jsx("p",{className:"mb-2",children:"Хотя большая часть этой статьи посвящена определениям, эти термины имеют основополагающее значение для понимания, когда дело доходит до решения задач о бинарных деревьях, и они помогут нам в последующих статьях."})]})}const _5="/my-textbook/assets/decimal-value-bit-HS8pyrIU.png",v5=`// И
let n = 1 & 1;

// ИЛИ 
n = 1 | 0;

// исключающее ИЛИ
n = 0 ^ 1;

// НЕ (отрицание)
n = ~n;

// Сдвиг битов
n = 1;
n = n << 1;
n = n >> 1;`,R5=`function countBits(n) {
  let count = 0;

  while (n > 0) {
    if ((n & 1) === 1) {
      count++;
    }

    n = n >> 1; // то же самое, что и n / 2
  }

  return count;
}`,w5=`/*
  23 -> 10111
  
  // Первый бит был 1, увеличиваем значение счётчика и сдвигаем вправо.
  10111 & 00001 -> 00001
  
  // Первый бит был 1, увеличиваем значение счётчика и сдвигаем вправо.
  
  01011 & 00001 -> 00001
  
  // Мы снова получаем 1, увеличиваем значение счётчика и сдвигаем вправо.
  
  00101 & 00001 -> 00001
  
  // Мы получаем 0, поэтому только сдвигаем вправо, оставляя счётчик нетронутым.
  
  00010 & 00001 -> 00000
  
  // Мы получаем 1, поэтому сдвигаем вправо и увеличиваем значение счётчика.
  00001 & 00001 -> 00001
*/`;function I5(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Бит — это самая фундаментальная единица, которую компьютер использует для представления данных."}),e.jsx("p",{className:"mb-2",children:"Давайте посмотрим, как мы можем использовать биты для решения алгоритмических задач."}),e.jsx("h2",{className:"font-bold my-2",children:"Таблицы истинности и битовые операции"}),e.jsx("p",{className:"mb-2",children:"С битами мы можем выполнять следующие операции:"}),e.jsxs("ol",{className:"list-decimal list-inside",children:[e.jsxs("li",{className:"ml-6 mb-2",children:[e.jsx("strong",{children:"И"})," (",e.jsx("strong",{children:"AND"}),") - при применении к двум битам оба бита должны быть ",e.jsx("code",{children:"1"}),", чтобы получить ",e.jsx("code",{children:"1"}),". В противном случае мы получим ",e.jsx("code",{children:"0"}),". Обозначается символом ",e.jsx("code",{children:"&"}),"."]}),e.jsxs("li",{className:"ml-6 mb-2",children:[e.jsx("strong",{children:"ИЛИ"})," (",e.jsx("strong",{children:"OR"}),") – при применении к двум битам только один из битов должен быть ",e.jsx("code",{children:"1"}),", чтобы получить ",e.jsx("code",{children:"1"}),". Это означает, что если оба бита ",e.jsx("code",{children:"1"}),", мы получим ",e.jsx("code",{children:"1"}),", и"," ",e.jsx("code",{children:"0"}),", если оба бита ",e.jsx("code",{children:"0"}),". Обозначается символом"," ",e.jsx("code",{children:"|"}),"."]}),e.jsxs("li",{className:"ml-6 mb-2",children:[e.jsx("strong",{children:"исключающее ИЛИ"})," (",e.jsx("strong",{children:"XOR"}),") – при применении к двум битам мы получим ",e.jsx("code",{children:"1"}),", если только один из битов ",e.jsx("code",{children:"1"}),". В противном случае мы получим ",e.jsx("code",{children:"0"}),". Обозначается символом ",e.jsx("code",{children:"^"}),"."]}),e.jsxs("li",{className:"ml-6 mb-2",children:[e.jsx("strong",{children:"НЕ"})," (",e.jsx("strong",{children:"NOT"}),") – отрицание просто переворачивает текущий бит. Отрицание ",e.jsx("code",{children:"0"})," это ",e.jsx("code",{children:"1"})," и отрицание"," ",e.jsx("code",{children:"1"})," это ",e.jsx("code",{children:"0"}),". Обозначается символом ",e.jsx("code",{children:"~"}),"."]}),e.jsxs("li",{className:"ml-6 mb-2",children:[e.jsx("strong",{children:"Сдвиг битов"})," (",e.jsx("strong",{children:"Bit shifts"}),") – сдвиг битов означает сдвиг наших битов влево или вправо. Он берёт все биты и сдвигает их на одну позицию влево или вправо. ",e.jsx("code",{children:">>"})," — это сдвиг вправо, а"," ",e.jsx("code",{children:"<<"})," — сдвиг влево."]})]}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Технически говоря, сдвиг влево означает умножение данного целого числа на 2, а сдвиг вправо означает деление данного целого числа на 2. Удвоение и уменьшение пополам соответственно."})}),e.jsxs("p",{className:"mb-2",children:["Чтобы продемонстрировать вышеизложенные концепции, давайте возьмем"," ",e.jsx("code",{children:"001"})," для примера, что представляет ",e.jsx("code",{children:"1"})," в десятичном формате."]}),e.jsxs("p",{className:"mb-2",children:["Выполнение сдвига влево три раза приведет к следующему результату: в последней операции мы отбрасываем ",e.jsx("code",{children:"1"})," и заменяем её ",e.jsx("code",{children:"0"}),"."]}),e.jsxs("ul",{className:"mb-2",children:[e.jsxs("li",{children:[e.jsx("code",{children:"001 << 1"})," = ",e.jsx("code",{children:"010"})]}),e.jsxs("li",{children:[e.jsx("code",{children:"010 << 1"})," = ",e.jsx("code",{children:"100"})]}),e.jsxs("li",{children:[e.jsx("code",{children:"100 << 1"})," = ",e.jsx("code",{children:"000"})]})]}),e.jsxs("p",{className:"mb-2",children:["Ниже показано, как мы пришли к выводу, что ",e.jsx("code",{children:"001"})," представляет собой"," ",e.jsx("code",{children:"1"})," в десятичном формате. Мы можем использовать это для преобразования любого двоичного числа в десятичное и любого десятичного числа в двоичное."]}),e.jsx("img",{alt:"Десятичные числа и биты",className:"mb-2",height:"140",src:_5,width:"780"}),e.jsx("p",{className:"mb-2",children:"Ниже приведён код, представляющий то, что мы обсуждали до сих пор."}),e.jsx(k,{value:v5}),e.jsx("h2",{className:"font-bold my-2",children:"Демонстрация"}),e.jsxs("p",{className:"mb-2",children:["Допустим, нас просят посчитать количество битов ",e.jsx("code",{children:"1"}),", которые находятся в двоичном представлении числа ",e.jsx("code",{children:"23"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Используя приведённое выше изображение, мы получаем, что двоичное представление числа ",e.jsx("code",{children:"23"})," — ",e.jsx("code",{children:"10111"}),". Чтобы подсчитать количество"," ",e.jsx("code",{children:"1"}),", мы можем продолжать сдвигать наши биты вправо, пока не получим все"," ",e.jsx("code",{children:"0"}),". Вопрос в том, как мы узнаем, когда нужно увеличить счётчик? Нам нужен способ определить, что наш текущий бит равен ",e.jsx("code",{children:"1"}),". Напомним, что"," ",e.jsx("code",{children:"1 & 1 = 1"}),". Итак, если наш текущий бит ",e.jsx("code",{children:"n"})," приводит к"," ",e.jsx("code",{children:"n & 1 = 1"}),", мы можем увеличить наш счётчик."]}),e.jsx(k,{value:R5}),e.jsx(k,{value:w5}),e.jsxs("p",{className:"mb-2",children:["Из вышеперечисленных операций мы имеем значение счётчика ",e.jsx("code",{children:"4"}),"."]})]})}const C5="/my-textbook/assets/breadth-first-search-AyPu5fAk.png",O5=`function bfs(root) {
  const queue = []; // представим, что это очередь, чтобы не занимать место реализацией очереди

  if (root) {
    queue.push(root);
  }

  let level = 0;

  while (queue.length > 0) {
    console.log('level' + level + ':');

    const levelLength = queue.length;

    for (let i = 0; i < levelLength; i++) {
      const curr = queue.shift(); // представим, что это операция очереди dequeue

      console.log(curr.val);

      if (curr.left) {
        queue.push(curr.left);
      }

      if (curr.right) {
        queue.push(curr.right);
      }
    }

    level++;
  }
}`;function k5(){return e.jsxs(e.Fragment,{children:[e.jsx("h2",{className:"font-bold my-2",children:"Концепция"}),e.jsx("p",{className:"mb-2",children:"При поиске в глубину мы отдавали приоритет глубине. Для поиска в ширину (Breadth-first Search — BFS) мы отдаём приоритет ширине. Мы фокусируемся на посещении всех узлов на одном уровне, прежде чем перейти на следующий уровень."}),e.jsx("p",{className:"mb-2",children:"Как правило, поиск в ширину реализуется итеративно, и именно такую реализацию мы рассмотрим в этой статье. Вы можете написать этот алгоритм рекурсивно, но это намного сложнее."}),e.jsxs("p",{className:"mb-2",children:["BFS использует структуру данных «очередь», которая позволяет нам удалять элементы из головы за ",e.jsx("i",{children:"O"}),"(1) по времени. Скоро это обретёт смысл."]}),e.jsx("p",{className:"mb-2",children:"Псевдокод для BFS показан ниже."}),e.jsx(k,{value:O5}),e.jsxs("p",{className:"mb-2",children:["Возьмём для примера бинарное дерево ",e.jsx("code",{children:"[4, 3, 6, 2, null, 5, 7]"})," и применим алгоритм BFS. Помните, наша цель — посетить все узлы на одном уровне, прежде чем перейти к следующему."]}),e.jsxs("p",{className:"mb-2",children:["Если мы добавим наш корневой узел ",e.jsx("code",{children:"root"})," в нашу очередь и пройдёмся по очереди так, что в любой момент времени наша очередь будет содержать узлы только на определённом уровне, то мы гарантируем, что мы посещаем уровни по порядку, а также не перепутаем уровни. Это именно то, чего достигает код внутри цикла"," ",e.jsx("code",{children:"while"}),". Пока наша очередь не пуста, мы удаляем узлы, присутствующие в нашей очереди, и добавляем в очередь их дочерние узлы (что будет являться следующим уровнем). Поэтому, когда мы удаляем ",e.jsx("code",{children:"root"}),", мы добавляем в очередь его дочерние узлы, которые равны ",e.jsx("code",{children:"3"})," и ",e.jsx("code",{children:"6"}),". Затем мы удаляем ",e.jsx("code",{children:"3"})," и добавляем его дочерний узел ",e.jsx("code",{children:"2"}),". Затем мы удаляем ",e.jsx("code",{children:"6"})," и добавляем в очередь ",e.jsx("code",{children:"5"})," и ",e.jsx("code",{children:"7"}),". Из-за того, что очереди следуют принципу FIFO, мы гарантируем, что посещаем узлы слева направо."]}),e.jsx("p",{className:"mb-2",children:"Наша очередь становится пустой, как только мы посетим все узлы."}),e.jsx("p",{className:"mb-2",children:"На изображении ниже показано, как будет выглядеть состояние очереди на каждом уровне дерева."}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Поиск в ширину",className:"mx-auto",height:"459",src:C5,width:"780"})}),e.jsx("h2",{className:"font-bold my-2",children:"Сложность по времени"}),e.jsxs("p",{className:"mb-2",children:["Технически, общая проделанная работа равна ",e.jsx("i",{children:"c"})," * ",e.jsx("i",{children:"n"}),", где ",e.jsx("i",{children:"n"})," — количество узлов в дереве, а ",e.jsx("i",{children:"c"})," — объем работы, выполняемой на каждом узле. Всего мы выполнили три операции для каждого узла — вывод в консоль, добавление узла и его удаление. Это то, что представляет собой ",e.jsx("i",{children:"c"}),". В случае асимптотического анализа мы можем отбросить эту константу, что означает, что сложность алгоритма по времени составит ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),")."]}),e.jsx("h2",{className:"font-bold my-2",children:"Итоги"}),e.jsx("p",{className:"mb-2",children:"Поиск в ширину будет чрезвычайно полезен, когда дело дойдёт до обхода графа, что мы вскоре увидим."})]})}const L5="/my-textbook/assets/bst-insertion-LYgPRuuS.png",D5="/my-textbook/assets/bst-removal1-LORuFuPD.png",M5="/my-textbook/assets/bst-removal2-bCGl8aBr.png",F5="/my-textbook/assets/bst-removal3-KyYD62lT.png",P5=`function insert(root, value) {
  if (root === null) {
    return new TreeNode(value);
  }

  if (value > root.value) {
    root.right = insert(root.right, value);
  } else if (value < root.value) {
    root.left = insert(root.left, value);
  }

  return root; 
}`,U5=`function minValueNode(root) {
  let curr = root;
  
  while (curr && cur.left !== null) {
    curr = curr.left;
  }

  return curr;
}

function remove(root, value) {
  if (root === null) {
    return null;
  }

  if (value > root.value) {
    root.right = remove(root.right, value);
  } else if (value < root.value) {
    root.left = remove(root.left, value);
  } else {
    if (root.left === null) {
      return root.right;
    } else if (root.right === null) {
      return root.left;
    } else {
      const minNode = minValueNode(root.right);
      root.value = minNode.value;
      root.right = remove(root.right, minNode.value);
    }
  }

  return root;
}`;function B5(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Ранее мы упоминали, что основным преимуществом использования бинарных деревьев поиска (BST) по сравнению с отсортированными массивами является то, что мы можем выполнять удаление и вставку за ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"log n"}),") по времени, при условии, что дерево сбалансировано. Давайте углубимся в вставку и удаление."]}),e.jsx("h2",{className:"font-bold my-2",children:"Вставка"}),e.jsx("p",{className:"mb-2",children:"Если мы хотим вставить новый узел в BST, нам сначала нужно пройти по BST, чтобы найти правильную позицию для вставки, а затем вставить этот узел."}),e.jsxs("p",{className:"mb-2",children:["Если у нас есть BST ",e.jsx("code",{children:"[4]"})," и мы хотим вставить ",e.jsx("code",{children:"6"}),", то мы могли бы получить либо ",e.jsx("code",{children:"[4, null, 6]"}),", либо ",e.jsx("code",{children:"[6, 4, null]"}),". Оба из этих вариантов будут валидными BST. В первом примере мы добавили"," ",e.jsx("code",{children:"6"})," в качестве листового узла, что проще, чем добавление ",e.jsx("code",{children:"6"})," ","в корень, что показано во втором примере."]}),e.jsxs("p",{className:"mb-2",children:["Давайте добавим ",e.jsx("code",{children:"5"})," к полученному ранее дереву"," ",e.jsx("code",{children:"[4, null, 6]"}),", в результате чего получится"," ",e.jsx("code",{children:"[4, null, 6, 5, null]"}),"."]}),e.jsx("p",{className:"mb-2",children:"Этот процесс продемонстрирован приведённым ниже псевдокодом."}),e.jsx(k,{value:P5}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Вставка в бинарное дерево поиска",className:"mx-auto",height:"380",src:L5,width:"840"})}),e.jsxs("p",{className:"mb-2",children:["На изображении выше показано, как выполняется вставка. ",e.jsx("code",{children:"6"})," больше корневого узла, поэтому она попадает в правое поддерево. ",e.jsx("code",{children:"5"})," больше корневого узла, но меньше ",e.jsx("code",{children:"6"}),", так что она попадает в левое поддерево дерева с корнем в ",e.jsx("code",{children:"6"}),"."]}),e.jsx("h2",{className:"font-bold my-2",children:"Удаление"}),e.jsx("p",{className:"mb-2",children:"Прежде чем удалить узел из BST, нам необходимо рассмотреть два случая:"}),e.jsxs("ol",{className:"list-decimal list-inside mb-2",children:[e.jsx("li",{children:"Удаляемый узел имеет 0 или 1 дочерний узел"}),e.jsx("li",{children:"Удаляемый узел имеет 2 дочерних узла"})]}),e.jsx("h2",{className:"font-bold my-2",children:"Случай 1 - удаляемый узел имеет один дочерний узел, либо не имеет дочерних узлов"}),e.jsxs("p",{className:"mb-2",children:["Если мы хотим удалить узел ",e.jsx("code",{children:"2"}),", у которого нет дочерних узлов, то указатель ",e.jsx("code",{children:"left"})," узла ",e.jsx("code",{children:"3"})," теперь будет указывать на"," ",e.jsx("code",{children:"null"}),"."]}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Удаление узла, у которого нет детей",className:"mx-auto",height:"480",src:D5,width:"1260"})}),e.jsxs("p",{className:"mb-2",children:["Если мы хотим удалить узел ",e.jsx("code",{children:"3"}),", у которого есть один дочерний узел, указатель ",e.jsx("code",{children:"left"})," корневого узла теперь будет указывать на"," ",e.jsx("code",{children:"2"})," вместо ",e.jsx("code",{children:"3"}),"."]}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Удаление узла, у которого один дочерний узел",className:"mx-auto",height:"480",src:M5,width:"1260"})}),e.jsx("h2",{className:"font-bold my-2",children:"Случай 2 - удаляемый узел имеет два дочерних узла"}),e.jsxs("p",{className:"mb-2",children:["Если мы хотим удалить узел c двумя дочерними узлами, скажем, ",e.jsx("code",{children:"6"}),", мы заменяем этот узел его ",e.jsx("strong",{children:"последовательным преемником"}),"."]}),e.jsx("p",{className:"mb-2",children:"Последовательным преемником является самый левый узел в правом поддереве удаляемого узла. По-другому можно сказать, что это наименьший узел среди всех узлов, которые больше удаляемого узла. Это гарантирует, что полученное дерево по-прежнему будет валидным бинарным деревом поиска."}),e.jsx("p",{className:"mb-2",children:"На рисунке ниже показан процесс удаления узлов с двумя дочерними узлами."}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Удаление узла, у которого два дочерних узла",className:"mx-auto",height:"500",src:F5,width:"1360"})}),e.jsx(k,{value:U5}),e.jsx("h2",{className:"font-bold my-2",children:"Сложность по времени"}),e.jsxs("p",{className:"mb-2",children:["Сложность по времени для этих операций составляет ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"log n"}),"), если дерево является сбалансированным. В противном случае сложность будет составлять"," ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),")."]})]})}const H5="/my-textbook/assets/bucketSort-9wm64IAT.png",G5=`function bucketSort(array) {
  // предполагается, что array содержит только 0, 1 или 2
  const counts = [0, 0, 0];

  for (let i = 0; i < array.length; i++) {
      counts[array[i]]++;
  }

  let i = 0;
  for (let n = 0; n < counts.length; n++) {
      for (let j = 0; j < counts[n]; j++) {
          array[i] = n;
          i++;
      }
  }

  return array;
}`,$5=`let i = 0;
for (let n = 0; n < counts.length; n++) {
  for (let j = 0; j < counts[n]; j++) {
    array[i] = n;
    i++;
  }
}`;function z5(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Это последний алгоритм сортировки, который мы рассмотрим, и он довольно важен. Он не так популярен и не так широко используется, как предыдущие алгоритмы, которые мы рассмотрели. Блочная (карманная, корзинная) сортировка работает отлично, когда сортируемый набор данных имеет значения ",e.jsx("strong",{children:"в определённом диапазоне"}),"."]}),e.jsx("h2",{className:"font-bold my-2",children:"Концепция"}),e.jsxs("p",{className:"mb-2",children:["Представьте, что у нас есть массив из ",e.jsx("code",{children:"6"})," элементов, который содержит значения диапазона ",e.jsx("code",{children:"0 — 2"}),". Идея блочной сортировки состоит в том, чтобы создать «блок» для каждого числа и сопоставить числа с соответствующими блоками."]}),e.jsxs("p",{className:"mb-2",children:["У нас будут блоки для ",e.jsx("code",{children:"0"}),", ",e.jsx("code",{children:"1"})," и ",e.jsx("code",{children:"2"}),". Эти блоки, которые представляют собой просто позицию в нашем массиве, будет содержать частоту каждого из значений в пределах диапазона. В этом примере у нас есть только три значения и, соответственно, у нас будет три блока."]}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Термин «блок» на самом деле просто обозначет позицию в массиве, где мы будем отображать эту частоту."})}),e.jsx("p",{className:"mb-2",children:"Как только каждый блок будет заполнен частотой каждого из значений, мы перезапишем все значения в исходном массиве так, чтобы они оказались в отсортированном порядке. Это имеет больше смысла, если посмотреть на псевдокод ниже:"}),e.jsx(k,{value:G5}),e.jsxs("p",{className:"mb-2",children:["Первая часть псевдокода, прямо перед тем, как мы делаем ",e.jsx("code",{children:"i = 0"}),", относится к заполнению каждого из блоков. Давайте рассмотрим вторую часть немного подробнее."]}),e.jsx(k,{value:$5}),e.jsxs("ul",{className:"list-disc list-inside mb-2",children:[e.jsxs("li",{children:["Указатель ",e.jsx("code",{children:"i"})," будет отслеживать следующую позицию вставки для нашего исходного массива ",e.jsx("code",{children:"array"}),"."]}),e.jsxs("li",{children:["Указатель ",e.jsx("code",{children:"n"})," отслеживает текущую позицию массива ",e.jsx("code",{children:"counts"}),"."]}),e.jsxs("li",{children:["Указатель ",e.jsx("code",{children:"j"})," отслеживает количество раз, когда в ",e.jsx("code",{children:"array"})," ","появлялся ",e.jsx("code",{children:"counts[n]"}),"."]})]}),e.jsxs("p",{className:"mb-2",children:["Итак, зная это, у нас есть массив ",e.jsx("code",{children:"counts = [2, 1, 3]"}),". И наш исходный массив ",e.jsx("code",{children:"[2, 1, 2, 0, 0, 2]"}),"."]}),e.jsxs("p",{className:"mb-2",children:["На первой итерации ",e.jsx("code",{children:"n = 0"}),", что соответствует ",e.jsx("code",{children:"2"})," в"," ",e.jsx("code",{children:"counts"}),". Наш внутренний цикл выполнится два раза, перезаписав"," ",e.jsx("code",{children:"array[0]"})," и ",e.jsx("code",{children:"array[1]"})," на ",e.jsx("code",{children:"0"}),". Это имеет смысл, поскольку у нас было два нуля, и размещение их в ",e.jsx("code",{children:"array"})," рядом друг с другом приведёт к их сортировке. Этот процесс будет продолжаться для каждого числа, и конечным состоянием ",e.jsx("code",{children:"array"})," будет"," ",e.jsx("code",{children:"[0, 0, 1, 2, 2, 2]"}),", что и является конечной целью."]}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Блочная сортировка",className:"mx-auto",height:"560",src:H5,width:"1170"})}),e.jsx("h2",{className:"font-bold my-2",children:"Сложность по времени"}),e.jsxs("p",{className:"mb-2",children:["Вы можете посмотреть на вложенный цикл ",e.jsx("code",{children:"for"})," и сразу же подумать, что это ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),e.jsx("sup",{children:"2"}),"). Это не совсем правильно. Давайте проведём некоторый анализ. Мы знаем, что для первого цикла ",e.jsx("code",{children:"for"})," мы выполним ",e.jsx("i",{children:"n"})," шагов, поскольку мы проходим через все элементы и подсчитываем частоту."]}),e.jsxs("p",{className:"mb-2",children:["Второй цикл ",e.jsx("code",{children:"for"})," совершит ",e.jsx("i",{children:"n"})," итераций, где ",e.jsx("i",{children:"n"})," — длина массива ",e.jsx("code",{children:"counts"}),". Однако внутренний цикл выполнит только"," ",e.jsx("code",{children:"counts[n]"})," итераций, количество которых каждый раз разное. В первый раз их количество будет ",e.jsx("code",{children:"2"}),", затем ",e.jsx("code",{children:"1"}),", и затем"," ",e.jsx("code",{children:"3"}),". Следовательно, сложность по времени нашего алгоритма составит"," ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),")."]}),e.jsx("p",{className:"mb-2",children:e.jsxs("strong",{children:["Следует отметить, что вложенные циклы ",e.jsx("code",{children:"for"})," не всегда означают сложность по времени ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),e.jsx("sup",{children:"2"}),"). Как мы видели выше, важно проанализировать, сколько раз внутренний цикл ",e.jsx("code",{children:"for"})," выполняется на каждой итерации внешнего цикла"," ",e.jsx("code",{children:"for"}),"."]})}),e.jsx("h2",{className:"font-bold my-2",children:"Устойчивость"}),e.jsx("p",{className:"mb-2",children:"Поскольку мы перезаписываем исходный массив, сохранить относительный порядок значений невозможно. Никакой перестановки тоже не происходит. Следовательно, блочная сортировка является неустойчивой."}),e.jsx("h2",{className:"font-bold my-2",children:"Итоги"}),e.jsxs("p",{className:"mb-2",children:["Таким образом, хотя сложность по времени алгоритма блочной сортировки составляет"," ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),"), мы должны помнить, что он будет работать только в том случае, если набор данных находится в пределах определённого диапазона. Как правило, при решении алгоритмических задач самым надёжным вариантом является использование сортировки слиянием, быстрой сортировки или сортировки вставками (для небольших и почти отсортированных наборов данных), что используется встроенными методами сортировки в языках программирования, а иногда и гибрид всех трёх."]}),e.jsx("p",{className:"mb-2",children:"Теперь, когда мы рассмотрели все алгоритмы сортировки, ниже подведём итоги времени выполнения:"}),e.jsxs("table",{className:"border-collapse mb-2 table-auto w-full",children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{className:"border-2 border-gray-300 border-solid p-2 text-left",children:"Алгоритм"}),e.jsx("th",{className:"border-2 border-gray-300 border-solid p-2 text-left",children:"Сложность по времени"}),e.jsx("th",{className:"border-2 border-gray-300 border-solid p-2 text-left",children:"Примечания"})]})}),e.jsxs("tbody",{children:[e.jsxs("tr",{children:[e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Сортировка вставками"}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:[e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),e.jsx("sup",{children:"2"}),")*"]}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:["Если полностью или почти отсортированно — ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),")"]})]}),e.jsxs("tr",{children:[e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Сортировка слиянием"}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:[e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n log n"}),")"]}),e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"—"})]}),e.jsxs("tr",{children:[e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Быстрая сортировка"}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:[e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n log n"}),")",e.jsx("sup",{children:"*"})]}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:["Выбор наибольшего или наименьшего элемента в качестве опорного, например, обратная сортировка — ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),e.jsx("sup",{children:"2"}),")"]})]}),e.jsxs("tr",{children:[e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Блочная сортировка"}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:[e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),")*"]}),e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Предполагается, что у вас есть значения в указанном диапазоне"})]})]})]})]})}const W5="/my-textbook/assets/combinations-RlTQ1oA2.png",V5=`function combinations(n, k) {
  const combs = [];
  helper(1, [], combs, n, k);
  return combs;
}

function helper(i, curComb, combs, n, k) {
  if (curComb.length === k) {
    combs.push([...curComb]);
    return;
  }

  if (i > n) {
    return;
  }

  // путь, по которому мы включаем i
  curComb.push(i);
  helper(i + 1, curComb, combs, n, k);
  curComb.pop();
  
  // путь, по которому мы НЕ включаем i
  helper(i + 1, curComb, combs, n, k);
}`,K5=`function combinations2(n, k) {
  const combs = [];
  helper2(1, [], combs, n, k);
  return combs;
}

function helper2(i, curComb, combs, n, k) {
  if (curComb.length === k) {
    combs.push([...curComb]);
    return;
  }

  if (i > n) {
    return;
  }

  for (let j = i; j < n + 1; j++) {
    curComb.push(j);
    helper2(j + 1, curComb, combs, n, k);
    curComb.pop();
  }
}`;function Y5(){return e.jsxs(e.Fragment,{children:[e.jsx("h2",{className:"font-bold my-2",children:"Концепция"}),e.jsxs("p",{className:"mb-2",children:["С математической точки зрения, сочетания имеют то же определение, что и подмножества. Порядок, в котором мы размещаем элементы, не имеет значения. Существует очень аккуратная математическая формула для расчёта количества возможных сочетаний размера ",e.jsx("i",{children:"k"})," при заданном ",e.jsx("i",{children:"n"}),", которая, хотя и не так уместна для сочетаний в информатике, все же актуальна. Поясним это на примере."]}),e.jsx("h2",{className:"font-bold my-2",children:"Пример использования сочетаний"}),e.jsx("p",{className:"mb-2",children:"Предположим, перед нами стоит следующая задача:"}),e.jsx("p",{className:"mb-2",children:e.jsxs("strong",{children:["Даны два числа ",e.jsx("i",{children:"n"})," и ",e.jsx("i",{children:"k"}),", верните все возможные сочетания размера"," ",e.jsx("i",{children:"k"}),", выбирая из значений от ",e.jsx("code",{children:"1"})," до ",e.jsx("i",{children:"n"}),"."]})}),e.jsxs("p",{className:"mb-2",children:["Предположим, что ",e.jsx("i",{children:"n"})," = ",e.jsx("code",{children:"5"})," и ",e.jsx("i",{children:"k"})," = ",e.jsx("code",{children:"2"}),". Другими словами, вопрос звучит так: «сколько существует способов выбрать уникальные подмножества размера ",e.jsx("code",{children:"2"})," из множества чисел в диапазоне от"," ",e.jsx("code",{children:"1"})," до ",e.jsx("code",{children:"5"}),"?». Ограничением здесь является то, что наши сочетания могут иметь размер только ",e.jsx("code",{children:"2"}),". Напомним, что одно и то же сочетание с элементами, расположенными в другом порядке, не считается, т. е."," ",e.jsx("code",{children:"[2, 1]"})," и ",e.jsx("code",{children:"[1, 2]"})," считаются за ",e.jsx("code",{children:"1"})," уникальное сочетание."]}),e.jsx("p",{className:"mb-2",children:"Итак, как нам решить эту проблему в коде? Есть два подхода."}),e.jsxs("ul",{children:[e.jsxs("li",{className:"mb-2",children:[e.jsx("strong",{children:"Тривиальный подход"}),e.jsxs("p",{className:"mb-2",children:["Этот подход аналогичен подходу к подмножествам. Мы проходим через"," ",e.jsx("code",{children:"1 − 5"})," в нашем дереве решений и принимаем решение включить или исключить текущее число, в котором мы находимся. Здесь мы ограничены количеством элементов, которые нам разрешено включать в наше сочетание. Поскольку ",e.jsx("i",{children:"k"})," = ",e.jsx("code",{children:"2"}),", наш базовый случай срабатывает, когда"," ",e.jsx("code",{children:"curComb.length === k"}),". Вот почему, когда мы достигаем"," ",e.jsx("code",{children:"[1, 2]"}),", нам не нужно идти дальше."]}),e.jsxs("p",{className:"mb-2",children:["Проблема с этим подходом заключается в том, что высота дерева станет ",e.jsx("i",{children:"n"}),", где ",e.jsx("i",{children:"n"})," — длина нашего стека рекурсивных вызовов. Это связано с тем, что в худшем случае нам, возможно, придётся пройти через весь диапазон значений, пока мы не достигнем базового случая."]}),e.jsxs("p",{className:"mb-2",children:["Построение каждого сочетания требует работы ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"k"}),"). Это даёт нам верхнюю границу ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"k"})," ⋅ 2",e.jsx("sup",{children:e.jsx("i",{children:"n"})}),"), которая является приблизительной. В предыдущей статье мы не были ограничены количеством элементов, которые могли быть в каждом множестве, поэтому у нас была сложность ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"})," ⋅ 2",e.jsx("sup",{children:e.jsx("i",{children:"n"})}),"). Давайте рассмотрим реализацию этой техники, прежде чем перейти к более эффективному решению."]}),e.jsx(k,{value:V5}),e.jsxs("p",{className:"mb-2",children:["Вы можете заметить, что приведенный выше код очень похож на код из статьи о подмножествах, и вы будете правы. Тем не менее, есть небольшие различия. В нашей функции ",e.jsx("code",{children:"helper"})," ",e.jsx("code",{children:"i"})," обозначает текущее число в диапазоне, ",e.jsx("code",{children:"curComb"})," представляет текущее сочетание,"," ",e.jsx("code",{children:"combs"})," представляет список списков, которые будут содержать каждый"," ",e.jsx("code",{children:"curComb"}),". ",e.jsx("code",{children:"k"})," представляет размер каждого сочетания, содержащего элементы, выбранные из диапазона, доходящего до ",e.jsx("code",{children:"n"}),". Наш базовый случай срабатывает, когда длина ",e.jsx("code",{children:"curComb"})," достигает"," ",e.jsx("code",{children:"k"}),". Изучив каждый ",e.jsx("code",{children:"i"}),", мы возвращаемся назад и исследуем другие сочетания, исключающие ",e.jsx("code",{children:"i"}),". Повторяем это до тех пор, пока ",e.jsx("code",{children:"i <= n"}),"."]})]}),e.jsxs("li",{className:"mb-2",children:[e.jsx("strong",{children:"Оптимизированный подход"}),e.jsxs("p",{className:"mb-2",children:["В начале этой статьи мы упомянули, что существует изящная математическая формула для определения количества сочетаний. Формула выглядит следующим образом и является более эффективной, чем ",e.jsx("i",{children:"k"})," ⋅ 2",e.jsx("sup",{children:e.jsx("i",{children:"n"})}),":"," ",e.jsxs("span",{className:"after:absolute after:content-['.'] after:leading-[0.25rem] after:left-full after:ml-0.5 after:rotate-180 after:top-1/2 flex flex-col items-center relative text-sm w-max",children:[e.jsxs("span",{children:[e.jsx("i",{children:"n"}),"!"]}),e.jsx("span",{className:"bg-black h-px w-full"}),e.jsxs("span",{children:[e.jsx("i",{children:"k"}),"!(",e.jsx("i",{children:"n"})," - ",e.jsx("i",{children:"k"}),")!"]})]})]}),e.jsxs("p",{className:"mb-2",children:["При таком подходе мы можем создать каждое нужное нам сочетание, не идя по пути, где мы не создаём ни одного допустимого сочетания. Но нам также нужно следить за дубликатами. Итак, для каждого ",e.jsx("code",{children:"i"})," мы хотим включать только числа, следующие за ним. Это помогает нам избежать дублирования в наших сочетаниях. Это также гарантирует, что у нас не будет дерева решений размера"," ",e.jsx("i",{children:"n"}),". На каждом шаге мы выбираем число, т. е. мы никогда не выбираем число. Поскольку мы никогда не используем значение повторно, каждая ветвь приводит к появлению различных сочетаний, которые выглядят следующим образом:"]}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Все возможные сочетания",className:"mx-auto",height:"240",src:W5,width:"680"})}),e.jsxs("p",{className:"mb-2",children:["Если"," ",e.jsxs("code",{children:[e.jsx("i",{children:"n"})," = 5"]})," ","и"," ",e.jsxs("code",{children:[e.jsx("i",{children:"k"})," = 2"]}),", мы получаем ",e.jsx("code",{children:"5! / (2! * (5 - 2)!) = 10"})]}),e.jsx(k,{value:K5})]})]})]})}const q5="/my-textbook/assets/depth-first-search-inorder-FKvqs0fv.png",X5="/my-textbook/assets/depth-first-search-preorder-ikEtnaVk.png",Z5="/my-textbook/assets/depth-first-search-postorder-rjoQ4Zoe.png",Q5=`function inorder(root) {
  if (root === null) {
    return;
  }

  inorder(root.left);
  console.log(root.val);
  inorder(root.right);
}`,J5=`function preorder(root) {
  if (root === null) {
    return;
  }

  console.log(root.val);
  preorder(root.left);
  preorder(root.right);
}`,eC=`function postorder(root) {
  if (root === null) {
    return;
  }

  preorder(root.left);
  preorder(root.right);
  console.log(root.val);
}`;function tC(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Поиск в глубину (Depth-first Search — DFS) — это способ обхода бинарных деревьев поиска, в котором приоритет отдаётся глубине, а не ширине."}),e.jsxs("p",{className:"mb-2",children:["Идея состоит в том, чтобы продолжать перемещаться либо по левому поддереву, либо по правому поддереву до тех пор, пока не останется больше узлов. Существуют различные методы, с помощью которых выполняется поиск в глубину. Эти методы посещают узлы ",e.jsx("code",{children:"root"}),", ",e.jsx("code",{children:"left"})," и ",e.jsx("code",{children:"right"})," в разном порядке. Эти три метода:"]}),e.jsxs("ul",{className:"list-disc list-inside",children:[e.jsx("li",{children:"Inorder (центрированный)"}),e.jsx("li",{children:"Preorder (прямой)"}),e.jsx("li",{children:"Postorder (обратный)"})]}),e.jsx("p",{className:"mb-2",children:"Поиск в глубину лучше всего реализовать с помощью рекурсии. Опять же, вы можете использовать стек и делать это итеративно, но это намного сложнее."}),e.jsxs("p",{className:"mb-2",children:["Возьмём дерево с узлами ",e.jsx("code",{children:"[4, 3, 6, 2, null, 5, 7]"}),", идущими слева направо."]}),e.jsx("h2",{className:"font-bold my-2",children:"Центрированный обход"}),e.jsxs("p",{className:"mb-2",children:["Центрированный обход с приоритетом левого поддерева над правым сначала посещает дочерний узел ",e.jsx("code",{children:"left"}),", затем родительский узел, а затем дочерний узел"," ",e.jsx("code",{children:"right"}),". Центрированный обход приведёт к посещению узлов в отсортированном порядке."]}),e.jsx(k,{value:Q5}),e.jsxs("p",{className:"mb-2",children:["Порядок посещения этих узлов — ",e.jsx("code",{children:"[2, 3, 4, 5, 6, 7]"}),", он является отсортированным. Важно отметить, что это работает только тогда, когда левое поддерево имеет приоритет над правым. Если правое будет иметь приоритет над левым, мы получим массив, отсортированный в обратном порядке."]}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Причина, по которой узлы будут выводиться в отсортированном виде, связана со свойством BST. Поскольку мы знаем, что все значения слева от узла меньше, это означает, что мы не достигнем базового случая, пока не достигнем самого левого узла, который также является самым маленьким узлом. После посещения самого левого узла мы пройдём вверх, посетим родителя, а затем посетим правое поддерево. На изображении ниже показан этот процесс."})}),e.jsx("p",{className:"mb-2",children:"Порядок посещения узлов представлен цифрами синего цвета рядом с узлом."}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Центрированный обход в глубину",className:"mx-auto",height:"480",src:q5,width:"400"})}),e.jsx("h2",{className:"font-bold my-2",children:"Прямой обход"}),e.jsxs("p",{className:"mb-2",children:["Прямой обход с приоритетом левого поддерева над правым посещает родителя, дочерний узел ",e.jsx("code",{children:"left"}),", а затем дочерний узел ",e.jsx("code",{children:"right"}),"."]}),e.jsx(k,{value:J5}),e.jsxs("p",{className:"mb-2",children:["Узлы посещаются в следующем порядке: ",e.jsx("code",{children:"[4, 3, 2, 6, 5, 7]"}),"."]}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Прямой обход в глубину",className:"mx-auto",height:"480",src:X5,width:"400"})}),e.jsx("h2",{className:"font-bold my-2",children:"Обратный обход"}),e.jsxs("p",{className:"mb-2",children:["Обратный обход с приоритетом левого поддерева над правым посещает дочерний узел"," ",e.jsx("code",{children:"left"}),", дочерний узел ",e.jsx("code",{children:"right"}),", а затем родителя."]}),e.jsx(k,{value:eC}),e.jsxs("p",{className:"mb-2",children:["Узлы посещаются в следующем порядке: ",e.jsx("code",{children:"[2, 3, 5, 7, 6, 4]"}),"."]}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Обратный обход в глубину",className:"mx-auto",height:"480",src:Z5,width:"400"})}),e.jsx("h2",{className:"font-bold my-2",children:"Сложность по времени"}),e.jsxs("p",{className:"mb-2",children:["Мы знаем, что нам нужно посетить каждый узел дерева, и если в дереве ",e.jsx("i",{children:"n"})," ","узлов, алгоритм будет работать за ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),")."]}),e.jsxs("p",{className:"mb-2",children:["Ещё один интересный момент заключается в том, что мы могли бы отсортировать массив, используя бинарное дерево. Сначала нам нужно будет построить дерево и вставить каждое значение. Мы знаем, что существует ",e.jsx("i",{children:"n"})," значений, и вставка значения в бинарное дерево занимает ",e.jsx("i",{children:"log n"})," времени. Следовательно, весь процесс построения дерева составит ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n log n"}),"). Обход дерева займёт всего ",e.jsx("i",{children:"n"})," шагов, поэтому в общей сложности это будет ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"})," +"," ",e.jsx("i",{children:"n log n"}),")."]}),e.jsxs("p",{className:"mb-2",children:["Константы не принимаются во внимание. Мы также знаем, что ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n log n"}),") будет расти быстрее, чем ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),"), поэтому мы можем установить верхнюю границу на уровне ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n log n"}),")."]}),e.jsx("h2",{className:"font-bold my-2",children:"Итоги"}),e.jsx("p",{className:"mb-2",children:"Теперь, когда мы увидели, как дерево проходится в глубину, давайте посмотрим, как оно проходится, когда мы в первую очередь расставляем приоритеты по ширине."})]})}const nC="/my-textbook/assets/list-node2-OhtOJ6gX.png",rC="/my-textbook/assets/doubly-linked-list-appending1-ADyTXC7-.png",sC="/my-textbook/assets/doubly-linked-list-appending2-ezH_oSB4.png",iC="/my-textbook/assets/doubly-linked-list-deletion-iU285AVX.png",aC=`tail.next = ListNode4;
ListNode4.prev = tail;
tail = tail.next;`,oC=`ListNode2.next = null;
tail = ListNode2;`;function lC(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Рассмотрев связные списки, давайте теперь узнаем об их разновидности — двусвязных списках. Как следует из названия, они называются двусвязными, поскольку каждый узел теперь имеет два указателя. В дополнение к указателю ",e.jsx("code",{children:"next"})," у нас есть указатель ",e.jsx("code",{children:"prev"}),", который указывает на предыдущий узел. Если указатель ",e.jsx("code",{children:"prev"})," указывает на ",e.jsx("code",{children:"null"}),", то это означает, что мы находимся в начале связного списка."]}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Узел списка",className:"mx-auto",height:"320",src:nC,width:"1200"})}),e.jsx("h2",{className:"font-bold my-2",children:"Операции двусвязного списка"}),e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("strong",{children:"Вставка"}),e.jsxs("p",{className:"mb-2",children:["Как и в случае со связным списком, добавление узла в двусвязный список будет выполняться за ",e.jsx("i",{children:"O"}),"(1) по времени. Только на этот раз нам также нужно обновить указатель ",e.jsx("code",{children:"prev"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Например, если посмотреть на картинку ниже, в нашем связном списке есть три узла: ",e.jsx("code",{children:"ListNode1"}),", ",e.jsx("code",{children:"ListNode2"})," и ",e.jsx("code",{children:"ListNode3"}),". Также у нас есть ещё один узел ",e.jsx("code",{children:"ListNode4"}),", который мы ходим вставить в список. Мы знаем, что нам придётся обновить указатель"," ",e.jsx("code",{children:"next"})," узла ",e.jsx("code",{children:"ListNode3"})," и указатель ",e.jsx("code",{children:"prev"})," ","узла ",e.jsx("code",{children:"ListNode4"}),". Псевдокод ниже демонстрирует это вместе с пошаговым визуальным представлением:"]}),e.jsx(k,{value:aC}),e.jsx("img",{alt:"Добавление нового узла",className:"mb-2",height:"400",src:rC,width:"1839"}),e.jsx("img",{alt:"Добавление нового узла в цепочку",height:"1080",src:sC,width:"1839"})]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Удаление"}),e.jsxs("p",{className:"mb-2",children:["Возвращаясь к примеру с тремя узлами, удаление также выполняется за ",e.jsx("i",{children:"O"}),"(1) по времени. Никакого сдвига или перемещения не требуется. Вместо этого, в этом случае требуется корректировка указателя ",e.jsx("code",{children:"prev"}),". Псевдокод ниже демонстрирует это вместе с визуальным представлением:"]}),e.jsx(k,{value:oC}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Удаление узла",className:"mx-auto",height:"1160",src:iC,width:"1320"})}),e.jsx("p",{className:"mb-2",children:e.jsxs("strong",{children:["Возможно, вы догадались, что обе операции добавления и удаления из конца связных списков выполняются за ",e.jsx("i",{children:"O"}),"(1), что похоже на операции"," ",e.jsx("code",{children:"push"})," и ",e.jsx("code",{children:"pop"})," в стеке. Стек — это всего лишь абстрактный интерфейс, который также можно реализовать с помощью связных списков."]})}),e.jsx("p",{className:"mb-2",children:e.jsxs("strong",{children:["Если на желаемый узел не указывают ",e.jsx("code",{children:"head"})," или ",e.jsx("code",{children:"tail"}),", то необходимо добраться до узла перед удалением, что займёт ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),") по времени."]})})]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Доступ"}),e.jsxs("p",{className:"mb-2",children:["Подобно связным списком, мы не можем получить произвольный узел. Так что в худшем случае нам придётся обойти ",e.jsx("i",{children:"n"})," узлов до достижения желаемого узла. Эта операция занимает ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),") по времени."]})]})]}),e.jsx("h2",{className:"font-bold my-2",children:"Итоги:"}),e.jsxs("p",{className:"mb-2",children:["Эта статья может показаться более знакомой, чем ожидалось, но это потому, что единственное существенное различие между связными и двусвязными списками заключается в том, что двусвязный список имеет указатель ",e.jsx("code",{children:"prev"}),", что требует больше операций при вставке и удалении узлов."]}),e.jsxs("table",{className:"border-collapse mb-2 table-auto w-full",children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{className:"border-2 border-gray-300 border-solid p-2 text-left",children:"Операция"}),e.jsx("th",{className:"border-2 border-gray-300 border-solid p-2 text-left",children:"Сложность по времени"}),e.jsx("th",{className:"border-2 border-gray-300 border-solid p-2 text-left",children:"Примечания"})]})}),e.jsxs("tbody",{children:[e.jsxs("tr",{children:[e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Доступ"}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:[e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),")"]}),e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"—"})]}),e.jsxs("tr",{children:[e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Поиск"}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:[e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),")"]}),e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"—"})]}),e.jsxs("tr",{children:[e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Вставка"}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:[e.jsx("i",{children:"O"}),"(1)",e.jsx("sup",{children:"*"})]}),e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Предполагая, что у вас есть ссылка на узел в желаемой позиции"})]}),e.jsxs("tr",{children:[e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Удаление"}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:[e.jsx("i",{children:"O"}),"(1)",e.jsx("sup",{children:"*"})]}),e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Предполагая, что у вас есть ссылка на узел в желаемой позиции"})]})]})]}),e.jsx("p",{className:"mb-2",children:e.jsxs("strong",{children:["По сравнению с массивами связные списки менее эффективны при доступе к случайному элементу из-за отсутствия встроенного индекса. Таким образом, массивы будут иметь доступ за ",e.jsx("i",{children:"O"}),"(1) по времени во всех случаях, а связные списки — за ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),"), если только вы не хотите получить доступ к узлу"," ",e.jsx("code",{children:"head"})," или ",e.jsx("code",{children:"tail"}),"."]})})]})}const cC="/my-textbook/assets/middle-of-the-list-odd-rpL0Hob-.png",dC="/my-textbook/assets/middle-of-the-list-even-vuBTLjlo.png",uC="/my-textbook/assets/linked-list-cycle-detection-PLF0jNbQ.png",hC="/my-textbook/assets/linked-list-cycle-start-detection-gsNmky39.png",pC=`function middleOfList(head) {
  let slow = head;
  let fast = head;

  while (fast !== null && fast.next !== null) {
    slow = slow.next;
    fast = fast.next.next;
  }

  return slow;
}`,mC=`function hasCycle(head) {
  const visited = new Set();

  while (head) {
    if (visited.has(head)) {
      return true;
    }

    visited.add(head);

    head = head.next;
  }

  return false;
}`,fC=`function hasCycle(head) {
  let slow = head;
  let fast = head;

  while (fast !== null && fast.next !== null) {
    slow = slow.next;
    fast = fast.next.next;

    if (slow === fast) {
      return true;
    }
  }

  return false;
}`,gC=`function cycleStart(head) {
  let slow = head;
  let fast = head;
  
  while (fast !== null && fast.next !== null) {
    slow = slow.next;
    fast = fast.next.next;
    
    if (slow === fast) {
      break;
    }
  }

  if (fast === null || fast.next === null) {
    return null;
  }

  let slow2 = head;
  
  while (slow !== slow2) {
    slow = slow.next;
    slow2 = slow2.next;
  }

  return slow;
}`;function bC(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Мы можем использовать метод двух указателей при работе со связными списками. Указатели могут начинаться в одном и том же месте или даже в разных местах, а затем мы будем перемещать их с разной скоростью. Обычно есть указатели"," ",e.jsx("code",{children:"fast"})," и ",e.jsx("code",{children:"slow"}),". Указатель ",e.jsx("code",{children:"fast"})," движется в два раза быстрее, чем указатель ",e.jsx("code",{children:"slow"}),"."]}),e.jsx("h2",{className:"font-bold my-2",children:"Примеры использования быстрых и медленных указателей"}),e.jsx("p",{className:"mb-2",children:"Рассмотрим несколько примеров, демонстрирующих эту технику."}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Задача: найти середину связного списка."})}),e.jsxs("p",{className:"mb-2",children:["Решение методом грубой силы заключается в том, чтобы перебрать весь связный список и, используя переменную, скажем, ",e.jsx("code",{children:"length"}),", отслеживать длину. Затем мы можем запустить цикл ",e.jsx("code",{children:"for"})," до ",e.jsx("code",{children:"length / 2"}),", и когда мы выйдем из цикла ",e.jsx("code",{children:"for"}),", мы достигнем середины."]}),e.jsxs("p",{className:"mb-2",children:["Это решение работает, но оно не элегантно. Лучший и более эффективный способ — разместить два указателя в начале связного списка. Наш указатель ",e.jsx("code",{children:"fast"})," ","движется в два раза быстрее, чем указатель ",e.jsx("code",{children:"slow"}),". К тому времени, когда указатель ",e.jsx("code",{children:"fast"})," дойдёт до конца, указатель ",e.jsx("code",{children:"slow"})," ","окажется в середине связного списка. Это имеет смысл, поскольку если медленный указатель движется со скоростью, вдвое меньшей скорости указателя"," ",e.jsx("code",{children:"fast"}),", и указатель ",e.jsx("code",{children:"fast"})," достиг конца, то медленный указатель должен находиться посередине."]}),e.jsx(k,{value:pC}),e.jsx("p",{className:"mb-2",children:"Для связных списков нечётной длины мы можем начать оба указателя в одном и том же месте."}),e.jsx("img",{alt:"Поиск середины списка нечётной длины",className:"mb-2",height:"201",src:cC,width:"1880"}),e.jsxs("p",{className:"mb-2",children:["Для связных списков чётной длины середина может быть одним из двух узлов. Мы можем выбрать любой из узлов в качестве середины. На демонстрации ниже выбор"," ",e.jsx("code",{children:"3"})," означает, что указатели ",e.jsx("code",{children:"fast"})," и ",e.jsx("code",{children:"slow"})," ","начинаются с ",e.jsx("code",{children:"head"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Однако, выбор ",e.jsx("code",{children:"2"})," означает, что ",e.jsx("code",{children:"fast"})," начинается с"," ",e.jsx("code",{children:"slow.next"}),", что имеет смысл, поскольку, если ",e.jsx("code",{children:"fast"})," ","начинается дальше ",e.jsx("code",{children:"slow"}),", он дойдёт до конца быстрее."]}),e.jsx("img",{alt:"Поиск середины списка чётной длины",className:"mb-2",height:"441",src:dC,width:"1880"}),e.jsx("p",{className:"mb-2",children:e.jsxs("strong",{children:["Что произойдёт, если цикл ",e.jsx("code",{children:"while"})," будет проверять только наличие"," ",e.jsx("code",{children:"fast"}),", без ",e.jsx("code",{children:"fast.next"}),"? Мы получим ошибку. Это связано с тем, что к тому времени, когда быстрый указатель достигает последнего узла в связном списке, ",e.jsx("code",{children:"fast.next === null"}),", что означает, что когда мы попытаемся выполнить ",e.jsx("code",{children:"fast = fast.next.next"})," в блоке"," ",e.jsx("code",{children:"while"}),", мы вызываем ",e.jsx("code",{children:"null.next"}),", чего на самом деле не существует!"]})}),e.jsxs("p",{className:"mb-2",children:["Сложность по времени для приведённого выше составляет ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),"), где"," ",e.jsx("i",{children:"n"})," — это длина связного списка. Сложность по памяти составляет ",e.jsx("i",{children:"O"}),"(1)."]}),e.jsx("h2",{className:"font-bold my-2",children:"Обнаружение цикла"}),e.jsxs("p",{className:"mb-2",children:["Используя приведённую выше концепцию, мы также можем обнаруживать циклы в наших связных списках. Это связано с тем, что если в нашем связном списке есть цикл, наш быстрый указатель в конечном итоге догонит медленный указатель, поскольку он никогда не станет ",e.jsx("code",{children:"null"}),". Это также называют алгоритмом «черепахи и зайца» Флойда. Представьте себе, что черепаха и заяц стартуют с одной и той же позиции на круговой беговой дорожке. Заяц движется в два раза быстрее черепахи. Поскольку поле круглое, в какой-то момент заяц пройдёт мимо черепахи."]}),e.jsxs("p",{className:"mb-2",children:["В этом заключается идея использования быстрых и медленных указателей при обнаружении цикла. Мы начинаем наши указатели ",e.jsx("code",{children:"slow"})," и"," ",e.jsx("code",{children:"fast"})," с начала связного списка. Если наши указатели ",e.jsx("code",{children:"slow"})," ","и ",e.jsx("code",{children:"fast"})," встречаются, мы знаем, что существует цикл."]}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Задача: определить, существует ли в связном списке цикл."})}),e.jsxs("p",{className:"mb-2",children:["Возможно, вы поняли, что это похоже на обнаружение дубликатов в массиве. По сути, если мы встречаем узел, который уже видели, то у нас должен быть цикл. Технически мы могли бы использовать ",e.jsx("code",{children:"Set"})," для обнаружения цикла. Мы бы хранили все наши узлы (ссылку на объект, а не значение, поскольку несколько узлов могут иметь одинаковые значения) в нашем ",e.jsx("code",{children:"Set"})," и проверяли наличие каждого узла в нём."]}),e.jsx(k,{value:mC}),e.jsxs("p",{className:"mb-2",children:["Хотя это будет работать, такое решение занимает больше места, ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),"). Решение, представленное ниже, более эффективно. Идея состоит в том, что если цикл действительно существует, наш быстрый указатель в конечном итоге встретится с медленным указателем. Они всегда будут встречаться, и быстрый указатель не пропустит медленный указатель, потому что на каждой итерации быстрый указатель приближается на одну позицию к медленному указателю. Так, на демонстрации ниже, начиная с шага 2, быстрый указатель находится на 3 позиции позади медленного указателя. На шаге 3 он отстаёт на 2 позиции, на шаге 4 — на одну позицию, после чего догоняет медленный указатель на шаге 5."]}),e.jsx(k,{value:fC}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Обнаружение цикла в списке",className:"mx-auto",height:"801",src:uC,width:"1401"})}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Задача: определить, существует ли в связном списке цикл, и вернуть узел, в котором он начинается."})}),e.jsxs("p",{className:"mb-2",children:["Сложная часть этой задачи — найти, где начинается цикл. Конечно, мы можем использовать наши быстрый и медленный указатели для обнаружения цикла, но узел, в котором встречаются медленный и быстрый указатели, не обязательно будет узлом, где начинается цикл. Способ решения этой проблемы — инициализровать другой медленный указатель, назовём его ",e.jsx("code",{children:"slow2"}),", который указывает на начало связного списка после того, как наши первоначальные медленный и быстрый указатели пересеклись. Если ",e.jsx("code",{children:"C"})," — это узел, в котором начинается цикл, то расстояние от ",e.jsx("code",{children:"slow"})," до ",e.jsx("code",{children:"C"})," и расстояние от"," ",e.jsx("code",{children:"slow2"})," до ",e.jsx("code",{children:"C"})," должны быть равны. Таким образом, когда"," ",e.jsx("code",{children:"slow2"})," и ",e.jsx("code",{children:"slow"})," встречаются, мы гарантированно приходим к"," ",e.jsx("code",{children:"C"}),". Чуть позже мы докажем это с помощью простых математических вычислений."]}),e.jsx(k,{value:gC}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Обнаружение начала цикла в списке",className:"mx-auto",height:"1100",src:hC,width:"1400"})}),e.jsx("p",{className:"mb-2",children:"Давайте теперь докажем, почему этот метод работает."}),e.jsx("h2",{className:"font-bold my-2",children:"Математическое доказательство «черепахи и зайца» Флойда"}),e.jsxs("p",{className:"mb-2",children:["1. Обозначим расстояние между первым узлом и узлом, в котором начинается цикл, через ",e.jsx("code",{children:"P"}),"."]}),e.jsxs("p",{className:"mb-2",children:["2. Обозначим длину цикла через ",e.jsx("code",{children:"C"}),"."]}),e.jsxs("p",{className:"mb-2",children:["3. Расстояние от узла, в котором указатели ",e.jsx("code",{children:"slow"})," и ",e.jsx("code",{children:"fast"})," ","пересекаются, до узла, в котором начинается цикл, обозначим через ",e.jsx("code",{children:"X"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Используя эту информацию, мы можем вывести, что расстояние между началом цикла и узлом, в котором пересекаются указатели ",e.jsx("code",{children:"slow"})," и ",e.jsx("code",{children:"fast"}),", равно ",e.jsx("code",{children:"C - X"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Мы знаем, что ",e.jsx("code",{children:"2 * slow = fast"}),". Используя приведённую выше информацию, давайте перепишем это уравнение через ",e.jsx("code",{children:"C, X, P"}),", в результате чего получим следующее:"]}),e.jsx("p",{className:"mb-2",children:e.jsxs("strong",{children:["Шаг 1: перепишем через ",e.jsx("code",{children:"C, X, P"})]})}),e.jsx("p",{className:"mb-2",children:e.jsx("code",{children:"2(P + C - X) = P + C + C - X"})}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Шаг 2: раскроем скобки"})}),e.jsx("p",{className:"mb-2",children:e.jsx("code",{children:"2P + 2C - 2X = P + 2C - X"})}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Шаг 3: теперь мы можем перенести всё в левую часть, что приведёт к следующему"})}),e.jsx("p",{className:"mb-2",children:e.jsx("code",{children:"P - X = 0"})}),e.jsx("p",{className:"mb-2",children:e.jsxs("strong",{children:["Шаг 4: определим ",e.jsx("code",{children:"P"})]})}),e.jsx("p",{className:"mb-2",children:e.jsx("code",{children:"P = X"})}),e.jsxs("p",{className:"mb-2",children:["Таким образом, если ",e.jsx("code",{children:"P = X"}),", должно быть так, что указатели"," ",e.jsx("code",{children:"slow"})," и ",e.jsx("code",{children:"slow2"})," находятся на одинаковом расстоянии от узла, в котором начинается цикл."]})]})}const xC="/my-textbook/assets/hash-implementation-gHp7PCDU.png",EC=`hashmap["Александр"] = "Дрожжино";
hashmap["Михаил"] = "Москва";
hashmap["Джексон"] = "Мценск";`;function TC(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["В этой статье речь пойдёт о хеш-картах. Примеры и задачи в Моём справочнике пишутся на ",e.jsx("code",{children:"JavaScript"}),", данная статья в большей степени актуальна для других языков программирования."]}),e.jsx("p",{className:"mb-2",children:"Хеш-карты «под капотом» чаще всего реализуются с помощью массивов. Хеш-карта может иметь нулевой размер, но массив изначально не будет иметь нулевой размер."}),e.jsx("p",{className:"mb-2",children:"Предположим, что мы хотим заполнить этот массив следующими парами ключ/значение:"}),e.jsx(k,{value:EC}),e.jsxs("p",{className:"mb-2",children:["Для этого нам необходимо познакомиться с ",e.jsx("strong",{children:"хешированием"})," и"," ",e.jsx("strong",{children:"хеш-функциями"}),". Хеш-функция принимает ключ (в данном случае строку) и конвертирует его в число. Одна и та же строка всегда будет давать одно и то же число. Используя это число, можно определить место, в котором мы хотим сохранить нашу пару ключ/значение."]}),e.jsx("h2",{className:"font-bold mb-2",children:"Вставка и хеширование"}),e.jsxs("p",{className:"mb-2",children:["Возьмем ",e.jsx("code",{children:'"Александр"'})," для примера. Наша хеш-функция возьмёт каждый символ строки и получит его ASCII-код (я буду использовать псевдозначения для простоты). Затем она суммирует ASCII-коды, чтобы определить, где строка должна оказаться в массиве. Однако, поскольку это может быть огромное число и оно легко может выйти за размеры массива, мы можем использовать оператор остатка от деления"," ",e.jsx("code",{children:"%"}),". Представим, что сумма ASCII-кодов всех символов"," ",e.jsx("code",{children:'"Александр"'})," равна 25. Чтобы определить расположение строки в массиве, мы можем использовать формулу:"," ",e.jsxs("strong",{children:["сумма ASCII-кодов ",e.jsx("code",{children:"%"})," размер массива"]}),". В нашем случае размер массива равен 2. Таким образом, ",e.jsx("code",{children:"25 % 2"})," ","равняется ",e.jsx("strong",{children:"1"}),", по этому индексу мы будем хранить первую пару ключ/значение. Этот процесс также иногда называют ",e.jsx("strong",{children:"прехешированием"}),"."]}),e.jsx("p",{className:"mb-2",children:"Из-за того, что размер нашего массива равен всего лишь 2, вполне вероятно, что другая пара ключ/значение приведёт к такому же индексу массива, когда мы возьмём остаток. Это называется коллизией, коллизии очень распространены. Есть способы попытаться свести к минимуму коллизии, но они совершенно неизбежны."}),e.jsxs("p",{className:"mb-2",children:["Чтобы гарантировать, что каждая пара ключ/значение найдёт свободное место, мы будем отслеживать размер массива и количество фактически заполненных индексов. Когда хеш-карта станет наполовину заполненой (половина индексов в массиве занята), мы будем удваивать размер массива: ",e.jsx("strong",{children:"размер массива * 2"}),". В данном случае мы имеем размер 2, и посколько добавление"," ",e.jsx("code",{children:'"Александр": "Дрожжино"'})," приведёт к заполнению карты наполовину, мы удвоим её размер перед выполнением следующей вставки."," ",e.jsx("strong",{children:"Это гарантирует, что мы минимизируем коллизии перед вставкой."})]}),e.jsxs("p",{className:"mb-2",children:["Как только мы изменили размер, мы выполняем операцию, называемую"," ",e.jsx("strong",{children:"рехешированием"}),". Это необходимо, поскольку размер массива изменился. Рехеширование пересчитывает положение всех элементов, которые уже существуют в хеш-карте. Мы вставили ",e.jsx("code",{children:'"Александр"'})," по индексу"," ",e.jsx("strong",{children:"1"}),". В данном случае после удвоения размера массива новая позиция"," ",e.jsx("code",{children:'"Александр"'})," оказывается по индексу ",e.jsx("strong",{children:"1"}),", поэтому нам не нужно её обновлять. Однако, если новая позиция"," ",e.jsx("code",{children:'"Александр"'})," была бы по индексу 2, нам нужно было бы переместить пару ключ/значение."]}),e.jsx("p",{className:"mb-2",children:e.jsxs("strong",{children:["Нам необходимо выполнять рехеширование, если мы хотим поддерживать сложность по времени ",e.jsx("i",{children:"O"}),"(1) для наших операций. Мы начали с массива с размером 2. Допустим, мы хотели вставить 10000 пар ключ/значение в массив. Когда мы хотим найти ",e.jsx("code",{children:'"Александр"'}),", мы вычисляем позицию, используя новый размер, и ",e.jsx("code",{children:'"Александр"'})," может больше не быть в этой позиции."]})}),e.jsxs("p",{className:"mb-2",children:["Представим, что конвертирование ",e.jsx("code",{children:'"Михаил"'})," в число приводит к 27."," ",e.jsx("strong",{children:e.jsx("code",{children:"27 % 4 = 3"})}),", что означает ",e.jsx("code",{children:'"Михаил": "Москва"'})," окажется в массиве по 3 индексу. Теперь мы удвоим размер, он станет равным 8."]}),e.jsx("h2",{className:"font-bold mb-2",children:"Коллизии"}),e.jsxs("p",{className:"mb-2",children:["Предположим, что конвертирование ",e.jsx("code",{children:'"Джексон"'})," в число приводит к 33."," ",e.jsx("strong",{children:e.jsx("code",{children:"33 % 8 = 1"})}),". Это коллизия, поскольку Александр уже находится по индексу 1. Как решить эту проблему? Мы можем продолжать увеличивать размер массива, пока не найдём свободное место для ",e.jsx("code",{children:'"Джексон"'}),", однако это гигансткий расход памяти."]}),e.jsx("p",{className:"mb-2",children:"Есть два распространенных способа преодоления коллизий:"}),e.jsxs("ol",{className:"list-decimal list-inside",children:[e.jsxs("li",{children:[e.jsx("strong",{children:"Метод цепочек"}),e.jsx("p",{className:"mb-2",children:"Метод цепочек решает коллизии путём объединения элементов в узлы связного списка, таким образом несколько пар ключ/значение могут храниться по одному индексу."}),e.jsxs("p",{className:"mb-2",children:["Поскольку Александр и Джексон принадлежат одному и тому же индексу, мы можем хранить их как объект связного списка. В этом случае сложность по времени сводится к ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),") для поиска, вставки и удаления. Любые будущие ключи, принадлежащие тому же индексу, будут храниться как узел в цепочке связного списка."]})]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Открытая адресация"}),e.jsx("p",{className:"mb-2",children:"Идея открытой адресации состоит в том, чтобы найти следующий доступный слот, чтобы мы не хранили более одной пары ключ/значение по одному индексу. В сравнении с методом цепочек, открытая адресация более эффективна при небольшом количестве коллизий. Ограничением здесь является то, что общее количество записей в хеш-карте ограничено размером массива."})]})]}),e.jsx("img",{alt:"Реализация хеша",height:"800",src:xC,width:"1600"})]})}const yC="/my-textbook/assets/heapify-Q8E_H38P.png",SC=`heapify(array) {
  // 0-я позиция перемещается в конец
  array.push(array[0]);

  this.heap = array;

  let cur = Math.floor((this.heap.length - 1) / 2);

  while (cur > 0) {
    // Спускает вниз
    let i = cur;

    while (2 * i < this.heap.length) {
      if (2 * i + 1 < this.heap.length
        && this.heap[2 * i + 1] < this.heap[2 * i]
        && this.heap[i] > this.heap[2 * i + 1]
      ) {
        // меняет с правым дочерним элементом
        [this.heap[i], this.heap[2 * i + 1]] = [this.heap[2 * i + 1], this.heap[i]];
        i = 2 * i + 1;
      } else if (this.heap[i] > this.heap[2 * i]) {
        // меняет с левым дочерним элементом     
        [this.heap[i], this.heap[2 * i]] = [this.heap[2 * i], this.heap[i]];
        i = 2 * i;
      } else {
        break;
      }
    }

    cur--;
  }

  return;
}`;function NC(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Напомним, что сложность по времени построения бинарного дерева поиска из ",e.jsx("i",{children:"n"})," ","элементов равна ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n log n"}),"). Если мы построим кучу размера ",e.jsx("i",{children:"n"})," с помощью операции push для каждого элемента, это также будет выполняться за время"," ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n log n"}),"). Но на самом деле существует более эффективный алгоритм, известный как ",e.jsx("i",{children:"Heapify"}),", который позволяет нам выполнить эту операцию за время ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),")."]}),e.jsx("h2",{className:"font-bold my-2",children:"Концепция"}),e.jsx("p",{className:"mb-2",children:"Идея использования heapify для построения кучи состоит в том, чтобы удовлетворить свойства структуры и порядка. Нам нужно убедиться, что наша бинарная куча представляет собой полное бинарное дерево и что значение каждого узла не превышает значения его родителя."}),e.jsxs("p",{className:"mb-2",children:["Поскольку листовые узлы не могут нарушать свойства min heap, для них нет необходимости выполнять ",e.jsx("code",{children:"heapify()"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Поскольку мы пропускаем все листовые узлы, нам нужно начать только с"," ",e.jsx("code",{children:"Math.floor(heap.length / 2)"}),". Затем нам нужно спуститься вниз точно так же, как мы это делали в предыдущей статье в методе ",e.jsx("code",{children:"pop()"}),". Мы не будем подробно рассматривать код, поскольку большая его часть аналогична методу"," ",e.jsx("code",{children:"pop()"}),"."]}),e.jsx(k,{value:SC}),e.jsxs("p",{className:"mb-2",children:["Начиная с первого нелистового узла, мы будем спускаться вниз точно так же, как мы это делали в функции ",e.jsx("code",{children:"pop()"}),". После каждой итерации мы будем уменьшать индекс на ",e.jsx("code",{children:"1"}),", чтобы мы могли выполнить ",e.jsx("code",{children:"heapify()"})," на следующем узле, вплоть до индекса ",e.jsx("code",{children:"1"}),"."]}),e.jsxs("p",{className:"mb-2",children:["На изображении ниже показано, как ",e.jsx("code",{children:"heapify()"})," выполняется на всех узлах, начиная с индекса ",e.jsx("code",{children:"4"}),". Узлы в синих прямоугольниках являются листовыми узлами."]}),e.jsx("img",{alt:"Преобразование в кучу",className:"mb-2",height:"1240",src:yC,width:"1600"}),e.jsx("h2",{className:"font-bold my-2",children:"Сложность по времени"}),e.jsxs("p",{className:"mb-2",children:["Учитывая, что в бинарном дереве ",e.jsx("i",{children:"n"})," узлов, существует примерно ",e.jsx("i",{children:"n"})," /"," ",e.jsx("code",{children:"2"})," листовых узлов. Используя эту информацию, мы можем выяснить, на сколько уровней должен спуститься вниз каждый узел, а также объём работы, которую"," ",e.jsx("code",{children:"heapify()"})," выполняет на каждом уровне."]}),e.jsxs("p",{className:"mb-2",children:["Мы не выполняем heapify на 3-м/последнем уровне. Узлы на 2-м уровне должны спуститься на один уровень ниже, а узлы на 1-м уровне спускаются вниз на два уровня, при этом корневой узел должен спуститься вниз по всем уровням. Таким образом, хотя количество узлов каждый раз уменьшается вдвое, количество уровней, которые необходимо пройти, увеличивается. Когда мы складываем всю работу вместе, получается очень аккуратное математическое суммирование, которое упрощается до"," ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),"), но мы не будем его рассматривать. Крайне маловероятно, что вас попросят доказать сложность по времени ",e.jsx("code",{children:"heapify()"}),", поэтому достаточно знать, что она равна ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),")."]}),e.jsx("h2",{className:"font-bold my-2",children:"Итоги"}),e.jsx("p",{className:"mb-2",children:"Задачи с BST распространены, но когда дело доходит до использования структуры данных в качестве утилиты, они гораздо чаще встречаются с кучей. Если вам постоянно нужно находить максимальное или минимальное значение в задаче, отличным вариантом будет использование min heap или max heap."}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Иногда задача требует найти элементы «Top K» по некоторым критериям. Эти вопросы созданы для того, чтобы решать их с помощью кучи."})})]})}const jC="/my-textbook/assets/binary-heap-6pN-k8HH.png",AC="/my-textbook/assets/binary-heap-array-TQoo0fhR.png",_C="/my-textbook/assets/binary-heap-parent-and-children--yflIQXd.png",vC=`class Heap {
    constructor() {
        this.heap = [];
        this.heap.push(0);
    }
}`;function RC(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Куча (heap) — это специализированная древовидная структура данных, которая представляет собой полное бинарное дерево. Куча реализует абстрактный тип данных, называемый очередью с приоритетом, но иногда «куча» и «очередь с приоритетом» используются как взаимозаменяемые термины."}),e.jsx("p",{className:"mb-2",children:"Мы уже узнали, что очереди работают по принципу «первый пришёл — первый вышел», но в очереди с приоритетом значения удаляются в зависимости от заданного приоритета. Первым удаляется элемент с наивысшим приоритетом."}),e.jsx("h2",{className:"font-bold my-2",children:"Два типа кучи"}),e.jsxs("ol",{className:"list-decimal list-inside mb-2",children:[e.jsx("li",{children:"Min Heap"}),e.jsx("li",{children:"Max Heap"})]}),e.jsxs("p",{className:"mb-2",children:[e.jsx("strong",{children:"Min heaps"})," имеют наименьшее значение в корневом узле, а при удалении наименьшее значение имеет наивысший приоритет."]}),e.jsxs("p",{className:"mb-2",children:[e.jsx("strong",{children:"Max heaps"})," имеют наибольшее значение в корневом узле, а при удалении наибольшее значение имеет наивысший приоритет."]}),e.jsx("p",{className:"mb-2",children:"В этой статье мы сосредоточимся на min heap, но реализация для max heap точно такая же, за исключением того, что вы отдаёте приоритет максимальному значению вместо минимального."}),e.jsx("h2",{className:"font-bold my-2",children:"Свойства кучи"}),e.jsx("p",{className:"mb-2",children:"Чтобы бинарное дерево можно было назвать кучей, оно должно удовлетворять следующим свойствам:"}),e.jsxs("ol",{className:"list-decimal list-inside",children:[e.jsxs("li",{className:"mb-2",children:[e.jsx("strong",{children:"Свойство структуры"}),e.jsxs("p",{children:["Бинарная куча — это бинарное дерево, которое представляет собой"," ",e.jsx("strong",{children:"полное бинарное дерево"}),", в котором каждый уровень дерева заполнен полностью, за исключением узлов самого нижнего уровня, которые заполняются последовательно слева направо."]})]}),e.jsxs("li",{className:"mb-2",children:[e.jsx("strong",{children:"Свойство порядка"}),e.jsxs("p",{className:"mb-2",children:["Свойство порядка для min heap заключается в том, что все потомки должны быть больше, чем их предок. Другими словами, если у нас есть дерево с корнем"," ",e.jsx("code",{children:"y"}),", каждый узел в правом и левом поддереве должен быть больше или равен ",e.jsx("code",{children:"y"}),". Это рекурсивное свойство, как в бинарных деревьях поиска."]}),e.jsxs("p",{children:["В max heap каждый узел в правом и левом поддереве меньше или равен"," ",e.jsx("code",{children:"y"}),"."]})]})]}),e.jsx("p",{className:"mb-2",children:"На следующем изображении показана бинарная куча."}),e.jsx("img",{alt:"Бинарная куча",height:"440",src:jC,width:"509"}),e.jsx("h2",{className:"font-bold my-2",children:"Реализация"}),e.jsxs("p",{className:"mb-2",children:["Бинарные кучи рисуются с использованием древовидной структуры данных, но внутри они реализуются с использованием массивов. Давайте покажем, как мы можем это сделать, используя данную бинарную кучу:"," ",e.jsx("code",{children:"[14, 19, 16, 21, 26, 19, 68, 65, 30, null, null, null, null, null, null]"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Мы возьмем массив размером"," ",e.jsxs("code",{children:[e.jsx("i",{children:"n"})," + 1"]}),", где ",e.jsx("i",{children:"n"})," — количество узлов в нашей бинарной куче. Скоро это обретёт смысл. Мы будем посещать наши узлы в том же порядке, как мы посещаем узлы при поиске в ширину — уровень за уровнем, слева направо. Мы вставим их в наш массив последовательно. Однако мы начнём их заполнять с индекса ",e.jsx("code",{children:"1"}),", а не с"," ",e.jsx("code",{children:"0"}),", по причинам, которые мы скоро обсудим."]}),e.jsx("p",{className:"mb-2",children:"После заполнения нашего массива он будет выглядеть следующим образом:"}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Заполнение кучи (массива)",className:"mx-auto",height:"420",src:AC,width:"1040"})}),e.jsxs("p",{className:"mb-2",children:["Причина, по которой мы начинаем заполнять наш массив с индекса ",e.jsx("code",{children:"1"}),", заключается в том, что это помогает нам определить индекс, в котором находится левый дочерний, правый дочерний или родительский узел узла. Поскольку бинарные кучи представляют собой полные бинарные деревья, для указателей не требуется места. Вместо этого левый дочерний, правый дочерний и родительский узел можно вычислить с помощью следующих формул, где ",e.jsx("i",{children:"i"})," — индекс данного узла."]}),e.jsxs("p",{className:"flex flex-col mb-2",children:[e.jsxs("code",{children:[e.jsx("strong",{children:"левый дочерний узел"})," = 2 ∗ ",e.jsx("i",{children:"i"})]}),e.jsxs("code",{children:[e.jsx("strong",{children:"правый дочерний узел"})," = 2 ∗ ",e.jsx("i",{children:"i"})," + 1"]}),e.jsxs("code",{children:[e.jsx("strong",{children:"родительский узел"})," = ",e.jsx("i",{children:"i"})," / 2"]})]}),e.jsxs("p",{className:"mb-2",children:["Теперь предположим, что мы хотим найти указанные выше свойства узла"," ",e.jsx("code",{children:"19"}),". На следующем изображении показано, как использование формул помогает нам их понять. Число внутри круга в каждом узле дерева — это значение, хранящееся в этом узле. Число над узлом (синим цветом) — это соответствующий индекс в массиве. Важно отметить, что эти формулы работают только в том случае, если дерево является полным бинарным деревом. Теперь мы также можем понять, почему мы начинаем с индекса ",e.jsx("code",{children:"1"}),". Предположим, мы хотели найти левый и правый дочерний узел ",e.jsx("code",{children:"14"}),", а ",e.jsx("code",{children:"14"})," находился в ",e.jsx("code",{children:"0"}),". Ну, любое число, умноженное на ",e.jsx("code",{children:"0"})," это ",e.jsx("code",{children:"0"}),", и сообщит нам, что левый дочерний элемент находится по индексу ",e.jsx("code",{children:"0"}),", что, конечно, не так."]}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Поиск родительского и дочерних узлов в бинарной куче",className:"mx-auto",height:"420",src:_C,width:"1040"})}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Всякий раз, когда с кучей выполняются какие-либо операции, например удаление или добавление, мы должны убедиться, что свойства min heap удовлетворены и три вышеупомянутые формулы по-прежнему действительны. Мы обсудим это в следующей статье."})}),e.jsx("p",{className:"mb-2",children:"Ниже приведен код реализации кучи."}),e.jsx(k,{value:vC}),e.jsx("h2",{className:"font-bold my-2",children:"Итоги"}),e.jsx("p",{className:"mb-2",children:"Глядя на свойства max heap и min heap, можно сказать, что если задача требует от нас найти минимум или максимум, куча является жизнеспособным вариантом. Посмотрим, насколько он эффективен, когда дело доходит до операций удаления и добавления."})]})}const wC="/my-textbook/assets/binary-heap-push-MsL5PfJ8.png",IC="/my-textbook/assets/binary-heap-pop-KEQpSJ9f.png",CC=`push(value) {
  this.heap.push(value);
  let i = this.heap.length - 1;

  // поднимает вверх
  while (i > 1 && this.heap[i] < this.heap[Math.floor(i / 2)]) {
    [this.heap[i], this.heap[Math.floor(i / 2)]] = [this.heap[Math.floor(i / 2)], this.heap[i]];
    i = Math.floor(i / 2);
  }
}`,OC=`pop() {
  if (this.heap.length === 1) {
    // Обычно мы бы выкинули исключение, если куча пуста.
    return -1;
  }

  if (this.heap.length === 2) {
    return this.heap.pop();
  }

  const result = this.heap[1];

  // перемещает последнее значение в корень
  this.heap[1] = this.heap.pop();

  let i = 1;

  // спускает вниз
  while(2 * i < this.heap.length) {
    if (2 * i + 1 < heap.length
      && this.heap[2 * i + 1] < this.heap[2 * i]
      && this.heap[i] > this.heap[2 * i + 1]
    ) {
      // меняет с правым дочерним элементом
      [this.heap[i], this.heap[2 * i + 1]] = [this.heap[2 * i + 1], this.heap[i]];
      i = 2 * i + 1;
    } else if (this.heap[i] > this.heap[2 * i]) {
      // меняет с левым дочерним элементом      
      [this.heap[i], this.heap[2 * i]] = [this.heap[2 * i], this.heap[i]];
      i = 2 * i;
    } else {
      break;
    }
  }

  return result;
}`;function kC(){return e.jsxs(e.Fragment,{children:[e.jsx("h2",{className:"font-bold my-2",children:"Добавление (push)"}),e.jsxs("p",{className:"mb-2",children:["Возьмём ту же бинарную кучу, что и ранее:"," ",e.jsx("code",{children:"[14, 19, 16, 21, 26, 19, 68, 65, 30, null, null, null, null, null, null]"}),", допустим, мы хотим добавить в неё ",e.jsx("code",{children:"17"}),". Нам нужно убедиться, что мы добавляем ",e.jsx("code",{children:"17"})," так, что свойства структуры и порядка сохраняются."]}),e.jsxs("p",{className:"mb-2",children:["Поскольку бинарная куча представляет собой полное бинарное дерево, и нам необходимо заполнять узлы последовательным образом, добавление ",e.jsx("code",{children:"17"})," ","должно произойти в ",e.jsx("code",{children:"10"}),"-м индексе. Однако это может нарушить свойство min heap, а это значит, что нам придётся перемещать ",e.jsx("code",{children:"17"})," вверх по дереву, пока не найдём его правильное положение."]}),e.jsxs("p",{className:"mb-2",children:["В этом случае, поскольку ",e.jsx("code",{children:"17"})," меньше, чем его родительский элемент,"," ",e.jsx("code",{children:"26"}),", ему необходимо подниматься вверх до тех пор, пока он не перестанет быть меньше своего родительского элемента. Итак, мы меняем"," ",e.jsx("code",{children:"17"})," на ",e.jsx("code",{children:"26"}),", и теперь родительским элементом"," ",e.jsx("code",{children:"17"})," является ",e.jsx("code",{children:"19"}),", что снова нарушает свойство min heap. Производим ещё один обмен. После этого ",e.jsx("code",{children:"17"})," теперь больше своего нового родителя, равного ",e.jsx("code",{children:"14"}),". Число ",e.jsx("code",{children:"17"})," также меньше всех своих потомков, поскольку ",e.jsx("code",{children:"19"})," уже было меньше всех своих потомков. Результирующая min heap будет выглядеть следующим образом."]}),e.jsx("img",{alt:"Добавление в кучу",className:"mb-2",height:"640",src:wC,width:"1720"}),e.jsx(k,{value:CC}),e.jsxs("p",{className:"mb-2",children:["Поскольку мы знаем, что дерево всегда будет сбалансировано, сложность по времени операции push равна ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"log n"}),")."]}),e.jsx("h2",{className:"font-bold my-2",children:"Удаление (pop)"}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Очевидный способ"})}),e.jsxs("p",{className:"mb-2",children:["Удаление из кучи сложнее, чем операция push. Один из способов, о котором вы, возможно, уже подумали, — это извлечь корневой узел и заменить его на"," ",e.jsx("code",{children:"min(leftChild, rightChild)"}),". Проблема здесь в том, что, хотя свойство порядка не нарушено, мы нарушили свойство структуры. Если взять предыдущее дерево, удалить ",e.jsx("code",{children:"14"})," и заменить его на ",e.jsx("code",{children:"16"})," -"," ",e.jsx("code",{children:"min(leftChild, rightChild)"}),", то для замены ",e.jsx("code",{children:"16"})," потребуется"," ",e.jsx("code",{children:"19"}),". Теперь в уровне ",e.jsx("code",{children:"2"})," отсутствует узел, т.е. у"," ",e.jsx("code",{children:"19"})," отсутствует левый дочерний элемент."]}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Правильный способ"})}),e.jsxs("p",{className:"mb-2",children:["Правильный способ — взять самый правый узел последнего уровня и поменять его местами с корневым узлом. Теперь мы сохранили свойство структуры. Однако свойство порядка нарушается. Чтобы исправить свойство порядка, мы должны убедиться, что"," ",e.jsx("code",{children:"30"})," находится на своём месте. Для этого мы запустим цикл и поменяем местами ",e.jsx("code",{children:"30"})," на ",e.jsx("code",{children:"min(leftChild, rightChild)"}),". Меняем местами"," ",e.jsx("code",{children:"30"})," на ",e.jsx("code",{children:"16"}),", затем ",e.jsx("code",{children:"19"})," на ",e.jsx("code",{children:"30"}),". Полученное дерево будет выглядеть следующим образом."]}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Удаление из кучи",className:"mx-auto",height:"420",src:IC,width:"960"})}),e.jsx(k,{value:OC}),e.jsxs("p",{className:"mb-2",children:["Псевдокод, показанный выше, на первый взгляд может показаться устрашающим, поэтому давайте рассмотрим его. Если наша куча ",e.jsx("code",{children:"heap"})," пуста, удалять нечего, следовательно, ",e.jsx("code",{children:"return -1"}),". Наша куча также может иметь только один узел, и в этом случае мы просто удалим этот узел и не будем вносить никаких изменений. Если два приведённых выше условия не выполнились, значит, у нас есть дочерние элементы, а это означает, что нам нужно выполнить замену."]}),e.jsxs("p",{className:"mb-2",children:["Мы сохраняем наше значение ",e.jsx("code",{children:"14"})," в переменную с именем"," ",e.jsx("code",{children:"result"}),", чтобы не потерять его. Затем мы можем удалить из нашей кучи"," ",e.jsx("code",{children:"30"})," и поместить ",e.jsx("code",{children:"30"})," в корневой узел."]}),e.jsxs("p",{className:"mb-2",children:["Наш цикл ",e.jsx("code",{children:"while"})," выполняется до тех пор, пока у нас есть левый дочерний элемент, и мы определяем это, проверяя, что ",e.jsx("code",{children:"2 * i"})," не выходит за пределы массива. Далее нас интересуют три случая:"]}),e.jsxs("ol",{className:"list-decimal list-inside mb-2",children:[e.jsx("li",{children:"Узел не имеет дочерних элементов"}),e.jsxs("li",{children:["У узла есть ",e.jsx("strong",{children:"только"})," левый дочерний элемент"]}),e.jsx("li",{children:"Узел имеет два дочерних элемента"})]}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"При рассмотрении бинарной кучи невозможно иметь только правый дочерний элемент, поскольку тогда она больше не является полным бинарным деревом и нарушает свойство структуры."})}),e.jsxs("p",{className:"mb-2",children:["Поскольку наличие левого дочернего узла в цикле ",e.jsx("code",{children:"while"})," гарантировано, нам нужно теперь проверить, есть ли у узла правый дочерний узел, что мы проверяем с помощью ",e.jsx("code",{children:"2 * i + 1"}),". Мы также следим за тем, чтобы текущий узел был больше, чем его дочерние элементы, чтобы поддерживать свойство порядка. Мы заменяем узел на минимум из двух его дочерних элементов."]}),e.jsx("p",{className:"mb-2",children:"Если правого дочернего узла не существует и значение текущего узла больше, чем его левого дочернего элемента, мы меняем его местами с левым дочерним элементом."}),e.jsx("p",{className:"mb-2",children:"Если ни один из вышеперечисленных случаев не выполняется, тогда наш узел уже находится в правильном положении, удовлетворяя как свойству порядка, так и свойству структуры."}),e.jsx("h2",{className:"font-bold my-2",children:"Итоги"}),e.jsx("p",{className:"mb-2",children:"Сложность по времени операций, обсуждавшихся до сих пор, можно резюмировать в следующей таблице."}),e.jsxs("table",{className:"border-collapse mb-2 table-auto w-full",children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{className:"border-2 border-gray-300 border-solid p-2 text-left",children:"Операция"}),e.jsx("th",{className:"border-2 border-gray-300 border-solid p-2 text-left",children:"Сложность по времени"})]})}),e.jsxs("tbody",{children:[e.jsxs("tr",{children:[e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Получить Min/Max"}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:[e.jsx("i",{children:"O"}),"(1)"]})]}),e.jsxs("tr",{children:[e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Добавление"}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:[e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"log n"}),")"]})]}),e.jsxs("tr",{children:[e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Удаление"}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:[e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"log n"}),")"]})]})]})]})]})}const LC="/my-textbook/assets/insertion-sort-IDv9hEZ6.png",DC=`function insertionSort(array) {
  for (let i = 1; i < array.length; i++) {
    let j = i - 1;
    
    while (j >= 0 && array[j + 1] < array[j]) {
      const temp = array[j + 1];
      array[j + 1] = array[j];
      array[j] = temp;
      j--;
    }
  }

  return array;
}`;function MC(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Сортировка вставками — это один из алгоритмов сортировки, используемый для сортировки данных в различных структурах данных. Это один из простейших алгоритмов сортировки, который лучше всего работает при небольшом размере данных (скоро мы обсудим, почему это так)."}),e.jsx("h2",{className:"font-bold my-2",children:"Концепция"}),e.jsxs("p",{className:"mb-2",children:["Допустим, у нас есть массив из 5 элементов, заполненный значениями:"," ",e.jsx("code",{children:"[2, 3, 4, 1, 6]"}),". Наша цель — отсортировать массив так, чтобы в итоге мы получили ",e.jsx("code",{children:"[1, 2, 3, 4, 6]"}),". Сортировка вставками предполагает разбиение массивов на подмассивы и сортировку их по отдельности, в результате чего получается отсортированный массив. Если бы у нас был массив из 1 элемента, он уже был бы отсортирован, поскольку нет другого элемента для сравнения. Таким образом, мы предполагаем, что первый элемент отсортирован, поскольку мы рассматриваем его как отдельный подмассив."]}),e.jsxs("p",{className:"mb-2",children:["Следующий подмассив будет состоять из 2 элементов, ",e.jsx("code",{children:"[2, 3]"}),". Чтобы выполнить сортировку, необходимо сравнить два элемента. Для массива из двух элементов это тривиально. Однако когда мы доберёмся до полного массива из 5 элементов, невозможно отслеживать, где находится каждый элемент, без использования указателей. Так что создадим два указателя ",e.jsx("code",{children:"i"})," и ",e.jsx("code",{children:"j"}),"."]}),e.jsxs("ul",{className:"list-disc list-inside",children:[e.jsxs("li",{children:[e.jsx("code",{children:"j"})," всегда будет позади ",e.jsx("code",{children:"i"})," и никогда не пересечёт"," ",e.jsx("code",{children:"i"})]}),e.jsxs("li",{children:["указатель ",e.jsx("code",{children:"i"})," указывает на индекс"," ",e.jsxs("code",{children:[e.jsx("i",{children:"n"})," - 1"]}),", где"," ",e.jsx("code",{children:e.jsx("i",{children:"n"})})," ","— размер текущего подмассива"]}),e.jsxs("li",{children:["указатель ",e.jsx("code",{children:"j"})," начинается на один индекс позади ",e.jsx("code",{children:"i"}),", и до тех пор, пока ",e.jsx("code",{children:"j"})," не выйдет за пределы массива, то есть не будет указывать на отрицательный индекс, а элемент по индексу ",e.jsx("code",{children:"j + 1"})," ","меньше, чем элемент ",e.jsx("code",{children:"j"}),", мы продолжаем уменьшать ",e.jsx("code",{children:"j"}),". Это гарантирует, что мы отсортировали все элементы до индекса ",e.jsx("code",{children:"i"}),", прежде чем перейти к следующему подмассиву (итерации). Это продемонстрировано в псевдокоде ниже."]})]}),e.jsx(k,{value:DC}),e.jsx("p",{className:"mb-2",children:"Шаги выполнения кода с приведённым выше примером будут выглядеть следующим образом."}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Сортировка вставками",className:"mx-auto",height:"940",src:LC,width:"1440"})}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Вы можете подумать, будет ли сортировка вставками работать с другими типами данных, кроме чисел? Будет. Пока существует способ сравнить два значения, этот алгоритм будет работать с любым типом данных."})}),e.jsx("h2",{className:"font-bold my-2",children:"Устойчивость"}),e.jsxs("p",{className:"mb-2",children:["Устойчивость алгоритма сортировки заключается в относительном порядке элементов после завершения сортировки. Возьмём ",e.jsx("code",{children:"[7, 3, 7]"})," для примера. Есть две семёрки, одна находится по индексу ",e.jsx("code",{children:"0"}),", другая по индексу"," ",e.jsx("code",{children:"2"}),". Мы знаем, что относительный порядок этих двух семёрок останется прежним, поскольку 3 поменяется местами с 7 в индексе ",e.jsx("code",{children:"0"}),", после чего цикл ",e.jsx("code",{children:"while"})," никогда не будет запущен."]}),e.jsxs("p",{className:"mb-2",children:["Это называется ",e.jsx("strong",{children:"устойчивым"})," алгоритмом сортировки. Сортировка вставками является устойчивой, то есть гарантировано, что относительный порядок останется прежним. В неустойчивом алгоритме сортировки это не гарантировано."]}),e.jsx("h2",{className:"font-bold my-2",children:"Сложность по времени"}),e.jsxs("p",{className:"mb-2",children:["Сортировка вставками любого набора входных данных размера ",e.jsx("i",{children:"n"}),", в лучшем случае, если массив уже отсортирован, будет стоить ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),"). Это связано с тем, что нам всё равно придётся пройти через каждый элемент массива, но наш цикл"," ",e.jsx("code",{children:"while"})," никогда не будет вызван. В худшем случае все элементы сортируются в обратном порядке, что означает, что цикл ",e.jsx("code",{children:"while"})," будет выполняться ",e.jsx("i",{children:"n"})," раз внутри цикла ",e.jsx("code",{children:"for"}),". Это приводит к сложности по времени ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),e.jsx("sup",{children:"2"}),")."]}),e.jsxs("h2",{className:"font-bold my-2",children:["Более глубокое погружение - почему ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),e.jsx("sup",{children:"2"}),")?"]}),e.jsxs("p",{className:"mb-2",children:["В худшем случае сортировка вставками выполняет ",e.jsx("i",{children:"n"}),e.jsx("sup",{children:"2"})," операций, где ",e.jsx("i",{children:"n"})," — размер массива. На первой итерации цикла"," ",e.jsx("code",{children:"for"})," мы сортируем первые два элемента, затем 3, 4 и, наконец, 5. Что ж, если все элементы расположены в обратном порядке, нам не только придётся пройти через весь массив — цикл ",e.jsx("code",{children:"for"}),", но также выполнить перестановку на каждом шаге, что в общей сложности будет равно ",e.jsx("i",{children:"n"}),". Следовательно, можно сделать вывод, что это ",e.jsx("i",{children:"n"}),e.jsx("sup",{children:"2"}),". Конечно, существует очень четкое математическое доказательство, но для целей данной статьи этого объяснения достаточно."]}),e.jsx("h2",{className:"font-bold my-2",children:"Итоги"}),e.jsxs("p",{className:"mb-2",children:["Сортировка вставками — отличный алгоритм, когда размер входных данных мал, но он терпит неудачу, когда ",e.jsx("i",{children:"n"})," очень велико из-за его сложности ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),e.jsx("sup",{children:"2"}),"). Тем не менее, полезно знать его плюсы и минусы."]})]})}const FC="/my-textbook/assets/graph-ueOA_ORz.png",PC="/my-textbook/assets/graph-represented-by-matrix-_bUq6ZGN.png",UC="/my-textbook/assets/graph-represented-by-adjacency-matrix-zecMsDEw.png",BC="/my-textbook/assets/graph-represented-by-adjacency-list-ZVo6TkBZ.png",HC=`const grid = [[0, 0, 0, 0],
              [1, 1, 0, 0],
              [0, 0, 0, 1],
              [0, 1, 0, 0]];`,GC=`const adjMatrix = [[0, 0, 0, 0],
                   [1, 1, 0, 0],
                   [0, 0, 0, 1],
                   [0, 1, 0, 0]];`,$C=`// ребро от v1 до v2 существует
adjMatrix[v1][v2] = 1;

// ребро от v2 до v1 существует
adjMatrix[v2][v1] = 1;

// рёбер от v1 до v2 не существует
adjMatrix[v1][v2] = 0;

// рёбер от v2 до v1 не существует
adjMatrix[v2][v1] = 0;`,zC=`class GraphNode {
  constructor(val) {
    this.val = val;
    this.neighbors = [];
  }
}`;function WC(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"На самом деле в ходе курса мы уже несколько раз встречались с графами. Граф — это структура данных, состоящая из узлов (которые мы видели в виде узлов дерева и узлов списка) и, возможно, указателей, соединяющих их вместе."}),e.jsx("p",{className:"mb-2",children:"Давайте сначала рассмотрим некоторую терминологию графов."}),e.jsx("h2",{className:"font-bold my-2",children:"Терминология графов"}),e.jsxs("p",{className:"mb-2",children:["В графах узлы называются ",e.jsx("strong",{children:"вершинами"}),", а указатели, соединяющие эти узлы, называются ",e.jsx("strong",{children:"рёбрами"}),". В графах нет ограничений относительно расположения узлов и того, как рёбра соединяют эти узлы вместе."]}),e.jsx("p",{className:"mb-2",children:"Также возможно, что узлы не соединены никакими рёбрами, и это все равно будет считаться графом — пустым графом (нуль-графом)."}),e.jsxs("p",{className:"mb-2",children:["Число рёбер ",e.jsx("code",{children:"E"}),", учитывая количество вершин ",e.jsx("code",{children:"V"}),", всегда будет меньше или равно"," ",e.jsxs("code",{children:["V",e.jsx("sup",{children:"2"})]}),"."," ",e.jsxs("code",{children:["E <= V",e.jsx("sup",{children:"2"})]}),". Это связано с тем, что каждый узел может указывать максимум на себя и на любой другой узел графа. Если у нас есть узлы ",e.jsx("code",{children:"A"}),", ",e.jsx("code",{children:"B"})," и"," ",e.jsx("code",{children:"C"}),", ",e.jsx("code",{children:"A"})," может указывать на себя, ",e.jsx("code",{children:"B"})," и"," ",e.jsx("code",{children:"C"}),". То же самое касается ",e.jsx("code",{children:"B"})," и ",e.jsx("code",{children:"C"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Если указатели, соединяющие рёбра, имеют направление, граф называется"," ",e.jsx("strong",{children:"ориентированным графом"}),". Если есть рёбра, но нет направления, такой граф называется ",e.jsx("strong",{children:"неориентированным графом"}),". Например, деревья и связные списки представляют собой ориентированные графы, поскольку у нас есть такие указатели, как ",e.jsx("code",{children:"prev"}),", ",e.jsx("code",{children:"next"})," и ",e.jsx("code",{children:"left"}),","," ",e.jsx("code",{children:"right"}),"."]}),e.jsx("img",{alt:"Граф",className:"mb-2",height:"320",src:FC,width:"240"}),e.jsx("h2",{className:"font-bold my-2",children:"Форматы графов"}),e.jsx("p",{className:"mb-2",children:"Граф можно представить по-разному. Это абстрактная концепция, которая конкретизируется с использованием различных структур данных. Чаще всего графы представляются с использованием следующего:"}),e.jsxs("ol",{className:"list-decimal list-inside",children:[e.jsx("li",{className:"mb-2",children:"Матрица"}),e.jsx("li",{className:"mb-2",children:"Матрица смежности"}),e.jsx("li",{className:"mb-2",children:"Список смежности"})]}),e.jsxs("ul",{children:[e.jsxs("li",{className:"mb-2",children:[e.jsx("strong",{children:"Матрица"}),e.jsxs("p",{className:"mb-2",children:["Матрица — это двумерный массив со строками и столбцами, и граф можно представить с помощью матрицы. В приведённом ниже коде каждый массив, разделённый запятыми, представляет каждую строку. Здесь у нас четыре строки и четыре столбца. Все индексы начинаются с ",e.jsx("code",{children:"0"}),", и идея состоит в том, что мы должны иметь возможность доступа к произвольной строке, столбцу или конкретному элементу по указанной строке или столбцу. Доступ ко второй строке можно легко выполнить с помощью ",e.jsx("code",{children:"grid[1]"}),", а доступ ко второму столбцу можно выполнить с помощью ",e.jsx("code",{children:"grid[0][1]"}),"."]}),e.jsx(k,{value:HC}),e.jsx("p",{className:"mb-2",children:"Как это можно использовать для представления графа? Как мы уже упоминали, графы абстрактны и могут быть определены разными способами. Допустим, все нули в нашей сетке являются вершинами. Чтобы пройти по графу, нам разрешено двигаться вверх, вниз, влево и вправо. Если мы хотим соединить нули вместе, используя наши рёбра, мы в конечном итоге получим кучу связанных нулей, которые являются связанными компонентами, обозначающими граф. Мы обсудим обход матрицы в следующей статье."}),e.jsx("img",{alt:"Граф представленный с помощью матрицы",className:"mb-2",height:"260",src:PC,width:"440"})]}),e.jsxs("li",{className:"mb-2",children:[e.jsx("strong",{children:"Матрица смежности"}),e.jsx("p",{className:"mb-2",children:"Это менее распространенный формат ввода. Здесь индекс массива представляет саму вершину. Давайте возьмем пример:"}),e.jsx(k,{value:GC}),e.jsxs("p",{className:"mb-2",children:["Поскольку индексы сами по себе представляют вершину, ",e.jsx("code",{children:"0"})," означает, что ребро не существует между заданными ",e.jsx("code",{children:"v1, v2"})," и ",e.jsx("code",{children:"1"})," ","означает обратное. ",e.jsx("code",{children:"adjMatrix[1][2] === 0"})," означает, что между вершинами ",e.jsx("code",{children:"1"})," и ",e.jsx("code",{children:"2"})," нет ребра. Кроме того,"," ",e.jsx("code",{children:"adjMatrix[2][1] === 0"})," означает, что между вершинами"," ",e.jsx("code",{children:"2"})," и ",e.jsx("code",{children:"1"})," нет ребра. Из этого можно сделать следующий вывод:"]}),e.jsx(k,{value:$C}),e.jsx("p",{className:"mb-2",children:"Чтобы представить приведённую выше матрицу смежности, мы можем взглянуть на следующее изображение."}),e.jsx("img",{alt:"Граф представленный с помощью матрицы смежности",className:"mb-2",height:"260",src:UC,width:"520"}),e.jsxs("p",{className:"mb-2",children:["Проблема в том, что это гигантский расход памяти. Поскольку это квадратная матрица, сложность по времени равна ",e.jsx("i",{children:"O"}),"(V",e.jsx("sup",{children:"2"}),"), где"," ",e.jsx("code",{children:"V"})," — количество вершин. Это имеет смысл, поскольку количество рёбер также равно количеству узлов."]})]}),e.jsxs("li",{className:"mb-2",children:[e.jsx("strong",{children:"Список смежности"}),e.jsxs("p",{className:"mb-2",children:["Обычно это наиболее распространенный способ представления графов. Это также двумерный массив. Удобство здесь в том, что мы можем объявить его, используя класс ",e.jsx("code",{children:"GraphNode"}),", и он содержит атрибут списка, называемый"," ",e.jsx("code",{children:"neighbors"}),", с помощью которого мы можем получить доступ ко всем соседям данной вершины."]}),e.jsx(k,{value:zC}),e.jsx("p",{className:"mb-2",children:"В конечном итоге это обеспечивает более эффективное использование памяти, поскольку нас интересуют только связанные узлы."}),e.jsx("img",{alt:"Граф представленный с помощью списка смежности",className:"mb-2",height:"180",src:BC,width:"280"})]})]}),e.jsx("p",{className:"mb-2",children:"В следующих нескольких статьях мы обсудим, как мы можем выполнять обход графа, используя все вышеупомянутые форматы, и какие проблемы мы можем решить с помощью графов."})]})}const VC="/my-textbook/assets/depth-first-search-iterative-inorder-a8j2g6FE.png",KC="/my-textbook/assets/depth-first-search-iterative-preorder-kNkXA60L.png",YC="/my-textbook/assets/depth-first-search-iterative-postorder-E_Py_fLV.png",qC=`function inorder(root) {
  const stack = [];
  let curr = root;

  while (curr || stack.length > 0) {
    if (curr) {
      stack.push(curr);
      curr = curr.left;
    } else {
      curr = stack.pop();
      console.log(curr.val);
      curr = curr.right;
    }
  }
}`,XC=`function preorder(root) {
  const stack = [];
  let curr = root;

  while (curr || stack.length > 0) {
    if (curr) {
      console.log(curr.val);

      if (curr.right) {
        stack.push(curr.right);
      }

      curr = curr.left;
    } else {
      curr = stack.pop();
    }
  }
}`,ZC=`function postorder(root) {
  const stack = [root];
  const visit = [false];

  while (stack.length > 0) {
    const curr = stack.pop();
    const visited = visit.pop();

    if (curr) {
      if (visited) {
        console.log(curr.val);
      } else {
        stack.push(curr);
        visit.push(true);
        stack.push(curr.right);
        visit.push(false);
        stack.push(curr.left);
        visit.push(false);
      }
    }
  }
}`;function QC(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Рекурсивный подход к выполнению поиска в глубину тривиален. Иногда вас могут попросить написать итеративное решение, что может быть намного сложнее. Поэтому его полезно знать в таких ситуациях."}),e.jsx("p",{className:"mb-2",children:"Рекурсия использует стек под капотом. В итеративной версии мы объявим собственный стек для выполнения тех же операций."}),e.jsx("h2",{className:"font-bold my-2",children:"Реализация"}),e.jsx("p",{className:"mb-2",children:"Если мы объявим наши собственные стеки, мы можем осмысленно добавлять в стек наши узлы, принимая во внимание порядок, в котором нам нужно выводить в консоль / извлекать их. Напомним, что существуют три способа обхода дерева."}),e.jsxs("ul",{children:[e.jsxs("li",{className:"mb-2",children:[e.jsx("strong",{children:"Inorder (центрированный)"}),e.jsxs("p",{className:"mb-2",children:["Напомним, что inorder обход предполагает сначала посещение левого дочернего узла (включая всё его поддерево), затем посещение узла и, наконец, посещение правого дочернего узла (включая всё его поддерево). Мы объявим указатель"," ",e.jsx("code",{children:"curr"}),", который будет указывать на текущий узел, который мы обрабатываем. Как только наш указатель ",e.jsx("code",{children:"curr"})," укажет на узел, мы добавим его в стек. После этого мы обновим указатель ",e.jsx("code",{children:"curr"})," на"," ",e.jsx("code",{children:"curr.left"}),". Если наш ",e.jsx("code",{children:"curr"})," указывает на"," ",e.jsx("code",{children:"null"}),", мы можем извлечь последний узел из стека, вывести в консоль его значение и перейти к правому поддереву."]}),e.jsx(k,{value:qC}),e.jsx("figure",{className:"bg-white",children:e.jsx("img",{alt:"Центрированный обход в глубину",className:"mx-auto",height:"800",src:VC,width:"1240"})})]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Preorder (прямой)"}),e.jsx("p",{className:"mb-2",children:"Preorder обход немного сложнее, чем inorder обход. Напомним, что при preorder обходе мы переходим от корня к левому поддереву, а затем к правому поддереву."}),e.jsxs("p",{className:"mb-2",children:["В приведённом ниже коде цикл ",e.jsx("code",{children:"while"})," проверяет, что"," ",e.jsx("code",{children:"curr"})," ещё указывает на узел или в нашем стеке всё ещё есть элементы. Когда наш ",e.jsx("code",{children:"curr"})," достигает ",e.jsx("code",{children:"null"}),", это означает, что узла не существует. Однако внутри нашего стека всё ещё могут быть элементы, а это значит, что мы их извлекаем и выводим в консоль."]}),e.jsx(k,{value:XC}),e.jsx("figure",{className:"bg-white",children:e.jsx("img",{alt:"Прямой обход в глубину",className:"mx-auto",height:"580",src:KC,width:"1240"})})]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Postorder (обратный)"}),e.jsx("p",{className:"mb-2",children:"Postorder обход предполагает обход левого дочернего элемента, правого дочернего элемента и затем корня. Этот вариант сложнее двух предыдущих."}),e.jsxs("p",{className:"mb-2",children:["Мы будем использовать два стека. В этом случае у нас будет стек"," ",e.jsx("code",{children:"visit"})," и ещё один стек ",e.jsx("code",{children:"stack"}),". Стек ",e.jsx("code",{children:"visit"})," ","всегда будет того же размера, что и стек ",e.jsx("code",{children:"stack"}),". Сначала мы поместим наш корневой узел на вершину ",e.jsx("code",{children:"stack"}),". Затем мы отметим этот узел в ",e.jsx("code",{children:"visit"})," как ",e.jsx("code",{children:"false"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Затем мы можем запустить цикл ",e.jsx("code",{children:"while"}),", который будет выполняться,"," ",e.jsxs("strong",{children:["пока ",e.jsx("code",{children:"stack"})," не пуст"]})," ","(поскольку наши ",e.jsx("code",{children:"visit"})," и ",e.jsx("code",{children:"stack"})," имеют одинаковый размер). Используя это, мы извлечём ",e.jsx("code",{children:"curr"})," и ",e.jsx("code",{children:"visited"}),". Если наш ",e.jsx("code",{children:"curr"})," не равен ",e.jsx("code",{children:"null"}),", мы проверяем, посетили ли мы этот узел ранее."]}),e.jsx(k,{value:ZC}),e.jsx("img",{alt:"Обратный обход в глубину",className:"mx-auto",height:"800",src:YC,width:"1560"})]})]}),e.jsx("h2",{className:"font-bold my-2",children:"Сложность по времени"}),e.jsxs("p",{className:"mb-2",children:["Если ",e.jsx("i",{children:"n"})," — количество узлов, и мы выполняем ",e.jsx("i",{children:"O"}),"(1) работу с каждым узлом, то сложность по времени равна ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),"). Также можно сказать, что сложность составляет ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"h"}),"), где ",e.jsx("i",{children:"h"})," — высота дерева. Сложность по памяти равна ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),"), где в худшем случае в стеке находятся все узлы."]})]})}const JC="/my-textbook/assets/kadanes-algorithm-E-zv_uqf.png",eO="/my-textbook/assets/sliding-window-rs8yuivv.png",tO=`function bruteForce(nums) {
  let maxSum = nums[0];

  for (let l = 0; l < nums.length; l++) { 
    let curSum = 0;

    for (let r = l; r < nums.length; r++) {
      curSum += nums[r];
      maxSum = Math.max(maxSum, curSum);
    }
  }

  return maxSum;
}`,nO=`function kadanes(nums) {
  let maxSum = nums[0];
  let curSum = 0;

  for (const n of nums) {
    curSum = Math.max(curSum, 0);
    curSum += n;
    maxSum = Math.max(maxSum, curSum);
  }

  return maxSum;
}`,rO=`function slidingWindow(nums) {
  let maxSum = nums[0];
  let curSum = 0;
  let maxL = 0;
  let maxR = 0;
  let L = 0;

  for (let R = 0; R < nums.length; R++) {
    if (curSum < 0) {
      curSum = 0;
      L = R;
    }

    curSum += nums[R];

    if (curSum > maxSum) {
      maxSum = curSum;
      maxL = L; 
      maxR = R;     
    }    
  }

  return [maxL, maxR];
}`;function sO(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Алгоритм Кэдейна — это жадный алгоритм/алгоритм динамического программирования, который можно использовать для решения задач с массивами, чтобы снизить сложность по времени до ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),"). Он используется для вычисления подмассива максимальной суммы, заканчивающегося в определённой позиции."]}),e.jsx("h2",{className:"font-bold my-2",children:"Мотивация"}),e.jsx("p",{className:"mb-2",children:"Предположим, нам задан следующий вопрос:"}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Найдите непустой подмассив с наибольшей суммой."})}),e.jsx("p",{className:"mb-2",children:"Этот вопрос просит нас найти группу смежных значений в массиве, которые дают наибольшую сумму. Затем нас просят вернуть эту сумму."}),e.jsxs("p",{className:"mb-2",children:["Если мы на секунду забудем об алгоритме Кэдейна, то решением методом грубой силы будет пройти через каждый подмассив и вычислить сумму, отслеживая при этом максимальную сумму. Это сработает, но предстоит много повторяющейся работы. На каждой итерации нашего внешнего цикла ",e.jsx("code",{children:"for"})," наш внутренний цикл выполняет линейную работу. Это приводит к сложности ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),e.jsx("sup",{children:"2"}),")."]}),e.jsx(k,{value:tO}),e.jsx("p",{className:"mb-2",children:"Мы можем сделать лучше."}),e.jsx("p",{className:"mb-2",children:"Алгоритм Кэдейна сообщает нам, что существует способ вычислить наибольшую сумму, совершив всего один проход по массиву, сводя сложность к линейному времени. Давайте посмотрим, как это можно сделать."}),e.jsxs("p",{className:"mb-2",children:["Поскольку мы ищем наибольшую сумму, рекомендуется избегать отрицательных чисел, поскольку мы знаем, что это противоречит тому, о чём спрашивает вопрос. Отрицательные числа только уменьшат нашу сумму. Алгоритм Кэдейна выполняет один цикл ",e.jsx("code",{children:"for"})," по массиву и в начале каждой итерации, если текущая сумма отрицательна, он сбрасывает текущую сумму до нуля. Таким образом, мы обеспечиваем один проход и решаем задачу за линейное время. Вот как это будет выглядеть в коде и визуализировано. Помните, что ключевым моментом здесь является то, что если мы встречаем подмассив с отрицательной суммой, мы отбрасываем его, и продолжаем рассматривать подмассив до тех пор, пока он имеет положительную сумму."]}),e.jsx("img",{alt:"Алгоритм Кэдейна",className:"mb-2",height:"440",src:JC,width:"1720"}),e.jsx(k,{value:nO}),e.jsx("h2",{className:"font-bold my-2",children:"Скользящее окно"}),e.jsx("p",{className:"mb-2",children:"Иногда проблема может потребовать вернуть фактический подмассив, содержащий наибольшую сумму, а не только саму сумму. В предыдущей реализации у нас не обязательно было два явных указателя, которые отслеживали бы подмассив, но мы действительно можем сделать это, отслеживая «окно». Окно в этом случае обозначает непрерывный подмассив, который не нарушает наше ограничение на то, чтобы сумма оставалась положительной."}),e.jsxs("p",{className:"mb-2",children:["Для этого у нас может быть левый указатель ",e.jsx("code",{children:"L = 0"})," и правый указатель"," ",e.jsx("code",{children:"R"}),". Мы будем добавлять элементы справа и удалять слева. Поскольку нам нужен подмассив с максимальной суммой, мы также можем иметь два других указателя,"," ",e.jsx("code",{children:"maxL"})," и ",e.jsx("code",{children:"maxR"}),", которые отслеживают подмассив, содержащий максимальную сумму на данный момент. Таким образом, мы не теряем их при перемещении ",e.jsx("code",{children:"L"})," и ",e.jsx("code",{children:"R"}),". Как и раньше, если наша текущая сумма становится отрицательной, мы можем переместить левый указатель до правого указателя. Это означает, что наше ограничение нарушено, и мы удаляем все элементы слева и запускаем новое окно."]}),e.jsx(k,{value:rO}),e.jsx("img",{alt:"Скользящее окно",className:"mb-2",height:"680",src:eO,width:"1720"}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Подмассивом является часть массива, которая является смежной."})}),e.jsx("h2",{className:"font-bold my-2",children:"Сложность по времени"}),e.jsxs("p",{className:"mb-2",children:["Поскольку мы делаем только один проход, наша сложность по времени сводится к"," ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),")."]})]})}const iO="/my-textbook/assets/0-1-knapsack-idea-9EkhACMI.png",aO="/my-textbook/assets/0-1-knapsack-dp-4qqxMkm3.png",oO=`function dfs(profit, weight, capacity) {
  return dfsHelper(0, profit, weight, capacity);
}

function dfsHelper(i, profit, weight, capacity) {
  if (i === profit.length) {
    return 0;
  }

  // Пропускает предмет i
  let maxProfit = dfsHelper(i + 1, profit, weight, capacity);

  // Включает предмет i
  const newCapacity = capacity - weight[i];

  if (newCapacity >= 0) {
    const p = profit[i] + dfsHelper(i + 1, profit, weight, newCapacity);
    // Вычисляет максимум
    maxProfit = Math.max(maxProfit, p);
  }

  return maxProfit;
}`,lO=`function memoization(profit, weight, capacity) {
  // Двумерный массив с N строк и M + 1 столбцов, инициализированный с -1
  const N = profit.length;
  const M = capacity;
  const cache = new Array();

  for (let row = 0; row < N; row++) {
    cache.push(new Array(M + 1).fill(-1));
  }

  return memoHelper(0, profit, weight, capacity, cache);
}

function memoHelper(i, profit, weight, capacity, cache) {
  if (i === profit.length) {
    return 0;
  }

  if (cache[i][capacity] !== -1) {
    return cache[i][capacity];
  }
  
  // Пропускает предмет i
  cache[i][capacity] = memoHelper(i + 1, profit, weight, capacity, cache);

  // Включает предмет i
  const newCapacity = capacity - weight[i];

  if (newCapacity >= 0) {
    const p = profit[i] + memoHelper(i + 1, profit, weight, newCapacity, cache);
    // Вычисляет максимум
    cache[i][capacity] = Math.max(cache[i][capacity], p);  
  }
  
  return cache[i][capacity];
}`,cO=`function dp(profit, weight, capacity) {
  const N = profit.length;
  const M = capacity;
  const dp = new Array();

  for (let row = 0; row < N; row++) {
    dp.push(new Array(M + 1).fill(0));
  }

  // Заполняет первый столбец и строку, чтобы сократить количество условий
  for (let i = 0; i < N; i++) {
    dp[i][0] = 0;
  }

  for (let c = 0; c <= M; c++) {
    if (weight[0] <= c) {
      dp[0][c] = profit[0];
    } 
  }

  for (let i = 1; i < N; i++) {
    for (let c = 1; c <= M; c++) {
      const skip = dp[i - 1][c];
      let include = 0;

      if (c - weight[i] >= 0) {
        include = profit[i] + dp[i - 1][c - weight[i]];
      }

      dp[i][c] = Math.max(include, skip);
    }
  }

  return dp[N - 1][M];
}`,dO=`function optimizedDp(profit, weight, capacity) {
  const N = profit.length;
  const M = capacity;
  let dp = new Array(M + 1).fill(0);

  // Заполняет первую строку, чтобы сократить количество условий
  for (let c = 0; c <= M; c++) {
    if (weight[0] <= c) {
      dp[c] = profit[0];
    } 
  }

  for (let i = 1; i < N; i++) {
    const curRow = new Array(M + 1).fill(0);

    for (let c = 1; c <= M; c++) {
      const skip = dp[c];
      let include = 0;

      if (c - weight[i] >= 0) {
        include = profit[i] + dp[c - weight[i]];
      }

      curRow[c] = Math.max(include, skip);
    }

    dp = curRow;
  }

  return dp[M];
}`;function uO(){return e.jsxs(e.Fragment,{children:[e.jsx("h2",{className:"font-bold my-2",children:"Идея"}),e.jsx("p",{className:"mb-2",children:"Предположим, нам дана сумка/рюкзак фиксированной вместимости, а также вес некоторых предметов и ценность, которую мы получаем, решив положить этот предмет в сумку. Мы хотим максимизировать ценность, а также гарантировать, что вес всех предметов в нашем рюкзаке не превысит его вместимость. Причина, по которой этот алгоритм называется 0-1, заключается в том, что в каждой точке мы можем либо включить предмет, либо не включать его — бинарное решение."}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Учитывая список из N предметов и рюкзак ограниченной вместимости, верните максимальную общую ценность, которая может содержаться в рюкзаке. Ценность i-го предмета равна profit[i], а его вес равен weight[i]. Предположим, вы можете добавить каждый предмет в сумку не более одного раза."})}),e.jsxs("p",{className:"mb-2",children:["Вашим первым инстинктом может быть просто жадность и выбор предметов, имеющих наибольшую ценность. Однако таким образом мы не можем получить максимальную ценность, потому что вместимость может стать проблемой, так как предметы, имеющие самую высокую ценность, могут быть самыми тяжелыми. Итак, учитывая"," ",e.jsx("code",{children:"profit = [4, 4, 7, 1]"})," и ",e.jsx("code",{children:"weight = [5, 2, 3, 1]"}),", мы можем включить или исключить каждый предмет. Мы можем построить дерево решений, как показано ниже. ",e.jsx("i",{children:"Вм"})," представляет вместимость нашей сумки в любой момент, цифры красного цвета представляют вес, а цифры синего цвета представляют общую ценность."]}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Дерево решений задачи о рюкзаке 0-1",className:"mx-auto",height:"400",src:iO,width:"780"})}),e.jsx("p",{className:"mb-2",children:"Глядя на изображение выше, вы можете заметить, что мы получаем наибольшую ценность, когда пропускаем первый предмет, но включаем все остальные предметы, что даёт общую ценность 12."}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"В следующей статье мы более подробно остановимся на том, как работает дерево решений, но пока этого достаточно."})}),e.jsx("h2",{className:"font-bold my-2",children:"Реализация"}),e.jsxs("p",{className:"mb-2",children:["Когда мы начнём думать о реализации кода, нашим базовым случаем будет"," ",e.jsx("code",{children:"i === profit.length"}),". Это имеет смысл, потому что, если мы исчерпаем все предметы, возвращать будет нечего. Затем, как упоминалось ранее, мы можем либо пропустить предмет, либо включить его. Если мы пропустим предмет, нам не придётся беспокоиться о переполнении вместимости или о ценности."]}),e.jsxs("p",{className:"mb-2",children:["В случае, если мы решили включить предмет, мы должны рассчитать новую вместимость"," ",e.jsx("strong",{children:"и"})," включить этот предмет ",e.jsx("i",{children:"только"})," в том случае, если включение этого предмета не приведёт к переполнению вместимости. Затем мы можем рассчитать ценность, пройдя вниз по этой ветви дерева решений, рекурсивный вызов которой будет каждый раз вызываться с новой, обновлённой вместимостью. Поскольку мы хотим максимизировать нашу ценность, мы можем взять максимум из двух рассчитанных ценностей, т. е. если наша ",e.jsx("code",{children:"maxProfit"})," была получена путём пропуска ",e.jsx("code",{children:"i"})," или включения ",e.jsx("code",{children:"i"}),"."]}),e.jsx(k,{value:oO}),e.jsxs("p",{className:"mb-2",children:["Сложность по времени приведённого выше кода составляет 2",e.jsx("sup",{children:e.jsx("i",{children:"n"})})," ",". Мы знаем, что 2",e.jsx("sup",{children:e.jsx("i",{children:"n"})})," ","потенциально может быть очень большим, мы можем избежать дублирующейся работы. Напомним, для Фибоначчи мы вычисляли ",e.jsx("code",{children:"F(2)"})," несколько раз. Возможно, вы уже догадались, что для оптимизации этого процесса можно использовать мемоизацию! На самом деле мы можем взять этот код и оптимизировать его так, чтобы довести его до сложности ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"})," ∗ ",e.jsx("i",{children:"m"}),"), где ",e.jsx("i",{children:"m"})," — заданная нам вместимость."]}),e.jsxs("p",{className:"mb-2",children:["Мы можем использовать кэш, чтобы не пересчитывать значения. В функции"," ",e.jsx("code",{children:"memoization"})," кэш представляет собой нашу двумерную сетку, в которой мы инициализируем все значения равными ",e.jsx("code",{children:"-1"}),". Мы воспользуемся этим позже, чтобы помочь с нашим базовым случаем."]}),e.jsx(k,{value:lO}),e.jsxs("p",{className:"mb-2",children:["В нашей функции ",e.jsx("code",{children:"memoHelper"})," у нас есть два базовых случая. Во-первых, если мы выйдем за пределы предметов, мы сможем вернуть ",e.jsx("code",{children:"0"}),". Во-вторых, если наш кэш уже содержит значение в ",e.jsx("code",{children:"cache[i][capacity]"}),", и это значение не ",e.jsx("code",{children:"-1"}),", мы можем вернуть значение, хранящееся в кэше — ценность по этой позиции уже рассчитана."]}),e.jsx("h2",{className:"font-bold my-2",children:"Метод динамического программирования снизу"}),e.jsxs("p",{className:"mb-2",children:["В этом случае у нас будет 9 столбцов и 4 строки, представляющие наше пространство решений. Каждая строка представляет каждый предмет, а каждый столбец представляет доступную вместимость. Теперь, предполагая, что все предметы имеют положительный вес, мы не можем включить какие-либо предметы в ",e.jsx("code",{children:"0"}),"-й столбец просто потому, что вес каждого предмета превышает вместимость ",e.jsx("code",{children:"0"})," — нам просто не хватает места. Опять же, как и в случае с решением с мемоизацией, мы можем включить или пропустить этот предмет. Если мы решим пропустить этот предмет, его значение будет таким же, как ",e.jsx("code",{children:"i-1"}),"-я строка. Другими словами, значение слева."]}),e.jsxs("ul",{className:"list-disc list-inside",children:[e.jsxs("li",{className:"ml-6 mb-2",children:["Если мы находимся в строке и столбце, где вес предмета (изображенного строкой) превышает вместимость (изображенную столбцом), мы получаем его значение по"," ",e.jsx("code",{children:"dp[i - 1][c]"}),", что означает подъём на одну строку вверх."]}),e.jsxs("li",{className:"ml-6 mb-2",children:["Если мы находимся в строке и столбце, вместимости которых достаточно для размещения предмета, мы получаем значение этой ячейки, беря ценность, связанную с этим предметом, и добавляя ее к ",e.jsx("code",{children:"dp[i - 1][c - weight[i]]"}),", что означает переход на одну строку вверх, а ",e.jsx("code",{children:"c - weight[i]"})," — влево, где"," ",e.jsx("code",{children:"c"})," — текущая вместимость, а ",e.jsx("code",{children:"weight[i]"})," — вес текущего предмета. Это означает движение вверх по диагонали."]})]}),e.jsx("p",{className:"mb-2",children:"В конце концов мы можем вернуть значение в правой нижней ячейке. Вот как это будет выглядеть визуализировано."}),e.jsx("img",{alt:"Сетка",className:"mb-2",height:"300",src:aO,width:"640"}),e.jsx(k,{value:cO}),e.jsx("h2",{className:"font-bold my-2",children:"(небольшая) оптимизация памяти"}),e.jsx("p",{className:"mb-2",children:"Обратите внимание, что в предыдущем решении мы постоянно храним в памяти всю сетку. Однако реальность такова, что нам нужно только две строки в памяти одновременно."}),e.jsx(k,{value:dO}),e.jsx("h2",{className:"font-bold my-2",children:"Сложность по времени и памяти"}),e.jsxs("p",{className:"mb-2",children:["Как упоминалось ранее, метод динамического программирования снизу снижает сложность по времени до ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"})," ∗ ",e.jsx("i",{children:"m"}),"), где ",e.jsx("i",{children:"n"})," — количество предметов, а ",e.jsx("i",{children:"m"})," — вместимость нашего рюкзака. Это большое улучшение по сравнению с 2",e.jsx("sup",{children:e.jsx("i",{children:"n"})}),"."]}),e.jsx("h2",{className:"font-bold my-2",children:"Итоги"}),e.jsx("p",{className:"mb-2",children:"Вопросы по динамическому программированию поначалу могут быть чрезвычайно трудными и требуют много практики. Недостаточно смотреть на код, главное — решать проблемы самостоятельно."})]})}const hO="/my-textbook/assets/lcs-decision-tree-oPbJ96UI.png",pO="/my-textbook/assets/lcs-dp-GUmvpoIe.png",mO=`function dfs(s1, s2) {
  return dfsHelper(s1, s2, 0, 0);
}

function dfsHelper(s1, s2, i1, i2) {
  if (i1 === s1.length || i2 === s2.length) {
    return 0;
  }

  if (s1[i1] === s2[i2]) {
    return 1 + dfsHelper(s1, s2, i1 + 1, i2 + 1);
  }
  
  return Math.max(dfsHelper(s1, s2, i1 + 1, i2), dfsHelper(s1, s2, i1, i2 + 1));
}`,fO=`function memoization(s1, s2) {
  const N = s1.length;
  const M = s2.length;
  const cache = new Array(); 
  
  for (let row = 0; row < N; row++) {
    cache.push(new Array(M).fill(-1));
  }

  return memoHelper(s1, s2, 0, 0, cache);
}

function memoHelper(s1, s2, i1, i2, cache) {
  if (i1 === s1.length || i2 === s2.length) {
    return 0;
  }

  if (cache[i1][i2] !== -1) {
    return cache[i1][i2];
  }

  if (s1[i1] === s2[i2]) {
    cache[i1][i2] = 1 + memoHelper(s1, s2, i1 + 1, i2 + 1, cache);
  } else {
    cache[i1][i2] = Math.max(memoHelper(s1, s2, i1 + 1, i2, cache), memoHelper(s1, s2, i1, i2 + 1, cache));
  }

  return cache[i1][i2];
}`,gO=`function dp(s1, s2) {
  const N = s1.length;
  const M = s2.length;
  const dp = new Array();

  for (let row = 0; row <= N; row++) {
    dp.push(new Array(M + 1).fill(0));
  }

  for (let i = 0; i < N; i++) {
    for (let j = 0; j < M; j++) {
      if (s1[i] === s2[j]) {
        dp[i + 1][j + 1] = 1 + dp[i][j];
      } else {
        dp[i + 1][j + 1] = Math.max(dp[i][j + 1], dp[i + 1][j]);
      }
    }
  }

  return dp[N][M];
}`,bO=`function optimizedDp(s1, s2) {
  const N = s1.length;
  const M = s2.length;
  let dp = new Array(M + 1).fill(0);

  for (let i = 0; i < N; i++) {
    let curRow = new Array(M + 1).fill(0);

    for (let j = 0; j < M; j++) {
      if (s1[i] === s2[j]) {
        curRow[j + 1] = 1 + dp[j];
      } else {
        curRow[j + 1] = Math.max(dp[j + 1], curRow[j]);
      }
    }

    dp = curRow;
  }

  return dp[M];
}`;function xO(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Наибольшая общая подпоследовательность (Longest Common Subsequence — LCS) — один из самых известных алгоритмов динамического программирования, имеющий множество различных вариаций. Вопрос здесь довольно простой:"}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Даны две строки s1 и s2. Найдите длину самой длинной общей подпоследовательности между двумя строками."})}),e.jsx("p",{className:"mb-2",children:"Прежде чем перейти к решению этого вопроса, давайте в первую очередь разберёмся, что такое подпоследовательность."}),e.jsx("h2",{className:"font-bold my-2",children:"Что такое подпоследовательность?"}),e.jsxs("p",{className:"mb-2",children:["Подпоследовательность — это подмножество данного множества, в котором сохраняется относительный порядок символов/элементов. Если ",e.jsx("code",{children:"s1 = ADCB"})," и"," ",e.jsx("code",{children:"s2 = ABC"}),", ",e.jsx("code",{children:"AC"})," является подпоследовательностью, а"," ",e.jsx("code",{children:"CA"})," — нет. Подпоследовательность не обязательно должна быть непрерывной — при условии, что сохраняется относительный порядок элементов."]}),e.jsx("p",{className:"mb-2",children:e.jsxs("strong",{children:["Подпоследовательность отличается от подмассива или подстроки, которые должны быть непрерывными. Например, ",e.jsx("code",{children:"ADC"})," будет считаться подмассивом/подстрокой ",e.jsx("code",{children:"s1"}),", поскольку элементы «касаются» друг друга."]})}),e.jsx("h2",{className:"font-bold my-2",children:"Решение методом грубой силы"}),e.jsxs("p",{className:"mb-2",children:["Если ",e.jsx("code",{children:"s1 = ADCB"})," и ",e.jsx("code",{children:"s2 = ABC"}),", нетрудно догадаться, что самая длинная общая подпоследовательность между ",e.jsx("code",{children:"s1"})," и ",e.jsx("code",{children:"s2"})," ","— это ",e.jsx("code",{children:"AB"}),". Однако алгоритмически определить это является непростой задачей."]}),e.jsxs("p",{className:"mb-2",children:["Используя метод грубой силы, мы можем инициализировать два указателя,"," ",e.jsx("code",{children:"i1"})," и ",e.jsx("code",{children:"i2"}),", начинающихся с индекса ",e.jsx("code",{children:"0"}),", и сравнить каждый символ в ",e.jsx("code",{children:"s1"})," и ",e.jsx("code",{children:"s2"}),". Если символы в"," ",e.jsx("code",{children:"0"}),"-м индексе равны, мы можем разбить нашу проблему на подзадачу и перейти к ",e.jsx("code",{children:"1"}),"-му индексу. На ",e.jsx("code",{children:"1"}),"-м индексе, где"," ",e.jsx("code",{children:"s1[1] = D"})," и ",e.jsx("code",{children:"s2[1] = B"}),", имеем несовпадение символов. Мы не можем включить оба символа: если мы увеличим ",e.jsx("code",{children:"i2"}),", мы будем искать"," ",e.jsx("code",{children:"D"})," в ",e.jsx("code",{children:"s2"}),", а если мы увеличим ",e.jsx("code",{children:"i1"}),", мы будем искать ",e.jsx("code",{children:"B"})," в ",e.jsx("code",{children:"s1"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Однако мы не знаем, какой из них приведёт к LCS, поэтому мы можем исследовать оба маршрута в нашем дереве рекурсии. На данный момент нам нужно принять два решения. Когда мы увеличиваем только ",e.jsx("code",{children:"i1"}),", мы будем сравнивать ",e.jsx("code",{children:"CB"})," и"," ",e.jsx("code",{children:"BC"})," из ",e.jsx("code",{children:"s1"})," и ",e.jsx("code",{children:"s2"})," соответственно. И наоборот, если мы увеличим только ",e.jsx("code",{children:"i2"}),", мы будем сравнивать ",e.jsx("code",{children:"DCB"})," с"," ",e.jsx("code",{children:"C"})," в ",e.jsx("code",{children:"s1"})," и ",e.jsx("code",{children:"s2"})," соответственно. Однако в обоих случаях LCS будет одинаковой, то есть ",e.jsx("code",{children:"AC"}),". Мы продолжаем повторять это, пока не достигнем базового случая, когда ",e.jsx("code",{children:"i1 === s1.length"})," или"," ",e.jsx("code",{children:"i2 === s2.length"}),". Это означает, что мы исчерпали один или оба указателя и можем вернуть ",e.jsx("code",{children:"0"}),"."]}),e.jsxs("p",{className:"mb-2",children:["В конечном счёте, когда мы находим совпадение, мы можем увеличить длину нашей подпоследовательности и увеличить указатели ",e.jsx("code",{children:"i1"})," и ",e.jsx("code",{children:"i2"}),". Если мы не находим совпадение, у нас есть возможность увеличить любой из указателей, но мы пробуем оба. Мы можем визуализировать это в виде дерева решений ниже:"]}),e.jsx("img",{alt:"Дерево решений задачи о наибольшей общей подпоследовательности",className:"mb-2",height:"360",src:hO,width:"580"}),e.jsxs("p",{className:"mb-2",children:["В коде у нас может быть функция ",e.jsx("code",{children:"dfs"}),", которой мы передаём"," ",e.jsx("code",{children:"s1"})," и ",e.jsx("code",{children:"s2"}),". Однако, поскольку мы используем указатели"," ",e.jsx("code",{children:"i1"})," и ",e.jsx("code",{children:"i2"}),", мы можем использовать ",e.jsx("code",{children:"dfsHelper"})," в качестве вспомогательного метода. Когда мы вызываем ",e.jsx("code",{children:"dfsHelper"}),", наши"," ",e.jsx("code",{children:"i1"})," и ",e.jsx("code",{children:"i2"})," будут переданы как ",e.jsx("code",{children:"0"}),". Конечно, они будут увеличиваться при наших рекурсивных вызовах. Мы определяем наш базовый случай и переходим к двум решениям, которые мы можем принять. Если"," ",e.jsx("code",{children:"s1[i1] === s2[i2]"}),", мы идём по пути, где увеличиваем ",e.jsx("code",{children:"i1"})," и"," ",e.jsx("code",{children:"i2"})," и добавляем ",e.jsx("code",{children:"1"})," к любому ответу, который мы получим."]}),e.jsxs("p",{className:"mb-2",children:["Если мы не находим совпадение, мы исследуем оба пути, увеличивая ",e.jsx("code",{children:"i1"})," и"," ",e.jsx("code",{children:"i2"})," и беря максимальную длину."]}),e.jsx(k,{value:mO}),e.jsxs("p",{className:"mb-2",children:["Как нам перейти от этого решения методом грубой силы к решению динамического программирования? Возможно, что ещё более важно, откуда мы вообще знаем, что можем применить мемоизацию к этой проблеме? Мы видим, что меняются две переменные:"," ",e.jsx("code",{children:"i1"})," и ",e.jsx("code",{children:"i2"}),". В нашем дереве решений мы также заметили, что бывают случаи, когда мы пересчитываем значения, которые можно сохранить и извлечь из кэша. Поскольку меняются два значения, это сигнал к использованию мемоизации, а затем, в конечном итоге, к двумерному динамическому программированию."]}),e.jsx("h2",{className:"font-bold my-2",children:"Решение с мемоизацией"}),e.jsxs("p",{className:"mb-2",children:["Мы знаем, что для решения с мемоизацией нам нужен кэш для хранения уже вычисленных значений. Напомним, что мемоизация — это всего лишь оптимизированная рекурсия, поэтому самая большая разница между этим кодом и решением с рекурсией — это кэширование. У нас есть две функции: ",e.jsx("code",{children:"memoization"})," и"," ",e.jsx("code",{children:"memoHelper"}),". В нашей функции ",e.jsx("code",{children:"memoization"})," мы инициализируем сетку ",e.jsx("i",{children:"N"})," ∗ ",e.jsx("i",{children:"M"}),", которую заполняем значениями"," ",e.jsx("code",{children:"-1"}),", что указывает на то, что мы ещё не рассчитали для них значение."]}),e.jsxs("p",{className:"mb-2",children:["В наш ",e.jsx("code",{children:"memoHelper"})," мы передаём дополнительный параметр"," ",e.jsx("code",{children:"cache"}),". У нас есть два базовых случая: если мы исчерпаем один из наших указателей, длина будет равна ",e.jsx("code",{children:"0"}),", и если наш кэш содержит значение в указателях, в которых мы находимся, мы можем просто вернуть это значение, поскольку нам не нужно его пересчитывать."]}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Следует отметить, что порядок проверки этих базовых случаев имеет значение. Прежде чем проверять кэш, мы должны проверить, вышли ли мы за пределы сетки или нет. Это не позволит нам проверить несуществующее место в кэше."})}),e.jsxs("p",{className:"mb-2",children:["Затем у нас есть два варианта: либо наши символы совпадают, либо нет. Если наши символы совпадают, мы сохраним их в нашем кэше. Мы не возвращаем"," ",e.jsx("code",{children:"cache[i1][i2]"})," сразу, потому что хотим сохранить значения в нашем кэше. Если у нас есть несоответствие, мы найдём максимум из двух рекурсивных вызовов, где мы увеличим как ",e.jsx("code",{children:"i1"}),", так и ",e.jsx("code",{children:"i2"}),". В конце мы можем вернуть ",e.jsx("code",{children:"cache[i1][i2]"}),". Это будет нижнее правое значение, то есть LCS."]}),e.jsx("p",{className:"mb-2",children:e.jsxs("strong",{children:["Мы возвращаем ",e.jsx("code",{children:"cache[i1][i2]"}),", потому что ",e.jsx("code",{children:"i1"})," и"," ",e.jsx("code",{children:"i2"})," будут исчерпаны, когда мы доберёмся до оператора"," ",e.jsx("code",{children:"return"}),"."]})}),e.jsx(k,{value:fO}),e.jsx("img",{alt:"Сетка",className:"mb-2",height:"340",src:pO,width:"340"}),e.jsx("h2",{className:"font-bold my-2",children:"Метод динамического программирования снизу"}),e.jsx("p",{className:"mb-2",children:"Напомним, что в решениях с методом динамического программирования снизу мы разумно используем уже вычисленные значения в нашей сетке для расчёта новых значений. Это кажется простым, но это непросто. Это связано с тем, что есть крайние случаи, которые нам нужно обработать, и если их не обработать, они могут легко привести к ошибкам."}),e.jsxs("p",{className:"mb-2",children:["Во-первых, нам нужно будет инициализировать нашу сетку размером"," ",e.jsx("code",{children:"N+1 * M+1"}),". Нам нужен этот дополнительный столбец, потому что, когда мы хотим получить доступ к элементу по диагонали вверх, мы выйдем за пределы, когда находимся в первой строке. Затем мы пройдёмся по сетке, и если мы найдём совпадение, мы получим доступ к значению, которое существует на одну строку вверх и на один столбец влево, т. е. ",e.jsx("code",{children:"dp[i][j]"}),". Если наши символы не совпадают, мы возьмём максимум из значения слева и значения выше."]}),e.jsx(k,{value:gO}),e.jsx("h2",{className:"font-bold my-2",children:"Оптимизированный метод динамического программирования снизу"}),e.jsxs("p",{className:"mb-2",children:["Оптимизация предыдущего решения заключалась бы в одновременном хранении в памяти только двух строк. В конце концов, нам нужен доступ только к текущей строке и строке выше. Итак, у нас есть две строки: ",e.jsx("code",{children:"dp"})," и ",e.jsx("code",{children:"curRow"}),". Таким образом, мы сохраняем в памяти только две строки. ",e.jsx("code",{children:"dp"})," обозначает нашу предыдущую строку, а ",e.jsx("code",{children:"curRow"})," представляет нашу текущую строку. На каждой итерации, когда мы заканчиваем вычисление значения ",e.jsx("code",{children:"curRow"}),", мы присваиваем ",e.jsx("code",{children:"dp = curRow "})," и инициализируем новый ",e.jsx("code",{children:"curRow"}),", заполненный нулями."]}),e.jsxs("p",{className:"mb-2",children:["Если мы можем иметь в памяти только две строки, мы бы предпочли выбрать строку (",e.jsx("code",{children:"s1"})," или ",e.jsx("code",{children:"s2"}),") с меньшей длиной в качестве длины строки сетки. Итак, в данном случае нам повезло, и мы выбрали меньшую из двух строк, что довело нашу сложность по памяти до ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"m"}),"). Однако если мы бы взяли"," ",e.jsx("code",{children:"min(s1, s2)"}),", наша сложность по памяти могла бы снизиться до ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"min"}),"(",e.jsx("i",{children:"n"}),", ",e.jsx("i",{children:"m"}),"))."]}),e.jsx(k,{value:bO})]})}const EO="/my-textbook/assets/list-node-wx8OPk-Y.png",TO="/my-textbook/assets/list-nodes-vW5h9gZy.png",yO="/my-textbook/assets/list-node-chaining-nMtJwpMc.png",SO="/my-textbook/assets/list-nodes-chaining-LD9JJHgl.png",NO="/my-textbook/assets/linked-list-traversal-qSyZeymN.png",jO="/my-textbook/assets/circular-linked-list-QFMTSWRM.png",AO="/my-textbook/assets/linked-list-appending1-ewz10Iu9.png",_O="/my-textbook/assets/linked-list-appending2-RmqnMYmf.png",vO="/my-textbook/assets/linked-list-appending3-ravs9ATb.png",RO="/my-textbook/assets/linked-list-deleting1-oFXSI2Ae.png",wO="/my-textbook/assets/linked-list-deleting2-6GJ2ttbB.png",IO="/my-textbook/assets/linked-list-deleting3-5snmbEeX.png",CO=`class ListNode {
  constructor (value, next = null) {
    this.value = value; // установка желаемого значения, например, числа, символа и т. д.
    this.next = next; // установка указателя на следующий узел, по умолчанию null
  }
}`,OO="ListNode1.next = ListNode2;",kO=`ListNode2.next = ListNode3;
ListNode3.next = null`,LO=`let cur = ListNode1;

while (cur) {
  cur = cur.next;
}`,DO="tail.next = ListNode4",MO="tail = ListNode4",FO="head.next = head.next.next";function PO(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Связный список — это ещё одна структура данных, похожая на массив, в том смысле, что элементы хранятся в упорядоченной последовательности. Но есть и различия."}),e.jsxs("p",{className:"mb-2",children:["Первое отличие состоит в том, что связные списки состоят из объектов, называемых"," ",e.jsx("strong",{children:"узлами списка"}),". Эти объекы содержат два атрибута:"]}),e.jsxs("ol",{className:"list-decimal list-inside mb-2",children:[e.jsxs("li",{children:[e.jsx("code",{children:"value"})," — здесь хранится значение узла. Значение может быть любым - символом, числом и т. д."]}),e.jsxs("li",{children:[e.jsx("code",{children:"next"})," — ссылка на следующий узел в связном списке. Рисунок ниже демонстрирует объект узла списка."]})]}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Узел списка",className:"mx-auto",height:"400",src:EO,width:"1440"})}),e.jsx("h2",{className:"font-bold my-2",children:"Создание связного списка с нуля"}),e.jsxs("p",{className:"mb-2",children:["Объединение этих ",e.jsx("strong",{children:"узлов списка"})," вместе в цепочку приводит к созданию связного списка. Создание вашего класса ",e.jsx("code",{children:"ListNode"})," в псевдокоде будет выглядеть следующим образом:"]}),e.jsx(k,{value:CO}),e.jsxs("p",{className:"mb-2",children:["Посмотрим на пример того, как эти объекты ",e.jsx("code",{children:"ListNode"})," можно объединить в цепочку для создания желаемого связного списка. Предположим, что у нас есть 3 объекта ",e.jsx("code",{children:"ListNode"}),": ",e.jsx("code",{children:"ListNode1"}),", ",e.jsx("code",{children:"ListNode2"}),","," ",e.jsx("code",{children:"ListNode3"}),", и мы создаём их экземпляры со следующими значениями, как показано на рисунке ниже."]}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Узлы списка",className:"mx-auto",height:"320",src:TO,width:"1440"})}),e.jsxs("p",{className:"mb-2",children:["В данном случае наш атрибут ",e.jsx("code",{children:"value"})," представляет собой строку - красный, синий, зелёный. При создании экземпляров узлы будут храниться в памяти в произвольном порядке."]}),e.jsxs("p",{className:"mb-2",children:["Далее нам нужно убедиться, что наши указатели ",e.jsx("code",{children:"next"})," указывают на другой ",e.jsx("code",{children:"ListNode"}),", а не ",e.jsx("code",{children:"null"}),"."]}),e.jsx(k,{value:OO}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Цепочка из двух узлов",className:"mx-auto",height:"320",src:yO,width:"1440"})}),e.jsxs("p",{className:"mb-2",children:["Указатель ",e.jsx("code",{children:"next"})," узла ",e.jsx("code",{children:"ListNode1"})," указывает на"," ",e.jsx("code",{children:"ListNode2"})," — ",e.jsx("code",{children:"ListNode2"})," идёт после ",e.jsx("code",{children:"ListNode1"})," ","в связном списке. Установим указатели ",e.jsx("code",{children:"next"})," для ",e.jsx("code",{children:"ListNode2"})," ","и ",e.jsx("code",{children:"ListNode3"}),"."]}),e.jsx(k,{value:kO}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Цепочка из нескольких узлов",className:"mx-auto",height:"320",src:SO,width:"1440"})}),e.jsx("p",{className:"mb-2",children:e.jsxs("strong",{children:["Поскольку ",e.jsx("code",{children:"ListNode3"})," является последним узлом в связном списке, его указатель ",e.jsx("code",{children:"next"})," будет указывать на ",e.jsx("code",{children:"null"}),"."]})}),e.jsx("h2",{className:"font-bold my-2",children:"Обход"}),e.jsxs("p",{className:"mb-2",children:["Чтобы пройти по связному списку от начала до конца, мы можем использовать простой цикл ",e.jsx("code",{children:"while"}),"."]}),e.jsx(k,{value:LO}),e.jsxs("p",{className:"mb-2",children:["Мы начинаем обход с самого начала, ",e.jsx("code",{children:"ListNode1"}),", и присваиваем его переменной ",e.jsx("code",{children:"cur"}),", обозначающей текущий узел, в котором мы находимся. Продолжаем выполнять цикл ",e.jsx("code",{children:"while"})," и обновлять переменную"," ",e.jsx("code",{children:"cur"}),", записывая в неё следующий узел, пока не встретим узел, который равен ",e.jsx("code",{children:"null"})," — это означает, что мы находимся в конце связного списка и обход завершён. Сложность обхода по времени составляет ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),")."]}),e.jsx("img",{alt:"Обход связного списка",height:"1260",src:NO,width:"1600"}),e.jsx("h2",{className:"font-bold my-2",children:"Круговой связный список"}),e.jsxs("p",{className:"mb-2",children:["Интересный сценарий возникает, если указатель ",e.jsx("code",{children:"next"})," узла"," ",e.jsx("code",{children:"ListNode3"})," указывает на ",e.jsx("code",{children:"ListNode1"}),", а не ",e.jsx("code",{children:"null"}),". Это создаст бесконечный цикл ",e.jsx("code",{children:"while"})," и программа выйдет из строя. Это произойдёт потому, что мы никогда не достигнем конца связного списка. После"," ",e.jsx("code",{children:"ListNode3"}),", ",e.jsx("code",{children:"ListNode3.next"})," будет указывать на"," ",e.jsx("code",{children:"ListNode1"}),", который указывает на ",e.jsx("code",{children:"ListNode2"}),", который указывает на ",e.jsx("code",{children:"ListNode3"}),", и обратно на ",e.jsx("code",{children:"ListNode1"}),", создавая бесконечный цикл."]}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Круговой связный список",className:"mx-auto",height:"360",src:jO,width:"1480"})}),e.jsx("h2",{className:"font-bold my-2",children:"Операции связного списка"}),e.jsxs("p",{className:"mb-2",children:["Связные списки имеют указатели ",e.jsx("code",{children:"head"})," и ",e.jsx("code",{children:"tail"}),". Указатель"," ",e.jsx("code",{children:"head"})," указывает на самый первый узел связного списка,"," ",e.jsx("code",{children:"ListNode1"}),", а указатель ",e.jsx("code",{children:"tail"})," указывает на самый последний узел — ",e.jsx("code",{children:"ListNode3"}),". Если в связном списке только один узел,"," ",e.jsx("code",{children:"head"})," и ",e.jsx("code",{children:"tail"})," указывают на один и тот же узел."]}),e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("strong",{children:"Вставка"}),e.jsxs("p",{className:"mb-2",children:["Преимущество связных списков перед массивами состоит в том, что добавление нового элемента может быть выполнено за ",e.jsx("i",{children:"O"}),"(1) по времени. После добавления ещё одного узла не требуется сдвиг элементов, и у нас уже есть ссылки на ",e.jsx("code",{children:"head"})," и ",e.jsx("code",{children:"tail"}),". Если взять наш пример выше, если бы мы хотели добавить ",e.jsx("code",{children:"ListNode4"})," в конец списка, мы бы добавили его в ",e.jsx("code",{children:"tail"}),". После добавления ",e.jsx("code",{children:"ListNode4"})," мы обновляем наш указатель ",e.jsx("code",{children:"tail"}),", чтобы он указывал на"," ",e.jsx("code",{children:"ListNode4"}),". Эта операция будет выполнена за ",e.jsx("i",{children:"O"}),"(1) по времени так как это всего лишь одна операция. Процесс будет выгледеть следующим образом:"]}),e.jsx("img",{alt:"Добавление нового узла",height:"520",src:AO,width:"1639"}),e.jsx(k,{value:DO}),e.jsx("img",{alt:"Добавление нового узла в цепочку",height:"360",src:_O,width:"1639"}),e.jsx(k,{value:MO}),e.jsx("img",{alt:"Перенос указателя tail",className:"mb-2",height:"360",src:vO,width:"1639"}),e.jsx("p",{className:"mb-2",children:e.jsxs("strong",{children:["Хотя операция вставки занимает ",e.jsx("i",{children:"O"}),"(1) по времени, поскольку никакого сдвига узлов не требуется, нам всё равно придётся пройти по списку, чтобы добраться до точки вставки, если у нас нет ссылки на позицию вставки."]})})]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Удаление"}),e.jsxs("p",{className:"mb-2",children:["Удаление из начала связного списка составляет ",e.jsx("i",{children:"O"}),"(1) по времени, поскольку оно представляет собой одну операцию и у нас есть указатель"," ",e.jsx("code",{children:"head"}),". Опять же, сам обход списка займёт ",e.jsx("i",{children:"n"})," шагов, если у вас нет ссылки на узел. Чтобы удалить определённый узел, скажем"," ",e.jsx("strong",{children:"y"}),", необходимо пропустить его и обновить указатель"," ",e.jsx("code",{children:"next"})," предыдущего узла на узел, который идёт после"," ",e.jsx("strong",{children:"y"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Будет проще представить это в коде. Предположим, что мы хотим удалить"," ",e.jsx("code",{children:"ListNode2"})," из предыдущего примера. Сейчас наш ",e.jsx("code",{children:"head"})," ","указывает на ",e.jsx("code",{children:"ListNode1"}),", а ",e.jsx("code",{children:"head.next"})," — на"," ",e.jsx("code",{children:"ListNode2"}),". Поскольку ",e.jsx("code",{children:"ListNode2"})," будет удалён, нам нужно обновить наш указатель ",e.jsx("code",{children:"head.next"})," на ",e.jsx("code",{children:"ListNode3"}),", доступ к которому можно получить по цепочке указателей ",e.jsx("code",{children:"next"}),":"," ",e.jsx("code",{children:"head.next.next"}),". Это имеет смысл, поскольку ",e.jsx("code",{children:"head.next"})," ","— это ",e.jsx("code",{children:"ListNode2"}),", и логично, что ",e.jsx("code",{children:"head.next.next"})," будет указывать на ",e.jsx("code",{children:"ListNode3"}),"."]}),e.jsx("img",{alt:"Связный список перед удалением",height:"400",src:RO,width:"1639"}),e.jsx(k,{value:FO}),e.jsx("img",{alt:"Удаление узла",className:"mb-2",height:"403",src:wO,width:"1639"}),e.jsxs("p",{className:"mb-2",children:["Обновлённый связный список после удаления ",e.jsx("code",{children:"ListNode2"}),". Обратите внимание, что теперь указатель ",e.jsx("code",{children:"next"})," узла ",e.jsx("code",{children:"ListNode1"})," ","указывает на ",e.jsx("code",{children:"ListNode3"})," вместо ",e.jsx("code",{children:"ListNode2"}),"."]}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Связный список после удаления",className:"mx-auto",height:"400",src:IO,width:"1440"})}),e.jsx("p",{className:"mb-2",children:e.jsxs("strong",{children:["Предполагается, что ",e.jsx("code",{children:"ListNode2"})," будет удалён из памяти, поскольку в большинстве языков есть сборщики мусора."]})})]})]}),e.jsx("h2",{className:"font-bold my-2",children:"Итоги:"}),e.jsxs("table",{className:"border-collapse mb-2 table-auto w-full",children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{className:"border-2 border-gray-300 border-solid p-2 text-left",children:"Операция"}),e.jsx("th",{className:"border-2 border-gray-300 border-solid p-2 text-left",children:"Сложность по времени"}),e.jsx("th",{className:"border-2 border-gray-300 border-solid p-2 text-left",children:"Примечания"})]})}),e.jsxs("tbody",{children:[e.jsxs("tr",{children:[e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Доступ"}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:[e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),")"]}),e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"—"})]}),e.jsxs("tr",{children:[e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Поиск"}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:[e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),")"]}),e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"—"})]}),e.jsxs("tr",{children:[e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Вставка"}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:[e.jsx("i",{children:"O"}),"(1)",e.jsx("sup",{children:"*"})]}),e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Предполагая, что у вас есть ссылка на узел в желаемой позиции"})]}),e.jsxs("tr",{children:[e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Удаление"}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:[e.jsx("i",{children:"O"}),"(1)",e.jsx("sup",{children:"*"})]}),e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Предполагая, что у вас есть ссылка на узел в желаемой позиции"})]})]})]})]})}const UO="/my-textbook/assets/matrix-breadth-first-search-1-Jry-GD.png",BO=`const matrix = [[0, 0, 0, 0],
               [1, 1, 0, 0],
               [0, 0, 0, 1],
               [0, 1, 0, 0]];`,HO=`function bfs(grid) {
  const ROWS = grid.length;
  const COLS = grid[0].length;
  const queue = [[0, 0]]; // представим, что это очередь, чтобы не занимать место реализацией очереди
  const visited = new Set([\`\${0}-\${0}\`]);
}`,GO=`let length = 0;

while (queue.length > 0) {
  const queueLength = queue.length;

  for (let i = 0; i < queueLength; i++) {
    const [r, c] = queue.shift(); // представим, что это операция очереди dequeue

    if (r === ROWS - 1 && c === COLS - 1) {
      return length;
    }
    
    const neighbors = [[0, 1], [0, -1], [1, 0], [-1, 0]];
    
    for (const [dr, dc] of neighbors) {
      const newR = r + dr;
      const newC = c + dc;
      
      if (Math.min(newR, newC) < 0
        || newR === ROWS
        || newC === COLS
        || visited.has(\`\${newR}-\${newC}\`)
        || grid[newR][newC] === 1) {
        continue;
      }

      queue.push([newR, newC]);
      visited.add(\`\${newR}-\${newC}\`);
    }
  }
  
  length++;
}`,$O=`function bfs(grid) {
  const ROWS = grid.length;
  const COLS = grid[0].length;
  const queue = [[0, 0]]; // представим, что это очередь, чтобы не занимать место реализацией очереди
  const visited = new Set([\`\${0}-\${0}\`]);
  
  let length = 0;
  
  while (queue.length > 0) {
    const queueLength = queue.length;
  
    for (let i = 0; i < queueLength; i++) {
      const [r, c] = queue.shift(); // представим, что это операция очереди dequeue
  
      if (r === ROWS - 1 && c === COLS - 1) {
        return length;
      }
      
      const neighbors = [[0, 1], [0, -1], [1, 0], [-1, 0]];
      
      for (const [dr, dc] of neighbors) {
        const newR = r + dr;
        const newC = c + dc;
        
        if (Math.min(newR, newC) < 0
          || newR === ROWS
          || newC === COLS
          || visited.has(\`\${newR}-\${newC}\`)
          || grid[newR][newC] === 1) {
          continue;
        }
  
        queue.push([newR, newC]);
        visited.add(\`\${newR}-\${newC}\`);
      }
    }
    
    length++;
  }
}`;function zO(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Поиск в ширину чаще всего используется для поиска кратчайшего пути в графе."}),e.jsx("p",{className:"mb-2",children:"Давайте сразу углубимся в вопрос. Вы заметите, что код BFS для графа похож на код BFS для деревьев, с некоторыми крайними случаями."}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Найдите длину кратчайшего пути от верхнего левого угла сетки до правого нижнего."})}),e.jsx("p",{className:"mb-2",children:"Мы также можем использовать для этого DFS, но это более грубый подход. BFS более эффективен, поскольку при первом обнаружении вершины во время обхода расстояние от нашего источника даст нам кратчайший путь. Давайте посмотрим на код, учитывая следующую матрицу."}),e.jsx(k,{value:BO}),e.jsx("h2",{className:"font-bold my-2",children:"Первые шаги"}),e.jsxs("p",{className:"mb-2",children:["Как и в предыдущей статье, мы запишем количество наших строк и столбцов, что говорит нам, где находятся наши границы. Мы будем использовать ",e.jsx("code",{children:"Set"})," ","для отслеживания посещённых вершин. Мы будем использовать очередь, чтобы отслеживать все посещённые вершины на каждом уровне и определять, на каком уровне мы находимся в данный момент. Мы можем инициализировать нашу очередь первой вершиной ",e.jsx("code",{children:"[0, 0]"})," и пометить ее как посещённую. Это наша отправная точка."]}),e.jsx(k,{value:HO}),e.jsx("h2",{className:"font-bold my-2",children:"BFS для графа"}),e.jsxs("p",{className:"mb-2",children:["Нам предлагается найти длину кратчайшего пути. После первых шагов мы можем инициализировать переменную ",e.jsx("code",{children:"length"})," значением ",e.jsx("code",{children:"0"}),". Затем, как и в случае с BFS для деревьев, мы можем запустить цикл ",e.jsx("code",{children:"while"})," для нашей очереди и сделать снимок длины очереди. Здесь, когда мы извлекаем элемент из очереди, мы получаем ",e.jsx("code",{children:"r"})," (строку) и ",e.jsx("code",{children:"c"})," (столбец). В случае с деревьями следующим шагом было посещение дочерних узлов извлечённого узла. Здесь мы посещаем соседей извлечённой вершины. Нам придётся сделать это только в том случае, если мы еще не достигли правого нижнего угла, то есть когда"," ",e.jsx("code",{children:"r === ROWS - 1"})," и ",e.jsx("code",{children:"c === COLS - 1"}),"."]}),e.jsxs("p",{className:"mb-2",children:["В лучшем случае мы сможем двигаться во всех четырёх направлениях, не выходя за пределы сетки. Для этого мы можем сохранить двумерный массив —"," ",e.jsx("code",{children:"neighbors = [[0, 1], [0, -1], [1, 0], [-1, 0]]"}),". Хотя технически это не соседи, массив просто представляет направления, в которых мы можем двигаться — вправо, влево, вверх, вниз соответственно."]}),e.jsxs("p",{className:"mb-2",children:["Код в блоке ",e.jsx("code",{children:"if"})," такой же, как и в DFS. Если мы вышли за пределы, координата заблокирована или вершина уже посещена, мы переходим к следующей итерации. В противном случае мы добавляем всех соседей в очередь и добавляем их в"," ",e.jsx("code",{children:"Set"}),", чтобы гарантировать, что мы не посетим их снова. Обратите внимание, как мы добавляем в ",e.jsx("code",{children:"Set"})," сразу после добавления в очередь. Таким образом, в нашей очереди никогда не будет дважды встречаться один и тот же элемент, что помогает сделать ее более эффективной с точки зрения сложности по времени, о чём мы поговорим позже. Следующий фрагмент кода после первых шагов выглядит так."]}),e.jsx(k,{value:GO}),e.jsx("p",{className:"mb-2",children:"Объединив всё это вместе, мы получим следующее."}),e.jsx(k,{value:$O}),e.jsx("p",{className:"mb-2",children:"Ниже мы можем визуализировать этот алгоритм применительно к нашей матрице. Числа и кружки одного цвета обозначают длину пути в этой конкретной вершине."}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Поиск в ширину в графе, представленным матрицей",className:"mx-auto",height:"1200",src:UO,width:"1150"})}),e.jsx("h2",{className:"font-bold my-2",children:"Сложность по времени"}),e.jsxs("p",{className:"mb-2",children:["Поскольку мы никогда не посещаем координату дважды, в худшем случае мы посещаем каждую координату не более одного раза. Если ",e.jsx("i",{children:"n"})," — количество строк, а"," ",e.jsx("code",{children:"m"})," — количество столбцов, это даёт нам сложность по времени ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"})," ∗ ",e.jsx("i",{children:"m"}),")."]})]})}const WO="/my-textbook/assets/matrix-depth-first-search1-eK3W1qKx.png",VO="/my-textbook/assets/matrix-depth-first-search2-VzR_x2z8.png",KO=`const matrix = [[0, 0, 0, 0],
               [1, 1, 0, 0],
               [0, 0, 0, 1],
               [0, 1, 0, 0]];`,YO=`function dfs(grid, r, c, visit) {
  const ROWS = grid.length;
  const COLS = grid[0].length;

  if (Math.min(r, c) < 0 || r === ROWS || c === COLS ||
    visit.has(\`\${r}-\${c}\`) || grid[r][c] === 1) {
    return 0;
  }
  
  if (r === ROWS - 1 && c === COLS - 1) {
    return 1;
  }
  
  visit.add(\`\${r}-\${c}\`);

  let count = 0;
  count += dfs(grid, r + 1, c, visit);
  count += dfs(grid, r - 1, c, visit);
  count += dfs(grid, r, c + 1, visit);
  count += dfs(grid, r, c - 1, visit);

  visit.delete(\`\${r}-\${c}\`);
  return count;
}`;function qO(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Как нам применить поиск в глубину к графам? Лучше всего показать это на примере."}),e.jsx("p",{className:"mb-2",children:"Предположим, нам необходимо решить следующую задачу:"}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Подсчитайте уникальные пути от левого верхнего угла до правого нижнего. Один путь может проходить только через нули и не может посещать одну и ту же ячейку более одного раза."})}),e.jsx(k,{value:KO}),e.jsx("p",{className:"mb-2",children:"В этой задаче всё зависит от выбора. Вы можете подумать, что это похоже на бэктрекинг, и будете правы. Ранее мы упоминали, что DFS рекурсивен по своей природе, и для решения этой задачи мы будем использовать рекурсию. Во-первых, нам нужно подумать о нашем базовом случае(ах). Что ж, мы знаем, что можем двигаться во всех четырёх направлениях, кроме диагонального. Это означает, что если мы выйдем за пределы, мы можем вернуть ноль."}),e.jsx("p",{className:"mb-2",children:"Мы знаем, что это будет метод грубой силы, DFS с бэктрекингом, поскольку в любой точке нашего пути у нас может не быть допустимого способа добраться до правого нижнего угла, и в этом случае нам придётся вернуться."}),e.jsx("p",{className:"mb-2",children:"Для начала давайте определимся с нашими базовыми случаями. Поскольку мы пытаемся найти количество уникальных путей, нам нужно вести подсчёт допустимых путей из каждой вершины."}),e.jsx("h2",{className:"font-bold my-2",children:"Базовые случаи"}),e.jsxs("ol",{className:"list-decimal list-inside",children:[e.jsxs("li",{className:"mb-2",children:[e.jsx("strong",{children:"Уникального пути не существует"}),e.jsxs("p",{className:"mb-2",children:["Поскольку нам разрешено двигаться во всех четырёх направлениях, вполне возможно, что во время нашего обхода мы в конечном итоге выйдем за пределы матрицы. Это означает, что либо наш столбец ",e.jsx("code",{children:"c"}),", либо наша строка"," ",e.jsx("code",{children:"r"})," становятся отрицательными или выходят за пределы длины нашей матрицы. Не имеет значения, что из ",e.jsx("code",{children:"r"})," и ",e.jsx("code",{children:"c"})," выходит за пределы, потому что для выполнения поиска нам нужен действительный"," ",e.jsx("code",{children:"c"})," ",e.jsx("strong",{children:"И"})," действительный ",e.jsx("code",{children:"r"}),". Мы не можем выполнить поиск по ",e.jsx("code",{children:"matrix[-1][3]"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Если мы уже посетили координату или текущая координата равна ",e.jsx("code",{children:"1"}),", то допустимого пути через эту координату не существует."]}),e.jsxs("p",{className:"mb-2",children:["Поэтому, поскольку во всех вышеупомянутых случаях допустимого пути не существует, мы вернём ",e.jsx("code",{children:"0"}),", что означает отсутствие уникального пути. Скоро мы увидим это в нашем коде."]})]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Уникальный путь существует"}),e.jsxs("p",{className:"mb-2",children:["Если мы не вернули ",e.jsx("code",{children:"0"})," из первого случая, и мы достигли самого правого столбца и самой нижней строки, это должно быть тот случай, когда мы нашли действительный путь. Помните, что наше определение допустимого пути — это существование пути от ",e.jsx("code",{children:"matrix[0][0]"})," до"," ",e.jsx("code",{children:"matrix[3][3]"}),". Теперь мы можем вернуть ",e.jsx("code",{children:"1"}),", и это увеличит наш счётчик количества уникальных путей."]})]})]}),e.jsx("h2",{className:"font-bold my-2",children:"Реализация"}),e.jsx("p",{className:"mb-2",children:"Чтобы гарантировать, что мы не посетим координату более одного раза, мы добавляем её в глобальный HashSet после посещения."}),e.jsxs("p",{className:"mb-2",children:["Затем по любой заданной координате мы можем рекурсивно выполнить наш DFS для"," ",e.jsx("code",{children:"r + 1"}),", ",e.jsx("code",{children:"r - 1"}),", ",e.jsx("code",{children:"c + 1"})," и ",e.jsx("code",{children:"c - 1"}),". Если наш рекурсивный вызов вернет ",e.jsx("code",{children:"1"}),", наш счётчик будет увеличен, и если он вернёт ",e.jsx("code",{children:"0"}),", добавление его к счётчику не будет иметь никакого значения."]}),e.jsx("p",{className:"mb-2",children:"При каждом рекурсивном вызове мы можем удалить все строки и столбцы, которые привели нас к недопустимому пути. Таким образом, мы можем гарантировать, что посетим их снова, но выберем другое направление и проверим, существует ли действительный путь с этого направления."}),e.jsxs("p",{className:"mb-2",children:["В приведённом ниже коде мы настроили вышеупомянутые базовые случаи. Затем мы добавляем текущую строку и столбец в наш ",e.jsx("code",{children:"Set"}),". Наш счётчик инициализируется с ",e.jsx("code",{children:"0"}),", потому что нам нужно отслеживать все возможные уникальные пути к месту назначения в любой заданной вершине. Как только наши рекурсивные вызовы вернутся, мы сможем удалить посещённые вершины из нашего"," ",e.jsx("code",{children:"Set"}),". Опять же, это потому, что они могут быть частью другого уникального пути, просто из другого источника. Итак, когда мы вернёмся назад, мы сможем посетить их снова."]}),e.jsx(k,{value:YO}),e.jsx("p",{className:"mb-2",children:"Чтобы визуализировать вышеизложенное в нашей матрице, мы можем разбить наш алгоритм на поиск исходного уникального пути, а затем вернуться назад, чтобы найти другой потенциально уникальный путь."}),e.jsxs("ol",{className:"list-decimal list-inside",children:[e.jsxs("li",{className:"mb-2",children:[e.jsx("strong",{children:"Найдём первый уникальный путь"}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Поиск первого уникального пути",className:"mx-auto",height:"1000",src:WO,width:"1010"})})]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Возврат назад, чтобы найти другой потенциально уникальный путь"}),e.jsx("p",{className:"mb-2",children:e.jsxs("strong",{children:["Красная пунктирная линия представляет ещё один уникальный путь, достигнутый из ",e.jsx("code",{children:"matrix[0][3]"}),"."]})}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Возврат для поиска другого потенциального уникального пути",className:"mx-auto",height:"1340",src:VO,width:"1010"})})]})]}),e.jsxs("p",{className:"mb-2",children:["Наша функция возвращает ",e.jsx("code",{children:"2"}),", обозначая, что существуют ",e.jsx("code",{children:"2"})," ","уникальных пути от ",e.jsx("code",{children:"(0,0)"})," до ",e.jsx("code",{children:"(3,3)"}),"."]}),e.jsx("h2",{className:"font-bold my-2",children:"Сложность по времени"}),e.jsxs("p",{className:"mb-2",children:["К настоящему моменту мы знаем, что рассматриваем только худший случай. В худшем случае нам может потребоваться просмотреть каждую строку и столбец. По каждой координате мы можем двигаться во всех четырех направлениях. Каждая из координат, достигнутых при движении в каждом из этих четырех направлений, также сможет перемещаться вверх, вниз, влево или вправо. У нас есть четыре варианта из каждой позиции. Если мы хотим создать из этого дерево решений, каждый узел будет иметь не более четырех дочерних элементов. Дерево имеет коэффициент ветвления"," ",e.jsx("code",{children:"4"}),", а высота дерева равна размеру матрицы, которая равна всего"," ",e.jsxs("code",{children:[e.jsx("i",{children:"n"})," ∗ ",e.jsx("i",{children:"m"})]}),", где"," ",e.jsx("code",{children:e.jsx("i",{children:"n"})})," ","— количество строк, а"," ",e.jsx("code",{children:e.jsx("i",{children:"m"})})," ","это количество столбцов."]}),e.jsxs("p",{className:"mb-2",children:["Следовательно, мы получаем ",e.jsx("code",{children:"4"}),e.jsx("sup",{children:e.jsx("i",{children:"nm"})}),"."]}),e.jsxs("p",{className:"mb-2",children:["Сложностью по памяти будет весь стек вызовов, поскольку он рекурсивный. Следовательно, она составит ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"})," ∗ ",e.jsx("i",{children:"m"}),")."]})]})}const XO="/my-textbook/assets/merge-sort-splitting-kUyITO9a.png",ZO="/my-textbook/assets/merge-sort1-GE74dFUX.png",QO="/my-textbook/assets/merge-sort2-HXaoqViu.png",JO=`function mergeSort(array, left, right) {
  if (left < right) {
    const middle = Math.floor((left + right) / 2);

    mergeSort(array, left, middle); // сортируем левую половину
    mergeSort(array, middle + 1, right); // сортируем правую половину
    merge(array, left, middle, right); // объединяем отсортированные половины
  }

  return array;
}`,ek=`function merge(array, left, middle, right) {
  const leftLength = middle - left + 1;
  const rightLength = right - middle;

  const leftSubarray = new Array(leftLength);
  const rightSubarray = new Array(rightLength);

  for (let i = 0; i < leftLength; i++) {
    leftSubarray[i] = array[left + i];
  }

  for (let j = 0; j < rightLength; j++) {
    rightSubarray[j] = array[middle + 1 + j];
  }

  let i = 0;
  let j = 0;
  let k = left;

  while (i < leftLength && j < rightLength) {
    if (leftSubarray[i] <= rightSubarray[j]) {
      array[k] = leftSubarray[i];
      i++;
    } else {
      array[k] = rightSubarray[j];
      j++;
    }

    k++;
  }

  while (i < leftLength) {
    array[k] = leftSubarray[i];
    i++;
    k++;
  }

  while (j < rightLength) {
    array[k] = rightSubarray[j];
    j++;
    k++;
  }
}`,tk=`if (leftSubarray[i] <= rightSubarray[j]) {
  array[k] = leftSubarray[i];
  i++;
})`;function nk(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Концепция сортировки слиянием очень проста. Будем продолжать разбивать массив пополам, пока размер подмассивов не достигнет единицы, отсортируем их и объединим отсортированные массивы, в результате чего получится окончательный отсортированный массив. Мы будем использовать рекурсию для этого. Точнее, рекурсию с двумя ветвями."}),e.jsxs("p",{className:"mb-2",children:["Возьмём массив из 5 элементов, например, ",e.jsx("code",{children:"[3, 2, 4, 1, 6]"}),". Наша задача — отсортировать массив в порядке возрастания или неубывания, если у нас есть дубликаты. Мы будем разбивать массив следующим образом."]}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Разбивка массива пополам",className:"mx-auto",height:"640",src:XO,width:"840"})}),e.jsxs("p",{className:"mb-2",children:["Как уже отмечалось, у нас есть две ветви. Давайте сначала поработаем над сортировкой и объединением левой ветви. Сначала нам необходимо достичь базового случая, после чего мы сможем начать сортировку и объединение массивов вместе, получив в результате ",e.jsx("code",{children:"[2, 3, 4]"}),". Как только наша рекурсия достигнет базового случая, у нас появятся два подмассива: ",e.jsx("code",{children:"[3]"})," и"," ",e.jsx("code",{children:"[2]"}),". Нам нужен способ сравнить эти два элемента, чтобы знать, куда их поместить в исходный подмассив, то есть ",e.jsx("code",{children:"[3, 2]"}),". Для этого создаются копии обоих подмассивов, и с помощью двух указателей значения сравниваются и помещаются в исходный подмассив в отсортированном порядке. Это можно увидеть в псевдокоде ниже."]}),e.jsx(k,{value:JO}),e.jsx("h2",{className:"font-bold my-2",children:"Визуализация и псевдокод"}),e.jsx("p",{className:"mb-2",children:e.jsxs("strong",{children:["Рекурсивный вызов ",e.jsx("code",{children:"mergeSort()"})]})}),e.jsxs("p",{className:"mb-2",children:["Используя рекурсию с двумя ветвями, мы решаем подзадачи обеих ветвей и «собираем» вместе решения подзадач, чтобы прийти к окончательному решению. Сначала мы отсортируем подмассив ",e.jsx("code",{children:"[3, 2]"})," до ",e.jsx("code",{children:"[2, 3]"})," — это часть"," ",e.jsx("code",{children:"mergeSort(array, left, middle)"}),". Теперь мы можем перейти к сортировке"," ",e.jsx("code",{children:"[4]"}),", что соответствует"," ",e.jsx("code",{children:"mergeSort(array, middle + 1, right)"}),". Важно отметить последовательность выполнения вызовов. Вызов ",e.jsx("code",{children:"merge()"})," не будет выполнен до тех пор, пока оба рекурсивных вызова ",e.jsx("code",{children:"mergeSort()"})," не вернутся к текущему подмассиву. На первом изображении ниже показана сортировка и объединение левой половины. На втором изображении показана сортировка и объединение второй половины для получения окончательно отсортированного массива."]}),e.jsx("img",{alt:"Сортировка левой половины",className:"mb-2",height:"400",src:ZO,width:"1760"}),e.jsx("img",{alt:"Сортировка правой половины",height:"1340",src:QO,width:"1739"}),e.jsx("p",{className:"mb-2",children:e.jsxs("strong",{children:["Чтобы убедиться, что приведённые выше изображения не сбивают с толку, на них показано, как получается конечный массив, который является результирующим массивом. Изображения визуализируют то, что происходит внутри функции"," ",e.jsx("code",{children:"merge()"}),"."]})}),e.jsx("p",{className:"mb-2",children:e.jsxs("strong",{children:["Функция ",e.jsx("code",{children:"merge()"})," и три указателя"]})}),e.jsxs("p",{className:"mb-2",children:["Как видно на изображении выше, у нас есть три указателя: ",e.jsx("code",{children:"k"}),","," ",e.jsx("code",{children:"j"})," и ",e.jsx("code",{children:"i"}),"."]}),e.jsxs("ul",{className:"list-disc list-inside",children:[e.jsxs("li",{children:[e.jsx("code",{children:"k"})," отслеживает, где должен быть размещён следующий элемент в"," ",e.jsx("code",{children:"array"}),"."]}),e.jsxs("li",{children:[e.jsx("code",{children:"i"})," указывает на элемент в левом подмассиве, который в данный момент сравнивается с элементом ",e.jsx("code",{children:"j"})," в правом подмассиве."]}),e.jsxs("li",{children:["Один из ",e.jsx("code",{children:"i"})," или ",e.jsx("code",{children:"j"})," будет увеличиваться в зависимости от того, какой элемент меньше."]}),e.jsxs("li",{children:[e.jsx("code",{children:"k"})," будет увеличиваться в любом случае, потому что внутри"," ",e.jsx("code",{children:"array"})," будет помещен элемент независимо от того, какой из"," ",e.jsx("code",{children:"i"})," или ",e.jsx("code",{children:"j"})," увеличивается."]})]}),e.jsxs("p",{className:"mb-2",children:["Это ясно видно на изображении выше и показано в псевдокоде функции"," ",e.jsx("code",{children:"merge()"})," ниже."]}),e.jsx(k,{value:ek}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Хотя изображения демонстрируют только слияние конечного подмассива, рекурсия подразумевает, что слияние происходит на каждом уровне после сортировки массивов, потому что мы бы никогда не получили окончательный массив, если бы подмассивы не были отсортированы и объеденены."})}),e.jsx("h2",{className:"font-bold my-2",children:"Устойчивость"}),e.jsxs("p",{className:"mb-2",children:["Сортировка слиянием является ",e.jsx("strong",{children:"устойчивым"})," алгоритмом, потому что если у нас есть пара дубликатов, скажем, ",e.jsx("code",{children:"7"}),", то ",e.jsx("code",{children:"7"})," в левом подмассиве всегда попадёт в объединённый массив раньше, чем ",e.jsx("code",{children:"7"})," в правом подмассиве. Это связано с тем, что когда мы сравниваем ",e.jsx("code",{children:"i-й"})," ","элемент в левом подмассиве с ",e.jsx("code",{children:"j-м"})," элементом в правом подмассиве на предмет равенства, мы выбираем элемент в левом подмассиве, сохраняя относительный порядок. Вспомним следующий псевдокод из функции ",e.jsx("code",{children:"merge()"}),"."]}),e.jsx(k,{value:tk}),e.jsx("h2",{className:"font-bold my-2",children:"Итоги"}),e.jsxs("p",{className:"mb-2",children:["Как же сортировка слиянием соотносится с сортировкой вставками? В худшем случае сортировка вставками составляет ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),e.jsx("sup",{children:"2"}),"), когда сортировка слиянием составляет ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n log n"}),") в худшем, среднем и лучшем случаях, что делает сортировку слиянием более эффективной. Единственный случай, когда сортировка вставками может быть предпочтительнее, это когда известно, что массив имеет мало элементов и уже отсортирован или почти отсортирован, поскольку при этом будет пропущена перестановка. Однако сортировка слиянием более эффективна с точки зрения времени, потому что, если мы не знаем размер входящих данных, сортировка вставками будет работать хуже, чем сортировка слиянием."]})]})}const rk=`const names = ['Илья', 'Михаил', 'Александр', 'Роман', 'Александр', 'Дмитрий'];
const frequencyMap = {};

names.forEach((name) => {
  if (frequencyMap[name]) {
    frequencyMap[name]++;
  } else {
    frequencyMap[name] = 1;
  }
});

console.log(frequencyMap); // { Илья: 1, Михаил: 1, Александр: 2, Роман: 1, Дмитрий: 1 }`;function sk(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Объект — это коллекция свойств, состоящая из пар ключ/значение. В других языках программирования подобную структуру данных также называют хеш-таблицей или хеш-картой. ",e.jsx("code",{children:"Map"})," – это коллекция ключ/значение, как и объект. Но основное отличие в том, что ",e.jsx("code",{children:"Map"})," позволяет использовать ключи любого типа."]}),e.jsxs("table",{className:"border-collapse mb-2 table-auto w-full",children:[e.jsx("caption",{className:"caption-bottom",children:"Сравнение объектов и массив по сложности по времени"}),e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{className:"border-2 border-gray-300 border-solid p-2 text-left",children:"Операция"}),e.jsxs("th",{className:"border-2 border-gray-300 border-solid p-2 text-left",children:["Объект/",e.jsx("code",{children:"Map"})]}),e.jsx("th",{className:"border-2 border-gray-300 border-solid p-2 text-left",children:"Массив"})]})}),e.jsxs("tbody",{children:[e.jsxs("tr",{children:[e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Вставка"}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:[e.jsx("i",{children:"O"}),"(1)"]}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:[e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),")"]})]}),e.jsxs("tr",{children:[e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Удаление"}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:[e.jsx("i",{children:"O"}),"(1)"]}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:[e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),")"]})]}),e.jsxs("tr",{children:[e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Поиск"}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:[e.jsx("i",{children:"O"}),"(1)"]}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:[e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"log n"}),"), если массив отсортирован"]})]})]})]}),e.jsx("p",{children:"Недостатком объектов является то, что они не упорядочены."}),e.jsx("p",{children:"Объекты не допускают существование двух одинаковых ключей. Представим, что у нас есть массив имён и необходимо подсчитать, как часто встречается каждое имя. Мы можем создать объект, в котором ключами будут имена, а значением — то, сколько раз это имя встречается в массиве. Если имени в объекте нет, то мы добавляем его со значением 1, иначе инкрементируем значение по этому имени."}),e.jsx(k,{value:rk})]})}const ik="/my-textbook/assets/factorial1-N4-Kzin5.png",ak="/my-textbook/assets/factorial2-JLfb35tA.png",ok=`function factorial(n) {
  if (n <= 1) {
    return 1;
  }

  return n * factorial(n - 1);
}`,lk=`let n = 5;
let result = 1;

while (n > 1) {
  result *= n;
  n--;
}`;function ck(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Рекурсия — это когда функция вызывает саму себя с как правило меньшим входным значением. Когда итеративная функция будет использовать циклы ",e.jsx("code",{children:"for"})," и"," ",e.jsx("code",{children:"while"}),", рекурсивная функция будет вызывать саму себя до тех пор, пока не будет достигнут базовый случай."]}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Рекурсивные функции состоят из двух частей:"})}),e.jsxs("ul",{className:"list-disc list-inside mb-2",children:[e.jsx("li",{children:e.jsx("strong",{children:"Базовый случай"})}),e.jsx("li",{children:e.jsx("strong",{children:"Функция, вызывающая саму себя с другим входным значением"})})]}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Существует два типа рекурсии: с одной ветвью и с двумя ветвями. Сначала рассмотрим рекурсию с одной ветвью."})}),e.jsxs("p",{className:"mb-2",children:["Рекурсию лучше всего объяснить на примере. Возьмём ",e.jsx("i",{children:"n"})," факториал из математики, формула для которого:"," ",e.jsxs("code",{children:[e.jsx("i",{children:"n"}),"! = ",e.jsx("i",{children:"n"})," * (",e.jsx("i",{children:"n"})," - 1) * (",e.jsx("i",{children:"n"})," - 2) * ...1"]}),". ",e.jsx("i",{children:"n"}),"! — это всего лишь краткий способ представления совокупного произведения всех чисел от ",e.jsx("i",{children:"n"})," до 1. Более короткий способ записи этого будет следующий:"," ",e.jsxs("code",{children:[e.jsx("i",{children:"n"}),"! = ",e.jsx("i",{children:"n"})," * (",e.jsx("i",{children:"n"})," - 1)!"]}),", то есть ",e.jsx("code",{children:"5! = 5 * 4!"}),". Это показано на изображении и псевдокоде ниже."]}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Представление факториала",className:"mx-auto",height:"780",src:ik,width:"200"})}),e.jsx(k,{value:ok}),e.jsxs("p",{className:"mb-2",children:["В последней строке в операторе ",e.jsx("code",{children:"return"})," функция вызывает саму себя с другим входным значением. Давайте проанализируем это. У нас есть две части:"," ",e.jsx("strong",{children:"базовый случай"})," и ",e.jsx("strong",{children:"вызывающая саму себя функция"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Когда код достигает последней строки с переданным значением 5, мы получаем"," ",e.jsx("code",{children:"5 * factorial(4)"}),", что снова начинает выполнение функции, только теперь со значением 4, после чего мы получаем ",e.jsx("code",{children:"4 * factorial(3)"}),", и затем ",e.jsx("code",{children:"3 * factorial(2)"}),", и, наконец, ",e.jsx("code",{children:"2 * factorial(1)"}),", после чего достигается базовый случай."]}),e.jsxs("p",{className:"mb-2",children:["Но что происходит, когда достигается базовый случай? Когда функция вызывается с переданным значением ",e.jsx("code",{children:"1"}),", возвращается ",e.jsx("code",{children:"1"}),", и теперь это значение можно умножить на 2, что приведёт к ",e.jsx("code",{children:"2"}),", что будет ответом для"," ",e.jsx("code",{children:"2!"}),". Пока мы решили только первую подзадачу. Теперь мы вычисляем"," ",e.jsx("code",{children:"3 * factorial(2)"}),", в результате чего получаем ",e.jsx("code",{children:"6"}),", затем"," ",e.jsx("code",{children:"4 * factorial(3)"}),", получая ",e.jsx("code",{children:"24"}),", и, наконец,"," ",e.jsx("code",{children:"5 * factorial(4)"}),", получая ",e.jsx("code",{children:"120"})," — окончательный ответ для"," ",e.jsx("code",{children:"5!"}),". ",e.jsx("strong",{children:"Самая важная часть"})," заключается в том, что когда мы достигаем базового случая, мы возвращаемся «вверх» по дереву рекурсии, потому что теперь нам нужно «собрать» воедино ответы на наши подзадачи, чтобы прийти к окончательному решению."]}),e.jsx("p",{className:"mb-2",children:"Этот процесс визуализирован ниже."}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Расчёт факториала",className:"mx-auto",height:"780",src:ak,width:"1060"})}),e.jsx("p",{className:"mb-2",children:e.jsxs("strong",{children:["Как уже отмечалось, мы взяли исходную задачу ",e.jsx("code",{children:"factorial(5)"})," и разбили её на более мелкие подзадачи, и, объединив ответы на эти подзадачи, мы смогли решить исходную задачу. Важно отметить, что если в рекурсии нет базового случая, последняя строка будет выполняться вечно, что приведёт к переполнению стека!"]})}),e.jsx("h2",{className:"font-bold my-2",children:"Анализ сложности по времени и памяти"}),e.jsxs("p",{className:"mb-2",children:["Всего выполняется ",e.jsx("i",{children:"n"})," вызовов функции ",e.jsx("code",{children:"factorial"}),", в результате чего сложность по времени составляет ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),"). Кроме того, сложность по памяти также будет равна ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),"). Поскольку выполняется ",e.jsx("i",{children:"n"})," ","рекурсивных вызовов, получается ",e.jsx("i",{children:"n"})," стеков, что приводит к сложности по памяти ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),")."]}),e.jsx("h2",{className:"font-bold my-2",children:"Циклы и рекурсия"}),e.jsx("p",{className:"mb-2",children:"Любой рекурсивный алгоритм можно написать итеративно, и наоборот. Итеративная реализация вычисления факторила будет выглядеть так:"}),e.jsx(k,{value:lk}),e.jsxs("p",{className:"mb-2",children:["В итеративном случае мы сохраняем наш ответ в переменноё с именем"," ",e.jsx("code",{children:"result"})," и уменьшаем ",e.jsx("code",{children:"n"})," до тех пор, пока ",e.jsx("i",{children:"n"})," не станет равным ",e.jsx("code",{children:"1"}),"."]}),e.jsx("h2",{className:"font-bold my-2",children:"Итоги"}),e.jsx("p",{className:"mb-2",children:"Рекурсия станет очень полезной, когда мы доберёмся до деревьев, поскольку её можно легко использовать для поиска в глубину."})]})}const PS="/my-textbook/assets/fibonacci1-QuwxS_DN.png",dk="/my-textbook/assets/one-dimension-dp-PoJhDJS2.png",uk=`function bruteForce(n) {
  if (n <= 1) {
    return n;
  }

  return bruteForce(n - 1) + bruteForce(n - 2);
}`,hk=`function memoization(n, cache) {
  if (n <= 1) {
    return n;
  }

  if (cache[n]) {
    return cache[n];
  }

  cache[n] = memoization(n - 1, cache) + memoization(n - 2, cache);

  return cache[n];
}`,pk=`function dp(n) {
  if (n < 2) { 
    return n;
  }
  
  const dp = [0,1]
  let i = 2;
  
  while (i <= n) {
    const tmp = dp[1];
    dp[1] = dp[0] + dp[1];
    dp[0] = tmp;
    i++;
  }
  
  return dp[1];
}`;function mk(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Динамическое программирование — это, вероятно, тема, которой люди боятся больше всего, но мы постараемся объяснить её интуитивно."}),e.jsx("h2",{className:"font-bold my-2",children:"Что такое динамическое программирование?"}),e.jsxs("p",{className:"mb-2",children:["Проще говоря, это оптимизированная версия рекурсии. Она берёт большую проблему и решает её, разбивая её на более мелкие проблемы. Причина, по которой мы говорим, что это оптимизированная рекурсия, заключается в том, что она более оптимальна, когда речь идет о времени и памяти. Давайте вернёмся к последовательности Фибоначчи, которую мы обсуждали ранее в этом справочнике. Мы рассчитали ",e.jsx("i",{children:"n"}),"-е число Фибоначчи по формуле: ",e.jsx("i",{children:"F"}),"(",e.jsx("i",{children:"n"}),") = ",e.jsx("i",{children:"F"}),"(",e.jsx("i",{children:"n"})," - 1) + ",e.jsx("i",{children:"F"}),"(",e.jsx("i",{children:"n"})," - 2) со следующим кодом:"]}),e.jsx(k,{value:uk}),e.jsxs("p",{className:"mb-2",children:["Мы также установили, что сложность по времени приведённого выше алгоритма равна"," ",e.jsx("i",{children:"O"}),"(2",e.jsx("sup",{children:e.jsx("i",{children:"n"})}),"), поскольку на каждом уровне ",e.jsx("code",{children:"bruteForce"})," создает еще 2 вызова"," ",e.jsx("code",{children:"bruteForce"}),". С помощью динамического программирования мы можем значительно повысить производительность этого алгоритма и довести его с ",e.jsx("i",{children:"O"}),"(2",e.jsx("sup",{children:e.jsx("i",{children:"n"})}),") до ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),")."]}),e.jsx("h2",{className:"font-bold my-2",children:"Динамическое программирование против рекурсии"}),e.jsxs("p",{className:"mb-2",children:["Если мы посмотрим на дерево ",e.jsx("code",{children:"bruteForce(5)"})," ниже, то увидим, что мы вычисляем ",e.jsx("code",{children:"F(2)"})," три раза, что требует дополнительной работы, поскольку мы уже вычислили значение ",e.jsx("code",{children:"F(2)"}),". Это не кажется большой проблемой, когда входные данные малы, но по мере их роста объём проделанной работы растёт экспоненциально, что станет чрезвычайно медленным, если у нас будет что-то вроде вычисления 100 числа Фибоначчи."]}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Последовательность Фибоначчи в виде дерева",className:"mx-auto",height:"580",src:PS,width:"1180"})}),e.jsxs("p",{className:"mb-2",children:["Динамическое программирование говорит нам, что мы можем избежать повторения этих вычислений с помощью концепции, называемой ",e.jsx("strong",{children:"мемоизацией"}),". Идея здесь заключается в том, что после выполнения вычисления мы можем сохранить его в кэше, в данном случае ",e.jsx("code",{children:"F(2)"}),", и если мы снова встретимся с тем же вычислением, мы сможем получить результат из нашего кэша. В этом, по сути, и состоит идея динамического программирования — рекурсия с мемоизацией."]}),e.jsxs("p",{className:"mb-2",children:["Чтобы представить наш кэш, мы можем использовать объект для отслеживания уже выполненных вычислений. Ключом будет число Фибоначчи, а значением будет его возвращаемое значение. Таким образом, мы можем получить данные за время ",e.jsx("i",{children:"O"}),"(1)."]}),e.jsx(k,{value:hk}),e.jsx("h2",{className:"font-bold my-2",children:"Метод динамического программирования сверху"}),e.jsx("p",{className:"mb-2",children:"Вышеупомянутый подход известен как «метод динамического программирования сверху», и это связано с тем, что мы обходим дерево от корня и спускаемся вниз до наших базовых случаев, что в любом случае по сути является рекурсией. Конечно, динамическое программирование сверху писать легче, но существует и динамическое программирование снизу."}),e.jsx("p",{className:"mb-2",children:"Динамическое программирование снизу начинается с базовых случаев и продвигается вверх. На самом деле это делается с помощью циклов и лучше просто потому, что не требует лишних расходов на рекурсивные вызовы. Многие люди считают динамическое программирование снизу «настоящим» динамическим программированием."}),e.jsx("p",{className:"mb-2",children:"Давайте воспользуемся методом динамического программирования снизу для решения той же проблемы."}),e.jsx("h2",{className:"font-bold my-2",children:"Метод динамического программирования снизу"}),e.jsxs("p",{className:"mb-2",children:["Мы вычисляем значение ",e.jsx("i",{children:"n"}),", используя ",e.jsx("i",{children:"n"})," − 1 и ",e.jsx("i",{children:"n"})," − 2. Давайте теперь предположим, что у нас есть массив из 6 элементов, который поможет нам вычислить 5-е число Фибоначчи, где значение, хранящееся в ",e.jsx("code",{children:"i"}),"-м индексе массива, представляет значение Фибоначчи для ",e.jsx("code",{children:"i"}),". Это будет выглядеть следующим образом: ",e.jsx("code",{children:"[0, 1, 1, 2, 3, 5]"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Сложность по времени для этого равна ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),"), и сложность по памяти также равна ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),"). Реальный вопрос здесь в том, нужно ли нам вообще выделять место для всего массива. Если подумать, мы всегда используем только два предыдущих значения для расчёта текущего значения."]}),e.jsx("p",{className:"mb-2",children:"Динамическое программирование сообщает нам, что можно сохранить только два предыдущих значения, а затем использовать их для расчёта следующего значения(ий)."}),e.jsxs("p",{className:"mb-2",children:["Итак, если мы возьмём массив из 2 элементов, мы сможем снизить нашу сложность по памяти до ",e.jsx("i",{children:"O"}),"(1). Сделав это, мы можем просто сохранить число Фибоначчи по 1-му индексу во временной переменной, вычислить следующее число Фибоначчи и перезаписать значение 1-го индекса вновь вычисленным числом Фибоначчи и, наконец, перезаписать 0-й индекс нашей временной переменной. Обратите внимание на следующее: числа над массивом, выделенные белым цветом, представляют индекс, а числа красного цвета представляют числа Фибоначчи."]}),e.jsx(k,{value:pk}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Вычисление пятого числа Фибоначчи с помощью динамического программирования",className:"mx-auto",height:"229",src:dk,width:"1019"})}),e.jsxs("p",{className:"mb-2",children:["С помощью приведённого выше кода мы снизили сложность по времени до ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),"), потому что наш цикл идёт до ",e.jsx("i",{children:"n"}),", и количество наших операций будет линейно зависеть от размера нашего ",e.jsx("i",{children:"n"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Мы также довели сложность по памяти до ",e.jsx("i",{children:"O"}),"(1), потому что независимо от того, насколько велико наше ",e.jsx("i",{children:"n"}),", нам всегда будет нужен массив из 2 элементов."]}),e.jsx("p",{className:"mb-2",children:"Здесь мы использовали только одномерный массив, но также существует двумерное динамическое программирование, которое мы рассмотрим позже."})]})}const fk="/my-textbook/assets/palindromes1-J1ljymZA.png",gk="/my-textbook/assets/palindromes2-_UER2rUI.png",bk="/my-textbook/assets/palindromes3-CFh6bWqW.png",xk=`function longest(s) {
  let length = 0;

  for (let i = 0; i < s.length; i++) {
    // нечётная длина
    let l = i;
    let r = i;

    while (l >= 0 && r < s.length && s[l] === s[r]) {
      if (r - l + 1 > length) {
        length = r - l + 1;
      }

      l--;
      r++;
    }
  }

  return length;
}`,Ek=`function longest(s) {
  let length = 0;

  for (let i = 0; i < s.length; i++) {
    // нечётная длина
    let l = i;
    let r = i;

    while (l >= 0 && r < s.length && s[l] === s[r]) {
      if (r - l + 1 > length) {
        length = r - l + 1;
      }

      l--;
      r++;
    }

    // чётная длина
    l = i;
    r = i + 1;

    while (l >= 0 && r < s.length && s[l] === s[r]) {
      if (r - l + 1 > length) {
        length = r - l + 1;
      }
  
      l--;
      r++;
    }
  }

  return length;
}`,Tk=`function longest2(s) {
  let length = 0;

  for (let i = 0; i < s.length; i++) {
    // нечётная длина
    length = Math.max(length, helper(s, i, i));
    
    // чётная длина
    length = Math.max(length, helper(s, i, i + 1)); 
  }
    
  return length;
}

function helper(s, l, r) {
  let maxLength = 0;

  while (l >= 0 && r < s.length && s[l] === s[r]) {
    if (r - l + 1 > maxLength) {
      maxLength = r - l + 1;
    }

    l--;
    r++;
  }

  return maxLength;
}`;function yk(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Удивительно, но задачи с палиндромами также можно решить с помощью динамического программирования. Хотя шаблон, по которому они решаются, не является типичным подходом DFS/мемоизации/динамического программирования снизу. Лучше всего продемонстрировать это на примере."}),e.jsx("p",{className:"mb-2",children:"Предположим, перед нами стоит следующий вопрос:"}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Дана строка S, верните длину самой длинной палиндромной подстроки внутри S."})}),e.jsx("p",{className:"mb-2",children:"Палиндром — это последовательность символов, которая одинаково читается как в прямом, так и в обратном направлении. Например, «racecar» или «aba». Итак, по определению палиндромная подстрока — это непрерывная часть строки, которая является палиндромом."}),e.jsx("p",{className:"mb-2",children:"В статье о методе двух указателей мы обсуждали, как определить, является ли строка палиндромом. Однако здесь мы сталкиваемся с вариацией, а именно нахождением длины самой длинной палиндромной подстроки."}),e.jsx("h2",{className:"font-bold my-2",children:"Подход грубой силы"}),e.jsxs("p",{className:"mb-2",children:["Самый простой способ решить эту задачу — просмотреть все возможные подстроки и определить, являются ли они палиндромами, используя метод двух указателей. Если"," ",e.jsx("i",{children:"n"})," — количество символов в нашей строке, а количество подстрок, которые может образовывать каждый символ, линейно увеличивается до ",e.jsx("i",{children:"n"}),", всего у нас будет ",e.jsx("i",{children:"n"}),e.jsx("sup",{children:"2"})," подстрок. Затем, учитывая эти ",e.jsx("i",{children:"n"}),e.jsx("sup",{children:"2"})," подстрок и самую длинную подстроку длиной ",e.jsx("i",{children:"n"}),", общая сложность по времени достигает ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),e.jsx("sup",{children:"3"}),")."]}),e.jsx("h2",{className:"font-bold my-2",children:"Подход динамического программирования"}),e.jsxs("p",{className:"mb-2",children:["Если мы сравним первый и последний символ и они равны, подзадача состоит в том, чтобы определить, является ли внутренняя строка, за исключением символов по индексам ",e.jsx("code",{children:"0"})," и ",e.jsx("code",{children:"length - 1"}),", палиндромом. Если внутренняя строка является палиндромом, как и самые внешние символы, мы знаем, что вся подстрока является палиндромом."]}),e.jsxs("p",{className:"mb-2",children:["Подход к этой проблеме с помощью динамического программирования говорит нам, что сначала мы должны решить подзадачу. Учитывая строку"," ",e.jsx("code",{children:"s = 'abaab'"}),", мы можем начать с середины и расширяться наружу. Однако это даст нам только палиндромные подстроки с символом"," ",e.jsx("code",{children:"a"})," в середине. Это не гарантирует, что мы получим самую длинную палиндромную подстроку, а в случае ",e.jsx("code",{children:"s"})," этот подход не работает, поскольку самая длинная палиндромная подстрока — это ",e.jsx("code",{children:"baab"}),", которая не образуется путем расширения из ",e.jsx("code",{children:"a"})," по 2-му индексу."]}),e.jsx("p",{className:"mb-2",children:e.jsxs("strong",{children:["На изображении ниже показаны все подстроки, где символ ",e.jsx("code",{children:"a"})," по индексу 2 является средним символом."]})}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Полиндромные подстроки для символа из середины строки",className:"mx-auto",height:"360",src:fk,width:"760"})}),e.jsxs("p",{className:"mb-2",children:["Поскольку не гарантируется, что выбор среднего символа приведет к созданию самой длинной палиндромной подстроки, единственный способ — выбрать каждый символ и расширить его, используя левый и правый указатель. Для этого мы можем запустить цикл ",e.jsx("code",{children:"for"})," по нашей строке и на каждой итерации устанавливать начальную позицию левого и правого указателя на текущий символ. Затем, пока наши левая и правая стороны не выходят за пределы, а символ слева соответствует символу справа, мы можем уменьшать левый и увеличивать правый указатели (это часть расширения). Затем мы можем взять разницу между нашим левым и правым указателем и добавить"," ",e.jsx("code",{children:"1"}),", чтобы включить все элементы. Это показано на изображении и в коде ниже:"]}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Полиндромные подстроки для каждого символа в качестве середины подстроки",className:"mx-auto",height:"660",src:gk,width:"1200"})}),e.jsx(k,{value:xk}),e.jsxs("p",{className:"mb-2",children:["Вы заметили небольшую ошибку? Самая длинная палиндромная подстрока имеет длину"," ",e.jsx("code",{children:"3"}),", но мы ясно видим, что это должна быть длина ",e.jsx("code",{children:"baab"})," —"," ",e.jsx("code",{children:"4"}),", которую наш алгоритм не смог учесть. Вы также могли заметить, что все приведённые выше палиндромы имеют нечётную длину. Это потому, что наша начальная подстрока имеет длину ",e.jsx("code",{children:"1"}),", и когда мы расширяем слева и справа, мы добавляем ",e.jsx("code",{children:"2"})," к нашей длине. Конечно, сумма чётного и нечётного числа всегда нечётна, в результате чего мы получаем самую длинную палиндромную подстроку нечётной длины."]}),e.jsx("h2",{className:"font-bold my-2",children:"Подстроки чётной длины"}),e.jsxs("p",{className:"mb-2",children:["Чтобы гарантировать, что мы получим самую длинную палиндромную подстроку, чётную или нечётную, нам нужно начать с начальной подстроки чётной длины. Таким образом, мы учтём и подстроки чётной длины. Чтобы вычислить самую длинную палиндромную подстроку, мы можем вернуть ",e.jsx("code",{children:"Math.max(нечётная, чётная)"}),". На изображении ниже мы начинаем с ",e.jsx("code",{children:"ab"})," и пытаемся расшириться наружу. Поскольку ",e.jsx("code",{children:"ab"})," не является палиндромом, мы никогда не войдём в цикл"," ",e.jsx("code",{children:"while"}),". Когда мы доберёмся до ",e.jsx("code",{children:"aa"}),", расширение наружу даст нам ",e.jsx("code",{children:"baab"}),", прежде чем наш правый указатель выйдет за пределы. Это самая длинная палиндромная подстрока с длиной ",e.jsx("code",{children:"4"}),"."]}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Полиндромные подстроки для каждой пары символов в качестве середины подстроки",className:"mx-auto",height:"560",src:bk,width:"1200"})}),e.jsx("p",{className:"mb-2",children:"Наш окончательный код будет выглядеть следующим образом:"}),e.jsx(k,{value:Ek}),e.jsx("p",{className:"mb-2",children:"Или переработанная версия со вспомогательной функцией, обеспечивающая более чистый код:"}),e.jsx(k,{value:Tk}),e.jsx("h2",{className:"font-bold my-2",children:"Сложность по времени и памяти"}),e.jsxs("p",{className:"mb-2",children:["Решение динамического программирования доводит нашу сложность по времени ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),e.jsx("sup",{children:"3"}),") до ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),e.jsx("sup",{children:"2"}),"), поскольку у нас есть ",e.jsx("i",{children:"n"})," символов, и формирование подстроки для каждого символа также требует ",e.jsx("i",{children:"n"}),"."]}),e.jsx("h2",{className:"font-bold my-2",children:"Итоги"}),e.jsx("p",{className:"mb-2",children:"Переработанная версия кода была добавлена для полноты, поскольку она позволяет избежать написания дублирующегося кода."})]})}const Sk="/my-textbook/assets/permutations-Zwb7YYEw.png",Nk="/my-textbook/assets/permutations-resursive-wCp_e1gR.png",jk="/my-textbook/assets/permutations-iterative-cRRL7A1f.png",Ak=`function permutationsRecursive(nums) {
  return helper(0, nums);
}

function helper(i, nums) {
  if (i === nums.length) {
    return [[]];
  }

  const resultPermutations = [];
  const permutations = helper(i + 1, nums);

  for (let permutation of permutations) {
    for (let j = 0; j < permutation.length + 1; j++) {
      const permutationCopy = [...permutation];
      permutationCopy.splice(j, 0, nums[i]);
      resultPermutations.push(permutationCopy);
    }
  }

  return resultPermutations; 
}`,_k=`function permutationsIterative(nums) {
    let permutations = [[]];

    for (let n of nums) {
        const nextPermutations = new Array();
        for (let permutation of permutations) {
            for (let i = 0; i < permutation.length + 1; i++) {
                const permutationCopy = [...permutation];
                permutationCopy.concat(permutation);
                permutationCopy.splice(i, 0, n);
                nextPermutations.push(permutationCopy);
            }  
        }

        permutations = nextPermutations;
    }

    return permutations;
}`;function vk(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Говоря математическим языком, перестановка множества различных объектов — это упорядоченное расположение этих объектов. В отличие от сочетаний, мы хотим использовать все данные нам элементы, то есть не пропускать элементы. Если у нас есть 4 элемента, мы можем создавать перестановки, переставляя элементы. Пока порядок расположения элементов различен, мы будем считать его допустимой перестановкой."}),e.jsx("h2",{className:"font-bold my-2",children:"Пример использования перестановок"}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Дан список чисел, верните все возможные различные перестановки чисел."})}),e.jsxs("p",{className:"mb-2",children:["Предположим, что ",e.jsx("code",{children:"nums = [1, 2, 3, 4]"}),". При каждой перестановке мы можем выбрать три других числа, исключая само число. Итак, для ",e.jsx("code",{children:"1"})," мы можем выбрать ",e.jsx("code",{children:"[2, 3, 4]"}),", и для ",e.jsx("code",{children:"2"})," мы можем выбрать"," ",e.jsx("code",{children:"[1, 3, 4]"}),". Обратите внимание, что элементы различны, но в то же время, если мы изменим порядок, у нас будет новая, допустимая перестановка. Вот как будут выглядеть визуализированные перестановки."]}),e.jsx("p",{className:"mb-2",children:e.jsxs("strong",{children:["Изображение ниже демонстрирует, как мы можем генерировать перестановки для всех чисел, если дан список ",e.jsx("code",{children:"[1, 2, 3, 4]"}),". Число перестановок здесь равно"," ",e.jsxs("code",{children:[e.jsx("i",{children:"n"}),"!"]}),", где ",e.jsx("i",{children:"n"})," — количество элементов в списке. ",e.jsx("code",{children:"4! = 24"}),", следовательно, получаем ",e.jsx("code",{children:"24"})," перестановки."]})}),e.jsx("img",{alt:"Все возможные перестановки",className:"mb-2",height:"701",src:Sk,width:"1601"}),e.jsxs("p",{className:"mb-2",children:["Каждая перестановка будет иметь размер ",e.jsx("i",{children:"n"}),", а количество перестановок, которые мы можем создать, равно"," ",e.jsxs("code",{children:[e.jsx("i",{children:"n"}),"!"]}),". Чтобы упростить реализацию, для каждого ",e.jsx("i",{children:"n"})," мы создадим копию наших текущих перестановок и для каждой из этих перестановок вставим ",e.jsx("i",{children:"n"})," в разные позиции, что даст нам новые перестановки. Например, если у нас есть ",e.jsx("code",{children:"[1, 2]"})," и"," ",e.jsx("code",{children:"n = 3"}),", мы сначала создадим копию ",e.jsx("code",{children:"[1, 2]"})," и будем выполнять цикл до ",e.jsx("code",{children:"[1, 2].length + 1"}),", и вставим ",e.jsx("code",{children:"3"})," в каждую позицию от ",e.jsx("code",{children:"0"})," до ",e.jsx("code",{children:"[1, 2].length + 1"}),", что даст"," ",e.jsx("code",{children:"[3, 1, 2]"}),", ",e.jsx("code",{children:"[1, 3, 2]"}),", ",e.jsx("code",{children:"[1, 2, 3]"}),". Затем мы сделаем то же самое для ",e.jsx("code",{children:"n = 4"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Для вставки в начало массива сложность по времени равна ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),"). Это в сочетании с ",e.jsx("i",{children:"n"}),"! означает, что наша сложность по времени равна ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"})," ⋅ ",e.jsx("i",{children:"n"}),"!), что технически не является стопроцентной точностью, о чем мы поговорим чуть позже."]}),e.jsx("p",{className:"mb-2",children:"Мы собираемся реализовать два решения: рекурсивное и итеративное."}),e.jsxs("ul",{children:[e.jsxs("li",{className:"mb-2",children:[e.jsx("strong",{children:"Рекурсивное решение"}),e.jsxs("p",{className:"mb-2",children:["Для рекурсивного решения мы можем использовать подход, описанный ранее. Большая часть работы выполняется с использованием функции ",e.jsx("code",{children:"helper"}),", которая принимает ",e.jsx("code",{children:"i"})," и ",e.jsx("code",{children:"nums"}),". ",e.jsx("code",{children:"i"})," — наш указатель, по которому мы проходим, а ",e.jsx("code",{children:"nums"})," — наш заданный список, который в данном случае равен ",e.jsx("code",{children:"[1, 2, 3, 4]"}),". Самая сложная часть этого решения — это, пожалуй, вложенный цикл ",e.jsx("code",{children:"for"}),"."]}),e.jsx(k,{value:Ak}),e.jsx("img",{alt:"Рекурсивный поиск перестановок",className:"mb-2",height:"300",src:Nk,width:"280"})]}),e.jsxs("li",{className:"mb-2",children:[e.jsx("strong",{children:"Итеративное решение"}),e.jsxs("p",{className:"mb-2",children:["В итеративном решении вместо выполнения рекурсивного вызова мы просто будем перебирать числа, ",e.jsx("code",{children:"for (const n of nums)"}),". В конце каждой итерации мы можем обновить наши ",e.jsx("code",{children:"permutations"})," до значений"," ",e.jsx("code",{children:"nextPermutations"}),", чтобы не создавать одну и ту же копию на каждой итерации."]}),e.jsx(k,{value:_k}),e.jsx("p",{className:"mb-2",children:e.jsxs("strong",{children:["Визуализация того, как мы создаём итеративное решение. Различные цвета используются для обозначения того, что на каждой итерации у нас есть новая копия ",e.jsx("code",{children:"permutation"})," и что мы не используем одну и ту же копию повсюду."]})}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Итеративный поиск перестановок",className:"mx-auto",height:"380",src:jk,width:"700"})})]})]}),e.jsx("h2",{className:"font-bold my-2",children:"Сложность по времени"}),e.jsxs("p",{className:"mb-2",children:["Если количество предоставленных нам элементов равно ",e.jsx("i",{children:"n"}),", то для каждого элемента может быть ",e.jsx("i",{children:"n"}),"! перестановок. Однако внутри каждого цикла"," ",e.jsx("code",{children:"for"})," в обоих решениях есть еще один цикл ",e.jsx("code",{children:"for"}),", который работает от ",e.jsx("code",{children:"0"})," до длины каждой перестановки, которая равна ",e.jsx("i",{children:"n"}),", поскольку мы используем все элементы. ",e.jsx("i",{children:"n"})," ⋅ ",e.jsx("i",{children:"n"})," = ",e.jsx("i",{children:"n"}),e.jsx("sup",{children:"2"}),". В результате мы получаем ",e.jsx("i",{children:"n"}),e.jsx("sup",{children:"2"})," ⋅ ",e.jsx("i",{children:"n"}),"!, что даёт ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),e.jsx("sup",{children:"2"})," ⋅ ",e.jsx("i",{children:"n"}),"!)."]}),e.jsx("h2",{className:"font-bold my-2",children:"Итоги"}),e.jsx("p",{className:"mb-2",children:"Это всё, что мы рассмотрим на тему бэктрекинга в этом справочнике. Это решение для перестановок могло показаться ошеломляющим, но это лишь один из способов, которым это можно сделать."})]})}const Rk="/my-textbook/assets/prefix-sum-D6JCYqXW.png",wk=`class PrefixSum {
  constructor(nums) {
    this.prefix = [];

    let total = 0;

    for (const num of nums) {
      total += num;
      this.prefix.push(total);
    }
  }
}`,Ik=`rangeSum(left, right) {
  const leftPrefix = left > 0 ? this.prefix[left - 1] : 0;
  const rightPrefix = this.prefix[right];
  
  return rightPrefix - leftPrefix;
}`;function Ck(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Префиксная сумма — это очень полезная техника, которую можно использовать с массивами. Представим, что у нас есть массив ",e.jsx("code",{children:"nums = [2, -1, 3, -3, 4]"}),". Основная идея состоит в том, что мы создаём массив, скажем, ",e.jsx("code",{children:"prefix"}),", и заполняем его так, чтобы значение его индекса ",e.jsx("code",{children:"i"})," обозначало текущую сумму подмассива ",e.jsx("code",{children:"nums"}),", который начинается с ",e.jsx("code",{children:"0"})," и доходит до индекса ",e.jsx("code",{children:"i"})," включительно. Это чрезвычайно полезно, когда мы хотим получить сумму подмассива, заканчивающегося произвольным индексом ",e.jsx("code",{children:"i"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Таким образом, для массива ",e.jsx("code",{children:"[2, -1, 3, -3, 4]"})," префикс будет"," ",e.jsx("code",{children:"[2, 1, 4, 1, 5]"}),"."]}),e.jsx("p",{className:"mb-2",children:"Посмотрим на задачу, демонстрирующую эту концепцию."}),e.jsx("p",{className:"mb-2",children:"Дан массив значений, необходимо разработать структуру данных, которая может возвращать сумму подмассива значений."}),e.jsxs("p",{className:"mb-2",children:["Создадим класс ",e.jsx("code",{children:"PrefixSum"}),", который принимает массив ",e.jsx("code",{children:"nums"}),", для которого мы хотим рассчитывать сумму подмассива значений. Мы можем пройти циклом по ",e.jsx("code",{children:"nums"})," и добавить каждое число в переменную"," ",e.jsx("code",{children:"total"}),". Будем добавлять ",e.jsx("code",{children:"total"})," в массив"," ",e.jsx("code",{children:"prefix"})," на каждой итерации."]}),e.jsx(k,{value:wk}),e.jsxs("p",{className:"mb-2",children:["После вычисления суммы, мы можем вычислить сумму любого подмассива, начинающегося с индекса ",e.jsx("code",{children:"left"})," и заканчивающегося индексом ",e.jsx("code",{children:"right"})," за"," ",e.jsx("i",{children:"O"}),"(1) по времени, потому что нам не нужно её пересчитывать. Мы можем сделать это так: ",e.jsx("code",{children:"prefix[right] - prefix[left - 1]"}),". ",e.jsx("code",{children:"-1"})," ","гарантирует, что мы исключим сумму всех чисел до ",e.jsx("code",{children:"left"}),". Однако, если"," ",e.jsx("code",{children:"left === 0"}),", будем отнимать 0, так как нам не нужно ничего вычитать."]}),e.jsx(k,{value:Ik}),e.jsxs("p",{className:"mb-2",children:["Визуализируем, как благодаря префиксной сумме сумма подмассива вычисляется за"," ",e.jsx("i",{children:"O"}),"(1) по времени. Возьмём два случая: ",e.jsx("code",{children:"L = 2"}),", ",e.jsx("code",{children:"R = 3"})," ","и ",e.jsx("code",{children:"L = 0"}),", ",e.jsx("code",{children:"R = 3"})," (когда префикс для первого элемента не существует)."]}),e.jsx("img",{alt:"Расчёт префиксной суммы",height:"400",src:Rk,width:"1600"}),e.jsx("h2",{className:"font-bold my-2",children:"Сложность по времени"}),e.jsxs("p",{className:"mb-2",children:["Сложность по времени изначального расчёта префиксной суммы — ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),"). Однако расчёт суммы подмассива значений будет выполняться за ",e.jsx("i",{children:"O"}),"(1) операций независимо от того, насколько массив большой."]}),e.jsx("h2",{className:"font-bold my-2",children:"Итоги"}),e.jsx("p",{className:"mb-2",children:"Префиксные суммы распространены повсеместно и могут быть чрезвычайно полезны для массивов чисел всякий раз, когда необходимо сохранять текущую сумму. Суммирование — не единственная операция, которую мы можем выполнить с помощью этой техники. Например, мы можем рассчитать префиксное произведение. Также мы можем сделать обратное и получить постфиксную сумму, что потребует ту же самую операцию, только в обратном порядке."})]})}const Ok="/my-textbook/assets/enqueue-bquerH9H.png",kk="/my-textbook/assets/dequeue-QppbPPH8.png",Lk=`enqueue(val) {
  const newNode = new ListNode(value);

  if (this.tail !== null) {
  // очередь не пуста
    this.tail.next = newNode;
    this.tail = this.tail.next;
  } else {
  // очередь пуста
    this.head = newNode;
    this.tail = newNode;
  }
}`,Dk=`dequeue() {
  if (this.head === null) {
  // очередь пуста
    return;
  }

  // удаляет первый узел и возвращает его значение
  const value = this.head.value;

  this.head = this.head.next;

  if (!this.head) {
    this.tail = null;
  }

  return value;
}`;function Mk(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Очереди похожи на стеки, за исключением того, что они следуют так называемому принципу FIFO (First in First Out). Примером из реального мира может служить очередь в банке. Первый человек, который встанет в очередь, будет первым, кого обслужат. Примером из мира программного обеспечения может служить работа принтера. Например, если несколько человек пытаются распечатать документы, документы будут распечатаны в порядке поступления команд."}),e.jsx("h2",{className:"font-bold my-2",children:"Реализация и операции"}),e.jsx("p",{className:"mb-2",children:"Чаще всего очереди реализуют с использованием связного списка."}),e.jsxs("p",{className:"mb-2",children:["Очереди поддерживают две операции: ",e.jsx("code",{children:"enqueue"})," (постановка в очередь) и"," ",e.jsx("code",{children:"dequeue"})," (удаление из очереди)."]}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Очередь — это просто абстрактный интерфейс (как и стек), который может быть реализован несколькими структурами данных при условии, что они выполняют контракт реазилации операций постановки в очередь и удаления из очереди."})}),e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("strong",{children:"Постановка в очередь"}),e.jsxs("p",{className:"mb-2",children:["Операция постановки в очередь добавляет элементы в конец очереди до тех пор, пока не будет достигнут размер очереди. Поскольку добавление в конец очереди не требует смещения элементов, эта операция выполняется за ",e.jsx("i",{children:"O"}),"(1). Следующий псевдокод и изображение демонстрируют это."]}),e.jsx(k,{value:Lk}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Постановка в очередь",className:"mx-auto",height:"200",src:Ok,width:"1040"})})]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Удаление из очереди"}),e.jsx("p",{className:"mb-2",children:"Операция удаления из очереди удаляет элемент из начала очереди и возвращает этот элемент. Следующий псевдокод и изображение демонстрируют это."}),e.jsx(k,{value:Dk}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Удаление из очереди",className:"mx-auto",height:"200",src:kk,width:"800"})})]})]}),e.jsxs("p",{className:"mb-2",children:["Очереди также можно реализовать с помощью массивов, однако это становится немного сложнее, если вы хотите поддерживать эффективность операций ",e.jsx("code",{children:"enqueue"})," и"," ",e.jsx("code",{children:"dequeue"}),". При реализации с помощью массива сложность"," ",e.jsx("code",{children:"dequeue"})," составит ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),") по времени из-за сдвига элементов."]}),e.jsx("p",{className:"mb-2",children:e.jsxs("strong",{children:["Существует также разновидность очереди, которая называется двусторонней очередью (",e.jsx("code",{children:"deque"}),"). Двусторонняя очередь позволяет добавлять и удалять элементы как и сначала, так и с конца очереди."]})}),e.jsx("h2",{className:"font-bold my-2",children:"Итоги"}),e.jsxs("table",{className:"border-collapse mb-2 table-auto w-full",children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{className:"border-2 border-gray-300 border-solid p-2 text-left",children:"Операция"}),e.jsx("th",{className:"border-2 border-gray-300 border-solid p-2 text-left",children:"Сложность по времени"})]})}),e.jsxs("tbody",{children:[e.jsxs("tr",{children:[e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Постановка в очередь"}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:[e.jsx("i",{children:"O"}),"(1)"]})]}),e.jsxs("tr",{children:[e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Удаление из очереди"}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:[e.jsx("i",{children:"O"}),"(1)"]})]})]})]}),e.jsx("p",{className:"mb-2",children:"Одним из наиболее важных вариантов использования очереди является поиск в ширину для деревьев и графов, который мы рассмотрим в будущей статье."})]})}const Fk="/my-textbook/assets/quick-sort-partition-hRd9Ecr5.png",Pk=`function quickSort(array, start, end) {
  if (end - start + 1 <= 1) {
      return array;
  }

  const pivot = array[end];
  let left = start;

  for (let i = start; i < end; i++) {
      if (array[i] < pivot) {
          const tmp = array[left];
          array[left] = array[i];
          array[i] = tmp;
          left++;
      }
  }

  array[end] = array[left];
  array[left] = pivot;

  quickSort(array, start, left - 1);
  quickSort(array, left + 1, end);

  return array;
}`;function Uk(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Идея быстрой сортировки состоит в том, чтобы выбрать индекс, который называется"," ",e.jsx("code",{children:"pivot"})," (опорный элемент), и разделить массив так, чтобы каждое значение слева было меньше или равно ",e.jsx("code",{children:"pivot"}),", а каждое значение справа было больше, чем опорный элемент."]}),e.jsx("h2",{className:"font-bold my-2",children:"Выбор опорного элемента"}),e.jsx("p",{className:"mb-2",children:"В целом, существует несколько проверенных и опробованных вариантов выбора опорного элемента:"}),e.jsxs("ul",{className:"list-disc list-inside",children:[e.jsx("li",{children:"Выбор первого индекса"}),e.jsx("li",{children:"Выбор последнего индекса"}),e.jsx("li",{children:"Выбор медианы первого, среднего и последнего элементов"}),e.jsx("li",{children:"Выбор случайного опорного элемента"})]}),e.jsx("p",{className:"mb-2",children:"Вы можете спросить, какой опорный элемент выбрать? Это зависит от самих данных, как от размера, так и от начального порядка. Для упрощения задачи в этой статье мы будем использовать последний индекс в качестве опорного элемента."}),e.jsx("h2",{className:"font-bold my-2",children:"Реализация"}),e.jsxs("p",{className:"mb-2",children:["Мы выберем ",e.jsx("code",{children:"pivot"}),", если мы ещё не достигли базового случая, который представляет собой массив из 1 элемента, и выберем указатель ",e.jsx("code",{children:"left"}),", который сначала будет указывать на самый левый элемент текущего подмассива. Затем мы пройдёмся по нашему массиву, и если мы найдём элемент, меньший, чем наш элемент"," ",e.jsx("code",{children:"pivot"}),", мы будем менять местами текущий элемент с элементом, на который указывает указатель ",e.jsx("code",{children:"left"}),", и увеличивать указатель"," ",e.jsx("code",{children:"left"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Как только мы пройдёмся по массиву, мы перенесём элемент ",e.jsx("code",{children:"left"})," в конец массива и переместим опорный элемент в позицию ",e.jsx("code",{children:"left"}),". Это имеет смысл, поскольку как только мы пройдём по всем элементам, меньшим, чем элемент"," ",e.jsx("code",{children:"pivot"}),", и поместим их слева от опорного элемента, ",e.jsx("code",{children:"left"})," ","теперь будет указывать на первый элемент, который больше опорного элемента. Каждый элемент после него также будет больше опорного элемента. Вот почему мы перемещаем элемент ",e.jsx("code",{children:"left"})," в конец, а затем перемещаем опорный элемент в позицию"," ",e.jsx("code",{children:"left"}),"."]}),e.jsxs("p",{className:"mb-2",children:["В результате все элементы, меньшие или равные ",e.jsx("code",{children:"pivot"}),", оказываются слева, а остальные — справа."]}),e.jsxs("p",{className:"mb-2",children:["Возьмём для сортировки массив ",e.jsx("code",{children:"[6, 2, 4, 1, 3]"}),"."]}),e.jsx("h2",{className:"font-bold my-2",children:"Разделение массива"}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Сортировка вставками",className:"mx-auto",height:"600",src:Fk,width:"1180"})}),e.jsxs("p",{className:"mb-2",children:["Как видно выше, мы отсортируем результирующий массив так, чтобы все элементы слева были меньше элемента ",e.jsx("code",{children:"pivot"}),", а остальные находились справа."]}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Мы не будем визуализировать все шаги, но этот процесс будет выполняться рекурсивно, пока мы не достигнем базового случая. Важно отметить, что мы не выделяем новую память для разделения массивов. Мы просто перемещаем указатели, чтобы каждый раз работать с меньшей частью исходного массива, пока не получим отсортированный массив."})}),e.jsx("p",{className:"mb-2",children:"Псевдокод будет выглядеть следующим образом."}),e.jsx(k,{value:Pk}),e.jsx("h2",{className:"font-bold my-2",children:"Сложность по времени"}),e.jsxs("p",{className:"mb-2",children:["Быстрая сортировка похожа на сортировку слиянием. Сложность по времени также будет составлять ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n log n"}),"), однако только в лучшем случае. В лучшем случае мы выбираем ",e.jsx("code",{children:"pivot"})," так, чтобы всегда можно было выполнить разделение посередине. Если массив каждый раз идеально разделён посередине, а опорным элементом является медиана, то возможно получить сложность ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n log n"}),") как конечный результат."]}),e.jsxs("p",{className:"mb-2",children:["Выбор опорного элемента, в котором ",e.jsx("code",{children:"pivot"})," является наименьшим или наибольшим элементом, приведёт к худшему результату — ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),e.jsx("sup",{children:"2"}),"). Это связано с тем, что в худшем случае выбор наибольшего или наименьшего элемента в массиве приведёт к худшему выбору опорного элемента, а выбор худшего опорного элемента каждый раз будет означать, что у вас есть ",e.jsx("i",{children:"n"})," ","групп для перебора, в результате чего получается сложность ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),e.jsx("sup",{children:"2"}),")."]}),e.jsx("h2",{className:"font-bold my-2",children:"Устойчивость"}),e.jsx("p",{className:"mb-2",children:"Быстрая сортировка не является стабильным алгоритмом, поскольку она переставляет несмежные элементы."}),e.jsxs("p",{className:"mb-2",children:["Возьмём массив ",e.jsx("code",{children:"[7, 3, 7, 4, 5]"}),", где у нас есть две 7-ки, одна по 0-му индексу и одна по 2-му индексу. В этом случае, если нашим опорным элементом является последний 4-й индекс, мы получим ",e.jsx("code",{children:"[3, 4, 7, 7, 5]"}),", где 7 из 0-го индекса будет находиться в 3-м индексе, что означает, что относительный порядок 7-к нарушен."]})]})}const Bk="/my-textbook/assets/segment-tree-gZRG3xbq.png",Hk="/my-textbook/assets/segment-tree-update-q7GR1Fzd.png",Gk="/my-textbook/assets/segment-tree-range-query-base-case-EJqJy9E2.png",$k="/my-textbook/assets/segment-tree-range-is-in-right-sub-tree-zaWodL3n.png",zk="/my-textbook/assets/segment-tree-range-is-in-left-sub-tree-mdj1XJkO.png",Wk="/my-textbook/assets/segment-tree-range-overlaps-with-right-and-left-sub-tree-V8XuvSTd.png",Vk=`class SegmentTree {
  left = null;
  right = null;

  constructor(total, L , R) {
    this.sum = total;
    this.L = L;
    this.R = R;
  }

  ...
}`,Kk=`static build(nums, L, R) {
  if (L === R) {
    return new SegmentTree(nums[L], L, R);
  }

  const M = Math.floor((L + R) / 2);
  const root = new SegmentTree(0, L, R);

  root.left = SegmentTree.build(nums, L, M);
  root.right =  SegmentTree.build(nums, M + 1, R);
  root.sum = root.left.sum + root.right.sum;

  return root;
}`,Yk=`update(index, val) {
  if (this.L === this.R) {
    this.sum = val;
    return;
  }

  const M = Math.floor((this.L + this.R) / 2);

  if (index > M) {
    this.right.update(index, val);
  } else {
    this.left.update(index, val);
  }

  this.sum = this.left.sum + this.right.sum;
}`,qk=`rangeQuery(L, R) {
  if (L === this.L && R === this.R) {
    return this.sum;
  }

  const M = Math.floor((this.L + this.R) / 2);

  if (L > M) {
    return this.right.rangeQuery(L, R);
  }

  if (R <= M) {
    return this.left.rangeQuery(L, R);
  }
  
  return this.left.rangeQuery(L, M) + this.right.rangeQuery(M + 1, R);
}`,Xk=`if (L === this.L && R === this.R) {
  return this.sum;
}`,Zk=`if (L > M) {
  return this.right.rangeQuery(L, R);
}`,Qk=`if (R <= M) {
  return this.left.rangeQuery(L, R);
}`,Jk="return this.left.rangeQuery(L, M) + this.right.rangeQuery(M + 1, R);";function e4(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Структура деревьев отрезков — одна из самых сложных среди древовидных структур, но мы постараемся максимально её упростить."}),e.jsx("h2",{className:"font-bold my-2",children:"Мотивация"}),e.jsx("p",{className:"mb-2",children:"Предположим, нам дан диапазон значений. Затем, учитывая левый и правый указатели, определяющие диапазон, мы хотим иметь возможность вычислить сумму диапазона. Это фундаментальная хрестоматийная проблема, связанная с деревьями отрезков, и именно на ней мы сосредоточимся."}),e.jsxs("p",{className:"mb-2",children:["Решение этой проблемы с использованием массива тривиально, для прохождения диапазона в худшем случае требуется ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),") времени. Если мы хотим обновить значение в массиве, это делается за ",e.jsx("i",{children:"O"}),"(1) по времени. Деревья отрезков обещают реализовать как обновление, так и выполнение запросов за ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"log n"}),") по времени. Хотя это увеличивает накладные расходы на функцию обновления, компромисс заключается в том, что наша функция поиска будет работать намного быстрее."]}),e.jsx("p",{className:"mb-2",children:"Идея не слишком отличается от сортировки слиянием и состоит в том, чтобы разбить массив на отрезки (точнее, с коэффициентом ветвления, равным двум), и чтобы каждый узел представлял постепенно меньший диапазон. Мы разбиваем массив на две равные половины, и каждый узел представляет диапазон (который по сути является индексом массива)."}),e.jsx("p",{className:"mb-2",children:"На изображении ниже показано, как строится дерево отрезков с использованием массива. Числа красного цвета представляют собой сумму диапазона в данном узле. Числа внутри узла представляют собой сам диапазон, включая оба числа. Текст синего цвета представляет формулу для расчёта диапазона."}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Дерево отрезков",className:"mx-auto",height:"420",src:Bk,width:"880"})}),e.jsx("h2",{className:"font-bold my-2",children:"Реализация"}),e.jsxs("p",{className:"mb-2",children:["Подобно кучам, деревья отрезков могут быть построены с использованием массивов. Напомним, что кучи представляют собой почти полные бинарные деревья, в которых каждый уровень заполнен, за исключением, возможно, последнего уровня. Однако деревья отрезков имеют пробелы на последнем уровне, что затрудняет их реализацию с помощью массивов. Итак, мы реализуем их с помощью объектов класса"," ",e.jsx("code",{children:"SegmentTree"}),", которые можно представить как узлы."]}),e.jsx("h2",{className:"font-bold my-2",children:"Конструктор дерева отрезков"}),e.jsxs("p",{className:"mb-2",children:["В нашем конструкторе класса ",e.jsx("code",{children:"SegmentTree"})," нам понадобится следующее:"]}),e.jsxs("ol",{className:"list-decimal list-inside",children:[e.jsxs("li",{className:"ml-6",children:[e.jsx("code",{children:"right"})," и ",e.jsx("code",{children:"left"})," указатели на правый и левый дочерние узлы (аналогично бинарным деревьям)."]}),e.jsxs("li",{className:"ml-6",children:[e.jsx("code",{children:"sum"}),", отслеживает сумму на каждом узле."]}),e.jsxs("li",{className:"ml-6",children:["В любом заданном узле ",e.jsx("code",{children:"L"})," и ",e.jsx("code",{children:"R"})," обозначают левую и правую границы содержащегося диапазона соответственно."]})]}),e.jsx(k,{value:Vk}),e.jsx("h2",{className:"font-bold my-2",children:"Построение дерева отрезков"}),e.jsxs("p",{className:"mb-2",children:["Принимая массив ",e.jsx("code",{children:"nums"}),", ",e.jsx("code",{children:"L"})," и ",e.jsx("code",{children:"R"}),", мы можем применить рекурсивный подход. На каждом уровне мы вычисляем ",e.jsx("code",{children:"M"}),", которое делит текущий диапазон пополам и строит дерево до тех пор, пока не дойдет до базового случая, где ",e.jsx("code",{children:"L === R"}),", т. е. диапазон исчерпается."]}),e.jsxs("p",{className:"mb-2",children:["Для начала мы инициализируем корень ",e.jsx("code",{children:"root"})," с суммой ",e.jsx("code",{children:"0"}),". Затем мы можем рекурсивно вычислить сумму в каждом узле и вернуть окончательную сумму."]}),e.jsx(k,{value:Kk}),e.jsx("h2",{className:"font-bold my-2",children:"Обновление"}),e.jsxs("p",{className:"mb-2",children:["Если мы хотим обновить сумму узла, мы можем взять индекс, который мы хотим обновить, и значение, которым мы хотим его обновить. Реализация не слишком отличается от функции ",e.jsx("code",{children:"build()"}),". Наш базовый случай: если мы достигнем листового узла, мы нашли наш индекс и можем обновить сумму до нового значения. Затем мы рассчитаем значение ",e.jsx("code",{children:"M"}),". Если оно меньше индекса, мы рекурсивно спустимся по правому поддереву, а если оно больше индекса, мы рекурсивно спустимся по левому поддереву."]}),e.jsx("p",{className:"mb-2",children:"Это работает благодаря тому, как мы разделяем наш массив."}),e.jsx(k,{value:Yk}),e.jsx("p",{className:"mb-2",children:"Давайте рассмотрим пример:"}),e.jsxs("p",{className:"mb-2",children:["Пусть ",e.jsx("code",{children:"i = 3"})," и ",e.jsx("code",{children:"v = 4"}),", где ",e.jsx("code",{children:"i"})," — индекс обновления, а ",e.jsx("code",{children:"v"})," представляет новое значение, которое мы хотим обновить. Как только мы доберёмся до базового случая, то есть листового узла, мы обновим значение и сделаем это рекурсивно."]}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Обновление значения в дереве отрезков",className:"mx-auto",height:"1580",src:Hk,width:"1500"})}),e.jsx("h2",{className:"font-bold my-2",children:"Запрос диапазона"}),e.jsxs("p",{className:"mb-2",children:["Ниже показан код функции ",e.jsx("code",{children:"rangeQuery"}),"."]}),e.jsx(k,{value:qk}),e.jsxs("p",{className:"mb-2",children:["Это самая важная операция дерева отрезков — расчёт запроса диапазона. Допустим, нам задан диапазон ",e.jsx("code",{children:"0,5"}),". В примере, который мы показали выше, этот диапазон находится в корневом узле, что делает расчёт ",e.jsx("i",{children:"O"}),"(1) операцией. Конечно, это лучший вариант развития событий."]}),e.jsxs("p",{className:"mb-2",children:["Что, если нам дан диапазон, который требует от нас пройти вниз по дереву? Что ж, мы будем следовать той же рекурсивной процедуре. Мы пройдёмся вниз по дереву и вычислим ",e.jsx("code",{children:"M"}),". Учитывая ",e.jsx("code",{children:"L"})," и ",e.jsx("code",{children:"R"}),", если"," ",e.jsx("code",{children:"L > M"}),", наш запрошенный диапазон находится справа. Если"," ",e.jsx("code",{children:"R <= M"}),", наш диапазон лежит слева. И это имеет смысл, поскольку когда мы вычисляли ",e.jsx("code",{children:"M"})," в функции ",e.jsx("code",{children:"build()"}),", левое поддерево имело индексы ",e.jsx("code",{children:"L, M"}),", а правое поддерево имело индексы"," ",e.jsx("code",{children:"M + 1, R"}),"."]}),e.jsx("p",{className:"mb-2",children:"В приведённом выше коде у нас есть четыре условия. Давайте рассмотрим случаи, в которых будет выполняться каждое условие."}),e.jsxs("ul",{children:[e.jsxs("li",{className:"mb-2",children:[e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Базовый случай"})}),e.jsxs("p",{className:"mb-2",children:["Предположим, нам задан запрос диапазона ",e.jsx("code",{children:"[0,5]"}),". Это лучший сценарий, при котором будет выполняться следующий фрагмент кода. Мы можем сразу вернуть сумму, которая равна ",e.jsx("code",{children:"22"}),"."]}),e.jsx(k,{value:Xk}),e.jsx("img",{alt:"Базовый случай запроса диапазона",height:"500",src:Gk,width:"480"})]}),e.jsxs("li",{className:"mb-2",children:[e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Диапазон находится в правом поддереве"})}),e.jsxs("p",{className:"mb-2",children:["Если нам задан диапазон ",e.jsx("code",{children:"[5,5]"}),", это означает, что весь наш диапазон лежит в правом поддереве. Это так, потому что ",e.jsx("code",{children:"5 > 2"}),", где ",e.jsx("code",{children:"2"})," представляет букву ",e.jsx("code",{children:"M"})," в нашем корневом узле. В этом случае мы выполним следующую строку:"]}),e.jsx(k,{value:Zk}),e.jsx("figure",{className:"bg-white",children:e.jsx("img",{alt:"Запрос диапазона из правого поддерева",className:"mx-auto",height:"1100",src:$k,width:"1500"})})]}),e.jsxs("li",{className:"mb-2",children:[e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Диапазон находится в левом поддереве"})}),e.jsxs("p",{className:"mb-2",children:["Если нам задан диапазон ",e.jsx("code",{children:"[1,1]"}),", весь наш диапазон лежит в левом поддереве, потому что ",e.jsx("code",{children:"1 <= 2"})," где ",e.jsx("code",{children:"2"})," представляет"," ",e.jsx("code",{children:"M"})," в нашем корневом узле."]}),e.jsx(k,{value:Qk}),e.jsx("figure",{className:"bg-white",children:e.jsx("img",{alt:"Запрос диапазона из левого поддерева",className:"mx-auto",height:"1700",src:zk,width:"1460"})})]}),e.jsxs("li",{className:"mb-2",children:[e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Диапазон находится в левом и правом поддеревьях"})}),e.jsxs("p",{className:"mb-2",children:["Если нам дан диапазон, которого нет ни в одном узле наших ",e.jsx("code",{children:"right"})," ","или ",e.jsx("code",{children:"left"})," поддеревьев, должно быть так, что он лежит в обоих поддеревьях. Примером может служить ",e.jsx("code",{children:"[2,4]"}),", если это допустимый диапазон."]}),e.jsx(k,{value:Jk}),e.jsx("figure",{className:"bg-white",children:e.jsx("img",{alt:"Запрос диапазона из левого и правого поддеревьев",className:"mx-auto",height:"1700",src:Wk,width:"1460"})})]})]}),e.jsx("h2",{className:"font-bold my-2",children:"Сложность по времени"}),e.jsx("p",{className:"mb-2",children:"Сложность по времени трёх функций следующая:"}),e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("strong",{children:"build()"})," - ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),"), где ",e.jsx("i",{children:"n"})," — количество узлов, содержащихся в нашем дереве."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"update()"})," - ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"log n"}),"), поскольку мы спускаемся по высоте дерева, которое является сбалансированным деревом, где ",e.jsx("i",{children:"h"})," — высота дерева, также известная как ",e.jsx("i",{children:"log n"}),"."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"rangeQuery()"})," - ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"log n"}),"), по причинам, аналогичным функции ",e.jsx("code",{children:"update()"}),"."]})]})]})}const t4="/my-textbook/assets/sliding-window-fixed-WkSyg0Pb.png",n4="/my-textbook/assets/sliding-window-variable-1-F9Mol9W-.png",r4="/my-textbook/assets/sliding-window-variable-2-U5uzNxsl.png",s4=`function closeDuplicatesBruteForce(nums, k) {
  for (let l = 0; l < nums.length; l++) {
    for (let r = l + 1; r < Math.min(nums.length, l + k); r++) {
      if (nums[l] === nums[r]) {
        return true;
      }
    }
  }

  return false;
}`,i4=`function closeDuplicates(nums, k) {
  let window = new Set();
  let l = 0;
  
  for (let r = 0; r < nums.length; r++) {
    if (r - l + 1 > k) {
      window.delete(nums[l]);
      l++;
    }

    if (window.has(nums[r])) {
      return true;
    }

    window.add(nums[r]);
  }

  return false;
}`,a4=`function longestSubarray(nums) {
  let length = 0;
  let l = 0;

  for (let r = 0; r < nums.length; r++) {
    if (nums[l] !== nums[r]) {
      l = r;
    }

    length = Math.max(length, r - l + 1);
  }

  return length;
}`,o4=`function shortestSubarray(nums, target) {
  let total = 0;
  let l = 0;
  let length = Infinity;

  for (let r = 0; r < nums.length; r++) {
    total += nums[r];

    while (total >= target) {
      length = Math.min(r - l + 1, length);
      total -= nums[l];
      l++;
    }
  }

  if (length === Infinity) {
    return 0;
  }

  return length;
}`;function l4(){return e.jsxs(e.Fragment,{children:[e.jsx("h2",{className:"font-bold my-2",children:"Скользящее окно фиксированного размера"}),e.jsxs("p",{className:"mb-2",children:["Идея скользящего окна фиксированного размера состоит в том, чтобы"," ",e.jsx("strong",{children:"поддерживать"})," два указателя, которые находятся на расстоянии"," ",e.jsx("code",{children:"k"})," друг от друга и соответствуют определённому ограничению."]}),e.jsx("p",{children:"Посмотрим на задачу:"}),e.jsx("p",{className:"mb-2",children:e.jsxs("strong",{children:["Дан массив, верните ",e.jsx("code",{children:"true"}),", если в окне размера ",e.jsx("code",{children:"k"})," есть два элемента, которые равны."]})}),e.jsxs("p",{className:"mb-2",children:["Решение этой проблемы методом грубой силы — запустить два цикла ",e.jsx("code",{children:"for"})," и вернуть ",e.jsx("code",{children:"true"}),", если в подмассиве размера ",e.jsx("code",{children:"k"})," существуют равные элементы (дубликаты)."]}),e.jsxs("p",{className:"mb-2",children:["Представим, что у нас есть массив ",e.jsx("code",{children:"[1, 2, 3, 2, 3, 3]"})," и"," ",e.jsx("code",{children:"k = 3"}),". Глядя на массив, мы замечаем, что есть два числа, которые дублируются. Используя метод грубой силы, внешний цикл сделает ",e.jsx("i",{children:"n"})," итераций, внутренний цикл будет делать ",e.jsx("i",{children:"k"})," итераций, где ",e.jsx("code",{children:"k <= n"}),", что означает, что в худшем случае мы получаем квадратичную сложность по времени"," ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),e.jsx("sup",{children:"2"}),")."]}),e.jsx(k,{value:s4}),e.jsxs("p",{className:"mb-2",children:["Можно добиться лучшего решения с использованием метода скользящего окна. В данном случае, мы должны поддерживать окно размера ",e.jsx("code",{children:"k"}),", и внутри него должно быть два дубликата."]}),e.jsxs("p",{className:"mb-2",children:[e.jsx("code",{children:"Set"})," позволяет хранить уникальные элементы и имеет сложность по времени ",e.jsx("i",{children:"O"}),"(1) для просмотра, удаления и вставки элементов. Мы можем использовать его для обозначения нашего окна и добавлять элементы, на которые указывает правый указатель. Когда размер нашего окна превышает ",e.jsx("code",{children:"k"}),", мы можем удалять элементы, на которые указывает левый указатель, чтобы сохранять размер нашего окна. Если мы встретим уже добавленное число, мы можем вернуть"," ",e.jsx("code",{children:"true"}),". Размер нашего множества никогда не превысит ",e.jsx("code",{children:"k"}),"."]}),e.jsx(k,{value:i4}),e.jsx("img",{alt:"Метод двух указателей (фиксированная длина)",height:"960",src:t4,width:"1680"}),e.jsx("h2",{className:"font-bold my-2",children:"Сложность по времени для скользящего окна фиксированного размера."}),e.jsxs("p",{className:"mb-2",children:["Мы снизили сложность по времени с ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),e.jsx("sup",{children:"2"}),") до ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),"), посколько мы выполняем только один проход по массиву. В худшем случае мы совершим ",e.jsx("i",{children:"n"})," итераций. Операции над нашим"," ",e.jsx("code",{children:"Set"})," составляют ",e.jsx("i",{children:"O"}),"(1) по времени."]}),e.jsx("p",{className:"mb-2",children:"При этом фиксированный размер — не едиственный способ реализовать метод скользящего окна. Существует также вариант скользящего окна, в котором мы продолжаем расширять наше окно до тех пор, пока не попадём в заданное ограничение."}),e.jsx("h2",{className:"font-bold my-2",children:"Скользящее окно переменного размера"}),e.jsx("p",{className:"mb-2",children:"Рассмотрим относительно простой пример, затем перейдём к более сложному."}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Простой пример: найдите длину самого длинного подмассива, в каждой позиции которого одинаковые значения."})}),e.jsxs("p",{className:"mb-2",children:["Применим метод скользящего окна к массиву ",e.jsx("code",{children:"[4, 2, 2, 3, 3, 3]"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Вновь будем использовать два указателя: ",e.jsx("code",{children:"L"})," и ",e.jsx("code",{children:"R"}),". Наше ограничение состоит в том, что в нашем окне не может быть разных значений. В то же время нам придётся отслеживать самое длинное окно, с которым мы столкнулись, которое соответствует нашему ограничению, т. е. имеет одинаковые значения в каждой позиции."]}),e.jsxs("p",{className:"mb-2",children:["Запустим цикл ",e.jsx("code",{children:"for"})," по нашему массиву и будем расширять окно справа, пока не встретим значение, с которым раньше не сталкивались. Затем уменьшаем окно, совмещая указатель ",e.jsx("code",{children:"L"})," с указателем ",e.jsx("code",{children:"R"}),". Нам не нужно увеличивать ",e.jsx("code",{children:"L"}),", поскольку если мы встретим новое значение, то все предыдущие значения были дубликатами. Затем мы повторно вычисляем длину"," ",e.jsx("code",{children:"length"})," нашего окна, беря максимальную из текущей длины и предыдущей максимальной длины. Длина текущего окна вычисляется с помощью"," ",e.jsx("code",{children:"R - L + 1"}),", что обеспечивает включение обоих индексов."]}),e.jsx(k,{value:a4}),e.jsx("img",{alt:"Метод двух указателей (переменная длина)",className:"mb-2",height:"560",src:n4,width:"1700"}),e.jsx("p",{className:"mb-2",children:"Обратите внимание, у нас есть два указателя, мы расширяем наше окно справа и сдвигаем левый указатель, когда наше ограничение нарушается."}),e.jsx("p",{className:"mb-2",children:e.jsxs("strong",{children:["Классический пример: найдите длину самого короткого подмассива, сумма которого больше или равна переданному значению ",e.jsx("code",{children:"target"}),". Предполагается, что все значения в массиве положительные."]})}),e.jsxs("p",{className:"mb-2",children:["Здесь необходимо найти минимальную длину. Будем расширять наше окно справа, и если наша сумма станет больше или равна ",e.jsx("code",{children:"target"}),", мы начнём отнимать слева, пока окно не перестанет нарушать это ограничение."]}),e.jsx(k,{value:o4}),e.jsx("img",{alt:"Метод двух указателей (переменная длина)",height:"840",src:r4,width:"1720"}),e.jsx("h2",{className:"font-bold my-2",children:"Сложность по времени для скользящего окна переменного размера."}),e.jsxs("p",{className:"mb-2",children:["Прелесть этого метода в том, что он снижает сложность по времени до ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),"). Возникает вопрос: как можно иметь цикл ",e.jsx("code",{children:"while"})," внутри цикла"," ",e.jsx("code",{children:"for"})," и иметь сложность по времени ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),")? Цикл"," ",e.jsx("code",{children:"while"})," не выполняет ",e.jsx("i",{children:"n"})," итераций на каждой итерации цикла"," ",e.jsx("code",{children:"for"}),", он выполнит ",e.jsx("i",{children:"n"})," итераций всего. Фактически, в некоторых итерациях цикла ",e.jsx("code",{children:"for"})," он даже не запускается. Например, когда"," ",e.jsx("code",{children:"total < target"}),", цикл ",e.jsx("code",{children:"while"})," никогда не выполняется."]}),e.jsx("h2",{className:"font-bold my-2",children:"Итоги"}),e.jsxs("p",{className:"mb-2",children:["Метод скользящего окна очень абстрактный и может применяться ко многим проблемам, некоторые из которых могут включать в себя другие концепции. Ключевая вещь, которая говорит о том, что проблему можно решить с использованием метода скользящего окна фиксированного размера — если проблема указывает на подмассив с длиной ",e.jsx("code",{children:"k"}),"."]})]})}const c4="/my-textbook/assets/stack-pop-wH6Fh_3n.png",d4="/my-textbook/assets/stack-push-kg3oRKgl.png",u4=`push(n) {
  this.stack.push(n);
}`,h4=`pop() {
  return this.stack.pop();
}`,p4=`peek() {
  return this.stack.at(-1);
}`;function m4(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Стек — это структура данных, содержащая коллекцию элементов, в которой добавлять и удалять элементы можно только с конца (называемого вершиной стека). В физическом мире стек можно представить себе как стопку тарелок в столовой. Когда вы собираетесь взять тарелку, вы можете взять её только сверху, и аналогично, когда вы закончите есть, стопку тарелок можно построить только путём складывания их друг на друга — это именно то, что представляет собой стек в мире ПО."}),e.jsxs("p",{className:"mb-2",children:["Стек следует принципу LIFO (Last In First Out). Последний элемент, помещенный внутрь, является первым элементом, который выходит наружу. Стек поддерживает три операции: ",e.jsx("code",{children:"push"})," (добавить в стек), ",e.jsx("code",{children:"pop"})," (удалить из стека) и ",e.jsx("code",{children:"peek"})," (вернуть элемент с вершины стека без удаления)."]}),e.jsxs("p",{className:"mb-2",children:["Стек, в котором все его элементы не возрастают, либо, наоборот, не убывают, называется монотонным стеком. Например, ",e.jsx("code",{children:"[1, 3, 10, 15, 17]"})," — это монотонный стек."]}),e.jsx("h2",{className:"font-bold my-2",children:"Push"}),e.jsxs("p",{className:"mb-2",children:["Оперция ",e.jsx("code",{children:"push"})," добавляет элемент на вершину стека, что для массива будет добавлением элемента в его конец. Это эффективная ",e.jsx("i",{children:"O"}),"(1) операция. Можно визуализировать стек как вертикальный массив. Добавим числа от 1 до 4 на вершину стека. Указатель на вершину обновляется и указывает на последний добавленный элемент. Следующие псевдокод и изображение демонстрируют это."]}),e.jsx(k,{value:u4}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Операция push",className:"mx-auto",height:"500",src:d4,width:"1280"})}),e.jsx("p",{className:"mb-2",children:"Поскольку стек удаляет элементы в порядке, обратном их вставке, его можно использовать для разворота последовательностей, например, строки, которая представляет собой просто последовательность символов."}),e.jsx("h2",{className:"font-bold my-2",children:"Pop"}),e.jsxs("p",{className:"mb-2",children:["Оперция ",e.jsx("code",{children:"pop"})," удаляет последний элемент из вершины стека, что для массива будет удалением его последнего элемента. Это также эффективная ",e.jsx("i",{children:"O"}),"(1) операция. Возьмём предыдущий пример, предположим, что мы хотим удалить"," ",e.jsx("code",{children:"3"})," и ",e.jsx("code",{children:"4"}),". Следующие псевдокод и изображение демонстрируют это. Опять же, указатель на вершину обновляется и указывает на последний элемент."]}),e.jsx(k,{value:h4}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Операция pop",className:"mx-auto",height:"500",src:c4,width:"1280"})}),e.jsx("h2",{className:"font-bold my-2",children:"Peek"}),e.jsxs("p",{className:"mb-2",children:[e.jsx("code",{children:"Peek"})," — самая простая операция из трёх. Она просто возвращает верхний элемент, не удаляя его."]}),e.jsx(k,{value:p4}),e.jsx("h2",{className:"font-bold my-2",children:"Итоги"}),e.jsxs("table",{className:"border-collapse mb-2 table-auto w-full",children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{className:"border-2 border-gray-300 border-solid p-2 text-left",children:"Операция"}),e.jsx("th",{className:"border-2 border-gray-300 border-solid p-2 text-left",children:"Сложность по времени"}),e.jsx("th",{className:"border-2 border-gray-300 border-solid p-2 text-left",children:"Примечания"})]})}),e.jsxs("tbody",{children:[e.jsxs("tr",{children:[e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Push"}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:[e.jsx("i",{children:"O"}),"(1)"]}),e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"—"})]}),e.jsxs("tr",{children:[e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Pop"}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:[e.jsx("i",{children:"O"}),"(1)",e.jsx("sup",{children:"*"})]}),e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Сначала проверьте, пуст ли стек"})]}),e.jsxs("tr",{children:[e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Peek"}),e.jsxs("td",{className:"border-2 border-gray-300 border-solid p-2",children:[e.jsx("i",{children:"O"}),"(1)",e.jsx("sup",{children:"*"})]}),e.jsx("td",{className:"border-2 border-gray-300 border-solid p-2",children:"Возвращает без удаления"})]})]})]})]})}const f4="/my-textbook/assets/distinct-elements-subsets-q8SWsish.png",g4="/my-textbook/assets/distinct-elements-subsets-implementation--Bn993DD.png",b4="/my-textbook/assets/distinct-elements-subsets-difficulty-ZmL9WEAo.png",x4=`function subsetsWithoutDuplicates(nums) {
  const subsets = [];
  const currSet = [];

  helper(0, nums, currSet, subsets);

  return subsets;
}`,E4=`function helper(i, nums, currSet, subsets) {
  if (i >= nums.length) {
    subsets.push([...currSet]);
    return;
  }

  // путь, по которому мы включаем nums[i]
  currSet.push(nums[i]);
  helper(i + 1, nums, currSet, subsets);
  currSet.pop();

  // путь, по которому мы НЕ включаем nums[i]
  helper(i + 1, nums, currSet, subsets);
}`,T4=`function subsetsWithoutDuplicates2(nums) {
  nums.sort();

  const subsets = [];
  const currSet = [];

  helper2(0, nums, currSet, subsets);

  return subsets;
}`,y4=`function helper2(i, nums, currSet, subsets) {
  if (i >= nums.length) {
    subsets.push([...currSet]);
    return;
  }

  // путь, по которому мы включаем nums[i]
  currSet.push(nums[i]);
  helper2(i + 1, nums, currSet, subsets);
  currSet.pop();

  // путь, по которому мы НЕ включаем nums[i]
  while (i + 1 < nums.length && nums[i] === nums[i + 1]) {
    i++;
  }
  
  helper2(i + 1, nums, currSet, subsets);
}`;function S4(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Подмножества — это тема, принадлежащая «комбинаторике», разделу математики, изучающему перестановки, подмножества и сочетания."}),e.jsx("h2",{className:"font-bold my-2",children:"Понятие подмножества"}),e.jsx("p",{className:"mb-2",children:"Формально в математике, если у нас есть два множества, множество A и множество B, множество A является подмножеством множества B, если все его элементы находятся в множестве B. Кроме того, любое множество является подмножеством самого себя, а пустое множество является подмножеством каждого множества. Порядок не важен в подмножествах, пока мы не доберёмся до перестановок. Однако элементы должны быть разными."}),e.jsxs("p",{className:"mb-2",children:["Прежде чем перейти к задачам, приведём несколько примеров множеств и подмножеств. Учитывая множество ",e.jsx("code",{children:"A = {1, 2, 3, 4, 5}"})," и множество"," ",e.jsx("code",{children:"B = {5, 2, 1}"}),", множество ",e.jsx("code",{children:"B"})," является подмножеством множества ",e.jsx("code",{children:"A"}),", поскольку оно содержит все элементы множества ",e.jsx("code",{children:"A"}),". Изменённый порядок множества ",e.jsx("code",{children:"B"})," на"," ",e.jsx("code",{children:"{2, 5, 1}"})," по-прежнему считается тем же подмножеством."]}),e.jsxs("p",{className:"mb-2",children:["Учитывая множество ",e.jsx("code",{children:"C = {9, 10, 11, 12}"})," и множество"," ",e.jsx("code",{children:"D = {6, 9, 10}"}),", множество ",e.jsx("code",{children:"D"})," не является подмножеством множества ",e.jsx("code",{children:"С"}),", поскольку оно содержит ",e.jsx("code",{children:"6"}),", которой нет в множестве ",e.jsx("code",{children:"С"}),"."]}),e.jsx("h2",{className:"font-bold my-2",children:"Примеры использования подмножеств"}),e.jsxs("ul",{children:[e.jsxs("li",{className:"mb-2",children:[e.jsx("strong",{className:"block",children:"Подмножества - уникальные элементы"}),e.jsx("strong",{children:"Дан список уникальных чисел, верните все возможные уникальные подмножества."}),e.jsx("p",{className:"mb-2",children:"Вспомните из статьи про бэктрекинг, что когда мы делаем выбор пойти по пути назад, мы возвращаемся и исследуем другие варианты. Применение этой концепции к подмножествам означало бы, что для каждого элемента мы исследуем все подмножества, включающие этот элемент. Затем мы возвращаемся назад, чтобы изучить все подмножества, которые не включают этот элемент. Мы делаем это до тех пор, пока не исчерпаем все элементы и к концу у нас не будет всех возможных различных подмножеств."}),e.jsxs("strong",{children:["Следующее изображение демонстрирует все возможные уникальные подмножества для"," ",e.jsx("code",{children:"nums = {1, 2, 3}"}),"."]}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Все возможные подмножества",className:"mx-auto",height:"320",src:f4,width:"1000"})}),e.jsx("strong",{className:"block mb-2",children:"Реализация"}),e.jsxs("p",{className:"mb-2",children:["В реализации у нас есть две функции:"," ",e.jsx("strong",{children:e.jsx("code",{children:"subsetsWithoutDuplicates"})})," ","и"," ",e.jsx("strong",{children:e.jsx("code",{children:"helper"})}),"."]}),e.jsxs("ul",{children:[e.jsxs("li",{className:"mb-2",children:[e.jsx("strong",{children:e.jsx("code",{children:"subsetsWithoutDuplicates"})}),e.jsxs("p",{className:"mb-2",children:["Если предоставленный нам список не содержит дубликатов, мы реализуем функцию ",e.jsx("code",{children:"subsetsWithoutDuplicates"}),". В этой функции мы объявим список списков подмножеств ",e.jsx("code",{children:"subsets"})," и ещё один список"," ",e.jsx("code",{children:"currSet"}),". Как только мы создадим каждый ",e.jsx("code",{children:"currSet"}),", мы добавим его в ",e.jsx("code",{children:"subsets"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Для создания каждого ",e.jsx("code",{children:"currSet"})," нам понадобится функция"," ",e.jsx("code",{children:"helper"}),"."]}),e.jsx(k,{value:x4})]}),e.jsxs("li",{className:"mb-2",children:[e.jsx("strong",{children:e.jsx("code",{children:"helper"})}),e.jsxs("p",{className:"mb-2",children:["Мы передадим начальный индекс ",e.jsx("code",{children:"i"}),", ",e.jsx("code",{children:"nums"}),", который представляет собой наш список, ",e.jsx("code",{children:"currSet"})," и ",e.jsx("code",{children:"subsets"})," ","нашей функции ",e.jsx("code",{children:"helper"}),". Затем мы пройдёмся по всему списку, добавим текущее число в ",e.jsx("code",{children:"nums"})," и применим наш стандартный алгоритм бэктрекинга, т. е. будем выполнять рекурсию до тех пор, пока не достигнем базового случая, а затем извлечём текущее число из"," ",e.jsx("code",{children:"currSet"}),", чтобы мы могли пойти по пути, по которому мы решаем не включать текущий элемент."]}),e.jsx(k,{value:E4}),e.jsx("p",{children:e.jsxs("strong",{children:["На изображении ниже показана полная пошаговая реализация получения подмножеств из списка ",e.jsx("code",{children:"[1, 2, 3]"}),". Массив под каждым шагом представляет ",e.jsx("code",{children:"subsets"}),". Синие массивы в дереве решений представляют текущее обрабатываемое подмножество, ",e.jsx("code",{children:"currSet"}),"."]})})]})]}),e.jsx("img",{alt:"Пошаговая реализация получения подмножеств",height:"1701",src:g4,width:"1801"})]}),e.jsxs("li",{className:"mb-2",children:[e.jsx("strong",{className:"block",children:"Подмножества - неуникальные элементы"}),e.jsx("strong",{children:"Дан список чисел, которые не обязательно уникальны, верните все возможные уникальные подмножества."}),e.jsxs("p",{className:"mb-2",children:["В этой задаче нам даны ",e.jsx("code",{children:"nums"}),", содержащие дубликаты. Чтобы создать конкретные подмножества, мы сначала сортируем массив так, чтобы все дубликаты находились рядом друг с другом. Затем мы можем запустить цикл"," ",e.jsx("code",{children:"while"}),", чтобы пропустить дубликаты. Это отличается от предыдущей задачи, поскольку в этом случае, когда мы возвращаемся назад, то есть извлекаем число из ",e.jsx("code",{children:"currSet"}),", мы запускаем цикл ",e.jsx("code",{children:"while"}),", чтобы пропустить дубликаты перед повторным вызовом ",e.jsx("code",{children:"helper2"}),". Мы также следим за тем, чтобы наш указатель ",e.jsx("code",{children:"i"})," не выходил за пределы."]}),e.jsxs("p",{className:"mb-2",children:["В этом разница между ",e.jsx("code",{children:"helper"})," и ",e.jsx("code",{children:"helper2"}),"."]}),e.jsx("p",{className:"mb-2",children:"Ниже приведена реализация."}),e.jsx(k,{value:T4}),e.jsx(k,{value:y4})]})]}),e.jsx("h2",{className:"font-bold my-2",children:"Сложность по времени"}),e.jsxs("p",{className:"mb-2",children:["Сложность по времени будет равна ",e.jsx("i",{children:"O"}),"(2",e.jsx("sup",{children:e.jsx("i",{children:"n"})}),"), поскольку для каждого отдельного элемента мы можем либо включить, либо не включать этот конкретный элемент. Если нам дан список ",e.jsx("code",{children:"[1, 2, 3]"})," для расчёта всех подмножеств, мы можем принять только два решения для любого данного элемента и записать всё это в дерево решений, а ",e.jsx("i",{children:"n"})," — количество элементов в множестве, вполне логично, что наш алгоритм работает за ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"})," ⋅ 2",e.jsx("sup",{children:e.jsx("i",{children:"n"})}),")."]}),e.jsxs("p",{className:"mb-2",children:["Сложность по памяти следует считать такой же, но иногда вводные данные не считаются частью сложности по времени. Это доводит сложность по памяти до ",e.jsx("i",{children:"O"}),"(2",e.jsx("sup",{children:e.jsx("i",{children:"n"})}),"), если ",e.jsx("i",{children:"n"})," не учитывается."]}),e.jsx("p",{className:"mb-2",children:"Глядя на изображение ниже, это становится очевидным."}),e.jsx("img",{alt:"Сложность поиска всех возможных подмножеств",height:"160",src:b4,width:"380"})]})}const N4="/my-textbook/assets/directed-acyclic-graph-nXQKdbLC.png",j4="/my-textbook/assets/directed-cyclic-graph-_giz1YuK.png",A4="/my-textbook/assets/disconnected-directed-acyclic-graphs-tIU_vCQN.png",_4="/my-textbook/assets/topological-sort-reversed-edges-3VmsBcde.png",v4="/my-textbook/assets/topological-sort-reversed-result-IMPfPS6C.png",R4="/my-textbook/assets/topological-sort-unknown-start-dx544E58.png",w4="/my-textbook/assets/topological-sort-prerequisites-example-9RVn0EHs.png",I4=`function topologicalSort(edges, n) {
  const adj = new Map();

  for (let i = 1; i <= n; i++) {
    adj.set(i, []);
  }
  
  for (const [src, dst] of edges) {
    adj.get(src).push(dst);
  }

  const topSort = [];
  const visited = new Set();

  for (let i = 1; i <= n; i++) {
    dfs(i, adj, visited, topSort);
  }

  return topSort.reverse();
}

function dfs(src, adj, visited, topSort) {
  if (visited.has(src)) {
    return;
  }

  visited.add(src);

  for (const neighbor of adj.get(src)) {
    dfs(neighbor, adj, visited, topSort);
  }

  topSort.push(src);
}`;function C4(){return e.jsxs(e.Fragment,{children:[e.jsx("h2",{className:"font-bold my-2",children:"Идея"}),e.jsx("p",{className:"mb-2",children:"Топологическая сортировка — это способ сортировки ориентированного ациклического графа (directed acyclic graph — DAG), при котором каждый узел предшествует зависимым узлам. Простой пример – университетские курсы. Есть некоторые курсы, которые можно пройти без каких-либо предварительных условий, а есть курсы, которые имеют предварительные условия, то есть вы не можете пройти их, если предварительно не прошли другие курсы."}),e.jsx("p",{className:"mb-2",children:"Другими словами, некоторые курсы можно проходить независимо от других курсов, а другие необходимо проходить в определённом порядке. Мы можем представить этот сценарий с помощью «DAG», где рёбра представляют зависимости между курсами."}),e.jsxs("p",{className:"mb-2",children:["Итак, если у нас есть узел ",e.jsx("code",{children:"C"})," и от него зависят узлы ",e.jsx("code",{children:"A"})," и"," ",e.jsx("code",{children:"B"}),", то ",e.jsx("code",{children:"A"})," и ",e.jsx("code",{children:"B"})," появятся перед ",e.jsx("code",{children:"C"})," в топологическом порядке. В каком порядке они появляются, не имеет значения, если только ",e.jsx("code",{children:"A"})," и ",e.jsx("code",{children:"B"})," не зависят друг от друга."]}),e.jsx("h2",{className:"font-bold my-2",children:"Пример"}),e.jsxs("p",{className:"mb-2",children:["Предположим, нам дан следующий ориентированный ациклический граф (DAG). Топологический порядок этого графа будет следующим: ",e.jsx("code",{children:"A, B, C, D, E, F"}),". Обратите внимание, что каждый узел появляется перед зависимым узлом."]}),e.jsx("img",{alt:"Ориентированный ациклический граф",className:"mb-2",height:"420",src:N4,width:"220"}),e.jsxs("p",{className:"mb-2",children:["Это довольно простой пример. Ранее мы упоминали, что топологическая сортировка работает на ациклических графах. Что, если бы в нашем графе был цикл? Давайте немного модифицируем приведённый выше граф и применим к нему ту же концепцию. В этом случае у нас есть ребро, выходящее из ",e.jsx("code",{children:"E"})," и входящее в"," ",e.jsx("code",{children:"A"}),". Порядок будет таким: ",e.jsx("code",{children:"E, A, B, C, D, E, F"}),". Это фактически противоречит идее топологической сортировки, поскольку невозможно иметь"," ",e.jsx("code",{children:"E"})," перед ",e.jsx("code",{children:"A"}),", а также после ",e.jsx("code",{children:"A"}),". Это всё равно, что сказать: чтобы пройти курс ",e.jsx("code",{children:"A"}),", вы должны сначала пройти курс"," ",e.jsx("code",{children:"E"}),", но чтобы пройти курс ",e.jsx("code",{children:"E"}),", вы должны сначала пройти курс"," ",e.jsx("code",{children:"A"})," — это цикл."]}),e.jsx("img",{alt:"Ориентированный циклический граф",className:"mb-2",height:"420",src:j4,width:"300"}),e.jsxs("p",{className:"mb-2",children:["Если циклов нет, топологическая сортировка будет работать даже на несвязных графах. Если в графе есть два связных компонента, порядок расположения вершин отдельных несвязных компонентов не имеет значения, поскольку они независимы друг от друга. В приведённом ниже графе есть два связных компонента, и одним из возможных валидных порядков может быть ",e.jsx("code",{children:"A, B, C, D, E, F, G, H"}),"."]}),e.jsx("img",{alt:"Несвязные ориентированные ациклические графы",className:"mb-2",height:"420",src:A4,width:"360"}),e.jsx("h2",{className:"font-bold my-2",children:"Алгоритм"}),e.jsxs("p",{className:"mb-2",children:["Для обхода графа мы можем использовать BFS или DFS. В нашем случае мы будем использовать рекурсивный DFS. Вопрос здесь в том, каким будет наш базовый случай? Если взглянуть на наш граф, то видно, что мы хотим выйти из функции, когда достигнем ",e.jsx("code",{children:"F"}),". Однако в этом случае мы посетим ",e.jsx("code",{children:"F"})," дважды, потому что ",e.jsx("code",{children:"F"})," можно достичь из ",e.jsx("code",{children:"D"}),", но также и из"," ",e.jsx("code",{children:"E"}),", т. е. ",e.jsx("code",{children:"D->F"}),", ",e.jsx("code",{children:"E->F"}),". Чтобы избежать этого, мы можем использовать ",e.jsx("code",{children:"Set"})," ",e.jsx("code",{children:"visited"})," для отслеживания посещённых узлов. Это приведёт к порядоку"," ",e.jsx("code",{children:"A, B, D, F, C, E, G, H"}),", что окажется неверным. Проблема здесь в том, что ",e.jsx("code",{children:"F"})," появляется раньше ",e.jsx("code",{children:"C"})," и ",e.jsx("code",{children:"E"}),", но"," ",e.jsx("code",{children:"F"})," зависит как от ",e.jsx("code",{children:"C"}),", так и от ",e.jsx("code",{children:"E"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Мы хотим найти способ посетить ",e.jsx("code",{children:"C"})," и ",e.jsx("code",{children:"E"})," до того, как посетим ",e.jsx("code",{children:"F"}),". Есть два распространённых метода, которые мы можем использовать для решения этой проблемы."]}),e.jsxs("ol",{className:"list-decimal list-inside",children:[e.jsxs("li",{className:"mb-2",children:["Развернуть рёбра графа и запустить обратный обход. Напомним обратный обход:"," ",e.jsx("code",{children:"left, right, root"}),". Это даст нам правильный топологический порядок, который показан ниже.",e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Числа рядом с вершинами обозначают порядок их посещения."})}),e.jsx("figure",{className:"bg-white",children:e.jsx("img",{alt:"Топологическая сортировка с помощью разворота рёбер графа",className:"mx-auto",height:"501",src:_4,width:"580"})})]}),e.jsxs("li",{className:"mb-2",children:["Вместо того, чтобы разворачивать граф, выполнить обратный обход и развернуть результирующий массив. Это избавляет нас от разворачивания графа и по-прежнему даёт нам правильный топологический порядок.",e.jsx("figure",{className:"bg-white",children:e.jsx("img",{alt:"Топологическая сортировка с помощью разворота результирующего массива",className:"mx-auto mt-2",height:"420",src:v4,width:"800"})})]})]}),e.jsx("h2",{className:"font-bold my-2",children:"Топологическая сортировка без известной начальной точки"}),e.jsx("p",{className:"mb-2",children:"В примерах выше мы говорили о графах, где мы знали, какие вершины являются «головами» связных компонентов. Однако большинство задач не столь удобны. Тем не менее, пока у нас есть список всех вершин входного графа, мы можем решить проблему. Вместо того, чтобы выполнять DFS, начиная с «головы» (или исходной вершины) каждого компонента, мы будем запускать его для каждой отдельной вершины каждого компонента в том порядке, в котором они появляются."}),e.jsxs("p",{className:"mb-2",children:["Предположим, что первые четыре вершины появляются в порядке"," ",e.jsx("code",{children:"B, C, H, A"}),". В этом случае мы можем просто выполнять обратный DFS по одной вершине за раз. Мы можем посетить соседей ",e.jsx("code",{children:"B"}),", затем соседей"," ",e.jsx("code",{children:"C"})," и, наконец, соседей ",e.jsx("code",{children:"H"})," и ",e.jsx("code",{children:"A"}),". К тому времени, как мы посетим другие узлы, мы уже посетим их или их соседей, поэтому мы можем просто вернуться из функции. Это будет выглядеть следующим образом."]}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Топологическая сортировка без известной начальной точки",className:"mx-auto",height:"441",src:R4,width:"800"})}),e.jsx("h2",{className:"font-bold my-2",children:"Реализация"}),e.jsxs("p",{className:"mb-2",children:["Предположим, нам дан ориентированный ациклический граф и мы хотим вернуть топологический порядок. Сначала мы построим список смежности, используя данный массив рёбер. Чтобы сохранить наш топологический порядок, мы можем использовать массив ",e.jsx("code",{children:"topSort"})," и ",e.jsx("code",{children:"Set"})," ",e.jsx("code",{children:"visited"}),", чтобы избежать повторного посещения одной и той же вершины дважды. Мы можем выполнить наш DFS и вернуть массив ",e.jsx("code",{children:"topSort"})," с топологическим порядком."]}),e.jsx("h2",{className:"font-bold my-2",children:"DFS"}),e.jsxs("p",{className:"mb-2",children:["Несмотря на то, что функция ",e.jsx("code",{children:"dfs"})," является вспомогательной функцией, она формирует наш массив. Мы можем передать ",e.jsx("code",{children:"src"}),", который обозначает текущий узел, на котором мы находимся. ",e.jsx("code",{children:"adj"}),", который представляет список смежности и позволяет нам просматривать соседей. ",e.jsx("code",{children:"visited"})," и массив ",e.jsx("code",{children:"topSort"}),", который мы и вернём в конце. Если текущий узел"," ",e.jsx("code",{children:"src"})," уже находится в ",e.jsx("code",{children:"Set"})," ",e.jsx("code",{children:"visited"}),", мы можем вернуться из функции. В противном случае мы добавим его в ",e.jsx("code",{children:"visited"})," и выполненим ",e.jsx("code",{children:"dfs"})," для его соседей. После выполнения ",e.jsx("code",{children:"dfs"})," мы можем добавить ",e.jsx("code",{children:"src"})," к нашему ",e.jsx("code",{children:"topSort"}),"."]}),e.jsx(k,{value:I4}),e.jsx("h2",{className:"font-bold my-2",children:"Циклический путь"}),e.jsxs("p",{className:"mb-2",children:["Что, если бы нам не было гарантировано, что граф ацикличен? Как бы мы добавили обнаружение циклов в нашем графе? Мы можем объявить еще один ",e.jsx("code",{children:"Set"})," ",e.jsx("code",{children:"path"}),", который будет отслеживать текущий путь в нашем DFS. Как и в случае с ",e.jsx("code",{children:"visited"}),", мы добавим вершины в наш ",e.jsx("code",{children:"path"}),". Затем, как только рекурсивные вызовы для всех соседей выполнятся, мы также извлечём вершину из нашего ",e.jsx("code",{children:"path"}),". Если мы посетим одну и ту же вершину по пути дважды, мы можем вернуть ",e.jsx("code",{children:"false"}),", поскольку это означает, что в нашем графе есть цикл."]}),e.jsx("h2",{className:"font-bold my-2",children:"Итоги"}),e.jsx("p",{className:"mb-2",children:"Во введении мы кратко упомянули, что одно из применений топологической сортировки — это предварительные условия курса. Граф ниже представляет собой конкретный пример этого: A = алгебра, C = химия, E = английский язык и P = физика. Топологический порядок имеет смысл, поскольку вам необходимо сдать «Физику I», прежде чем изучать «Физику II», и так далее."}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Топологическая сортировка на примере предварительных условий курса",className:"mx-auto",height:"441",src:w4,width:"660"})})]})}const O4="/my-textbook/assets/trie-YRC5JOzG.png",k4="/my-textbook/assets/trie-insert-apple-X-XsSa7j.png",L4="/my-textbook/assets/trie-insert-ape-oStD4E_e.png",D4="/my-textbook/assets/trie-insert-nope-UQEFvQi4.png",M4="/my-textbook/assets/trie-search-vG5E9hIt.png",F4="/my-textbook/assets/trie-starts-with-aTDBtlPI.png",P4=`class TrieNode {
  constructor() {
    this.word = false;
    this.children = new Map();
  }
}`,U4=`class Trie {
  constructor() {
    this.root = new TrieNode(); 
  }
  
  ...
}`,B4=`insert(word) {
  let curr = this.root;

  for (const char of word) {
    if (!curr.children.has(char)) {
      curr.children.set(char, new TrieNode());
    }

    curr = curr.children.get(char);
  }

  curr.word = true;
}`,H4=`search(word) {
  let curr = this.root;

  for (const char of word) {
    if (!curr.children.has(char)) {
      return false;
    }

    curr = curr.children.get(char);
  }

  return curr.word;
}`,G4=`startsWith(prefix) {
  let curr = this.root;

  for (let char of prefix) {
    if (!curr.children.has(char)) {
      return false;
    }

    curr = curr.children.get(char);
  }

  return true;
}`;function $4(){return e.jsxs(e.Fragment,{children:[e.jsx("h2",{className:"font-bold my-2",children:"Мотивация"}),e.jsx("p",{className:"mb-2",children:"Давайте объясним, почему нам нужно префиксное дерево (trie)."}),e.jsx("p",{className:"mb-2",children:"Представьте, что у нас есть большая коробка, наполненная разными овощами, такими как кабачки, капуста, помидоры и т. д. Если бы мы хотели упорядочить их по именам, нам нужно было бы начать с коробок меньшего размера и пометить каждую из них каждой буквой алфавита. Таким образом, все овощи, названия которых начинаются с буквы «А», попадут в коробку с надписью «А» и т. д. и т. п."}),e.jsx("p",{className:"mb-2",children:"Но есть овощи, у которых общая первая буква или даже несколько первых букв, например «кабачок» и «капуста». Вместо того, чтобы создавать новые коробки для каждого префикса, мы можем создавать новые коробки внутри исходной коробки, чтобы каждая новая коробка использовалась для обозначения каждой дополнительной буквы в названии нашего овоща."}),e.jsx("p",{className:"mb-2",children:"Итак, теперь, когда у нас есть дополнительные коробки внутри, скажем, коробки «к», помеченные второй буквой названия каждого овоща, мы можем положить «кабачок» и «капусту» в одну и ту же коробку и т. д. и т. п. Мы можем продолжать делать это для каждой буквы алфавита, пока у нас не появится группа меньших коробок внутри больших коробок."}),e.jsx("p",{className:"mb-2",children:"Префиксное дерево позволяет нам организовывать слова по первым нескольким буквам (префиксам). В случае дерева каждая коробка для овощей будет представлена как узел, а рёбра будут использоваться для обозначения букв, которые их соединяют."}),e.jsxs("p",{className:"mb-2",children:["Префиксное дерево представляет собой древовидную структуру данных, которую можно использовать для поиска слов по заданному префиксу. Оно позволяет делать это за"," ",e.jsx("i",{children:"O"}),"(1) по времени."]}),e.jsx("p",{className:"mb-2",children:"Мы хотим иметь возможность вставки и поиска таким образом, чтобы у нас получились следующие сложности:"}),e.jsxs("ul",{className:"mb-2",children:[e.jsxs("li",{children:["Вставка слова: ",e.jsx("i",{children:"O"}),"(1)"]}),e.jsxs("li",{children:["Поиск слова: ",e.jsx("i",{children:"O"}),"(1)"]}),e.jsxs("li",{children:["Поиск префикса: ",e.jsx("i",{children:"O"}),"(1)"]})]}),e.jsx("p",{className:"mb-2",children:e.jsxs("strong",{children:["Вы можете подумать про себя, что нельзя ли выполнить описанные выше операции и с объектом? Да, но объект будет поддерживать только точное совпадение строки, поэтому в худшем случае поиск префикса займёт ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),") итераций. Префиксное дерево позволит нам искать строки, начинающиеся с определённого префикса, за ",e.jsx("i",{children:"O"}),"(1) по времени."]})}),e.jsxs("p",{className:"mb-2",children:["Возможно, вы уже поняли, что реальным применением префиксного дерева является автозаполнение поисковой системы. Автозаполнение сопоставляет буквы префикса, чтобы предсказать слова, которые вы собираетесь ввести. А поскольку поиск префикса составляет ",e.jsx("i",{children:"O"}),"(1), он выполняется быстро и эффективно."]}),e.jsxs("p",{className:"mb-2",children:["На изображении ниже показано префиксное дерево. Для примеров возьмём английский алфавит. Поскольку в алфавите 26 букв, каждый узел будет иметь не более 26 дочерних элементов. Для краткости мы использовали ",e.jsx("strong",{children:"..."})," для обозначения всех букв между c и z."]}),e.jsx("img",{alt:"Префиксное дерево",className:"mb-2",height:"300",src:O4,width:"500"}),e.jsx("h2",{className:"font-bold my-2",children:"Реализация"}),e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Узел префиксного дерева"})}),e.jsxs("p",{className:"mb-2",children:["Когда мы вставляем в дерево, мы вставляем слова, даже если они представляют собой отдельные символы. Нам нужно сделать это, чтобы при поиске мы могли определить, существует слово или нет. Итак, каждый узел, назовем его"," ",e.jsx("code",{children:"TrieNode"}),", должен отслеживать свои дочерние узлы и иметь логическую переменную, которая определяет, заканчивается ли слово на этом"," ",e.jsx("code",{children:"TrieNode"}),". Для этого мы можем создать отдельный класс"," ",e.jsx("code",{children:"TrieNode"}),"."]}),e.jsx(k,{value:P4}),e.jsxs("p",{className:"mb-2",children:["Итак, теперь всякий раз, когда мы добавляем экземпляр класса ",e.jsx("code",{children:"Trie"}),", у нас будет новый ",e.jsx("code",{children:"TrieNode"})," в качестве корневого узла в конструкторе."]})]}),e.jsxs("li",{children:[e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Класс префиксного дерева"})}),e.jsx(k,{value:U4}),e.jsxs("ul",{children:[e.jsxs("li",{className:"mb-2",children:[e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Вставка слова"})}),e.jsxs("p",{className:"mb-2",children:["Чтобы вставить в префиксное дерево, мы можем перебрать каждый символ слова, которое хотим вставить. Если символ не существует, мы можем вставить его в наш ",e.jsx("code",{children:"Map"})," вместе с его дочерними элементами. В противном случае мы можем продолжить движение вниз по дереву. Достигнув последнего символа, мы можем пометить этот ",e.jsx("code",{children:"TrieNode"})," как слово."]}),e.jsxs("p",{className:"mb-2",children:["Поскольку мы используем ",e.jsx("code",{children:"Map"})," для хранения дочерних элементов, мы можем получить дочерние элементы за ",e.jsx("i",{children:"O"}),"(1) по времени."]}),e.jsx(k,{value:B4}),e.jsx("p",{className:"mb-2",children:e.jsxs("strong",{children:["На изображениях ниже показан процесс вставки слов «apple», «ape» и «nope». ",e.jsx("code",{children:"curr"})," представляет текущий ",e.jsx("code",{children:"TrieNode"})," (в красных кружках), а логическое значение ",e.jsx("code",{children:"word"})," показывает, заканчивается ли слово на ",e.jsx("code",{children:"TrieNode"}),"."]})}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Вставка слова 'apple' в префиксное дерево",className:"mx-auto mt-2",height:"1100",src:k4,width:"800"})}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Вставка слова 'ape' в префиксное дерево",className:"mx-auto",height:"630",src:L4,width:"1300"})}),e.jsx("img",{alt:"Вставка слова 'nope' в префиксное дерево",className:"mb-2",height:"1200",src:D4,width:"1761"})]}),e.jsxs("li",{className:"mb-2",children:[e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Поиск слова"})}),e.jsxs("p",{className:"mb-2",children:["Мы можем проверить, существует ли слово, и вернуть логическое значение. Для этого мы пройдёмся по каждому символу и как только встретим символ, которого нет в нашем дереве, мы сможем вернуть ",e.jsx("code",{children:"false"}),". Это имеет смысл, поскольку слово не может быть полным, если один из символов отсутствует. Однако может быть и так, что существует каждый отдельный символ, но последний символ не помечен как слово. Например, если в нашем префиксном дереве есть слово «apple», а мы ищем слово «app», даже если префикс существует, само слово не существует, поскольку атрибут"," ",e.jsx("code",{children:"word"})," ",e.jsx("code",{children:"'p'"})," равен ",e.jsx("code",{children:"false"}),"."]}),e.jsx(k,{value:H4}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"На изображении ниже показан поиск по слову «no»."})}),e.jsx("img",{alt:"Поиск слова в префиксном дереве",className:"mb-2",height:"640",src:M4,width:"1660"})]}),e.jsxs("li",{className:"mb-2",children:[e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Поиск префикса"})}),e.jsxs("p",{className:"mb-2",children:["Если мы хотим узнать, содержит ли наше дерево слово с префиксом, мы можем использовать следующий метод. Если каждый символ префикса существует в нашем префиксном дереве, мы можем вернуть ",e.jsx("code",{children:"true"}),". В противном случае мы вернем ",e.jsx("code",{children:"false"}),"."]}),e.jsx(k,{value:G4}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Префикс «no» существует в нашем дереве."})}),e.jsx("img",{alt:"Поиск префикса в префиксном дереве",className:"mb-2",height:"651",src:F4,width:"1661"})]})]})]})]}),e.jsx("h2",{className:"font-bold my-2",children:"Сложность по времени и памяти"}),e.jsxs("p",{className:"mb-2",children:["Если бы у нас не было префиксного дерева, выполнение поиска методом грубой силы представляло бы собой перебор всех слов и проверку, какие из них совпадают. Это даёт нам сложность по времени ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"})," ∗ ",e.jsx("i",{children:"m"}),"), где ",e.jsx("i",{children:"n"})," — количество слов, а ",e.jsx("i",{children:"m"})," — средняя длина каждого слова."]}),e.jsxs("p",{className:"mb-2",children:["Префиксные деревья позволяют нам сделать это за время ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"m"}),"). Это связано с тем, что мы итерируемся один раз для каждого символа в целевом слове."]})]})}const z4="/my-textbook/assets/fibonacci2-KRkjgAyt.png",W4=`function fibonacci(n) {
  // Базовый случай: n = 0 или 1
  if (n <= 1) {
    return n;
  }

  // Рекурсивный случай: fib(n) = fib(n - 1) + fib(n - 2)
  return fibonacci(n - 1) + fibonacci(n - 2);
}`;function V4(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Более интересный вид рекурсии — это рекурсия с двумя ветвями. Опять же, давайте возьмём математический пример, чтобы рассмотреть это - последовательность Фибоначчи. Математическая формула для расчёта ",e.jsx("i",{children:"n"})," числа Фибоначчи состоит в том, чтобы взять числа"," ",e.jsxs("code",{children:[e.jsx("i",{children:"n"})," - 1"]})," ","и"," ",e.jsxs("code",{children:[e.jsx("i",{children:"n"})," - 2"]})," ","и сложить их. Известно, что"," ",e.jsxs("code",{children:[e.jsx("i",{children:"F"}),"(0) = 0"]})," ","и"," ",e.jsxs("code",{children:[e.jsx("i",{children:"F"}),"(1) = 1"]}),", что в рекурсивной функции будет нашим базовым случаем."]}),e.jsx("p",{className:"mb-2",children:"Формула будет записана так:"}),e.jsx("p",{className:"mb-2",children:e.jsxs("code",{children:[e.jsx("i",{children:"fib"}),"(",e.jsx("i",{children:"n"}),") = ",e.jsx("i",{children:"fib"}),"(",e.jsx("i",{children:"n"})," - 1) + ",e.jsx("i",{children:"fib"}),"(",e.jsx("i",{children:"n"})," - 2)"]})}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Вышеуказанное известно как рекуррентное соотношение."})}),e.jsx("h2",{className:"font-bold my-2",children:"Концепция"}),e.jsx("p",{className:"mb-2",children:"Мы можем визуализировать математическую формулу с помощью следующего дерева."}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Последовательность Фибоначчи в виде дерева",className:"mx-auto",height:"580",src:PS,width:"1180"})}),e.jsx(k,{value:W4}),e.jsx("p",{className:"mb-2",children:"Приведённый выше псевдокод аналогичен нашему предыдущему примеру с факториалом, за исключением того, что здесь коэффициент ветвления равен двум. Обратите внимание, как мы дважды вызываем функцию в последней строке, в результате чего получается дерево, показанное на изображении."}),e.jsxs("p",{className:"mb-2",children:["Для анализа давайте воспользуемся той же техникой, которую мы представили в предыдущей статье. У нас есть базовый случай, мы знаем, что функция вызывает себя в последнем операторе ",e.jsx("code",{children:"return"}),", и мы знаем, что в какой-то момент, когда базовый случай будет достигнут, нам придется вернуться «вверх», чтобы вычислить окончательный ответ. Чтобы вычислить ",e.jsx("code",{children:"fibonacci(5)"}),", мы получаем ",e.jsx("code",{children:"fibonacci(4) + fibonacci(3)"}),". Теперь оба этих вызова выполняют функцию заново. Глядя на наше дерево, ",e.jsx("code",{children:"fibonacci(4)"})," вызовет"," ",e.jsx("code",{children:"fibonacci(3) + fibonacci(2)"})," и так далее, пока ",e.jsx("i",{children:"n"})," не достигнет"," ",e.jsx("code",{children:"1"})," или ",e.jsx("code",{children:"0"}),", после чего функция вернёт результат и продолжит идти вверх до тех пор, пока ",e.jsx("code",{children:"fibonacci(4)"})," не даст нам ответ"," ",e.jsx("code",{children:"3"}),". Теперь у нас есть ответ для ",e.jsx("code",{children:"fibonacci(4)"}),", и мы делаем то же самое для ",e.jsx("code",{children:"fibonacci(3)"}),", получая ",e.jsx("code",{children:"2"}),". Сложим эти два числа, и получим 5-ое число Фибоначчи, которое будет равно ",e.jsx("code",{children:"5"}),"."]}),e.jsx("h2",{className:"font-bold my-2",children:"Оценка сложности по времени"}),e.jsxs("p",{className:"mb-2",children:["Оценить сложность по времени для этого случая немного сложнее. Давайте проанализируем дерево и количество узлов на каждом из уровней. На 1-ом уровне (0 индекс) находится ",e.jsx("code",{children:"1"})," узел, на 2-ом — ",e.jsx("code",{children:"2"}),", затем"," ",e.jsx("code",{children:"4"}),", после чего мы видим закономерность. Каждый уровень может содержать в два 2 раза больше узлов, чем предыдущий уровень."]}),e.jsxs("p",{className:"mb-2",children:["Это даёт нам только половину ответа. Если ",e.jsx("i",{children:"n"})," — уровень, на котором мы сейчас находится, это означает, что для получения количества узлов на любом уровне"," ",e.jsx("i",{children:"n"})," используется формула"," ",e.jsxs("code",{children:["2",e.jsx("sup",{children:e.jsx("i",{children:"n"})})]}),". Поскольку нам потенциально необходимо пройти весь путь до ",e.jsx("i",{children:"n"}),"-го уровня, а на каждом уровне в два раза больше узлов, мы можем сказать, что сложность по времени составляет ",e.jsx("i",{children:"O"}),"(2",e.jsx("sup",{children:e.jsx("i",{children:"n"})}),") ."]}),e.jsxs("p",{className:"mb-2",children:["Алгоритмически говоря, даже если бы у нас было 2 * 2",e.jsx("sup",{children:e.jsx("i",{children:"n"})})," ","или 2",e.jsx("sup",{children:e.jsx("i",{children:"n"})})," ","- 1 операций, сложность бы всё равно составляла ",e.jsx("i",{children:"O"}),"(2",e.jsx("sup",{children:e.jsx("i",{children:"n"})}),"), поскольку константы не влияют на сложность."]}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Последовательность Фибоначчи в виде дерева",className:"mx-auto",height:"640",src:z4,width:"1420"})}),e.jsx("h2",{className:"font-bold my-2",children:"Итоги"}),e.jsx("p",{className:"mb-2",children:"В следующих статьях мы будем возвращаться к рекурсии снова и снова, и она действительно хороша, когда дело доходит до обхода деревьев и графов."})]})}const K4="/my-textbook/assets/two-dimension-dp1-PcMLOJdS.png",Y4="/my-textbook/assets/two-dimension-dp2-ap4OT0KE.png",q4="/my-textbook/assets/two-dimension-dp3-pNFfTBt_.png",X4=`function bruteForce(r, c, rows, cols) {
  if (r === rows || c === cols) {
    return 0;
  }

  if (r === rows - 1 && c === cols - 1) {
    return 1;
  }

  return bruteForce(r + 1, c, rows, cols) + bruteForce(r, c + 1, rows, cols);
}`,Z4=`function memoization(r, c, rows, cols, cache) {
  if (r === rows || c === cols) {
    return 0;
  }

  if (cache[r][c] > 0) {
    return cache[r][c];
  }

  if (r === rows - 1 && c === cols - 1) {
    return 1;
  }

  cache[r][c] = memoization(r + 1, c, rows, cols, cache) + memoization(r, c + 1, rows, cols, cache);

  return cache[r][c];
}`,Q4=`function dp(rows, cols) {
  let prevRow = new Array(cols).fill(0); 

  for (let i = rows - 1; i >= 0; i--) {
    let curRow = new Array(cols).fill(0);
    curRow[cols - 1] = 1;

    for (let j = cols - 2; j >= 0; j--) {
      curRow[j] = curRow[j + 1] + prevRow[j];
    }

    prevRow = curRow;
  }

  return prevRow[0];
}`;function J4(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Мы уже обсуждали одномерное динамическое программирование. Давайте теперь возьмём сетку (которую мы обсуждали ранее) и выясним, как мы можем применить к ней динамическое программирование. Для этого возьмём следующую задачу, знакомую нам по статьям про графы."}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Подсчитайте количество уникальных путей от верхнего левого угла до правого нижнего. Вам разрешено двигаться только вниз или вправо."})}),e.jsxs("p",{className:"mb-2",children:["Давайте примем во внимание следующую сетку, где нам разрешено двигаться только вниз или вправо. Единственный способ выйти за пределы — это если наш указатель"," ",e.jsx("code",{children:"r"})," окажется на количестве строк, а указатель ",e.jsx("code",{children:"c"})," — на количестве столбцов."]}),e.jsx("img",{alt:"Сетка",className:"mb-2",height:"340",src:K4,width:"340"}),e.jsx("h2",{className:"font-bold my-2",children:"Подход методом грубой силы"}),e.jsxs("p",{className:"mb-2",children:["Подход методом грубой силы, начиная с ",e.jsx("code",{children:"0, 0"}),", будет выглядеть следующим образом, где синие стрелки обозначают все пути, которые мы можем пройти от заданной координаты. Чтобы вычислить уникальные пути от заданной координаты до пункта назначения, мы просто добавляем возвращаемое значение к текущему значению в нашей координате. Изображение ниже демонстрирует часть подхода грубой силы, но этого достаточно, чтобы увидеть, где он терпит неудачу. Зная то, что вы знаете о DP на данный момент, можете ли вы выяснить, где выполняется ненужная работа?"]}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Подсчёт уникальных путей методом грубой силы",className:"mx-auto",height:"980",src:Y4,width:"980"})}),e.jsx(k,{value:X4}),e.jsx("h2",{className:"font-bold my-2",children:"Проблема"}),e.jsxs("p",{className:"mb-2",children:["Проблема с этим подходом заключается в том, что, поскольку нам нужно идти вниз и вправо, чтобы вычислить значение по каждой отдельной координате, в конечном итоге нам придётся вычислять множество значений несколько раз, что является дорогостоящим, особенно при использовании подхода сверху. Сейчас это кажется тривиальным, учитывая размер сетки, но это будет намного менее эффективно, если у нас будет сетка размером, скажем, ",e.jsx("code",{children:"100 * 100"}),"."]}),e.jsx("p",{className:"mb-2",children:"Давайте посмотрим, как мы можем решить эту проблему с помощью DP."}),e.jsx("h2",{className:"font-bold my-2",children:"Подход динамического программирования"}),e.jsxs("ul",{children:[e.jsxs("li",{className:"mb-2",children:[e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Метод динамического программирования сверху"})}),e.jsx("p",{className:"mb-2",children:"Давайте теперь посмотрим, как мы можем использовать DP, чтобы сэкономить дополнительную работу, которую мы выполняем при решении методом грубой силы. Код будет выглядеть следующим образом:"}),e.jsx(k,{value:Z4}),e.jsx("p",{className:"mb-2",children:"Технически этот код очень похож на тот, который был при методе грубой силы. В этом случае мы вводим параметр кэша, который хранит количество уникальных путей от заданной координаты. Давайте теперь завершим остальную часть визуального представления, которое мы продемонстрировали ранее, только на этот раз используя подход DP."}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Подсчёт уникальных путей динамическим программированием",className:"mx-auto",height:"320",src:q4,width:"1330"})}),e.jsxs("p",{className:"mb-2",children:["На изображении выше мы находим пути для ",e.jsx("code",{children:"1"}),"-й строки"," ",e.jsx("code",{children:"(1, 0)"}),", и это помогает нам найти пути для ",e.jsx("code",{children:"0"}),"-й строки. Обратите внимание, что на четвёртом шаге, когда мы хотим вычислить"," ",e.jsx("code",{children:"(0, 1)"}),", нам не нужно вычислять ",e.jsx("code",{children:"(1, 1)"})," снова, поскольку оно уже находится в нашем кэше. Это избавляет нас от тонны ненужной работы."]})]}),e.jsxs("li",{className:"mb-2",children:[e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Метод динамического программирования снизу"})}),e.jsx("p",{className:"mb-2",children:"При таком подходе мы можем начать снизу и двигаться вверх. Сложность по времени останется прежней, за исключением того, что это итеративный подход. Порядок, в котором мы выполняем эти вычисления, очень важен. Нам приходится вычислять эти значения справа налево, потому что мы можем получить возвращаемое значение только тогда, когда достигнем базового случая."}),e.jsxs("p",{className:"mb-2",children:["На самом деле нам даже не нужна полная сетка для вычисления значений в любой заданной строке. Это означает, что для расчета значений ",e.jsx("code",{children:"n"}),"-й строки нам нужны только значения ",e.jsx("code",{children:"n - 1"})," строки. Затем мы можем обновить нашу предыдущую строку, чтобы она стала текущей. Звучит знакомо? Мы использовали тот же подход в решении Фибоначчи!"]}),e.jsx(k,{value:Q4}),e.jsxs("p",{className:"mb-2",children:["Поскольку мы упомянули, что для вычисления значений в любой заданной строке нам нужна только предыдущая строка, мы можем инициализировать начальную строку, заполненную нулями, чтобы вычислить самую нижнюю строку. Наш первый цикл ",e.jsx("code",{children:"for"})," уменьшает номер строки, и для каждого номера строки мы инициализируем строку, полную нулей, и присваиваем ",e.jsx("code",{children:"1"})," самому правому столбцу, потому что это наше возвращаемое значение. Затем мы используем внутренний цикл ",e.jsx("code",{children:"for"}),", чтобы просмотреть каждый столбец в строке и вычислить его значение так же, как мы продемонстрировали на изображениях ранее."]})]})]}),e.jsx("h2",{className:"font-bold my-2",children:"Итоги"}),e.jsx("p",{className:"mb-2",children:"Это была лишь поверхностность, и задачи динамического программирования могут оказаться намного сложнее, чем то, что мы только что рассмотрели. Как всегда, эти основы помогут вам, по крайней мере, понять концепцию."})]})}const eL="/my-textbook/assets/two-pointers-L5WKEjNi.png",tL=`function isPalindrome(word) {
  let l = 0;
  let r = word.length - 1;

  while (l < r) {
    if (word[l] !== word[r]) {
      return false;
    }

    l++;
    r--;
  }

  return true;
}`,nL=`function targetSum(nums, target) {
  let l = 0;
  let r = nums.length - 1;

  while (l < r) {
    if (nums[l] + nums[r] > target) {
      r--;
    } else if (nums[l] + nums[r] < target) {
      l++;
    } else {
      return [l, r];
    }
  }
}`;function rL(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Метод двух указателей — это популярный шаблон решения задач, особенно полезный при работе с массивами и строками. Основная идея состоит в том, чтобы иметь указатель"," ",e.jsx("code",{children:"L"})," (левый) и указатель ",e.jsx("code",{children:"R"})," (правый), которые начинаются с некоторого индекса массива или строки. Куда они изначально указывают, зависит от решаемой проблемы."]}),e.jsx("h2",{className:"font-bold my-2",children:"Концепция"}),e.jsxs("p",{className:"mb-2",children:["Установим указатели на начало и конец массива (или строки): указатель"," ",e.jsx("code",{children:"L"})," на ",e.jsx("code",{children:"0"})," и указатель ",e.jsx("code",{children:"R"})," на"," ",e.jsx("code",{children:"length - 1"}),". Будем увеличивать ",e.jsx("code",{children:"L"}),", либо уменьшать"," ",e.jsx("code",{children:"R"}),", либо делать и то и другое, в зависимости от условий, заданных в задаче. Будем повторять это до тех пор, пока указатели не встретятся друг с другом."]}),e.jsx("h2",{className:"font-bold my-2",children:"Примеры"}),e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("strong",{children:"Проверьте, является ли строка палиндромом."}),e.jsxs("p",{className:"mb-2",children:["Палиндром — это последовательность (строка, массив и т. п.), которая одинаково читается слева направо и справа налево. Мы можем использовать нашу реализацию с методом двух указателей, о которой упомянуто выше. Если у нас есть строка"," ",e.jsx("code",{children:"word"})," и наш левый указатель начинается с индекса ",e.jsx("code",{children:"0"}),", а правый указатель с индекса ",e.jsx("code",{children:"word.length - 1"}),", каждый символ в каждом ",e.jsx("code",{children:"L"})," должен совпадать с каждым символом в ",e.jsx("code",{children:"R"}),"."]}),e.jsx(k,{value:tL})]}),e.jsxs("li",{children:[e.jsxs("strong",{children:["Дан отсортированный массив и значение ",e.jsx("code",{children:"target"}),". Верните индексы двух элементов, которые в сумме дают переданное ",e.jsx("code",{children:"target"}),". Предполагается, что существует ровно одно решение."]}),e.jsxs("p",{className:"mb-2",children:["Тривиальным подходом был бы перебор каждой пары чисел, однако такой перебор составил бы ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),e.jsx("sup",{children:"2"}),") по времени, мы можем сделать лучше."]}),e.jsxs("p",{className:"mb-2",children:["Поскольку массив отсортирован, мы можем использовать эту информацию для разумного перемещения указателей. Как и в предыдущем примере, установим наши указатели ",e.jsx("code",{children:"L"})," и ",e.jsx("code",{children:"R"})," на ",e.jsx("code",{children:"0"})," и"," ",e.jsx("code",{children:"arr.length - 1"})," соответственно. Вычислим сумму элементов, на которые указывают указатели. Если сумма слишком большая, мы можем передвинуть указатель ",e.jsx("code",{children:"R"})," влево (уменьшить на 1), а если сумма слишком маленькая, то мы можем передвинуть указатель ",e.jsx("code",{children:"L"})," вправо."]}),e.jsxs("strong",{children:["Причина, по которой мы можем уменьшить ",e.jsx("code",{children:"R"}),", чтобы сделать сумму меньше, заключается в том, что каждое число слева от ",e.jsx("code",{children:"arr[R]"})," ","меньше, чем ",e.jsx("code",{children:"arr[R]"}),". Аналогично каждое число справа от"," ",e.jsx("code",{children:"arr[L]"})," больше, чем ",e.jsx("code",{children:"arr[L]"}),"."]}),e.jsx(k,{value:nL})]})]}),e.jsx("img",{alt:"Метод двух указателей",height:"400",src:eL,width:"1700"}),e.jsx("h2",{className:"font-bold my-2",children:"Сложность по времени"}),e.jsxs("p",{className:"mb-2",children:["Сила этого метода в том, что он позволяет нам иметь максимум ",e.jsx("i",{children:"n"})," итераций, что избавляет нас от тонны избыточной работы, которую мы могли бы выполнить, используя метод грубой силы (полного перебора)."]})]})}const sL="/my-textbook/assets/unbounded-knapsack1-38glCVjy.png",iL="/my-textbook/assets/unbounded-knapsack2-btgVjWqX.png",aL="/my-textbook/assets/unbounded-knapsack3-Fvh51jOo.png",oL="/my-textbook/assets/unbounded-knapsack-dp-G82xuBNR.png",lL=`function dfs(profit,  weight, capacity) {
  return dfsHelper(0, profit, weight, capacity);
}

function dfsHelper(i, profit, weight, capacity) {
  if (i === profit.length) {
    return 0;
  }

  // Пропускает предмет i
  let maxProfit = dfsHelper(i + 1, profit, weight, capacity);

  // Включает предмет i
  const newCapacity = capacity - weight[i];

  if (newCapacity >= 0) {
    const p = profit[i] + dfsHelper(i, profit, weight, newCapacity);
    // Вычисляет максимум
    maxProfit = Math.max(maxProfit, p);
  }

  return maxProfit;
}`,cL=`function memoization(profit, weight, capacity) {
  // Двумерный массив с N строк и M + 1 столбцов, инициализированный с -1
  const N = profit.length;
  const M = capacity;
  const cache = new Array();
  
  for (let row = 0; row < N; row++) {
    cache.push(new Array(M + 1).fill(-1));
  }

  return memoHelper(0, profit, weight, capacity, cache);
}

function memoHelper(i, profit, weight, capacity, cache) {
  if (i === profit.length) {
    return 0;
  }

  if (cache[i][capacity] !== -1) {
    return cache[i][capacity];
  }

  // Пропускает предмет i
  cache[i][capacity] = memoHelper(i + 1, profit, weight, capacity, cache);

  // Включает предмет i
  const newCapacity = capacity - weight[i];

  if (newCapacity >= 0) {
    const p = profit[i] + memoHelper(i, profit, weight, newCapacity, cache);
    // Вычисляет максимум
    cache[i][capacity] = Math.max(cache[i][capacity], p);  
  }

  return cache[i][capacity];
} `,dL=`function dp(profit, weight, capacity) {
  const N = profit.length;
  const M = capacity;
  const dp = new Array();

  for (let row = 0; row < N; row++) {
    dp.push(new Array(M + 1).fill(0));
  }

  // Заполняет первый столбец и строку, чтобы сократить количество условий
  for (let i = 0; i < N; i++) {
    dp[i][0] = 0;
  }

  for (let c = 0; c <= M; c++) {
    if (weight[0] <= c) {
      dp[0][c] = (Math.floor(c / weight[0])) * profit[0];
    } 
  }

  for (let i = 1; i < N; i++) {
    for (let c = 1; c <= M; c++) {
      const skip = dp[i - 1][c];
      let include = 0;
      
      if (c - weight[i] >= 0) {
        include = profit[i] + dp[i][c - weight[i]];
      }

      dp[i][c] = Math.max(include, skip);
    }
  }

  return dp[N - 1][M];
}`,uL=`function optimizedDp(profit, weight, capacity) {
  const N = profit.length;
  const M = capacity;
  let dp = new Array(M + 1).fill(0);

  for (let i = 1; i < N; i++) {
    const curRow = new Array(M + 1).fill(0);

    for (let c = 1; c <= M; c++) {
      const skip = dp[c];
      let include = 0;

      if (c - weight[i] >= 0) {
        include = profit[i] + curRow[c - weight[i]];
      }

      curRow[c] =  Math.max(include, skip);
    }

    dp = curRow;
  }

  return dp[M];
}`;function hL(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Иногда вопрос может быть о небольшой вариации задачи о рюкзаке 0-1."}),e.jsx("h2",{className:"font-bold my-2",children:"Небольшая вариация рюкзака 0-1"}),e.jsx("p",{className:"mb-2",children:"В предыдущей статье нам разрешалось включать каждый предмет не более одного раза. Благодаря неограниченному рюкзаку у нас нет ограничений на то, сколько раз мы можем включать предмет. В связи с этим перед нами стоит следующий вопрос."}),e.jsx("p",{className:"mb-2",children:e.jsxs("strong",{children:["Учитывая список из N предметов и рюкзак ограниченной вместимости, верните максимальную общую ценность, которая может содержаться в рюкзаке. Ценность i-го предмета равна profit[i], а его вес равен weight[i]. Предположим, у вас может быть ",e.jsx("i",{children:"неограниченное количество"})," каждого доступного предмета."]})}),e.jsxs("p",{className:"mb-2",children:["Опять же, мы пытаемся максимизировать нашу общую ценность, выбирая предметы так, чтобы наша вместимость оставалась ",e.jsx("code",{children:">=0"}),". Поскольку мы можем включать один и тот же предмет несколько раз, высота нашего дерева решений в конечном итоге будет равна ",e.jsx("i",{children:"m"}),", где ",e.jsx("i",{children:"m"})," — общая вместимость. Это отличается от 0-1, где высота нашего дерева решений была ",e.jsx("i",{children:"n"}),", где ",e.jsx("i",{children:"n"})," — длина массивов"," ",e.jsx("code",{children:"profit"})," и ",e.jsx("code",{children:"weight"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Как и раньше, мы можем включить или исключить любой предмет. Разница здесь в том, что когда мы добавляем предмет, мы можем ",e.jsx("strong",{children:"продолжать"})," включать его до тех пор, пока у нас не останется для него места. Вот визуализированное дерево решений. Вы можете заметить разницу?"]}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Дерево решений задачи о неограниченном рюкзаке",className:"mx-auto",height:"459",src:sL,width:"780"})}),e.jsxs("p",{className:"mb-2",children:["Обратите внимание, что в левом поддереве мы решили включить первый предмет дважды. Подобным образом, в правом поддереве мы изначально решили исключить первый предмет. Затем мы можем сделать выбор: включить второй предмет или исключить его. Заметим: если мы пропустим предмет, мы не сможем включить его снова. Обратите внимание, что максимальная ценность, которую мы можем получить, равна"," ",e.jsx("code",{children:"18"}),", куда мы решили включить ",e.jsx("code",{children:"7"})," дважды и ",e.jsx("code",{children:"4"})," ","один раз. Оставшуюся часть дерева решений рекомендуется нарисовать самостоятельно."]}),e.jsxs("p",{className:"mb-2",children:["Однако это лишь один из способов визуализации дерева решений. Есть ещё один способ визуализировать это, хотя для этого требуются циклы. Это будет выглядеть так, как показано на изображении ниже. Для краткости включено только левое поддерево, но этого достаточно, чтобы вы поняли суть происходящего. Когда ",e.jsx("code",{children:"Вм = 3"}),", у нас есть возможность снова включить ",e.jsx("code",{children:"weight[0]"})," или"," ",e.jsx("code",{children:"weight[1], weight[2], weight[3]"}),". Причина, по которой мы можем снова включить ",e.jsx("code",{children:"weight[0]"}),", заключается в том, что мы не пропустили его изначально и у нас есть неограниченное количество."]}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Дерево решений задачи о неограниченном рюкзаке с циклами",className:"mx-auto",height:"360",src:iL,width:"780"})}),e.jsx("p",{className:"mb-2",children:e.jsxs("strong",{children:["Ранее мы упоминали, что в худшем случае высота этого дерева будет ",e.jsx("i",{children:"O"}),"(2",e.jsx("sup",{children:e.jsx("i",{children:"c"})}),")/",e.jsx("i",{children:"O"}),"(2",e.jsx("sup",{children:e.jsx("i",{children:"m"})}),"). Это имеет смысл, потому что если у нас есть предмет весом ",e.jsx("code",{children:"1"}),", и мы продолжали выбирать этот предмет, наше дерево решений будет выглядеть следующим образом."]})}),e.jsx("img",{alt:"Дерево решений задачи о неограниченном рюкзаке с циклами",className:"mb-2",height:"459",src:aL,width:"620"}),e.jsx("h2",{className:"font-bold my-2",children:"Более глубокое погружение"}),e.jsx("p",{className:"mb-2",children:"Чтобы лучше понять, почему этот алгоритм работает, давайте углубимся в подробности. Напомним, что в динамическом программировании речь идёт о разбиении проблемы на подзадачи. В исходной задаче у нас есть четыре предмета на выбор, и мы можем выбирать каждый предмет бесконечное количество раз. Среди всех этих возможностей мы пытались максимизировать ценность. В исходное левое поддерево мы пытались включить все возможности, в которых был хотя бы один экземпляр первого предмета. Затем, если мы решим снова пойти влево из этого левого поддерева, мы включим ещё одно вхождение первого предмета. Однако если бы мы решили пойти направо, мы бы пропустили первый предмет и перешли к включению второго предмета."}),e.jsx("p",{className:"mb-2",children:"Поскольку у нас остаётся только три предмета, когда мы пропускаем первый, это ещё больше усложняет задачу. В исходном правом поддереве у нас есть все возможности включить хотя бы один второй предмет. Если мы продолжим идти вправо, мы разобьём задачу ещё дальше, выбрав не более одного второго предмета. Обратите внимание, что каждый раз количество предметов, из которых мы можем выбирать, становится меньше, поэтому у нас остаётся меньше вариантов выбора, пока вместимость не исчерпается и выбора больше не останется. Вот что обозначает дерево."}),e.jsx("h2",{className:"font-bold my-2",children:"Реализация"}),e.jsxs("ul",{children:[e.jsxs("li",{className:"mb-2",children:[e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Реализация с помощью метода грубой силы"})}),e.jsxs("p",{className:"mb-2",children:["С точки зрения реализации 0-1 и неограниченный рюкзак отличаются только на 1 строку. То есть, когда мы решаем включить предмет ",e.jsx("code",{children:"i"}),", нам не нужно пропускать предмет ",e.jsx("code",{children:"i"}),", выполняя ",e.jsx("code",{children:"i + 1"}),", поскольку мы можем включать его неограниченное количество раз."]}),e.jsx(k,{value:lL}),e.jsx("p",{className:"mb-2",children:e.jsxs("strong",{children:["Следует также отметить, что в рекурсивных вызовах мы передаём"," ",e.jsx("code",{children:"newCapacity"})," вместо ",e.jsx("code",{children:"capacity"}),", что не изменилось по сравнению с предыдущей статьёй. Это связано с тем, что вместимость меняется на каждом этапе."]})}),e.jsxs("p",{children:["Несмотря на то, что наша вместимость изменилась, у нас по-прежнему есть доступ ко всем элементам наших массивов ",e.jsx("code",{children:"profit"})," и ",e.jsx("code",{children:"weight"}),"."]})]}),e.jsxs("li",{className:"mb-2",children:[e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Реализация мемоизации"})}),e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Ниже показано решение с мемоизацией, которое снова отличается той же строкой, что обсуждалась выше."})}),e.jsx(k,{value:cL})]}),e.jsxs("li",{className:"mb-2",children:[e.jsx("p",{className:"mb-2",children:e.jsx("strong",{children:"Реализация методом динамического программирования снизу"})}),e.jsxs("p",{className:"mb-2",children:["Истинным подходом к динамическому программированию будет метод динамического программирования снизу. Решение для него остаётся тем же, что и для метода динамического программирования снизу 0-1, за исключением того, что мы меняем одну строку кода, а именно"," ",e.jsx("code",{children:"include = profit[i] + dp[i][c - weight[i]]"}),". Обратите внимание, что это очень тонко — мы изменили ",e.jsx("code",{children:"dp[i - 1]"})," на ",e.jsx("code",{children:"dp[i]"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Поскольку сложность по времени равна ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"})," ∗ ",e.jsx("i",{children:"m"}),"), пространство решений очень похоже: у нас есть сетка ",e.jsx("i",{children:"n"})," ∗ ",e.jsx("i",{children:"m"}),", где"," ",e.jsx("i",{children:"n"})," — количество предметов, а ",e.jsx("i",{children:"m"})," — вместимость. Нашим ответом будет нижняя правая ячейка, то есть последняя строка и последний столбец. Но как нам получить ответ для каждой ячейки? По сути, нам нужен доступ только к текущей и предыдущей строкам каждый раз, когда мы выполняем расчёт. Если у нас недостаточно вместимости, мы можем использовать значение"," ",e.jsx("code",{children:"dp[i - 1][c]"})," для заполнения этой ячейки, где ",e.jsx("code",{children:"dp"})," ","представляет наше пространство решений."]}),e.jsxs("p",{className:"mb-2",children:["И наоборот, если мы решим включить этот предмет, у нас будет"," ",e.jsx("code",{children:"include = profit[i] + dp[i][c - weight[i]]"}),", что возьмёт ценность от текущего предмета и прибавит её к значению в"," ",e.jsx("code",{children:"dp[i][c - weight[i]]"}),". В данном случае мы не движемся по диагонали вверх."]}),e.jsx(k,{value:dL}),e.jsx("p",{className:"mb-2",children:"И оптимизированное по памяти решение:"}),e.jsx(k,{value:uL}),e.jsx("p",{className:"mb-2",children:"Вот как наше решение будет выглядеть визуализировано, со всеми значениями, заполненными в сетке."}),e.jsx("img",{alt:"Сетка",height:"300",src:oL,width:"640"})]})]}),e.jsx("h2",{className:"font-bold my-2",children:"Сложность по времени и памяти"}),e.jsxs("p",{className:"mb-2",children:["Сложность по времени оптимизированного решения равна ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"})," ∗ ",e.jsx("i",{children:"m"}),"), где ",e.jsx("i",{children:"n"})," — количество предметов, а ",e.jsx("i",{children:"m"})," — вместимость."]}),e.jsxs("p",{className:"mb-2",children:["Занимаемая память равна ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"m"}),"), поскольку длина нашей строки может быть равна только её вместимости."]})]})}const pL="/my-textbook/assets/union-find1-jzAVgvbO.png",mL="/my-textbook/assets/union-find2-f_8cXx-W.png",fL=`class UnionFind {
  parent = new Map();
  rank = new Map();

  constructor(n) {
    for (let i = 1; i < n + 1; i++) {
      this.parent.set(i, i);
      this.rank.set(i, 0);
    }
  }
}`,gL=`find(n) {
  let parent = this.parent.get(n);

  while (parent != this.parent.get(parent)) {
    this.parent.set(parent, this.parent.get(this.parent.get(parent)));
    parent = this.parent.get(parent);
  }

  return parent;
}`,bL=`union(n1, n2) {
  const p1 = this.find(n1);
  const p2 = this.find(n2);

  if (p1 === p2) {
    return false;
  }

  if (this.rank.get(p1) > this.rank.get(p2)) {
    this.parent.set(p2, p1);
  } else if (this.rank.get(p1) < this.rank.get(p2)) {
    this.parent.set(p1, p2);
  } else {
    this.parent.set(p1, p2);
    this.rank.set(p2, this.rank.get(p2) + 1);
  }

  return true;
}`;function xL(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Система непересекающихся множеств (Union-Find) — полезный инструмент для отслеживания узлов, соединённых в графе, и обнаружения циклов в графе. Конечно, мы можем добиться этого и с помощью DFS, используя ",e.jsx("code",{children:"Set"}),", скажем,"," ",e.jsx("code",{children:"seen"}),". Однако DFS является хорошим выбором, когда имеется статический граф, т. е. со временем рёбра не добавляются. Если мы со временем добавляем рёбра, это делает граф динамичным, и Union-Find — лучший выбор. Хотя она используется реже, чем DFS."]}),e.jsx("h2",{className:"font-bold my-2",children:"Непересекающиеся множества"}),e.jsx("p",{className:"mb-2",children:"Union-Find работает с непересекающимися множествами. Давайте кратко пробежимся по ним."}),e.jsxs("p",{className:"mb-2",children:["Непересекающиеся множества — это множества, которые не имеют общих элементов. Формально два непересекающихся множества — это множества, пересечением которых является пустое множество. Предположим, у нас есть два множества:"," ",e.jsx("code",{children:"S1 = {1, 2, 3}"})," и ",e.jsx("code",{children:"S2 = {4, 5, 6}"}),"."," ",e.jsx("code",{children:"S1"})," и ",e.jsx("code",{children:"S2"})," называются непересекающимися множествами, а два множества ",e.jsx("code",{children:"S3 = {1, 2, 5}"})," и"," ",e.jsx("code",{children:"S4 = {5, 6, 7}"})," не являются непересекающимися."]}),e.jsx("p",{className:"mb-2",children:"Union-Find работает с непересекающимися множествами. Если мы хотим выполнить объединение двух вершин, нам нужно убедиться, что эти вершины принадлежат непересекающимся множествам."}),e.jsx("h2",{className:"font-bold my-2",children:"Концепция"}),e.jsxs("p",{className:"mb-2",children:["Предположим, нам дан массив рёбер, ",e.jsx("code",{children:"edges = [[1, 2], [4, 1], [2, 4]]"}),", и нас просят построить граф и обнаружить цикл. Здесь каждый массив рёбер представляет собой ненаправленную связную пару вершин, т. е. ",e.jsx("code",{children:"1"})," ","соединена с ",e.jsx("code",{children:"2"}),", и т. д."]}),e.jsx("p",{className:"mb-2",children:"Union-Find называют «лесом деревьев». Изначально каждая вершина существует сама по себе, и для каждой вершины мы хотим сохранить указатель на её родителя. Поскольку мы их ещё не соединили, каждый узел является родителем самого себя, т.е. указывает на себя."}),e.jsx("img",{alt:"Вершины",className:"mb-2",height:"170",src:pL,width:"481"}),e.jsxs("p",{className:"mb-2",children:["Затем мы хотим соединить компоненты вместе. Поскольку ",e.jsx("code",{children:"2"})," соединена с"," ",e.jsx("code",{children:"1"}),", мы можем сделать её дочерней для ",e.jsx("code",{children:"1"}),". Здесь не имеет значения, какая вершина является родительской, а какая дочерней. Однако этот порядок начинает иметь значение, когда два компонента, которые мы пытаемся объединить, имеют разную высоту, также называемую рангом. Если вы не уверены в этой части, не волнуйтесь, мы скоро продолжим эту тему."]}),e.jsxs("p",{className:"mb-2",children:["Структура данных Union-Find имеет две операции. Операция поиска и операция объединения. Мы хотим быть уверены, что не соединяем вершины, являющиеся частью одного и того же компонента. Итак, по заданной вершине ",e.jsx("code",{children:"n"})," операция поиска находит родителя ",e.jsx("code",{children:"n"}),". Затем мы можем использовать это в операции объединения, чтобы соединить вершины вместе."]}),e.jsx("h2",{className:"font-bold my-2",children:"Реализация"}),e.jsxs("p",{className:"mb-2",children:["Для реализации Union-Find у нас может быть класс ",e.jsx("code",{children:"UnionFind"}),", с помощью которого мы можем создать экземпляр нашего ",e.jsx("code",{children:"Map"})," ",e.jsx("code",{children:"parent"})," и нашего ",e.jsx("code",{children:"Map"})," ",e.jsx("code",{children:"rank"}),". Некоторым людям нравится использовать массивы вместо ",e.jsx("code",{children:"Map"}),", и это тоже допустимый вариант."]}),e.jsx("h2",{className:"font-bold my-2",children:"Начальная настройка"}),e.jsx(k,{value:fL}),e.jsx("h2",{className:"font-bold my-2",children:"Поиск"}),e.jsxs("p",{className:"mb-2",children:["Наша функция поиска примет вершину ",e.jsx("code",{children:"n"})," в качестве аргумента и вернет её родителя. Мы можем сделать это, используя наш ",e.jsx("code",{children:"Map"})," ",e.jsx("code",{children:"parent"}),", где ключом является вершина, а значением — родительский узел. Если вершина является родителем самой себе, мы можем просто вернуть саму вершину."]}),e.jsx("h2",{className:"font-bold my-2",children:"Сжатие пути"}),e.jsx("p",{className:"mb-2",children:"Поскольку мы выполняем объединение большого количества вершин, в конечном итоге может возникнуть довольно длинная цепочка, похожая на длинный связный список. Затем, чтобы определить, являются ли два узла частью одного и того же компонента, нам потребуется много шагов. Однако мы можем уменьшить количество этих шагов, проходя две вершины за раз вместо одной. Это означало бы, что когда мы поднимаемся по дереву, родитель на самом деле является родителем родителя. В первый раз это не приведёт к улучшению производительности, но если мы когда-нибудь снова встретим ту же вершину, мы сможем немедленно получить родительскую вершину. Это называется сжатием пути."}),e.jsx(k,{value:gL}),e.jsxs("p",{className:"mb-2",children:["Строка"," ",e.jsx("code",{children:"this.parent.set(parent, this.parent.get(this.parent.get(parent)));"})," ","выполняет сжатие пути. Она обновляет родителя данной вершины, чтобы он указывал на родителя родителя."]}),e.jsx("h2",{className:"font-bold my-2",children:"Объединение"}),e.jsxs("p",{className:"mb-2",children:["Функция объединения принимает две вершины и определяет, можно ли выполнить объединение. Если две вершины имеют одного и того же родителя, объединение не может быть сформировано, и мы можем вернуть ",e.jsx("code",{children:"false"}),". Если две вершины, назовем их ",e.jsx("code",{children:"n1"})," и ",e.jsx("code",{children:"n2"}),", имеют родителей ",e.jsx("code",{children:"p1"})," и"," ",e.jsx("code",{children:"p2"})," соответственно, и ранг ",e.jsx("code",{children:"p1"})," выше, чем ",e.jsx("code",{children:"p2"}),", то ",e.jsx("code",{children:"p2"})," является дочерним узлом ",e.jsx("code",{children:"p1"}),". И наоборот,"," ",e.jsx("code",{children:"p1"})," является дочерним по отношению к ",e.jsx("code",{children:"p2"}),", если ранг"," ",e.jsx("code",{children:"p2"})," выше, чем ",e.jsx("code",{children:"p1"}),". Если ранг/высота ",e.jsx("code",{children:"p1"})," и"," ",e.jsx("code",{children:"p2"})," равны, мы можем сделать ",e.jsx("code",{children:"p2"})," родительским для"," ",e.jsx("code",{children:"p1"})," и увеличить ранг на ",e.jsx("code",{children:"1"}),"."]}),e.jsx(k,{value:bL}),e.jsxs("p",{className:"mb-2",children:["На изображении ниже показаны поиск и функция объединения с заданными рёбрами"," ",e.jsx("code",{children:"edges = [1, 2], [4, 1], [2, 4]"}),". Обратите внимание, что мы соединяем"," ",e.jsx("code",{children:"2"})," с ",e.jsx("code",{children:"1"}),", затем соединяем ",e.jsx("code",{children:"4"})," с ",e.jsx("code",{children:"1"}),", потому что ",e.jsx("code",{children:"1"})," имеет более высокий ранг. Но когда мы достигаем"," ",e.jsx("code",{children:"[2, 4]"}),", родительский узел ",e.jsx("code",{children:"2"})," - это ",e.jsx("code",{children:"1"}),", а родительский узел ",e.jsx("code",{children:"4"})," - также ",e.jsx("code",{children:"1"}),", что означает, что они принадлежат одному и тому же связному компоненту, т. е. существует цикл."]}),e.jsx("figure",{className:"bg-white mb-2",children:e.jsx("img",{alt:"Система непересекающихся множеств",className:"mx-auto",height:"380",src:mL,width:"1060"})}),e.jsx("h2",{className:"font-bold my-2",children:"Сложность по времени и памяти"}),e.jsxs("p",{className:"mb-2",children:["В наивном случае функция ",e.jsx("code",{children:"find"})," будет работать за ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),"), потому что возможно, что дерево представляет собой просто цепочку, подобную связному списку, и нам придётся пройти через каждый отдельный узел. При сжатии пути, поскольку мы каждый раз обновляем родительский узел до уровня родителя родителя, мы можем снизить сложность до ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"log n"}),")."]}),e.jsxs("p",{className:"mb-2",children:["Если мы совместим это с функцией объединения, мы получим сложность по времени, называемую обратной функцией Аккермана, ",e.jsx("i",{children:"α"}),"(",e.jsx("i",{children:"n"}),"), которую можно упростить до постоянного времени, ",e.jsx("i",{children:"O"}),"(1). Итак, если ",e.jsx("i",{children:"m"})," — количество имеющихся у нас рёбер, то сложность Union-Find по времени равна O(",e.jsx("i",{children:"m"})," ∗"," ",e.jsx("i",{children:"log n"}),")."]}),e.jsx("p",{children:e.jsx("strong",{children:"Обратная функция Аккермана в данном случае не очень уместна, но она добавлена для полноты картины."})})]})}function EL({subjectId:t}){switch(t){case"arrays":return e.jsx(i5,{});case"objects":return e.jsx(sk,{});case"hash-implementation":return e.jsx(TC,{});case"prefix-sums":return e.jsx(Ck,{});case"stack":return e.jsx(m4,{});case"two-pointers":return e.jsx(rL,{});case"sliding-window":return e.jsx(l4,{});case"binary-search":return e.jsx(g5,{});case"linked-lists":return e.jsx(PO,{});case"doubly-linked-lists":return e.jsx(lC,{});case"queues":return e.jsx(Mk,{});case"one-branch-recursion":return e.jsx(ck,{});case"two-branch-recursion":return e.jsx(V4,{});case"fast-and-slow-pointers":return e.jsx(bC,{});case"insertion-sort":return e.jsx(MC,{});case"merge-sort":return e.jsx(nk,{});case"quick-sort":return e.jsx(Uk,{});case"bucket-sort":return e.jsx(z5,{});case"binary-tree":return e.jsx(A5,{});case"binary-search-tree":return e.jsx(E5,{});case"bst-insert-and-remove":return e.jsx(B5,{});case"depth-first-search":return e.jsx(tC,{});case"iterative-depth-first-search":return e.jsx(QC,{});case"breadth-first-search":return e.jsx(k5,{});case"backtracking":return e.jsx(d5,{});case"subsets":return e.jsx(S4,{});case"combinations":return e.jsx(Y5,{});case"permutations":return e.jsx(vk,{});case"intro-to-graphs":return e.jsx(WC,{});case"matrix-depth-first-search":return e.jsx(qO,{});case"matrix-breadth-first-search":return e.jsx(zO,{});case"adjacency-list":return e.jsx(QI,{});case"heap-properties":return e.jsx(RC,{});case"heap-push-and-pop":return e.jsx(kC,{});case"heapify":return e.jsx(NC,{});case"one-dimension-dp":return e.jsx(mk,{});case"palindromes":return e.jsx(yk,{});case"topological-sort":return e.jsx(C4,{});case"trie":return e.jsx($4,{});case"union-find":return e.jsx(xL,{});case"segment-tree":return e.jsx(e4,{});case"kadanes-algorithm":return e.jsx(sO,{});case"two-dimension-dp":return e.jsx(J4,{});case"0-1-knapsack":return e.jsx(uO,{});case"unbounded-knapsack":return e.jsx(hL,{});case"longest-common-subsequence":return e.jsx(xO,{});case"bit-operations":return e.jsx(I5,{});default:return null}}function TL(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим новый список, который будет начинаться с фиктивного узла"," ",e.jsx("code",{children:"dummyNode"}),", указатель на него ",e.jsx("code",{children:"currentNode"})," и переменную"," ",e.jsx("code",{children:"carry"}),", в которую будем записывать число, которое нам необходимо перенести при сложении (если сумма в одном разряде получилась больше 10, то там будет ",e.jsx("code",{children:"1"}),", иначе ",e.jsx("code",{children:"0"}),")."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклом ",e.jsx("code",{children:"while"})," по обоим переданным спискам. Добавим в условие"," ",e.jsx("code",{children:"carry"}),", потому что после того, как мы сложили последние узлы переданных списков, может оказаться, что нам необходимо добавить ещё один узел в наш список, который мы будем возвращать."]}),e.jsxs("p",{className:"mb-2",children:["Поскольку числа в наших списках идут в обратном направлении, это значит, что на каждой итерации каждый узел относится к одному и тому же разряду, поэтому мы можем просто их сложить, добавив ",e.jsx("code",{children:"carry"}),". Затем высчитываем новое значение"," ",e.jsx("code",{children:"carry"}),", а остаток от суммы узлов, делённой на 10, добавляем в наш список. Затем передвигаем наши указатели."]}),e.jsxs("p",{className:"mb-2",children:["После прохождения цикла вернём из функции ",e.jsx("code",{children:"dummyNode.next"}),", чтобы отбросить фиктивный узел в начале нашего списка."]})]})}function yL(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим переменную ",e.jsx("code",{children:"result = true"}),". Решим задачу с помощью вспомогательной рекурсивной функции ",e.jsx("code",{children:"dfs"}),", которая будет рассчитывать глубину дерева. Базовым случаем будет, когда переданный корень равен"," ",e.jsx("code",{children:"null"}),". В таком случае глубина дерева равна ",e.jsx("code",{children:"0"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Чтобы посчитать глубину дерева, нам необходимо к ",e.jsx("code",{children:"1"})," (глубина дерева из одного узла) добавить максимальную глубину между глубиной левого поддерева и глубиной правого поддерева. Чтобы узнать, сбалансированно ли дерево, необходимо сравнить глубину его левого и правого поддеревьев. Если они различаются больше, чем на ",e.jsx("code",{children:"1"}),", то дерево не сбалансировано, запишем в ",e.jsx("code",{children:"result"})," ",e.jsx("code",{children:"false"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Вызовем функцию ",e.jsx("code",{children:"dfs"}),", после чего вернём из функции ",e.jsx("code",{children:"result"}),"."]})]})}function SL(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Для решения этой задачи удобно использовать стек, так как нам необходимо взаимодействовать только с последней либо предпоследней операцией."}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклом по операциям, добавив нужное значение в ",e.jsx("code",{children:"record"}),", либо удалив последнее значение в случае операции ",e.jsx("code",{children:"'C'"}),". После этого вернём сумму элементов ",e.jsx("code",{children:"record"}),"."]})]})}function NL(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Решим задачу с помощью метода скользящего окна. Создадим два указателя:"," ",e.jsx("code",{children:"l = 0"})," и ",e.jsx("code",{children:"r = 1"}),". Будем перемещать ",e.jsx("code",{children:"l"}),", когда будем находить более низкую цену. Для того, чтобы получить прибыль от продажи акции, ее цена должна быть выше, чем в день, когда мы её покупали."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклом по массиву цен. На каждой итерации будем проверять, является ли текущая цена более высокой, чем цена, на которую указывает указатель"," ",e.jsx("code",{children:"l"})," (самая низкая цена на текущий момент). Если является, то рассчитаем прибыль и перезаписываем ",e.jsx("code",{children:"maxProfit"}),", если получившаяся прибыль выше, чем ",e.jsx("code",{children:"maxProfit"}),". Иначе передвинем указатель ",e.jsx("code",{children:"l"})," на текущую цену. Таким образом, ",e.jsx("code",{children:"l"})," всегда будет указывать на самую низкую цену на текущий момент."]})]})}function jL(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим два указателя, которые будут указывать на края массива: ",e.jsx("code",{children:"l"})," со значением ",e.jsx("code",{children:"0"})," и ",e.jsx("code",{children:"r"})," со значением"," ",e.jsx("code",{children:"nums.length - 1"}),". Запустим цикл ",e.jsx("code",{children:"while"}),", который будет исполняться, пока они не пересекутся."]}),e.jsxs("p",{className:"mb-2",children:["Вычислим индекс ",e.jsx("code",{children:"mid"}),", который находится посередине между"," ",e.jsx("code",{children:"l"})," и ",e.jsx("code",{children:"r"}),". Если число по этому индексу больше, чем"," ",e.jsx("code",{children:"target"}),", то сдвинем правый указатель влево на позицию"," ",e.jsx("code",{children:"mid - 1"}),", отбросив тем самым правую половину массива (в ней мы не будем ничего искать, т. к. все элементы справа от ",e.jsx("code",{children:"nums[mid]"})," будут больше, чем ",e.jsx("code",{children:"target"}),"). Если число по этому индексу меньше, чем"," ",e.jsx("code",{children:"target"}),", то сдвинем левый указатель вправо, отбросив левую часть массива. Если число не меньше и не больше, то оно равно ",e.jsx("code",{children:"target"}),", возвращаем этот индекс."]}),e.jsxs("p",{className:"mb-2",children:["Если цикл закончился, это означает, что указатели пересеклись и числа"," ",e.jsx("code",{children:"target"})," в массиве нет, возвращаем ",e.jsx("code",{children:"-1"}),"."]})]})}function AL(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Для решения задачи нам понадобится стек. Создадим его и заполним его корневым узлом и всеми левыми дочерними узлами."}),e.jsxs("p",{className:"mb-2",children:["В методе ",e.jsx("code",{children:"next"})," будем доставать последний узел из стека и добавлять правый дочерний узел этого узла в стек, после чего добавлять все левые дочерние узлы правого дочернего узла. Вернём из метода ",e.jsx("code",{children:"node.val"}),". В методе"," ",e.jsx("code",{children:"hasNext"})," возвращаем ",e.jsx("code",{children:"true"}),", если в стеке есть узлы, иначе возвращаем ",e.jsx("code",{children:"false"}),"."]})]})}function _L(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Обход по дереву проще всего выполнять с помощью рекурсии, однако такой обход мы уже рассмотрели в нашей"," ",e.jsx(it,{to:"/subjects/depth-first-search",className:"focus-visible:font-semibold focus-visible:outline-0 hover:font-semibold text-blue-500",children:"статье"}),". Рассмотрим итеративное решение этой задачи."]}),e.jsxs("p",{className:"mb-2",children:["Для решения задачи нам понадобится стек. Создадим его, массив ",e.jsx("code",{children:"result"}),", который мы будем возвращать из функции, и указатель ",e.jsx("code",{children:"cur"}),", который будет указывать на текущий узел."]}),e.jsxs("p",{className:"mb-2",children:["Создадим цикл ",e.jsx("code",{children:"while"}),", который будет исполняться, пока в"," ",e.jsx("code",{children:"cur"})," есть узел или в стеке есть узлы. Запустим внутренний цикл"," ",e.jsx("code",{children:"while"}),", который идёт из ",e.jsx("code",{children:"cur"})," в самую левую часть его поддерева, на каждой итерации добавляя в стек текущий узел. Таким образом, когда"," ",e.jsx("code",{children:"cur"})," станет указывать на ",e.jsx("code",{children:"null"})," и внутренний цикл прекратится, на вершине стека у нас будет самый маленький узел для поддерева."]}),e.jsxs("p",{className:"mb-2",children:["Достаём этот узел из стека, переносим указатель ",e.jsx("code",{children:"cur"})," на него и добавляем его значение в ",e.jsx("code",{children:"result"}),", после чего переносим указатель"," ",e.jsx("code",{children:"cur"})," на ",e.jsx("code",{children:"cur.right"}),". Таким образом, на следующей итерации внешнего цикла мы пройдём те же шаги для правого поддерева текущего узла (все значения в нём будут больше, чем то, которое мы только что достали из стека, но меньше, чем все остальные значения в стеке)."]}),e.jsx("p",{className:"mb-2",children:"В результате порядок обхода узлов получится таким же, как при рекурсивном Inorder обходе."})]})}function vL(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Для решения этой задачи нам отлично подходит алгоритм поиска в ширину. Он реализуется с помощью структуры данных «очередь», которой нет в языке JavaScript. Напишем реализацию сами, но не будем заострять на ней внимание. Подробнее про очереди можно почитать"," ",e.jsx(it,{to:"/subjects/queues",className:"focus-visible:font-semibold focus-visible:outline-0 hover:font-semibold text-blue-500",children:"тут"}),"."]}),e.jsxs("p",{className:"mb-2",children:["В функции ",e.jsx("code",{children:"levelOrder"})," создадим очередь ",e.jsx("code",{children:"queue"})," и массив"," ",e.jsx("code",{children:"result"}),", который будем возвращать из функции. На каждой итерации цикла"," ",e.jsx("code",{children:"while"})," мы будем доставать из очереди узлы, которые относятся к текущему уровню, и добавлять в очередь дочерние узлы этих узлов, которые будут образовывать следующий уровень. Сразу добавим в очередь корневой узел, потому что он составляет первый уровень."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклом ",e.jsx("code",{children:"while"})," по нашей очереди, пока она не опустеет. Сохраним текущий размер очереди и создадим массив ",e.jsx("code",{children:"level"}),", в котором будем хранить значения, относящиеся к текущему уровню. Запустим вложенный цикл"," ",e.jsx("code",{children:"for"}),", который будет исполняться столько раз, сколько узлов находятся на текущем уровне. На каждой итерации цикла ",e.jsx("code",{children:"for"})," достаём из очереди узел, и если он не равен ",e.jsx("code",{children:"null"}),", добавляем его значение в"," ",e.jsx("code",{children:"level"}),", а его дочерние узлы в очередь. Очередь дойдёт до этих узлов уже на следующей итерации цикла ",e.jsx("code",{children:"while"}),", когда будет рассматриваться следующий уровень."]}),e.jsxs("p",{className:"mb-2",children:["После того, как мы пройдём по всем узлам текущего уровня, добавляем"," ",e.jsx("code",{children:"level"})," в ",e.jsx("code",{children:"result"}),", если ",e.jsx("code",{children:"level"})," не был пустым."]}),e.jsxs("p",{className:"mb-2",children:["Когда очередь станет пустой, цикл ",e.jsx("code",{children:"while"})," завершит работу. Это будет означать, что мы прошли по всем узлам в дереве и можем вернуть ",e.jsx("code",{children:"result"}),"."]})]})}function RL(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Обход по дереву проще всего выполнять с помощью рекурсии, однако такой обход мы уже рассмотрели в нашей"," ",e.jsx(it,{to:"/subjects/depth-first-search",className:"focus-visible:font-semibold focus-visible:outline-0 hover:font-semibold text-blue-500",children:"статье"}),". Рассмотрим итеративное решение этой задачи."]}),e.jsxs("p",{className:"mb-2",children:["Для решения задачи нам понадобится стек. Создадим его и массив ",e.jsx("code",{children:"result"}),", который мы будем возвращать из функции. Нам понадобится два раза пройти по каждому узлу, чтобы мы смогли добавить значения в ",e.jsx("code",{children:"result"})," в корректном порядке. Чтобы понимать, в первый ли раз мы посещаем узел, будем сохранять в стеке не только узел, но и флаг ",e.jsx("code",{children:"visited"}),", который будет равен"," ",e.jsx("code",{children:"false"}),", если мы посетили узел в первый раз, и ",e.jsx("code",{children:"true"}),", если во второй. Добавим корневой узел в стек."]}),e.jsxs("p",{className:"mb-2",children:["Создадим цикл ",e.jsx("code",{children:"while"}),", который будет исполняться, пока в стеке есть узлы. На каждой итерации достаём из стека последний элемент. Если этот элемент равен ",e.jsx("code",{children:"null"}),", то нам ничего не надо с ним делать, необходимо достать следующий элемент из стека — это произойдёт само собой на следующей итерации цикла. Если мы достали из стека узел, то проверяем, посещали ли мы его ранее. Если посещали, то добавляем его значение в ",e.jsx("code",{children:"result"}),". Иначе добавляем этот же узел в стек с флагом ",e.jsx("code",{children:"visited: true"}),", после чего добавляем в стек его правый и левый дочерние узлы."]}),e.jsxs("p",{className:"mb-2",children:["На следующей итерации мы достанем последний элемент из стека, который будет указывать на левый дочерний узел и иметь ",e.jsx("code",{children:"visited: false"}),". Мы не должны добавлять его в ",e.jsx("code",{children:"result"}),", пока мы не обработаем его дочерние узлы. Именно поэтому нам необходимо посещать каждый узел дважды и иметь флаг посещения. Когда мы посетим все дочерние узлы, мы опять вернёмся к этому узлу, и так как"," ",e.jsx("code",{children:"visited"})," будет равно ",e.jsx("code",{children:"true"}),", мы добавим его значение в"," ",e.jsx("code",{children:"result"}),"."]}),e.jsx("p",{className:"mb-2",children:"В результате порядок обхода узлов получится таким же, как при рекурсивном Postorder обходе."})]})}function wL(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Обход по дереву проще всего выполнять с помощью рекурсии, однако такой обход мы уже рассмотрели в нашей"," ",e.jsx(it,{to:"/subjects/depth-first-search",className:"focus-visible:font-semibold focus-visible:outline-0 hover:font-semibold text-blue-500",children:"статье"}),". Рассмотрим итеративное решение этой задачи."]}),e.jsxs("p",{className:"mb-2",children:["Для решения задачи нам понадобится стек. Создадим его, массив ",e.jsx("code",{children:"result"}),", который мы будем возвращать из функции, и указатель ",e.jsx("code",{children:"cur"}),", который будет указывать на текущий узел."]}),e.jsxs("p",{className:"mb-2",children:["Создадим цикл ",e.jsx("code",{children:"while"}),", который будет исполняться, пока в"," ",e.jsx("code",{children:"cur"})," есть узел или в стеке есть узлы. На каждой итерации проверяем, указывает ли ",e.jsx("code",{children:"cur"})," на узел (он может указывать на ",e.jsx("code",{children:"null"}),"). Если указывает, то добавляем его значение в ",e.jsx("code",{children:"result"}),", добавляем в стек правый дочерний узел и переносим указатель ",e.jsx("code",{children:"cur"})," на левый дочерний узел. Эти действия выполняются для того, чтобы сначала в ",e.jsx("code",{children:"result"})," мы добавили левое поддерево, а затем правое. Если ",e.jsx("code",{children:"cur"})," не указывает на узел, это означает, что мы прошли всё левое поддерево, достаём из стека узел правого поддерева и переносим указатель ",e.jsx("code",{children:"cur"})," на него. Таким образом, на следующей итерации мы пройдём те же шаги для правого поддерева текущего узла."]}),e.jsx("p",{className:"mb-2",children:"В результате порядок обхода узлов получится таким же, как при рекурсивном Preorder обходе."})]})}function IL(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Для решения этой задачи нам отлично подходит алгоритм поиска в ширину. Он реализуется с помощью структуры данных «очередь», которой нет в языке JavaScript. Напишем реализацию сами, но не будем заострять на ней внимание. Подробнее про очереди можно почитать"," ",e.jsx(it,{to:"/subjects/queues",className:"focus-visible:font-semibold focus-visible:outline-0 hover:font-semibold text-blue-500",children:"тут"}),"."]}),e.jsxs("p",{className:"mb-2",children:["В функции ",e.jsx("code",{children:"rightSideView"})," создадим очередь ",e.jsx("code",{children:"queue"})," и массив"," ",e.jsx("code",{children:"result"}),", который будем возвращать из функции. На каждой итерации цикла"," ",e.jsx("code",{children:"while"})," мы будем доставать из очереди узлы, которые относятся к текущему уровню, и добавлять в очередь дочерние узлы этих узлов, которые будут образовывать следующий уровень. Сразу добавим в очередь корневой узел, потому что он составляет первый уровень."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклом ",e.jsx("code",{children:"while"})," по нашей очереди, пока она не опустеет. Сохраним текущий размер очереди и создадим указатель ",e.jsx("code",{children:"rightSide"}),", который будет указывать на самый последний узел текущего уровня. Запустим вложенный цикл"," ",e.jsx("code",{children:"for"}),", который будет исполняться столько раз, сколько узлов находятся на текущем уровне. На каждой итерации цикла ",e.jsx("code",{children:"for"})," достаём из очереди узел, и если он не равен ",e.jsx("code",{children:"null"}),", перемещаем указатель"," ",e.jsx("code",{children:"rightSide"})," на него, а его дочерние узлы добавляем в очередь. Очередь дойдёт до этих узлов уже на следующей итерации цикла ",e.jsx("code",{children:"while"}),", когда будет рассматриваться следующий уровень."]}),e.jsxs("p",{className:"mb-2",children:["После того, как мы пройдём по всем узлам текущего уровня, добавляем"," ",e.jsx("code",{children:"rightSide.val"})," в ",e.jsx("code",{children:"result"}),", если ",e.jsx("code",{children:"rightSide"})," не указывает на ",e.jsx("code",{children:"null"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Когда очередь станет пустой, цикл ",e.jsx("code",{children:"while"})," завершит работу. Это будет означать, что мы прошли по всем узлам в дереве и можем вернуть ",e.jsx("code",{children:"result"}),"."]})]})}function CL(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Для решения этой задачи будем использовать стек. Также для удобства создадим массив ",e.jsx("code",{children:"pairs"}),", который будет хранить пары"," ",e.jsx("code",{children:"[position, speed]"})," для каждой машины, и отсортируем его так, чтобы первым элементом была ближайшая к ",e.jsx("code",{children:"target"})," машина."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклом по массиву ",e.jsx("code",{children:"pairs"}),". На каждой итерации добавляем в стек время, за которое текущая машина доедет до ",e.jsx("code",{children:"target"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Если в стеке 2 и более элемента и последний элемент меньше либо равен предпоследнему (это означает, что машина догонит другую машину, но обогнать её она не может), то удаляем из стека последний элемент, потому что эти машины образуют"," ",e.jsx("strong",{children:"car fleet"}),"."]}),e.jsxs("p",{className:"mb-2",children:["После прохождения по массиву вернём из функции ",e.jsx("code",{children:"stack.length"}),"."]})]})}function OL(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим ",e.jsx("code",{children:"Map"})," ",e.jsx("code",{children:"OldToNew"}),", в которой ключами будут узлы из переданного графа, а значениями — копии этих узлов. Напишем вспомогательную рекурсивную функцию ",e.jsx("code",{children:"dfs"}),", которая заполнит ",e.jsx("code",{children:"OldToNew"}),". В ней будем проверять, существует ли уже копия переданного узла. Если существует, будем возвращать её. Если копии не существует, создадим её, добавим в"," ",e.jsx("code",{children:"OldToNew"}),", и добавим к ней соседей, вызвав для них ",e.jsx("code",{children:"dfs"}),", после чего вернём копию."]}),e.jsxs("p",{className:"mb-2",children:["Если граф не пустой, вернём из функции результат ",e.jsx("code",{children:"dfs(node)"}),", иначе вернём ",e.jsx("code",{children:"null"}),"."]})]})}function kL(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим переменную ",e.jsx("code",{children:"result"}),", которую будем возвращать из функции, и вспомогательную рекурсивную функцию ",e.jsx("code",{children:"backtrack"}),", которая будет принимать в себя число ",e.jsx("code",{children:"start"})," и текущее сочетание"," ",e.jsx("code",{children:"combination"}),". Вызовем её с единицей и пустым массивом, после чего вернём из функции ",e.jsx("code",{children:"result"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Базовый случай в ",e.jsx("code",{children:"backtrack"})," случается тогда, когда наше текущее сочетание достигло размера"," ",e.jsx("code",{children:e.jsx("i",{children:"k"})}),". В таком случае мы добавляем его копию в ",e.jsx("code",{children:"result"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Запустим цикл от ",e.jsx("code",{children:"start"})," до"," ",e.jsx("code",{children:e.jsx("i",{children:"n"})})," ","включительно. На каждой итерации мы добавляем число в сочетание, после чего рекурсивно вызываем ",e.jsx("code",{children:"backtrack"})," для следующего числа. После того, как мы добавим все сочетания с этим числом, мы удалим текущее число из сочетания и перейдём к следующей итерации."]})]})}function LL(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим переменную ",e.jsx("code",{children:"result"}),", которую будем возвращать из функции, и вспомогательную рекурсивную функцию ",e.jsx("code",{children:"backtrack"}),", которая будет принимать в себя текущий индекс ",e.jsx("code",{children:"i"}),", текущее сочетание ",e.jsx("code",{children:"cur"})," ","и сумму этого сочетания ",e.jsx("code",{children:"total"}),". Вызовем её с нулевым индексом, пустым массивом и нулевой суммой, после чего вернём из функции ",e.jsx("code",{children:"result"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Первый базовый случай в ",e.jsx("code",{children:"backtrack"})," случается тогда, когда сумма текущего сочетания достигла ",e.jsx("code",{children:"target"}),". В таком случае мы добавляем его копию в ",e.jsx("code",{children:"result"}),". Второй базовый случай случается, когда индекс вышел за пределы ",e.jsx("code",{children:"candidates"}),", или сумма превысела ",e.jsx("code",{children:"target"}),". В таком случае просто завершаем работу функции."]}),e.jsxs("p",{className:"mb-2",children:["Будем добавлять число, на которое указывает индекс ",e.jsx("code",{children:"i"})," в сочетание, после чего рекурсивно вызываем ",e.jsx("code",{children:"backtrack"})," для новой суммы. После того, как мы добавим все сочетания с этим числом, мы удалим текущее число из сочетания и передвинем индекс ",e.jsx("code",{children:"i"}),"."]})]})}function DL(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Чтобы избежать дубликатов, удобно предварительно отсортировать массив"," ",e.jsx("code",{children:"candidates"}),". Создадим переменную ",e.jsx("code",{children:"result"}),", которую будем возвращать из функции, и вспомогательную рекурсивную функцию"," ",e.jsx("code",{children:"backtrack"}),", которая будет принимать в себя текущее сочетание"," ",e.jsx("code",{children:"cur"}),", текущий индекс ",e.jsx("code",{children:"position"})," и разность переданной в функцию ",e.jsx("code",{children:"target"})," и суммой этого сочетания ",e.jsx("code",{children:"target"}),". Вызовем её с пустым массивом, нулевым индексом и переданным в функцию ",e.jsx("code",{children:"target"}),", после чего вернём из функции ",e.jsx("code",{children:"result"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Базовый случай в ",e.jsx("code",{children:"backtrack"})," случается тогда, когда разность"," ",e.jsx("code",{children:"target"})," меньше или равна нулю. Если разность равна нулю, то мы добавляем копию сочетания в ",e.jsx("code",{children:"result"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Создадим переменную ",e.jsx("code",{children:"prev"})," с дефолтным значением ",e.jsx("code",{children:"-1"}),". Пройдём циклом от ",e.jsx("code",{children:"position"})," до конца массива ",e.jsx("code",{children:"candidates"}),". На каждой итерации проверяем, встречалось ли уже это число. Если встречалось, переходим к следующей итерации."]}),e.jsxs("p",{className:"mb-2",children:["Добавим в сочетание текущее число, после чего рекурсивно вызовем"," ",e.jsx("code",{children:"backtrack"})," для следующего числа. После этого удалим текущее число из сочетания и обновим значение ",e.jsx("code",{children:"prev"}),"."]})]})}function ML(){return e.jsxs("p",{children:["Создадим переменную ",e.jsx("code",{children:"ans"}),", которая будет хранить результат вызова функции. Пройдём циклом по входному массиву, на каждой итерации дважды добавляя в"," ",e.jsx("code",{children:"ans"})," каждый элемент: по индексам ",e.jsx("code",{children:"i"})," и"," ",e.jsx("code",{children:"i + nums.length"}),". Вернём ",e.jsx("code",{children:"ans"}),"."]})}function FL(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Задача будет решаться через рекурсию. Добавим базовый случай — когда в функцию передан пустой массив ",e.jsx("code",{children:"preorder"})," или ",e.jsx("code",{children:"inorder"}),", то возвращаем ",e.jsx("code",{children:"null"}),"."]}),e.jsxs("p",{className:"mb-2",children:["При preorder обходе дерева первый узел всегда указывает на корень дерева. Создадим этот корневой узел. Найдём индекс корневого узла в ",e.jsx("code",{children:"inorder"})," и сохраним его в ",e.jsx("code",{children:"mid"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Все узлы, относящиеся к левому поддереву, в ",e.jsx("code",{children:"preorder"})," будут идти с первого индекса до индекса ",e.jsx("code",{children:"mid + 1"}),", а в ",e.jsx("code",{children:"inorder"})," — с нулевого индекса до ",e.jsx("code",{children:"mid"}),". Зная это, мы можем рекурсивно вызвать функцию ",e.jsx("code",{children:"buildTree"})," для левого и правого поддерева. Вернём из функции корень нашего дерева ",e.jsx("code",{children:"root"}),"."]})]})}function PL(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим переменную ",e.jsx("code",{children:"result"})," и указатели ",e.jsx("code",{children:"left"})," и"," ",e.jsx("code",{children:"right"}),", которые будут указывать на первый и последний элемент массива"," ",e.jsx("code",{children:"height"})," соответственно."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклом по массиву пока наши указатели не пересекутся. На каждой итерации рассчитаем площадь прямоугольника между текущими вертикальными линиями и обновим"," ",e.jsx("code",{children:"result"}),", если получившаяся площадь больше, чем ",e.jsx("code",{children:"result"}),". После чего передвинем указатель линии, который указывает на наименьшую из них (потому что для этой линии уже не существует большей площади)."]}),e.jsxs("p",{className:"mb-2",children:["Когда указатели пересекутся, вернём ",e.jsx("code",{children:"result"}),"."]})]})}function UL(){return e.jsxs("p",{children:["Для решения этой задачи отлично подходит ",e.jsx("code",{children:"Set"}),". Пробежим циклом по массиву, на каждой итерации будем проверять, есть ли в нашем «множестве» текущий элемент. Если есть — возвращаем ",e.jsx("code",{children:"true"}),", иначе добавляем текущий элемент в «множество». Если цикл дошёл до конца, возвращаем ",e.jsx("code",{children:"false"}),"."]})}function BL(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Для решения этой задачи отлично подходит ",e.jsx("code",{children:"Set"}),". Будем хранить в нём элементы, которые расположены между двумя указателями ",e.jsx("code",{children:"l"})," и"," ",e.jsx("code",{children:"r"})," включительно."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклом по массиву. На каждой итерации проверяем, больше ли разница между"," ",e.jsx("code",{children:"l"})," и ",e.jsx("code",{children:"r"}),", чем ",e.jsx("code",{children:"k"}),". Если так, то будем удалять из"," ",e.jsx("code",{children:"Set"})," число, на которое указывает левый указатель, и передвигать его. Затем проверяем, есть ли в ",e.jsx("code",{children:"Set"})," текущее число. Если есть, то мы нашли нужный дубликат, возвращаем ",e.jsx("code",{children:"true"}),". Иначе добавляем в ",e.jsx("code",{children:"Set"})," ","текущее число."]}),e.jsxs("p",{className:"mb-2",children:["Если цикл прошёл по всему массиву, то дубликатов нет, возвращаем"," ",e.jsx("code",{children:"false"}),"."]})]})}function HL(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим ",e.jsx("code",{children:"Map"})," ",e.jsx("code",{children:"OldToCopy"}),", в которой ключами будут узлы из переданного списка, а значениями — копии этих узлов. Добавим в"," ",e.jsx("code",{children:"OldToCopy"})," пару для ",e.jsx("code",{children:"null"}),". Пройдём в цикле"," ",e.jsx("code",{children:"while"})," по списку, на каждой итерации добавляя новую пару в"," ",e.jsx("code",{children:"OldToMap"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём по списку ещё раз, чтобы добавить к копиям указатели, которые мы можем получить из ",e.jsx("code",{children:"OldToCopy"}),". После этого вернём из функции копию"," ",e.jsx("code",{children:"head"}),"."]})]})}function GL(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Узел считается хорошим, если его значение больше или равно максимальному значению на пути от узла до корня. Создадим вспомогательную рекурсивную функцию"," ",e.jsx("code",{children:"dfs"})," для обхода дерева, которая будет принимать в себя узел"," ",e.jsx("code",{children:"node"})," и максимальное значение ",e.jsx("code",{children:"maxVal"})," на пути от узла до корня, и возвращать количество хороших узлов."]}),e.jsxs("p",{className:"mb-2",children:["Базовым случаем будет, когда ",e.jsx("code",{children:"node === null"}),". В таком случае будем возвращать ",e.jsx("code",{children:"0"}),". Создадим переменную ",e.jsx("code",{children:"result"})," и сравним, является ли значение текущего узла больше либо равным максимальному значению на пути. Если является, запишем в ",e.jsx("code",{children:"result"})," ",e.jsx("code",{children:"1"}),", иначе запишем"," ",e.jsx("code",{children:"0"}),". Перезапишем ",e.jsx("code",{children:"maxVal"}),", если значение текущего узла больше него. Остаётся добавить в ",e.jsx("code",{children:"result"})," количество хороших узлов в левом и правом поддереве. После этого вернём ",e.jsx("code",{children:"result"})," из функции."]})]})}function $L(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим ",e.jsx("code",{children:"Map"})," ",e.jsx("code",{children:"preMap"}),", в которой ключами будут курсы, а значениями — массив курсов, которые необходимо пройти перед прохождением этого курса (назовём их подготовительными курсами). Заполним ",e.jsx("code",{children:"preMap"}),". Также создадим ",e.jsx("code",{children:"Set"})," ",e.jsx("code",{children:"visited"}),", который будет хранить курсы, которые мы прошли."]}),e.jsxs("p",{className:"mb-2",children:["Напишем вспомогательную рекурсивную функцию ",e.jsx("code",{children:"dfs"}),", которая будет проходить по всем подготовительным курсам и возвращать булево значение, обозначающее, можем ли мы закончить текущий курс. Если мы уже посещали текущий курс, то мы обнаружили цикл — возвращаем ",e.jsx("code",{children:"false"}),". Если подготовительных курсов нет, возвращаем ",e.jsx("code",{children:"true"}),". Рекурсивно вызовем функцию"," ",e.jsx("code",{children:"dfs"})," для подготовительных курсов, и если хоть один из этих вызовов вернёт ",e.jsx("code",{children:"false"}),", то мы не можем пройти текущий курс, также вернём"," ",e.jsx("code",{children:"false"}),". Если функция до сих пор не завершила свою работу, то удалим все подготовительные курсы у текущего курса и вернём ",e.jsx("code",{children:"true"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём по всем курсам в цикле ",e.jsx("code",{children:"for"}),", на каждой итерации будем вызывать"," ",e.jsx("code",{children:"dfs"})," для текущего курса. Если на какой-либо итерации ",e.jsx("code",{children:"dfs"})," ","вернёт ",e.jsx("code",{children:"false"}),", то вернём ",e.jsx("code",{children:"false"})," из функции. Если цикл завершил свою работу, то вернём ",e.jsx("code",{children:"true"}),"."]})]})}function zL(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим ",e.jsx("code",{children:"Map"})," ",e.jsx("code",{children:"preMap"}),", в которой ключами будут курсы, а значениями — массив курсов, которые необходимо пройти перед прохождением этого курса (назовём их подготовительными курсами). Заполним ",e.jsx("code",{children:"preMap"}),". Также создадим ",e.jsx("code",{children:"Set"})," ",e.jsx("code",{children:"visited"}),", который будет хранить курсы, которые мы прошли, ",e.jsx("code",{children:"Set"})," ",e.jsx("code",{children:"cycle"}),", который будет хранить курсы текущего пути, и массив ",e.jsx("code",{children:"result"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Напишем вспомогательную рекурсивную функцию ",e.jsx("code",{children:"dfs"}),", которая будет проходить по всем подготовительным курсам и возвращать булево значение, обозначающее, можем ли мы закончить текущий курс. Если текущий курс есть в"," ",e.jsx("code",{children:"cycle"}),", то мы обнаружили цикл — возвращаем ",e.jsx("code",{children:"false"}),". Если текущий курс есть в ",e.jsx("code",{children:"visited"}),", то мы его уже завершили — возвращаем"," ",e.jsx("code",{children:"true"}),". Добавим курс в ",e.jsx("code",{children:"cycle"}),", после чего рекурсивно вызовем функцию ",e.jsx("code",{children:"dfs"})," для подготовительных курсов, и если хоть один из этих вызовов вернёт ",e.jsx("code",{children:"false"}),", то мы не можем пройти текущий курс, также вернём ",e.jsx("code",{children:"false"}),". Если функция до сих пор не завершила свою работу, то удалим текущий курс из ",e.jsx("code",{children:"cycle"}),", добавим его в ",e.jsx("code",{children:"visited"})," и"," ",e.jsx("code",{children:"result"})," и вернём ",e.jsx("code",{children:"true"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём по всем курсам в цикле ",e.jsx("code",{children:"for"}),", на каждой итерации будем вызывать"," ",e.jsx("code",{children:"dfs"})," для текущего курса. Если на какой-либо итерации ",e.jsx("code",{children:"dfs"})," ","вернёт ",e.jsx("code",{children:"false"}),", то вернём пустой массив из функции. Если цикл завершил свою работу, то вернём ",e.jsx("code",{children:"result"}),"."]})]})}function WL(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Для решения этой задачи будем использовать монотонный стек, в котором будем хранить индексы дней. Стек является монотонным, так как каждый следующий элемент в нём будет представлять индекс дня, в котором температура не возрастает."}),e.jsxs("p",{className:"mb-2",children:["Создадим массив ",e.jsx("code",{children:"answer"}),", который мы будем возвращать из функции. Он будет такой же длины, как и переданный массив температур. Заполним его нулями, чтобы потом не пришлось добавлять нули для тех дней, после которых не будет более тёплых дней."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклом по температурам. На каждой итерации будем добавлять индекс"," ",e.jsx("code",{children:"i"})," в стек, предварительно удалив из стека индексы дней, в которых температура ниже текущей температуры ",e.jsx("code",{children:"temperatures[i]"}),". Для этого в цикле ",e.jsx("code",{children:"while"})," будем проверять, есть ли элементы в стеке, и является ли текущая температура более тёплой, чем температура на вершине стека. Если текущая температура является более тёплой, то достаём из стека индекс температуры"," ",e.jsx("code",{children:"colderDayIndex"}),", и записываем в ответ по этому индексу разность"," ",e.jsx("code",{children:"i - colderDayIndex"}),". Эта разность и является количеством дней, которые необходимо подождать до потепления для дня с индексом ",e.jsx("code",{children:"colderDayIndex"}),". Повторяем проверку для новой вершины стека."]})]})}function VL(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Воспользуемся рекурсией для решения этой задачи. Базовым случаем будет являться ситуация, при которой переданный корень равен ",e.jsx("code",{children:"null"})," — в таком случае нам нечего удалять, возвращаем ",e.jsx("code",{children:"null"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём по нашему дереву. На каждом уровне рекурсии проверяем, как соотносятся удаляемое значение и значение текущего узла. Если удаляемое значение больше значения текущего узла, то рекурсивно удаляем это значение в правом поддереве текущего узла, иначе — в левом. Когда поддерева не будет существовать, это приведёт к базовому случаю. Возвращаем из функции ",e.jsx("code",{children:"root"}),", чтобы на предыдущем уровне рекурсии мы могли сохранить получившееся поддерево."]}),e.jsxs("p",{className:"mb-2",children:["Если удаляемое значение и значение текущего узла равны, то мы нашли узел, который необходимо удалить. Если у этого узла ноль или один дочерний узел, то это легко, мы можем просто передать на предыдущий уровень рекурсии этих детей (",e.jsx("code",{children:"if (!root.left)"})," и ",e.jsx("code",{children:"else if (!root.right)"}),")."]}),e.jsx("p",{className:"mb-2",children:"Если же у этого узла два дочерних узла, то нам нужно заменить значение текущего узла на значение его последовательного преемника. Последовательным преемником является самый левый узел в правом поддереве удаляемого узла. По-другому можно сказать, что это наименьший узел среди всех узлов, которые больше удаляемого узла. Это гарантирует, что полученное дерево по-прежнему будет валидным бинарным деревом поиска."}),e.jsxs("p",{className:"mb-2",children:["Создадим указатель ",e.jsx("code",{children:"cur"})," и пройдём по правому поддереву до самой левой его части, на каждой итерации обновляя наш указатель. Затем обновим значение текущего узла, а в правом поддереве рекурсивно удалим значение, которое мы только что перенесли в текущий узел."]})]})}function KL(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим класс узла префиксного дерева ",e.jsx("code",{children:"TrieNode"}),". У него будет два поля: булево ",e.jsx("code",{children:"isEndOfWord"}),", отвечающее за то, является ли буква последней в слове, и ",e.jsx("code",{children:"children"}),", в котором будут храниться следующие буквы слов."]}),e.jsxs("p",{className:"mb-2",children:["Напишем класс ",e.jsx("code",{children:"WordDictionary"}),". Создадим в нём корневой узел"," ",e.jsx("code",{children:"root"}),". В методе ",e.jsx("code",{children:"addWord"})," создадим указатель"," ",e.jsx("code",{children:"cur"}),", который будет указывать на текущий узел. Пройдём циклом по переданному слову. На каждой итерации проверяем, встречается ли текущая буква в"," ",e.jsx("code",{children:"children"})," у текущего узла. Если не встречается, то добавим её. В конце итерации передвинем указатель на следующую букву. После прохождения цикла пометим последнюю букву как последнюю букву в слове ",e.jsx("code",{children:"cur.isEndOfWord = true"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Для метода ",e.jsx("code",{children:"search"})," нам понадобится вспомогательная рекурсвиная функция"," ",e.jsx("code",{children:"dfs"}),". Метод ",e.jsx("code",{children:"dfs"})," будет принимать в себя искомое слово, индекс текущего символа и узел, из которого мы будем искать. Напишем её ниже, а из"," ",e.jsx("code",{children:"search"})," вернём вызов ",e.jsx("code",{children:"this.#dfs(word, 0, this.root)"}),"."]}),e.jsxs("p",{className:"mb-2",children:["В методе ",e.jsx("code",{children:"dfs"})," создадим указатель ",e.jsx("code",{children:"cur"}),", который будет указывать на текущий узел. Пройдём циклом от ",e.jsx("code",{children:"index"})," до конца слова. На каждой итерации у нас будет два условия. Если текущий символ равен"," ",e.jsx("code",{children:"'.'"}),", то это наш рекурсвиный случай. Вместо этого символа мы должны выбрать каждую букву, встречающуюся в префиксном дереве после текущей буквы. Поэтому пройдём циклом по ",e.jsx("code",{children:"cur.children"})," и на каждой итерации будем вызывать ",e.jsx("code",{children:"dfs"}),". Если на какой-то из итераций ",e.jsx("code",{children:"dfs"})," ","вернул ",e.jsx("code",{children:"true"}),", то вернём ",e.jsx("code",{children:"true"})," из функции. Иначе вернём"," ",e.jsx("code",{children:"false"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Во втором условии мы проверяем, находится ли текущая буква (символ точки мы обработали в предыдущем условии, поэтому теперь ",e.jsx("code",{children:"word[i]"})," точно является буквой) в ",e.jsx("code",{children:"cur.children"}),". Если нет, возвращаем"," ",e.jsx("code",{children:"false"}),". Иначе передвигаем указатель ",e.jsx("code",{children:"cur"}),". Если цикл закончил работу, вернём из функции ",e.jsx("code",{children:"cur.isEndOfWord"}),"."]})]})}function YL(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Эту задачу можно более эффективно решить с помощью массива или стека, но мы решим её, используя двусвязный список. Для этого нам понадобится класс"," ",e.jsx("code",{children:"ListNode"})," для создания узлов списка. Он будет принимать в себя значение и ссылки ",e.jsx("code",{children:"prev"})," и ",e.jsx("code",{children:"next"})," на предыдущий и следующий узлы, которые по умолчанию будут указывать на ",e.jsx("code",{children:"null"}),"."]}),e.jsxs("p",{className:"mb-2",children:["В конструкторе ",e.jsx("code",{children:"BrowserHistory"})," создадим указатель"," ",e.jsx("code",{children:"this.currentPage"}),", который будет указывать на узел домашней страницы (который будет являться началом списка)."]}),e.jsxs("p",{className:"mb-2",children:["Для того, чтобы перейти на новую страницу с помощью метода ",e.jsx("code",{children:"visit"}),", нам просто нужно добавить новый узел, который будет следовать за"," ",e.jsx("code",{children:"this.currentPage"}),". При этом все узлы после"," ",e.jsx("code",{children:"this.currentPage"})," будут удалены из списка, потому что на них больше не будет ничего указывать. При создании нового узла мы передаём ему ссылку на предыдущий узел, которая указывает на ",e.jsx("code",{children:"this.currentPage"}),", а затем просто переносим указатель ",e.jsx("code",{children:"this.currentPage"})," на только что добавленный узел."]}),e.jsxs("p",{className:"mb-2",children:["Методы ",e.jsx("code",{children:"back"})," и ",e.jsx("code",{children:"forward"})," очень похожи, разница лишь в том, в какую сторону от ",e.jsx("code",{children:"this.currentPage"})," мы передвигаемся. Создадим цикл"," ",e.jsx("code",{children:"while"}),", который будет исполнятся, пока мы не достигнем первого или последнего узла списка (",e.jsx("code",{children:"this.currentPage.prev"})," или"," ",e.jsx("code",{children:"this.currentPage.next"})," станут указывать на ",e.jsx("code",{children:"null"}),"), либо пока мы не пройдём нужное количество шагов. На каждой итерации перемещаем указатель ",e.jsx("code",{children:"this.currentPage"})," и отнимаем 1 шаг. После завершения цикла возвращаем значение текущей страницы ",e.jsx("code",{children:"this.currentPage.val"}),"."]})]})}function qL(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Для решения проблемы коллизий мы будем использовать метод цепочек, для реализации которого нам понадобятся связные списки. Создадим класс ",e.jsx("code",{children:"ListNode"})," для узла списка."]}),e.jsxs("p",{className:"mb-2",children:["Создадим массив ",e.jsx("code",{children:"map"}),", в котором мы будем хранить связные списки элементов. В задаче сказано, что максимум будет выполнено 10",e.jsx("sup",{children:"4"})," вставок, поэтому зададим массиву такую длину, и заполним его фиктивными узлами. Также создадим приватный метод ",e.jsx("code",{children:"#getNodeByKey"}),", который будет находить связный список по ключу с помощью оператора остатка от деления."]}),e.jsxs("p",{className:"mb-2",children:["В каждом из оставшихся методов мы будем находить список по ключу и проходить по нему циклом. В методах ",e.jsx("code",{children:"put"})," и ",e.jsx("code",{children:"remove"})," мы будем проверять следующий элемент, так мы пропустим фиктивный узел в начале цикла и сохраним ссылку на последний узел после окончания цикла. В методе ",e.jsx("code",{children:"put"}),", если мы нашли элемент с переданным ключом — перезаписываем его ",e.jsx("code",{children:"value"}),", иначе добавляем в список новый узел с этой парой ключ/значение. В ",e.jsx("code",{children:"remove"}),", если мы нашли искомый элемент, удаляем его из связного списка. В методе"," ",e.jsx("code",{children:"get"})," мы начнем сразу со второго элемента списка и будем проверять каждый текущий элемент, потому что нам не нужно сохранять ссылку на последний элемент списка после окончания цикла."]})]})}function XL(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Для решения проблемы коллизий мы будем использовать метод цепочек, для реализации которого нам понадобятся связные списки. Создадим класс ",e.jsx("code",{children:"ListNode"})," для узла списка."]}),e.jsxs("p",{className:"mb-2",children:["Создадим массив ",e.jsx("code",{children:"set"}),", в котором мы будем хранить связные списки элементов. В задаче сказано, что максимум будет выполнено 10",e.jsx("sup",{children:"4"})," вставок, поэтому зададим массиву такую длину, и заполним его фиктивными узлами. Также создадим приватный метод ",e.jsx("code",{children:"#getNodeByKey"}),", который будет находить связный список по ключу с помощью оператора остатка от деления."]}),e.jsxs("p",{className:"mb-2",children:["В каждом из оставшихся методов мы будем находить список по ключу и проходить по нему циклом, проверяя следующий элемент (потому что в начале списков у нас фиктивные узлы). В методе ",e.jsx("code",{children:"add"}),", если мы нашли элемент с переданным ключом — ничего не делаем, иначе добавляем в список новый узел с этим ключом. В"," ",e.jsx("code",{children:"remove"}),", если мы нашли искомый элемент, удаляем его из связного списка."]})]})}function ZL(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Реализуем двусвязный список. Нам понадобится класс ",e.jsx("code",{children:"ListNode"})," для создания узлов списка. Он будет принимать в себя значение и сохранять его, и иметь два указателя ",e.jsx("code",{children:"prev"})," и ",e.jsx("code",{children:"next"}),", которые по умолчанию будут указывать на ",e.jsx("code",{children:"null"}),"."]}),e.jsxs("p",{className:"mb-2",children:["В конструкторе ",e.jsx("code",{children:"MyLinkedList"})," создадим два фиктивных узла, на которые будут указывать указатели ",e.jsx("code",{children:"head"})," и ",e.jsx("code",{children:"tail"}),", свяжем их между собой."]}),e.jsxs("p",{className:"mb-2",children:["В методе получения значения ",e.jsx("code",{children:"get"})," найдём с помощью цикла"," ",e.jsx("code",{children:"while"})," нужный узел. Сначала создадим указатель на текущий узел, который будет указывать на следующий за фиктивным узлом в ",e.jsx("code",{children:"this.head"}),", и будем перемещать этот указатель, пока не дойдём до переданного индекса, либо не выйдем за пределы списка (указатель станет указывать на ",e.jsx("code",{children:"null"}),"). После завершения цикла узел, на который указывает ",e.jsx("code",{children:"currentNode"}),", является валидным, если это не фиктивный узел, на который указывает ",e.jsx("code",{children:"this.tail"}),", и ",e.jsx("code",{children:"index"})," равен нулю. Если узел валидный, возвращаем его значение, иначе возвращаем ",e.jsx("code",{children:"-1"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Вставка нового узла в начало или конец списка в методах ",e.jsx("code",{children:"addAtHead"})," и"," ",e.jsx("code",{children:"addAtTail"})," различается только тем, на что ссылаются ",e.jsx("code",{children:"next"})," ","и ",e.jsx("code",{children:"prev"})," для нового узла. Благодаря тому, что у нас всегда есть указатели ",e.jsx("code",{children:"this.head"})," и ",e.jsx("code",{children:"this.tail"}),", эти операции довольно простые."]}),e.jsxs("p",{className:"mb-2",children:["Для добавления узла по индексу в ",e.jsx("code",{children:"addAtIndex"})," мы ищём узел, который уже находится по этому индексу. Делаем это тем же образом, что и в методе"," ",e.jsx("code",{children:"get"}),". Если такой узел существует, то создаём новый узел и указатели"," ",e.jsx("code",{children:"next"})," и ",e.jsx("code",{children:"prev"}),", которые указывают на текущий узел по этому индексу и узел перед ним. Затем также добавляем новый узел в список, связывая узлы аналогичным с ",e.jsx("code",{children:"addAtHead"})," и ",e.jsx("code",{children:"addAtTail"})," способом."]}),e.jsxs("p",{className:"mb-2",children:["Наконец для удаления узла в ",e.jsx("code",{children:"deleteAtIndex"})," знакомым способом ищем узел по индексу. Если узел есть, и на него не указывает ",e.jsx("code",{children:"this.tail"})," (это важно, поскольку ",e.jsx("code",{children:"this.tail"})," - фиктивный узел и нам не надо его удалять), то удаляем его из списка, переместив указатели предыдущего и следующего узлов."]})]})}function QL(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Решим задачу с помощью вспомогательной рекурсивной функции ",e.jsx("code",{children:"dfs"}),", которая будет рассчитывать глубину дерева. Базовым случаем будет, когда переданный корень будет равен ",e.jsx("code",{children:"null"}),". В таком случае глубина дерева равна"," ",e.jsx("code",{children:"0"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Чтобы посчитать глубину дерева, нам необходимо к ",e.jsx("code",{children:"1"})," (глубина дерева из одного узла) добавить максимальную глубину между глубиной левого поддерева и глубиной правого поддерева. Чтобы получить диаметр, проходящий через узел, необходимо сложить глубину левого и правого поддеревьев. Если диаметр больше, чем"," ",e.jsx("code",{children:"result"}),", то обновим ",e.jsx("code",{children:"result"}),"."]})]})}function JL(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Для решения этой задачи удобно использовать стек, в который мы будем складывать числа, а для операций с ними доставать два последних числа."}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклом по ",e.jsx("code",{children:"tokens"}),". На каждой итерации цикла проверяем, является ли токен операндом. Если не является, то токен представляет собой число, добавляем его в стек. Иначе достаём два последних числа из стека и совершаем операцию. При делении оборачиваем результат в ",e.jsx("code",{children:"Math.trunc()"}),", чтобы отбросить дробную часть. Добавляем результат операции в стек."]}),e.jsx("p",{className:"mb-2",children:"Так как гарантируется, что входные данные представляют собой валидное арифметическое выражение в обратной польской записи, после завершения цикла в стеке останется только одно значение. Возвращаем его."})]})}function e8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Для решения этой задачи будем использовать рекурсию. Мы знаем, что первые два числа Фибоначчи это ",e.jsx("code",{children:"0"})," и ",e.jsx("code",{children:"1"}),". Будем использовать это в нашем базовом случае ",e.jsx("code",{children:"if (n <= 1)"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Любое число Фибоначчи можно получить, сложив два предыдущих числа. Поэтому будем возвращать из функции ",e.jsx("code",{children:"fib(n - 1) + fib(n - 2)"}),", что будет являться рекурсивным случаем. Например, если нам надо найти ",e.jsx("code",{children:"fib(4)"}),", то мы будем рассчитывать сумму ",e.jsx("code",{children:"fib(3)"})," и ",e.jsx("code",{children:"fib(2)"}),". Мы сможем получить ",e.jsx("code",{children:"fib(2)"}),", рассчитав ",e.jsx("code",{children:"fib(1) + fib(0)"}),". Мы знаем"," ",e.jsx("code",{children:"fib(1)"})," и ",e.jsx("code",{children:"fib(0)"}),", потому что это базовые случаи. Получив"," ",e.jsx("code",{children:"fib(2)"}),", мы сможем вычислить ",e.jsx("code",{children:"fib(3)"})," и так далее."]})]})}function t8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим два указателя ",e.jsx("code",{children:"left"})," и ",e.jsx("code",{children:"right"}),", которые будут указывать на первое и последнее число в массиве. Пройдём бинарным поиском по массиву."]}),e.jsxs("p",{className:"mb-2",children:["На каждой итерации проверяем, больше ли ",e.jsx("code",{children:"nums[middle]"})," чем"," ",e.jsx("code",{children:"nums[right]"}),". Если больше, это означает, что правая часть массива не отсортирована, значит, минимальное значение находится там, перемещаем указатель"," ",e.jsx("code",{children:"left"}),". Если ",e.jsx("code",{children:"nums[middle]"})," не больше, чем"," ",e.jsx("code",{children:"nums[right]"}),", то это означает, что правая часть массива отсортирована, перемещаем указатель ",e.jsx("code",{children:"right"}),"."]}),e.jsxs("p",{className:"mb-2",children:["После того, как указатели пересекутся, на минимальное число будет указывать указатель ",e.jsx("code",{children:"left"}),". Вернём ",e.jsx("code",{children:"nums[left]"})," из функции."]})]})}function n8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Сохраним сумму всех элементов ",e.jsx("code",{children:"nums"})," в переменную ",e.jsx("code",{children:"total"}),". Создадим переменную ",e.jsx("code",{children:"leftSum"}),", в которой будем хранить сумму элементов слева от индекса. Присвоим ей значение ",e.jsx("code",{children:"0"}),", так как слева от первого элемента массива ничего нет."]}),e.jsxs("p",{className:"mb-2",children:["Пройдем циклом по массиву ",e.jsx("code",{children:"nums"}),". На каждой итерации рассчитаем сумму элементов справа от текущего числа (",e.jsx("code",{children:"rightSum"}),") и сравним её с"," ",e.jsx("code",{children:"leftSum"}),". Если значения равны, возвращаем текущий индекс. Иначе прибавляем в ",e.jsx("code",{children:"leftSum"})," текущий элемент. Если цикл прошёл по всем элементам и сумма элементов слева и справа нигде ни была равна, возвращаем"," ",e.jsx("code",{children:"-1"}),"."]})]})}function r8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим два указателя: медленный ",e.jsx("code",{children:"slow"})," и быстрый ",e.jsx("code",{children:"fast"}),", которые будут указывать на первый индекс в массиве. Запустим цикл"," ",e.jsx("code",{children:"while"}),", будем передвигать указатели на каждой итерации. Быстрый будет двигаться в 2 раза быстрее, чем медленный. Когда наши указатели пересекутся, выйдем из цикла ",e.jsx("code",{children:"while"})," с помощью ",e.jsx("code",{children:"break"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Создадим ещё один указатель ",e.jsx("code",{children:"slow2"}),", который будет указывать на первый индекс. Он находится на таком же расстоянии от дублирующегося элемента, как и указатель ",e.jsx("code",{children:"slow"})," (математическое объяснение этого факта можно найти в Интернете). Поэтому будем перемещать эти два указателя в цикле ",e.jsx("code",{children:"while"}),", пока они не пересекутся. Когда они пересекутся, вернём из функции"," ",e.jsx("code",{children:"slow"})," — указатель будет указывать на дублирующийся элемент."]})]})}function s8(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:e.jsxs("strong",{children:["Обратите внимание, что функция проверки версии ",e.jsx("code",{children:"isBadVersion"})," ","предоставляется API, мы не пишем её сами!"]})}),e.jsxs("p",{className:"mb-2",children:["Используем бинарный поиск в дипазоне значений. В указатель ",e.jsx("code",{children:"low"})," ","запишем 1, так как это минимальная возможная версия по условию задачи, а в"," ",e.jsx("code",{children:"high"})," запишем ",e.jsx("code",{children:"n"}),". На каждой итерации цикла проверяем с помощью функции ",e.jsx("code",{children:"isBadVersion"})," версию, которая находится посередине диапазона, в котором мы проводим поиск."]}),e.jsxs("p",{className:"mb-2",children:["Если версия плохая, то проверяем предыдущую версию. Если и она плохая, тогда сдвигаем указатель ",e.jsx("code",{children:"high"})," влево, так как нам нужно искать версию среди более ранних версий. Если же предыдущая версия хорошая, то вернём версию, на которую указывает ",e.jsx("code",{children:"mid"})," — она и является первой плохой версией."]}),e.jsxs("p",{className:"mb-2",children:["Если же версия хорошая, то проверяем следующую версию. Если она плохая, тогда возвращаем её (",e.jsx("code",{children:"mid + 1"}),"). Иначе сдвигаем указатель ",e.jsx("code",{children:"low"})," ","вправо, так как нам нужно искать версию среди более поздних версий."]})]})}function i8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим массив ",e.jsx("code",{children:"result"})," и вспомогательную рекурсивную функцию"," ",e.jsx("code",{children:"backtrack"}),", которая будет принимать в себя количество открывающих скобок ",e.jsx("code",{children:"openN"}),", закрывающих скобок ",e.jsx("code",{children:"closedN"})," и текущую последовательность скобок ",e.jsx("code",{children:"path"}),". Базовым случаем будет, когда количество открывающих и закрывающих скобок равно ",e.jsx("code",{children:"n"}),". В таком случае добавляем в ",e.jsx("code",{children:"result"})," текущую последовательность ",e.jsx("code",{children:"path"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Дальше у нас есть два пути. Если открывающих скобок ещё меньше, чем ",e.jsx("code",{children:"n"}),", то добавляем добавляем в последовательность открытую скобку и вызываем"," ",e.jsx("code",{children:"backtrack"})," для нового ",e.jsx("code",{children:"path"}),". Затем, если закрывающих скобок меньше, чем открывающих, делаем то же самое с закрывающей скобкой."]}),e.jsxs("p",{className:"mb-2",children:["Вызовем ",e.jsx("code",{children:"backtrack(0, 0, '')"}),", после чего вернём из функции"," ",e.jsx("code",{children:"result"}),"."]})]})}function a8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим переменную ",e.jsx("code",{children:"result"}),", равную пустому объекту, и пройдём циклом по строкам ",e.jsx("code",{children:"strs"}),"."]}),e.jsxs("p",{className:"mb-2",children:["В каждой строке у нас могут быть только символы английского алфавита в нижнем регистре. Таким образом, всего имеется 26 вариантов символов. Создадим массив"," ",e.jsx("code",{children:"count"})," из 26 элементов, заполненный нулями, в котором будем отмечать, сколько раз каждый возможный символ встречается в строке."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклом по строке ",e.jsx("code",{children:"str"}),". На каждой итерации добавляем в"," ",e.jsx("code",{children:"count"})," встретившийся символ. Чтобы найти нужный индекс в"," ",e.jsx("code",{children:"count"}),", мы выполняем"," ",e.jsx("code",{children:"char.charCodeAt() - 'a'.charCodeAt()"}),", что означает, что мы из кода текущей буквы вычитаем код буквы ",e.jsx("code",{children:"'a'"}),". Например,"," ",e.jsx("code",{children:"'a'.charCodeAt() - 'a'.charCodeAt()"})," будет равно нулю, а ",e.jsx("code",{children:"'z'.charCodeAt() - 'a'.charCodeAt()"})," будет равно 25."]}),e.jsxs("p",{className:"mb-2",children:["Сформируем ключ для объекта ",e.jsx("code",{children:"result"}),", переведя ",e.jsx("code",{children:"count"})," в строку. Затем добавляем в результат текущую строку. После завершения цикла по строкам нам осталось вернуть из функции значения ",e.jsx("code",{children:"result"}),"."]})]})}function o8(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:e.jsxs("strong",{children:["Обратите внимание, что функция отгадывания ",e.jsx("code",{children:"guess"})," предоставляется API, мы не пишем её сами!"]})}),e.jsxs("p",{className:"mb-2",children:["Используем бинарный поиск в дипазоне значений. В указатель ",e.jsx("code",{children:"low"})," ","запишем 1, так как это минимально возможное число по условию задачи, а в"," ",e.jsx("code",{children:"high"})," запишем ",e.jsx("code",{children:"n"}),". На каждой итерации цикла проверяем с помощью функции ",e.jsx("code",{children:"guess"})," число, которое находится посередине диапазона, в котором мы проводим поиск, и в зависимости от результата перемещаем указатели, либо возвращаем число, если мы его угадали."]})]})}function l8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим вспомогательную функцию ",e.jsx("code",{children:"sumOfSquares"}),", которая будет высчитывать сумму квадратов цифр числа. Создадим в ней переменную"," ",e.jsx("code",{children:"result"})," и запустим цикл ",e.jsx("code",{children:"while"}),", который будет исполняться, пока ",e.jsx("code",{children:"n"})," не станет равно нулю. На каждой итерации цикла"," ",e.jsx("code",{children:"while"})," будем брать остаток от ",e.jsx("code",{children:"n / 10"})," и записывать его в переменную ",e.jsx("code",{children:"digit"}),", после чего возведём ",e.jsx("code",{children:"digit"})," в квадрат. Это значение добавим к ",e.jsx("code",{children:"result"}),", а ",e.jsx("code",{children:"n"})," присвоим"," ",e.jsx("code",{children:"n / 10"})," без остатка. Когда ",e.jsx("code",{children:"n"})," станет равно нулю, вернём"," ",e.jsx("code",{children:"result"})," из функции."]}),e.jsxs("p",{className:"mb-2",children:["Перейдём к функции ",e.jsx("code",{children:"isHappy"}),". Создадим ",e.jsx("code",{children:"Set"})," ",e.jsx("code",{children:"visited"}),", в котором будем хранить числа. Запустим цикл"," ",e.jsx("code",{children:"while"}),", который будет исполняться до тех пор, пока ",e.jsx("code",{children:"n"})," не находится в ",e.jsx("code",{children:"visited"}),". На каждой итерации будем добавлять"," ",e.jsx("code",{children:"n"})," в ",e.jsx("code",{children:"Set"}),", после чего будем присваивать"," ",e.jsx("code",{children:"n = sumOfSquares(n)"}),". Если теперь ",e.jsx("code",{children:"n"})," равно единице, то мы можем вернуть ",e.jsx("code",{children:"true"})," из функции."]}),e.jsxs("p",{children:["Цикл ",e.jsx("code",{children:"while"})," закончит свою работу, когда в ",e.jsx("code",{children:"visited"})," уже будет вновь высчитанное ",e.jsx("code",{children:"n"}),". Это означает, что у нас есть цикл, мы всегда будем возвращаться к этому ",e.jsx("code",{children:"n"})," и никогда не достигнем единицы. Вернём из функции ",e.jsx("code",{children:"false"}),"."]})]})}function c8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим переменные ",e.jsx("code",{children:"rob1"})," и ",e.jsx("code",{children:"rob2"}),", которые будут указывать на максимальное количество денег, которое можно украсть из домов по индексам"," ",e.jsx("i",{children:"n"})," - 2 и ",e.jsx("i",{children:"n"})," - 1 соответственно (можно представить, что дома идут так:"," ",e.jsx("code",{children:"rob1"}),", ",e.jsx("code",{children:"rob2"}),", ",e.jsx("i",{children:"n"}),", ",e.jsx("i",{children:"n"})," + 1, ...)."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклом по домам. На каждой итерации будем обновлять ",e.jsx("code",{children:"rob1"})," и"," ",e.jsx("code",{children:"rob2"}),". В ",e.jsx("code",{children:"rob1"})," запишем ",e.jsx("code",{children:"rob2"}),", а в"," ",e.jsx("code",{children:"rob2"})," — большее из суммы ",e.jsx("code",{children:"rob1"})," с текущим числом и"," ",e.jsx("code",{children:"rob2"}),". После того, как цикл пройдёт полностью, в ",e.jsx("code",{children:"rob2"})," ","будет лежать максимальное количество денег, которое мы можем украсть, вернём"," ",e.jsx("code",{children:"rob2"})," из функции."]})]})}function d8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим вспомогательную функцию ",e.jsx("code",{children:"helper"}),", которая будет принимать в себя два индекса ",e.jsx("code",{children:"start"})," и ",e.jsx("code",{children:"end"}),", а внутри неё — переменные"," ",e.jsx("code",{children:"rob1"})," и ",e.jsx("code",{children:"rob2"}),", которые будут указывать на максимальное количество денег, которое можно украсть из домов по индексам ",e.jsx("i",{children:"n"})," - 2 и"," ",e.jsx("i",{children:"n"})," - 1 соответственно (можно представить, что дома идут так:"," ",e.jsx("code",{children:"rob1"}),", ",e.jsx("code",{children:"rob2"}),", ",e.jsx("i",{children:"n"}),", ",e.jsx("i",{children:"n"})," + 1, ...)."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклом от ",e.jsx("code",{children:"start"})," до ",e.jsx("code",{children:"end"})," по домам. На каждой итерации будем обновлять ",e.jsx("code",{children:"rob1"})," и ",e.jsx("code",{children:"rob2"}),". В"," ",e.jsx("code",{children:"rob1"})," запишем ",e.jsx("code",{children:"rob2"}),", а в ",e.jsx("code",{children:"rob2"})," — большее из суммы ",e.jsx("code",{children:"rob1"})," с текущим числом и ",e.jsx("code",{children:"rob2"}),". После того, как цикл пройдёт полностью, в ",e.jsx("code",{children:"rob2"})," будет лежать максимальное количество денег, которое мы можем украсть, вернём ",e.jsx("code",{children:"rob2"})," из вспомогательной функции."]}),e.jsxs("p",{className:"mb-2",children:["Для того, чтобы рассчитать максимум, нам необходимо вызвать ",e.jsx("code",{children:"helper"})," ","два раза: в одном случае мы не будем учитывать последний дом, а в другом — первый дом, и вернуть максимальное значение, возвращаемое из этих двух вызовов. Однако если существует всего один дом, то ",e.jsx("code",{children:"helper"})," будет возвращать"," ",e.jsx("code",{children:"0"}),", поэтому добавим в ",e.jsx("code",{children:"Math.max"})," к вызовам"," ",e.jsx("code",{children:"helper"})," значение первого дома."]})]})}function u8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим класс очереди ",e.jsx("code",{children:"MyQueue"}),", который будет поддерживать операции, указанные в задаче: ",e.jsx("code",{children:"enqueue"})," (push to back), ",e.jsx("code",{children:"peek"})," (peek from front), ",e.jsx("code",{children:"dequeue"})," (pop from front), ",e.jsx("code",{children:"size"})," и"," ",e.jsx("code",{children:"isEmpty"}),". Очередь будет реализована с помощью двусвязного списка и двух фиктивных узлов для ",e.jsx("code",{children:"this.head"})," и ",e.jsx("code",{children:"this.tail"}),". Учитывая, что согласно задаче все вызовы будут валидными, не будем добавлять никаких проверок в ",e.jsx("code",{children:"dequeue()"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Приступим к реализации стека ",e.jsx("code",{children:"MyStack"}),". Сохраним в"," ",e.jsx("code",{children:"this.queue"})," нашу очередь. Для того, чтобы мы могли использовать очередь как стек, необходимо, чтобы все новые элементы добавлялись в начало очереди, а не в конец. Поэтому в методе ",e.jsx("code",{children:"push"}),", после добавления в очередь нового элемента, мы пройдём циклом ",e.jsx("code",{children:"for"})," по очереди до этого элемента (",e.jsx("code",{children:"this.queue.size - 1"}),"), и на каждой итерации будем удалять элемент из очереди и добавлять его же в конец очереди. Таким образом переданный в"," ",e.jsx("code",{children:"push"})," элемент станет первым, и все последующие элементы будут идти в порядке добавления от самого недавнего к самому первому. Благодаря этому мы можем легко реализовать методы ",e.jsx("code",{children:"pop"})," и ",e.jsx("code",{children:"top"}),", потому что очередь поддерживает эти операции для первого элемента."]})]})}function h8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим класс узла префиксного дерева ",e.jsx("code",{children:"TrieNode"}),". У него будет два поля: булево ",e.jsx("code",{children:"isEndOfWord"}),", отвечающее за то, является ли буква последней в слове, и ",e.jsx("code",{children:"children"}),", в котором будут храниться следующие буквы слов."]}),e.jsxs("p",{className:"mb-2",children:["Напишем класс ",e.jsx("code",{children:"Trie"}),". Создадим в нём корневой узел ",e.jsx("code",{children:"root"}),". В методе ",e.jsx("code",{children:"insert"})," создадим указатель ",e.jsx("code",{children:"cur"}),", который будет указывать на текущий узел. Пройдём циклом по переданному слову. На каждой итерации проверяем, встречается ли текущая буква в ",e.jsx("code",{children:"children"})," у текущего узла. Если не встречается, то добавим её. В конце итерации передвинем указатель на следующую букву. После прохождения цикла пометим последнюю букву как последнюю букву в слове ",e.jsx("code",{children:"cur.isEndOfWord = true"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Методы ",e.jsx("code",{children:"search"})," и ",e.jsx("code",{children:"startsWith"})," похожи на ",e.jsx("code",{children:"insert"}),". Также создадим в них указатель на текущий узел и пройдём циклом по переданному слову или префиксу. Если текущая буква не встречается в ",e.jsx("code",{children:"children"})," ","текущего узла, вернём ",e.jsx("code",{children:"false"}),". После прохождения цикла в"," ",e.jsx("code",{children:"search"})," будем возвращать ",e.jsx("code",{children:"cur.isEndOfWord"}),", а в"," ",e.jsx("code",{children:"startsWith"})," — ",e.jsx("code",{children:"true"}),"."]})]})}function p8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим массив ",e.jsx("code",{children:"result"}),", который будем возвращать из функции. Пройдём циклом по интервалам."]}),e.jsxs("p",{className:"mb-2",children:["На каждой итерации проверяем, пересекается ли ",e.jsx("code",{children:"newInterval"})," с текущим интервалом. Если ",e.jsx("code",{children:"newInterval[1] < intervals[i][0]"}),", то это означает, что новый интервал заканчивается раньше, чем начинается текущий интервал. Значит, мы должны добавить новый интервал в ",e.jsx("code",{children:"result"}),". После этого мы можем добавить все оставшиеся интервалы и вернуть из функции"," ",e.jsx("code",{children:"result"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Если ",e.jsx("code",{children:"newInterval[0] > intervals[i][1]"}),", то это означает, что новый интервал начинается позже, чем кончается текущий интервал. Значит, мы можем добавить текущий интервал в ",e.jsx("code",{children:"result"}),". Если оба условия не сработали, то это означает, что интервалы пересекаются. Обновим ",e.jsx("code",{children:"newInterval"}),", записав в него пересечение интервалов."]}),e.jsxs("p",{className:"mb-2",children:["Если цикл прошёл по всем интервалам и не вернул ",e.jsx("code",{children:"result"})," из функции, то это означает, что новый интервал должен быть в конце ",e.jsx("code",{children:"result"}),". Добавим его в ",e.jsx("code",{children:"result"})," и вернём этот массив из функции."]})]})}function m8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Воспользуемся рекурсией для решения этой задачи. Базовым случаем будет являться ситуация, при которой переданный корень равен ",e.jsx("code",{children:"null"})," — в таком случае создаём узел вставленного значения и возвращаем его."]}),e.jsx("p",{className:"mb-2",children:"Пройдём по нашему дереву. На каждом уровне рекурсии проверяем, как соотносятся вставляемое значение и значение текущего узла. Если вставляемое значение больше значения текущего узла, то рекурсивно вставляем это значение в правое поддерево текущего узла, иначе — в левое. Когда поддерева не будет существовать, это приведёт к базовому случаю."}),e.jsxs("p",{className:"mb-2",children:["Возвращаем из функции ",e.jsx("code",{children:"root"}),", чтобы на предыдущем уровне рекурсии мы могли сохранить получившееся поддерево."]})]})}function f8(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Для решения этой задачи удобно использовать рекурсию. Алгоритм похож на поиск в глубину."}),e.jsxs("p",{className:"mb-2",children:["Для того, чтобы обратить дерево, нам необходимо поменять местами левое и правое поддеревья, и рекурсивно сделать то же самое для более глубоких поддеревьев. Базовым случаем будет, когда переданный корень будет равен ",e.jsx("code",{children:"null"}),". В таком случае нам нечего менять местами — возвращаем ",e.jsx("code",{children:"null"}),"."]})]})}function g8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим переменную ",e.jsx("code",{children:"goal"}),", которая будет указывать на нашу цель — последний индекс ",e.jsx("code",{children:"nums"}),". Пройдём циклом по массиву чисел от предпоследнего к первому. На каждой итерации будем проверять, можем ли мы достичь цели. Если можем, то передвинем ",e.jsx("code",{children:"goal"})," на текущий индекс."]}),e.jsxs("p",{className:"mb-2",children:["После прохождения цикла, если цель находится в первом индексе, вернём"," ",e.jsx("code",{children:"true"}),", иначе ",e.jsx("code",{children:"false"}),"."]})]})}function b8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим переменную ",e.jsx("code",{children:"result"}),", которую будем возвращать из функции, и два указателя ",e.jsx("code",{children:"left"})," и ",e.jsx("code",{children:"right"}),", которые будут указывать на края окна, которое мы можем достичь после всех вариантов шагов из предыдущего окна. Изначально окно состоит из одного индекса ",e.jsx("code",{children:"0"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Запустим цикл ",e.jsx("code",{children:"while"}),", который будет исполняться, пока указатель"," ",e.jsx("code",{children:"right"})," не достигнет конца ",e.jsx("code",{children:"nums"}),". На каждой итерации будем создавать переменную ",e.jsx("code",{children:"farthest"}),", которая будет хранить самый длинный возможный шаг из текущего окна. Пройдём вложенным циклом ",e.jsx("code",{children:"for"})," от"," ",e.jsx("code",{children:"left"})," до ",e.jsx("code",{children:"right"})," включительно, и рассчитаем"," ",e.jsx("code",{children:"farthest"}),". После этого передвинем указатели ",e.jsx("code",{children:"left"})," и"," ",e.jsx("code",{children:"right"})," на ",e.jsx("code",{children:"right + 1"})," и ",e.jsx("code",{children:"farthest"})," ","соответственно и увеличим ",e.jsx("code",{children:"result"})," на единицу."]}),e.jsxs("p",{className:"mb-2",children:["Когда цикл ",e.jsx("code",{children:"while"})," закончит работу, вернём ",e.jsx("code",{children:"result"})," из функции."]})]})}function x8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим два указателя ",e.jsx("code",{children:"left"})," и ",e.jsx("code",{children:"right"}),". Чтобы съесть все бананы за максимальное количество часов, Коко необходимо есть по одному банану в час, а за минимальное количество часов — максимальное количество бананов в грозди в час. Создадим переменную ",e.jsx("code",{children:"result"})," со значением ",e.jsx("code",{children:"right"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Запустим цикл ",e.jsx("code",{children:"while"}),", пока указатели не пересекутся. Расчитаем среднее число бананов ",e.jsx("code",{children:"k"})," и создадим переменную ",e.jsx("code",{children:"hours = 0"}),", которая будет хранить к себе, сколько часов необходимо Коко, чтобы съесть все бананы, если она ест ",e.jsx("code",{children:"k"})," бананов в час. Рассчитаем ",e.jsx("code",{children:"hours"}),", после чего сравним это значение с ",e.jsx("code",{children:"h"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Если ",e.jsx("code",{children:"hours <= h"}),", то ",e.jsx("code",{children:"k"})," подходит для решения задачи, присваиваем ",e.jsx("code",{children:"result = k"}),", после чего передвигаем правый указатель на"," ",e.jsx("code",{children:"k - 1"}),", чтобы отбросить правую часть чисел. Так мы будем рассматривать значения ",e.jsx("code",{children:"k"}),", которые меньше текущего ",e.jsx("code",{children:"k"}),". Иначе передвигаем указатель ",e.jsx("code",{children:"left"})," вправо, чтобы рассматривать значения ",e.jsx("code",{children:"k"}),", которые больше текущего ",e.jsx("code",{children:"k"}),"."]}),e.jsxs("p",{className:"mb-2",children:["После того, как указатели пересекутся, возвращаем ",e.jsx("code",{children:"result"})," из функции."]})]})}function E8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Проще всего эту задачу решить с помощью рекурсии. Мы можем создать массив"," ",e.jsx("code",{children:"array"})," и наполнить его значениями, выполнив Inorder обход дерева в глубину, в результате чего массив будет отсортирован, и мы сможем вернуть"," ",e.jsx("code",{children:"array[k - 1]"}),". Рассмотрим более сложное итеративное решение."]}),e.jsxs("p",{className:"mb-2",children:["Для решения задачи нам понадобится стек. Создадим его, переменную"," ",e.jsx("code",{children:e.jsx("i",{children:"n"})}),", которая будет хранить значение, сколько раз мы доставали элементы из стека, и указатель ",e.jsx("code",{children:"cur"}),", который будет указывать на текущий узел."]}),e.jsxs("p",{className:"mb-2",children:["Создадим цикл ",e.jsx("code",{children:"while"}),", который будет исполняться, пока в"," ",e.jsx("code",{children:"cur"})," есть узел или в стеке есть узлы. Запустим внутренний цикл"," ",e.jsx("code",{children:"while"}),", который идёт из ",e.jsx("code",{children:"cur"})," в самую левую часть его поддерева, на каждой итерации добавляя в стек текущий узел. Таким образом, когда"," ",e.jsx("code",{children:"cur"})," станет указывать на ",e.jsx("code",{children:"null"})," и внутренний цикл прекратится, на вершине стека у нас будет самый маленький узел для поддерева."]}),e.jsxs("p",{className:"mb-2",children:["Достаём этот узел из стека, переносим указатель ",e.jsx("code",{children:"cur"})," на него и увеличиваем ",e.jsx("i",{children:"n"})," на ",e.jsx("code",{children:"1"}),". Когда мы достаём узел из стека и увеличиваем ",e.jsx("i",{children:"n"}),", это означает, что мы достали ",e.jsx("i",{children:"n"}),"-ый самый маленький узел BST. Сравним ",e.jsx("i",{children:"n"})," и ",e.jsx("i",{children:"k"}),", если они равны, то возвращаем из функции значение текущего узла. Если не равны, переносим указатель ",e.jsx("code",{children:"cur"})," на"," ",e.jsx("code",{children:"cur.right"}),". Таким образом, на следующей итерации внешнего цикла мы пройдём те же шаги для правого поддерева текущего узла (все значения в нём будут больше, чем то, которое мы только что достали из стека, но меньше, чем все остальные значения в стеке)."]}),e.jsx("p",{className:"mb-2",children:"В результате порядок обхода узлов получится таким же, как при рекурсивном Inorder обходе."})]})}function T8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим объект ",e.jsx("code",{children:"DigitToChar"}),", в котором ключами будут цифры на клавиатуре, а значениями — строки из доступных для этой цифры букв."]}),e.jsxs("p",{className:"mb-2",children:["Создадим переменную ",e.jsx("code",{children:"result"}),", которую будем возвращать из функции, и вспомогательную рекурсивную функцию ",e.jsx("code",{children:"backtrack"}),", которая будет принимать в себя текущий индекс ",e.jsx("code",{children:"i"})," и текущую строку"," ",e.jsx("code",{children:"curStr"}),". Если в строке есть цифры, вызовем её с нулевым индексом и пустой строкой, после чего вернём из функции ",e.jsx("code",{children:"result"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Базовый случай в ",e.jsx("code",{children:"backtrack"})," случается тогда, когда наша текущая строка достигла размера сроки ",e.jsx("code",{children:"digits"}),". В таком случае мы добавляем строку в"," ",e.jsx("code",{children:"result"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклом по всем возможным буквам для текущей строки. На каждой итерации мы сдвигаем индекс ",e.jsx("code",{children:"i"})," на ",e.jsx("code",{children:"1"})," и добавляем букву в строку, после чего рекурсивно вызываем ",e.jsx("code",{children:"backtrack"})," для новой строки."]})]})}function y8(){return e.jsxs("p",{className:"mb-2",children:["Создадим два указателя: медленный ",e.jsx("code",{children:"slow"})," и быстрый ",e.jsx("code",{children:"fast"}),", которые будут указывать на первый узел в списке. Пройдём циклом ",e.jsx("code",{children:"while"})," ","по списку, передвигая указатели на каждой итерации. Быстрый будет двигаться в 2 раза быстрее, чем медленный. Таким образом, если в списке есть цикл, то наши указатели пересекутся, вернём ",e.jsx("code",{children:"true"}),". Если цикл ",e.jsx("code",{children:"while"})," закончится, то это будет означать, что цикла нет (потому что указатель ",e.jsx("code",{children:"fast"})," вышел за пределы списка), вернём ",e.jsx("code",{children:"false"}),"."]})}function S8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим два указателя: медленный ",e.jsx("code",{children:"slow"})," и быстрый ",e.jsx("code",{children:"fast"}),", которые будут указывать на первый узел в списке. Пройдём циклом ",e.jsx("code",{children:"while"})," ","по списку, передвигая указатели на каждой итерации. Быстрый будет двигаться в 2 раза быстрее, чем медленный. Таким образом, если в списке есть цикл, то наши указатели пересекутся, выйдем из цикла ",e.jsx("code",{children:"while"})," с помощью"," ",e.jsx("code",{children:"break"}),". Если цикла в списке нет, то цикл ",e.jsx("code",{children:"while"})," ","закончится, когда указатель ",e.jsx("code",{children:"fast"})," выйдет за пределы списка."]}),e.jsxs("p",{className:"mb-2",children:["После завершения цикла ",e.jsx("code",{children:"while"})," проверим, вышел ли указатель"," ",e.jsx("code",{children:"fast"})," за пределы списка. Если так, то вернём ",e.jsx("code",{children:"null"})," — цикла в списке нет."]}),e.jsxs("p",{className:"mb-2",children:["Если цикл в списке есть, то создадим ещё один указатель ",e.jsx("code",{children:"slow2"}),", который будет указывать на начало списка. Он находится на таком же расстоянии от узла, с которого начинается цикл, как и указатель ",e.jsx("code",{children:"slow"})," ","(математическое объяснение этого факта можно найти в Интернете). Поэтому будем перемещать эти два указателя в цикле ",e.jsx("code",{children:"while"}),", пока они не пересекутся. Когда они пересекутся, вернём из функции ",e.jsx("code",{children:"slow"})," — указатель будет указывать на узел, с которого начинается цикл."]})]})}function N8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Для того, чтобы проверка наличия предыдущего или следующего числа последовательности для любого числа в массиве занимала ",e.jsx("i",{children:"O"}),"(1) по времени, нам необходимо создать ",e.jsx("code",{children:"Set"}),". Создадим также переменную"," ",e.jsx("code",{children:"longest = 0"}),", которая будет хранить значение самой длинной последовательности."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклом по массиву. На каждой итерации проверяем, является ли число началом последовательности. Если в ",e.jsx("code",{children:"numSet"})," нет числа ",e.jsx("code",{children:"num - 1"}),", то тогда ",e.jsx("code",{children:"num"})," является началом последовательности."]}),e.jsxs("p",{className:"mb-2",children:["Создадим переменную ",e.jsx("code",{children:"length"}),", в которой будем хранить длину текущей последовательности. Затем запустим вложенный цикл ",e.jsx("code",{children:"while"}),", который будет работать, пока следующее число последовательности существует в"," ",e.jsx("code",{children:"numSet"}),". На каждой итерации вложенного цикла увеличиваем"," ",e.jsx("code",{children:"length"}),". Когда следующего числа последовательности не существует, обновляем ",e.jsx("code",{children:"longest"}),", если текущая последовательность длинее"," ",e.jsx("code",{children:"longest"}),"."]}),e.jsxs("p",{className:"mb-2",children:["После прохождения по массиву вернём ",e.jsx("code",{children:"longest"})," из функции."]})]})}function j8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим переменную ",e.jsx("code",{children:"result"}),", которую будем возвращать из функции, и"," ",e.jsx("code",{children:"substr"}),", которая будет содержать в себе текущую палиндромную подстроку. Пройдём циклом по строке."]}),e.jsxs("p",{className:"mb-2",children:["На каждой итерации очищаем ",e.jsx("code",{children:"substr"}),". Для того, чтобы определить, является ли подстрока палиндромной, нам потребуются два указателя"," ",e.jsx("code",{children:"left"})," и ",e.jsx("code",{children:"right"}),", которые изначально будут указывать на текущий символ."]}),e.jsxs("p",{className:"mb-2",children:["Запустим первый цикл ",e.jsx("code",{children:"while"}),", который будет искать палиндромные подстроки нечётной длины, центром которых является текущий символ. Он будет исполняться, пока указатели указывают на одинаковые символы и не вышли за пределы строки. На первой итерации запишем в ",e.jsx("code",{children:"substr"})," ",e.jsx("code",{children:"s[i]"})," (потому что подстрока из одного символа является палиндромной), на последующих итерациях будем добавлять в начало и конец ",e.jsx("code",{children:"substr"})," символы, на которые указывают указатели. Если длина ",e.jsx("code",{children:"result"})," меньше, чем длина текущей палиндромной подстроки, то запишем в ",e.jsx("code",{children:"result"})," текущую подстроку. В конце каждой итерации передвинем указатели."]}),e.jsxs("p",{className:"mb-2",children:["Для того, чтобы найти палиндромные подстроки чётной длины, центром которых являются текущий и следующий символы, сбросим ",e.jsx("code",{children:"substr"})," и переместим указатели ",e.jsx("code",{children:"left"})," и ",e.jsx("code",{children:"right"})," на ",e.jsx("code",{children:"i"})," и"," ",e.jsx("code",{children:"i + 1"})," соответственно. После этого запустим второй цикл"," ",e.jsx("code",{children:"while"}),", который будет исполняться, пока указатели указывают на одинаковые символы и не вышли за пределы строки. Логика внутри цикла точно такая же, как и в первом цикле ",e.jsx("code",{children:"while"}),", за исключением того, что мы сразу записываем в ",e.jsx("code",{children:"substr"})," ",e.jsx("code",{children:"`${s[left]}${substr}${s[right]}`"}),"."]}),e.jsxs("p",{className:"mb-2",children:["После прохождения по строке вернём ",e.jsx("code",{children:"result"})," из функции."]})]})}function A8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим объект ",e.jsx("code",{children:"count"}),", в котором ключами будут символы, а значением - их количество в текущем окне. Также создадим переменные ",e.jsx("code",{children:"result"}),","," ",e.jsx("code",{children:"maxFrequency"}),", которая будет хранить максимальную частоту встречания символа в окне, и указатель ",e.jsx("code",{children:"left"}),", указывающий на первый символ."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклом ",e.jsx("code",{children:"for"})," по строке, в котором указатель ",e.jsx("code",{children:"right"})," ","будет указывать на последний символ в нашем окне. На каждой итерации цикла увеличим значение текущего символа в ",e.jsx("code",{children:"count"})," и обновим"," ",e.jsx("code",{children:"maxFrequency"}),", если ",e.jsx("code",{children:"count[s[right]] > maxFrequency"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Затем, если разность длины нашего окна и ",e.jsx("code",{children:"maxFrequency"})," больше"," ",e.jsx("code",{children:"k"}),", нам необходимо сдвинуть наш указатель ",e.jsx("code",{children:"left"})," вправо, не забыв уменьшить количество символов в ",e.jsx("code",{children:"count"}),". В конце каждой итерации обновляем ",e.jsx("code",{children:"result"}),"."]}),e.jsxs("p",{className:"mb-2",children:["После прохождения по строке вернём ",e.jsx("code",{children:"result"})," из функции."]})]})}function _8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Для решения этой задачи отлично подходит ",e.jsx("code",{children:"Set"}),". Будем хранить в нём элементы, которые расположены между двумя указателями ",e.jsx("code",{children:"l"})," и"," ",e.jsx("code",{children:"r"})," включительно. Воспользуемся методом скользящего окна, будем расширять его, пока не встретим букву, которая уже есть в окне."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклом по массиву. На каждой итерации во внутреннем цикле"," ",e.jsx("code",{children:"while"})," проверяем, есть ли в нашем окне текущая буква. Если мы встретим такую букву, то будем удалять из ",e.jsx("code",{children:"Set"})," её и все буквы, которые шли до неё, передвигая левый указатель. Затем добавляем в ",e.jsx("code",{children:"Set"})," текущую букву и записываем в ",e.jsx("code",{children:"result"})," максимальное значение между ",e.jsx("code",{children:"result"})," ","и текущим размером окна."]}),e.jsxs("p",{className:"mb-2",children:["Цикл ",e.jsx("code",{children:"while"})," не выполняет ",e.jsx("i",{children:"n"})," итераций на каждой итерации цикла"," ",e.jsx("code",{children:"for"}),", он выполнит ",e.jsx("i",{children:"n"})," итераций всего. Поэтому цикл в цикле не приведёт к сложности по времени ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),e.jsx("sup",{children:"2"}),")."]}),e.jsxs("p",{className:"mb-2",children:["В итоге в ",e.jsx("code",{children:"result"})," и будет храниться длина самой длинной подстроки без дубликатов, возвращаем его."]})]})}function v8(){return e.jsxs("p",{className:"mb-2",children:["Создадим указатель ",e.jsx("code",{children:"cur"}),", указывающий на корень дерева, и пройдём по дереву в цикле ",e.jsx("code",{children:"while"}),". Если оба переданных числа больше, чем значение текущего узла, то общего предка необходимо искать в правом поддереве, передвигаем указатель ",e.jsx("code",{children:"cur = cur.right"}),". Если оба переданных числа меньше, чем значение узла, то общего предка необходимо искать в левом поддереве,"," ",e.jsx("code",{children:"cur = cur.left"}),". Если оба условия не выполнились, это означает, что либо значение текущего узла равно одному из переданных чисел, либо одно из чисел больше значения текущего узла, а другое — меньше. Оба эти случая означают, что текущий узел является самым нижним предком, возвращаем его."]})}function R8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Для решения этой задачи будем использовать"," ",e.jsx("a",{className:"focus-visible:outline-0 focus-visible:underline hover:underline text-blue-500",href:"https://ru.wikipedia.org/wiki/Связный_список#Двусвязный_список_(двунаправленный_связный_список)",rel:"noreferrer",target:"_blank",children:"двусвязный список"}),". Создадим класс ",e.jsx("code",{children:"Node"})," для узла списка. Каждый узел будет содержать в себе ",e.jsx("code",{children:"key"})," и ",e.jsx("code",{children:"value"}),"."]}),e.jsxs("p",{className:"mb-2",children:["В конструкторе класса ",e.jsx("code",{children:"LRUCache"})," создадим объект ",e.jsx("code",{children:"Map"}),", который будет содержать в себе коллекцию ключ/узел. Также создадим два фиктивных узла, которые являются указателями на значение, которое дольше всего не запрашивалось (",e.jsx("code",{children:"this.left"}),"), и последнее запрашиваемое (",e.jsx("code",{children:"this.right"}),") значения. Свяжем их, чтобы добавлять новые значения между ними."]}),e.jsxs("p",{className:"mb-2",children:["Добавим вспомогательные методы ",e.jsx("code",{children:"remove"})," и ",e.jsx("code",{children:"insert"}),". Метод"," ",e.jsx("code",{children:"remove"})," будет удалять узел из списка, ",e.jsx("code",{children:"insert"})," — вставлять узел в конец списка."]}),e.jsxs("p",{className:"mb-2",children:["В методе ",e.jsx("code",{children:"get"})," мы проверяем, есть ли узел с таким ключом. Если есть, то удаляем его из списка и вставляем заново. Таким образом, узел окажется в конце списка (на него будет указывать ",e.jsx("code",{children:"this.right.prev"}),", а значит, в данный момент это последний запрашиваемый узел). Возвращаем ",e.jsx("code",{children:"value"})," этого узла. Иначе возвращаем ",e.jsx("code",{children:"-1"}),"."]}),e.jsxs("p",{className:"mb-2",children:["В методе ",e.jsx("code",{children:"put"})," мы проверяем, есть ли узел с таким ключом. Если есть, то удаляем его из списка. Создадим новый узел, добавим его в кэш и список. Узел так же, как и в случае с ",e.jsx("code",{children:"get"}),", окажется в конце списка. Затем проверим размер кэша, и если он превысил допустимый размер, то удалим узел, который дольше всего не запрашивался."]})]})}function w8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим переменные ",e.jsx("code",{children:"rowsCount"})," и ",e.jsx("code",{children:"columnsCount"}),", в которых будут записаны размеры матрицы, ",e.jsx("code",{children:"Set"})," ",e.jsx("code",{children:"visited"}),", в котором будем отмечать ячейки, которые мы уже рассмотрели, и ",e.jsx("code",{children:"result"}),", который будем возвращать из функции."]}),e.jsxs("p",{className:"mb-2",children:["Создадим вспомогательную рекурсивную функцию ",e.jsx("code",{children:"dfs"}),", которая будет принимать в себя координаты ячейки ",e.jsx("code",{children:"row"})," и ",e.jsx("code",{children:"col"}),". Базовым случаем будет, когда ячейка находится за пределами матрицы, либо она равна нулю, либо мы её уже посещали. Во всех этих случаях возвращаем ",e.jsx("code",{children:"0"}),". Иначе ячейка является частью острова. Добавим её в ",e.jsx("code",{children:"Set"})," ячеек, которые мы уже посетили, и прибавим к единице (площадь этой ячейки) результат"," ",e.jsx("code",{children:"dfs"})," для всех её соседей."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклом ",e.jsx("code",{children:"for"})," по всем ячейкам матрицы, на каждой итерации будем вызывать ",e.jsx("code",{children:"dfs"})," и перезаписывать ",e.jsx("code",{children:"result"}),", если результат вызова больше текущего значения ",e.jsx("code",{children:"result"}),". После прохождения цикла вернём ",e.jsx("code",{children:"result"})," из функции."]})]})}function I8(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Эту задачу можно решить разными способами, но самый простой способ будет связан с использованием рекурсии."}),e.jsxs("p",{className:"mb-2",children:["Базовым случаем будет, когда переданный корень будет равен ",e.jsx("code",{children:"null"}),". В таком случае глубина дерева равна ",e.jsx("code",{children:"0"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Чтобы посчитать глубину дерева, нам необходимо к ",e.jsx("code",{children:"1"})," (глубина дерева из одного узла) добавить максимальную глубину между глубиной левого поддерева и глубиной правого поддерева."]})]})}function C8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим переменную ",e.jsx("code",{children:"maxSum"}),", которую будем возвращать из функции, со значением ",e.jsx("code",{children:"-Infinity"})," (так будет удобнее обновлять максимальную сумму), и переменную ",e.jsx("code",{children:"currentSum = 0"}),". Пройдём циклом по всем числам."]}),e.jsxs("p",{className:"mb-2",children:["На каждой итерации записываем в ",e.jsx("code",{children:"currentSum"})," сумму максимума между"," ",e.jsx("code",{children:"0"})," и предыдущей ",e.jsx("code",{children:"currentSum"})," (если предыдущая сумма меньше нуля, нет смысла добавлять её к текущему числу, потому что сумма подмассива, не включающего предыдущее числа, всегда будет больше) и текущего числа. После этого обновляем ",e.jsx("code",{children:"maxSum"}),", если ",e.jsx("code",{children:"currentSum"})," больше максимальной суммы."]}),e.jsxs("p",{className:"mb-2",children:["После прохождения цикла вернём ",e.jsx("code",{children:"maxSum"})," из функции."]})]})}function O8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим переменные ",e.jsx("code",{children:"maxSum = -Infinity"})," (максимальная сумма подмассива), ",e.jsx("code",{children:"minSum = Infinity"})," (минимальная сумма подмассива),"," ",e.jsx("code",{children:"currentMaxSum"})," (максимальная сумма текущего подмассива),"," ",e.jsx("code",{children:"currentMinSum"})," (минимальная сумма текущего подмассива) и"," ",e.jsx("code",{children:"total"})," (сумма всех чисел). Пройдём циклом по всем числам."]}),e.jsxs("p",{children:["На каждой итерации обновляем значения всех наших переменных. После прохождения цикла, если ",e.jsx("code",{children:"maxSum > 0"}),", то это означает, что в массиве есть как минимум одно положительное число, и нам необходимо вернуть из функции мамсимум из максимальной суммы подмассива и разностью суммы всех чисел и минимальной суммы подмассива. Иначе вернём ",e.jsx("code",{children:"maxSum"}),"."]})]})}function k8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим три указателя: медленный ",e.jsx("code",{children:"slow"}),", быстрый ",e.jsx("code",{children:"fast"}),", которые будут указывать на первый узел в списке, и ",e.jsx("code",{children:"prev"}),", который будет указывать на предшествующий ",e.jsx("code",{children:"slow"})," узел. Также создадим переменную ",e.jsx("code",{children:"result"}),", которую будем возвращать из функции."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклом ",e.jsx("code",{children:"while"})," по списку, передвигая указатели на каждой итерации. Быстрый будет двигаться в 2 раза быстрее, чем медленный. Таким образом, когда быстрый достигнет конца списка (будет указывать на последний элемент, либо выйдет за пределы списка), медленный будет находиться посередине. Однако вместе с перемещением будем разворачивать левую половину списка так, чтобы после прохождения цикла первый элемент в левой части был последним, а последний — первым."]}),e.jsxs("p",{className:"mb-2",children:["После прохождения цикла у нас появляются две половины списка, левая начинается с"," ",e.jsx("code",{children:"prev"}),", а правая с ",e.jsx("code",{children:"slow"}),". Теперь мы можем пройти по ним и на каждой итерации рассчитывать сумму, после чего обновлять ",e.jsx("code",{children:"result"}),", если требуется."]}),e.jsxs("p",{className:"mb-2",children:["После того, как мы вышли за пределы половин, вернём из функции ",e.jsx("code",{children:"result"}),"."]})]})}function L8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Для того, чтобы нам было проще находить пересечения интервалов, нам необходимо отсортировать их по значению их начала. Создадим массив ",e.jsx("code",{children:"result"}),", который будем возвращать из функции, и запишем в него первый интервал. Пройдём циклом по интервалам, начиная со второго."]}),e.jsxs("p",{className:"mb-2",children:["На каждой итерации сохраним конец предыдущего интервала в ",e.jsx("code",{children:"lastEnd"}),". Будем проверять, пересекается ли последний интервал в ",e.jsx("code",{children:"result"})," с текущим интервалом. Если ",e.jsx("code",{children:"lastEnd < intervals[i][0]"}),", то это означает, что последний интервал в ",e.jsx("code",{children:"result"})," заканчивается раньше, чем начинается текущий интервал. Значит, мы должны добавить текущий интервал в"," ",e.jsx("code",{children:"result"}),". Иначе интервалы пересекаются. В таком случае мы не должны добавлять текущий интервал в ",e.jsx("code",{children:"result"}),", мы должны обновить последний интервал, записав в него пересечение последнего и текущего интервалов. Так как они отсортированы по значению их начала, то начало объединённого интервала будет записано в последнем интервале в ",e.jsx("code",{children:"result"}),". Обновим конец последнего интервала на ",e.jsx("code",{children:"Math.max(lastEnd, intervals[i][1])"}),"."]}),e.jsxs("p",{className:"mb-2",children:["После прохождения цикла вернём массив ",e.jsx("code",{children:"result"})," из функции."]})]})}function D8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим новый связный список, который будет состоять из одного фиктивного узла, и указатель ",e.jsx("code",{children:"tail"}),", который будет указывать на этот узел."]}),e.jsxs("p",{className:"mb-2",children:["Запустим цикл ",e.jsx("code",{children:"while"}),", который будет выполняться, пока в обоих переданных списках есть узлы. На каждой итерации проверяем, является ли значение узла в первом списке меньшим, чем во втором. Если является, то перемещаем указатель ",e.jsx("code",{children:"tail.next"})," на этот список, добавляя тем самым узел этого списка, и переходим на следующий узел в списке: ",e.jsx("code",{children:"list1 = list1.next"}),". Если не является, то производим аналогичные действия со вторым списком. В конце итерации перемещаем указатель ",e.jsx("code",{children:"tail"})," на только что добавленный узел, на который указывает ",e.jsx("code",{children:"tail.next"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Цикл закончится, когда в одном из списков не останется узлов. Это означает, что в списке, в котором остались узлы, все узлы больше, чем узлы, которые мы уже объединили в один список. Поэтому мы можем просто переместить указатель"," ",e.jsx("code",{children:"tail.next"})," на оставшийся список."]}),e.jsxs("p",{className:"mb-2",children:["Так как наш объединённый список начинается с фиктивного узла, мы можем вернуть из функции ",e.jsx("code",{children:"dummyNode.next"}),", чтобы избавиться от него и получить желаемый список."]})]})}function M8(){return e.jsxs("p",{className:"mb-2",children:["Создадим два указателя: медленный ",e.jsx("code",{children:"slow"})," и быстрый ",e.jsx("code",{children:"fast"}),", которые будут указывать на первый узел в списке. Пройдём циклом ",e.jsx("code",{children:"while"})," ","по списку, передвигая указатели на каждой итерации. Быстрый будет двигаться в 2 раза быстрее, чем медленный. Таким образом, когда быстрый достигнет конца списка (будет указывать на последний элемент, либо выйдет за пределы списка), медленный будет находиться посередине и мы сможем вернуть его из функции."]})}function F8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Для решения этой задачи будем использовать метод скользящего окна. Создадим переменные ",e.jsx("code",{children:"currentSum"})," и ",e.jsx("code",{children:"l"})," со значением 0, и"," ",e.jsx("code",{children:"result"})," со значением ",e.jsx("code",{children:"Infinity"})," (можно использовать"," ",e.jsx("code",{children:"nums.length + 1"}),", изначальное значение должно быть больше возможного подмассива. Во время прохождения по массиву мы будем перезаписывать это значение, когда встретим подходящий подмассив. Если мы ни разу не встретим такой подмассив, по начальному значению мы поймём, что должны вернуть ",e.jsx("code",{children:"0"}),")."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклом по массиву. На каждой итерации добавляем текущее число к сумме. Во внутреннем цикле ",e.jsx("code",{children:"while"}),", если сумма больше или равна"," ",e.jsx("code",{children:"target"}),", то обновляем ",e.jsx("code",{children:"result"}),", присваивая минимальное значение между ",e.jsx("code",{children:"result"})," и размером текущего окна (",e.jsx("code",{children:"r - l + 1"}),"), после чего отнимаем из суммы число, на которое указывает левый указатель, и передвигаем ",e.jsx("code",{children:"l"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Цикл ",e.jsx("code",{children:"while"})," не выполняет ",e.jsx("i",{children:"n"})," итераций на каждой итерации цикла"," ",e.jsx("code",{children:"for"}),", он выполнит ",e.jsx("i",{children:"n"})," итераций всего. Поэтому цикл в цикле не приведёт к сложности по времени ",e.jsx("i",{children:"O"}),"(",e.jsx("i",{children:"n"}),e.jsx("sup",{children:"2"}),")."]}),e.jsxs("p",{className:"mb-2",children:["Если после прохождения цикла ",e.jsx("code",{children:"for"})," в ",e.jsx("code",{children:"result"})," осталось значение ",e.jsx("code",{children:"Infinity"}),", то это означает, что искомого подмассива не существует, возвращаем ",e.jsx("code",{children:"0"}),". Иначе возвращаем ",e.jsx("code",{children:"result"}),"."]})]})}function P8(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{children:"Задачу можно решить двумя способами:"}),e.jsxs("ol",{className:"list-decimal list-inside mb-2",children:[e.jsxs("li",{children:["Создать один стек. Для каждого элемента в стеке хранить минимальное значение. Тогда стек будет хранить объекты типа ",e.jsx("code",{children:"{ value, minValue }"}),"."]}),e.jsxs("li",{children:["Создать два стека. Один будет хранить коллекцию ",e.jsx("code",{children:"value"}),", второй —"," ","коллекцию ",e.jsx("code",{children:"minValue"}),"."]})]}),e.jsx("p",{className:"mb-2",children:"Решим задачу вторым способом."}),e.jsxs("p",{className:"mb-2",children:[" ","Создадим два стека: ",e.jsx("code",{children:"stack"})," для хранения значений и"," ",e.jsx("code",{children:"minStack"})," для хранения минимальных значений. Эти стеки всегда будут одинакового размера. При добавлении в стек в методе ",e.jsx("code",{children:"push"})," мы просто добавляем значение в ",e.jsx("code",{children:"this.stack"}),", а в ",e.jsx("code",{children:"this.minStack"})," мы добавляем меньшее число между ",e.jsx("code",{children:"value"})," и последним значением в"," ",e.jsx("code",{children:"this.minStack"}),". Таким образом, в ",e.jsx("code",{children:"this.minStack"})," всегда будет актуальное значение для каждого индекса."]}),e.jsxs("p",{className:"mb-2",children:["В методе ",e.jsx("code",{children:"pop"})," удаляем последний элемент из каждого стека. В"," ",e.jsx("code",{children:"top"})," — возвращаем последнее значение из ",e.jsx("code",{children:"this.stack"}),", а в"," ",e.jsx("code",{children:"getMin"})," — последнее значение из ",e.jsx("code",{children:"this.minStack"}),"."]})]})}function U8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Для того, чтобы нам было проще находить пересечения интервалов, нам необходимо отсортировать их по значению их начала. Создадим переменную"," ",e.jsx("code",{children:"result = 0"}),", которую будем возвращать из функции, и переменную"," ",e.jsx("code",{children:"prevEnd = intervals[0][1]"}),", в которую будем записывать значение конца последнего интервала. Пройдём циклом по интервалам, начиная со второго."]}),e.jsxs("p",{className:"mb-2",children:["На каждой итерации проверяем, пересекается ли последний интервал с текущим интервалом. Если ",e.jsx("code",{children:"intervals[i][0] >= prevEnd"}),", то это означает, что интервалы не пересекаются. Обновим ",e.jsx("code",{children:"prevEnd"}),". Иначе интервалы пересекаются и мы должны удалить один из них, увеличим ",e.jsx("code",{children:"result"}),". Удалять будем тот, который кончается позже, поэтому в ",e.jsx("code",{children:"prevEnd"})," запишем минимальное значение из ",e.jsx("code",{children:"prevEnd"})," и ",e.jsx("code",{children:"intervals[i][1]"}),"."]}),e.jsxs("p",{className:"mb-2",children:["После прохождения цикла вернём ",e.jsx("code",{children:"result"})," из функции."]})]})}function B8(){return e.jsxs("p",{className:"mb-2",children:["Создадим переменную ",e.jsx("code",{children:"result"}),", которую будем возвращать из функции. Запустим цикл ",e.jsx("code",{children:"while"}),", который будет исполняться, пока ",e.jsx("code",{children:"n"})," не равно нулю. На каждой итерации будем проверять, равно ли побитовое И между"," ",e.jsx("code",{children:"n"})," и ",e.jsx("code",{children:"1"})," единице. Если равно, то увеличим ",e.jsx("code",{children:"result"}),". В конце каждой итерации будем выполнять выполнять побитовый сдвиг ",e.jsx("code",{children:"n"})," ","вправо на ",e.jsx("code",{children:"1"})," и присваивать полученный результат в ",e.jsx("code",{children:"n"}),". Когда цикл ",e.jsx("code",{children:"while"})," закончит свою работу, вернём ",e.jsx("code",{children:"result"})," из функции."]})}function H8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим переменные ",e.jsx("code",{children:"rowsCount"})," и ",e.jsx("code",{children:"columnsCount"}),", в которых будут записаны размеры матрицы, и ",e.jsx("code",{children:"result"}),", который будем возвращать из функции."]}),e.jsxs("p",{className:"mb-2",children:["Создадим вспомогательную рекурсивную функцию ",e.jsx("code",{children:"dfs"}),", которая будет принимать в себя координаты ячейки ",e.jsx("code",{children:"row"})," и ",e.jsx("code",{children:"col"}),". Базовым случаем будет, когда ячейка находится за пределами матрицы, либо она равна нулю. Во всех этих случаях прекращаем выполнение функции. Иначе ячейка является частью острова. Заменим её значение на ",e.jsx("code",{children:"'0'"}),", чтобы мы не могли её использовать в расчётах других вызовов ",e.jsx("code",{children:"dfs"}),", после чего вызовем"," ",e.jsx("code",{children:"dfs"})," для всех соседних ячеек."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклом ",e.jsx("code",{children:"for"})," по всем ячейкам матрицы. На каждой итерации будем проверять, является ли ячейка частью острова. Если является, то увеличим"," ",e.jsx("code",{children:"result"})," и вызовем для неё ",e.jsx("code",{children:"dfs"}),". Так как ",e.jsx("code",{children:"dfs"})," ","перезапишет на ",e.jsx("code",{children:"'0'"})," все ячейки, которые также являются частью текущего острова, на следующих итерациях они не вызовут увеличения"," ",e.jsx("code",{children:"result"}),". После прохождения цикла вернём ",e.jsx("code",{children:"result"})," из функции."]})]})}function G8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Решим задачу с помощью метода скользящего окна между указателями ",e.jsx("code",{children:"l"})," и"," ",e.jsx("code",{children:"r"}),". Создадим переменные ",e.jsx("code",{children:"sum"})," и ",e.jsx("code",{children:"result"})," со значением ",e.jsx("code",{children:"0"}),", в которых будем хранить сумму окна и результат, который будем возвращать из функции."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклом по массиву. На каждой итерации будем проверять размер окна. Если он равен ",e.jsx("code",{children:"k"}),", то будем удалять из суммы число, на которое указывает"," ",e.jsx("code",{children:"l"}),", после чего передвинем левый указатель. Затем добавим к сумме текущее число, после чего, если окно имеет размер ",e.jsx("code",{children:"k"})," (это является правдой при ",e.jsx("code",{children:"r + 1 >= k"}),") и сумма удовлетворяет условию, инкрементируем ",e.jsx("code",{children:"result"}),"."]}),e.jsxs("p",{className:"mb-2",children:["После прохождения цикла возвращаем из функции ",e.jsx("code",{children:"result"}),"."]})]})}function $8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим переменные ",e.jsx("code",{children:"rowsCount"})," и ",e.jsx("code",{children:"columnsCount"}),", в которых будут записаны размеры матрицы, два ",e.jsx("code",{children:"Set"}),", представляющих океаны"," ",e.jsx("code",{children:"pacific"})," и ",e.jsx("code",{children:"atlantic"}),", в которых будем хранить ячейки, вода с которых может достичь этих океанов, и ",e.jsx("code",{children:"result"}),", который будем возвращать из функции."]}),e.jsxs("p",{className:"mb-2",children:["Создадим вспомогательную рекурсивную функцию ",e.jsx("code",{children:"dfs"}),", которая будет принимать в себя координаты ячейки ",e.jsx("code",{children:"row"})," и ",e.jsx("code",{children:"col"}),","," ",e.jsx("code",{children:"Set"})," океана ",e.jsx("code",{children:"ocean"})," и высоту предыдущей ячейки"," ",e.jsx("code",{children:"prevHeight"}),". Базовым случаем будет, когда ячейка находится за пределами матрицы, либо она меньше ",e.jsx("code",{children:"prevHeight"}),", либо мы её уже посещали (то есть она находится в ",e.jsx("code",{children:"ocean"}),"). Во всех этих случаях возвращаемся из функции. Иначе вода с ячейки может достичь океана. Добавим ячейку в ",e.jsx("code",{children:"ocean"}),", и вызовем ",e.jsx("code",{children:"dfs"})," для всех соседей этой ячейки."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклом ",e.jsx("code",{children:"for"})," по каждой колонке, на каждой итерации будем вызывать ",e.jsx("code",{children:"dfs"})," для первой и последней строки. Так мы получим в"," ",e.jsx("code",{children:"pacific"})," и ",e.jsx("code",{children:"atlantic"})," координаты ячеек, вода с которых может достигнуть океана сверху или снизу. Пройдём циклом ",e.jsx("code",{children:"for"})," по каждой строке и сделаем то же самое для океана слева и справа."]}),e.jsxs("p",{className:"mb-2",children:["Наконец, пройдём циклом по всем ячейкам матрицы. Если координаты ячейки есть и в"," ",e.jsx("code",{children:"pacific"}),", и в ",e.jsx("code",{children:"atlantic"}),", то добавляем эти координаты в"," ",e.jsx("code",{children:"result"}),". После завершения всех циклов вернём ",e.jsx("code",{children:"result"})," из функции."]})]})}function z8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Напишем вспомогательную функцию ",e.jsx("code",{children:"isPalindrome"}),", которая проверяет, является ли подстрока от ",e.jsx("code",{children:"left"})," до ",e.jsx("code",{children:"right"})," строки"," ",e.jsx("code",{children:"str"})," палиндромом."]}),e.jsxs("p",{className:"mb-2",children:["В функции ",e.jsx("code",{children:"partition"})," создадим переменную ",e.jsx("code",{children:"result"}),", которую будем возвращать из функции, и переменную ",e.jsx("code",{children:"part"}),", которая будет содержать в себе текущую часть."]}),e.jsxs("p",{className:"mb-2",children:["Напишем вспомогательную рекурсивную функцию ",e.jsx("code",{children:"backtrack"}),", которая будет принимать в себя индекс ",e.jsx("code",{children:"i"}),", который будет указывать на то, с какой буквы в ",e.jsx("code",{children:"s"})," мы сейчас ищем палиндромы."]}),e.jsxs("p",{className:"mb-2",children:["Базовым случаем будет, если ",e.jsx("code",{children:"i"})," больше либо равно длине ",e.jsx("code",{children:"s"}),". Это означает, что мы прошли по всем индексам в ",e.jsx("code",{children:"s"}),", добавим нашу текущую часть в ",e.jsx("code",{children:"result"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклом ",e.jsx("code",{children:"for"})," от ",e.jsx("code",{children:"i"})," до конца строки. Если подстрока от ",e.jsx("code",{children:"i"})," до ",e.jsx("code",{children:"j"})," является палиндромом, то добавим её в"," ",e.jsx("code",{children:"part"})," и вызовем ",e.jsx("code",{children:"backtrack"})," для следующего индекса, после чего удалим эту подстроку из ",e.jsx("code",{children:"part"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Вызовем ",e.jsx("code",{children:"backtrack"})," с нулевым индексом, после чего вернём из функции"," ",e.jsx("code",{children:"result"}),"."]})]})}function W8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим переменную ",e.jsx("code",{children:"result"})," со значением ",e.jsx("code",{children:"0"}),", которую будем возвращать из функции. Пройдём циклом по строке."]}),e.jsxs("p",{className:"mb-2",children:["На каждой итерации, для того, чтобы определить, является ли подстрока палиндромной, нам потребуются два указателя ",e.jsx("code",{children:"left"})," и ",e.jsx("code",{children:"right"}),", которые изначально будут указывать на текущий символ."]}),e.jsxs("p",{className:"mb-2",children:["Запустим первый цикл ",e.jsx("code",{children:"while"}),", который будет искать палиндромные подстроки нечётной длины, центром которых является текущий символ. Он будет исполняться, пока указатели указывают на одинаковые символы и не вышли за пределы строки. На каждой итерации будем увеличивать ",e.jsx("code",{children:"result"})," и передвигать указатели."]}),e.jsxs("p",{className:"mb-2",children:["Для того, чтобы найти палиндромные подстроки чётной длины, центром которых являются текущий и следующий символы, переместим указатели ",e.jsx("code",{children:"left"})," и"," ",e.jsx("code",{children:"right"})," на ",e.jsx("code",{children:"i"})," и ",e.jsx("code",{children:"i + 1"})," соответственно. После этого запустим второй цикл ",e.jsx("code",{children:"while"}),", который будет исполняться, пока указатели указывают на одинаковые символы и не вышли за пределы строки. Логика внутри цикла точно такая же, как и в первом цикле ",e.jsx("code",{children:"while"}),"."]}),e.jsxs("p",{className:"mb-2",children:["После прохождения по строке вернём ",e.jsx("code",{children:"result"})," из функции."]})]})}function V8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим объект ",e.jsx("code",{children:"CharToLastIndex"}),", в котором ключами будут буквы, а значениями — последний индекс, по которому эта буква встречается. Заполним этот объект. Создадим также массив ",e.jsx("code",{children:"result"}),", который будем возвращать из функции, размер текущей части ",e.jsx("code",{children:"size"})," и указатель ",e.jsx("code",{children:"end"}),", который будет указывать на конец текущей части."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклом по строке. На каждой итерации будем увеличивать ",e.jsx("code",{children:"size"})," и передвигать ",e.jsx("code",{children:"end"}),", если последний индекс текущей буквы дальше, чем"," ",e.jsx("code",{children:"end"}),". Если ",e.jsx("code",{children:"i === end"}),", то это означает, что мы дошли до конца текущей части, добавим ",e.jsx("code",{children:"size"})," в ",e.jsx("code",{children:"result"}),", после чего сбросим ",e.jsx("code",{children:"size"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Когда цикл закончит работу, вернём ",e.jsx("code",{children:"result"})," из функции."]})]})}function K8(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Эту задачу можно решить разными способами, но самый простой способ будет связан с использованием рекурсии."}),e.jsxs("p",{className:"mb-2",children:["Первым базовым случаем будет, когда переданный корень будет равен"," ",e.jsx("code",{children:"null"}),". В таком случае искомого пути не существует, возвращаем"," ",e.jsx("code",{children:"false"}),". Вторым базовым случаем будет, когда мы дошли до листового узла. В таком случае мы возвращаем ",e.jsx("code",{children:"true"}),", если разность"," ",e.jsx("code",{children:"targetSum"})," и ",e.jsx("code",{children:"root.val"})," равна нулю — это значит, что путь равен ",e.jsx("code",{children:"targetSum"}),". Если путь не равен ",e.jsx("code",{children:"targetSum"}),", возвращаем ",e.jsx("code",{children:"false"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Иначе, если узел есть, но он не листовой, возвращаем рекурсивный вызывов функции для левого и правого поддерева, вычев ",e.jsx("code",{children:"root.val"})," из"," ",e.jsx("code",{children:"targetSum"}),". Если какой-то из вызовов вернул ",e.jsx("code",{children:"true"}),", то существует валидный путь, вернём ",e.jsx("code",{children:"true"}),", иначе — ",e.jsx("code",{children:"false"}),"."]})]})}function Y8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Если длина ",e.jsx("code",{children:"s1"})," больше, чем длина ",e.jsx("code",{children:"s2"}),", то мы можем сразу вернуть ",e.jsx("code",{children:"false"}),"."]}),e.jsxs("p",{className:"mb-2",children:["По условию задачи в строках могут находиться только английские буквы в нижнем регистре, то есть может быть только 26 различных символов. Создадим массивы"," ",e.jsx("code",{children:"s1Count"})," и ",e.jsx("code",{children:"s2Count"})," из ",e.jsx("code",{children:"26"})," элементов и заполним их нулями. В этих массивах по каждому индексу будет храниться, сколько раз встречается буква в строке (первый ",e.jsx("code",{children:"0"})," индекс для"," ",e.jsx("code",{children:"'a'"}),", последний ",e.jsx("code",{children:"25"})," — для"," ",e.jsx("code",{children:"'z'"}),"). Пройдёмся циклом от ",e.jsx("code",{children:"0"})," до"," ",e.jsx("code",{children:"s1.length"})," по строкам и увеличим значения букв в ",e.jsx("code",{children:"s1Count"})," ","и ",e.jsx("code",{children:"s2Count"}),". Также создадим переменную ",e.jsx("code",{children:"matches"}),", которая будет хранить число совпадений между ",e.jsx("code",{children:"s1Count"})," и ",e.jsx("code",{children:"s2Count"}),". Пройдёмся циклом от ",e.jsx("code",{children:"0"})," до ",e.jsx("code",{children:"26"}),", на каждой итерации увеличим"," ",e.jsx("code",{children:"matches"})," в случае совпадения."]}),e.jsxs("p",{className:"mb-2",children:["Создадим указатель ",e.jsx("code",{children:"left"}),", указывающий на первую букву в"," ",e.jsx("code",{children:"s2"}),", и пройдёмся циклом ",e.jsx("code",{children:"for"})," от ",e.jsx("code",{children:"s1.length"})," до"," ",e.jsx("code",{children:"s2.length"}),". На текущую букву будет указывать указатель"," ",e.jsx("code",{children:"right"}),". На каждой итерации проверяем, равно ли число совпадений"," ",e.jsx("code",{children:"26"}),". Если равно, возвращаем из функции ",e.jsx("code",{children:"true"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Увеличиваем частоту встречания текущей буквы в ",e.jsx("code",{children:"s2Count"}),", после чего проверяем, совпадает ли эта частота в ",e.jsx("code",{children:"s1Count"})," и ",e.jsx("code",{children:"s2Count"}),". Если совпадает, увеличиваем количество совпадений. Иначе, если в"," ",e.jsx("code",{children:"s1Count"})," число меньше на ",e.jsx("code",{children:"1"}),", уменьшаем количество совпадений. После этого уменьшаем частоту буквы в ",e.jsx("code",{children:"s2Count"}),", на которую указывает ",e.jsx("code",{children:"left"}),". Снова проверяем, совпадает ли частота. Если совпадает, увеличиваем количество совпадений. Иначе, если в ",e.jsx("code",{children:"s1Count"})," ","число больше на ",e.jsx("code",{children:"1"}),", уменьшаем количество совпадений. После чего сдивагем левый указатель вправо."]}),e.jsxs("p",{className:"mb-2",children:["После завершения последней итерации, если перестановка существует в"," ",e.jsx("code",{children:"s2"}),", ",e.jsx("code",{children:"matches"})," будет равно ",e.jsx("code",{children:"26"}),". Вернём из функции ",e.jsx("code",{children:"matches === 26"}),"."]})]})}function q8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим массив ",e.jsx("code",{children:"result"}),", который будем возвращать из функции, и вспомогательную рекурсивную функцию ",e.jsx("code",{children:"backtrack"}),", которая будет принимать в себя индекс ",e.jsx("code",{children:"i"}),". Базовым случаем будет, когда индекс вышел за пределы массива ",e.jsx("code",{children:"nums"}),", в таком случае добавляем копию"," ",e.jsx("code",{children:"nums"})," в ",e.jsx("code",{children:"result"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём цилом ",e.jsx("code",{children:"for"})," от ",e.jsx("code",{children:"i"})," до ",e.jsx("code",{children:"nums.length"}),". На каждой итерации будем переставлять элементы ",e.jsx("code",{children:"nums[i]"})," и"," ",e.jsx("code",{children:"nums[j]"})," местами, после чего будем вызывать ",e.jsx("code",{children:"backtrack"})," для следующего индекса и возвращать элементы назад на свои места."]}),e.jsxs("p",{className:"mb-2",children:["Вызовем ",e.jsx("code",{children:"backtrack"})," для нулевого индекса, после чего вернём"," ",e.jsx("code",{children:"result"}),"."]})]})}function X8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим массив ",e.jsx("code",{children:"result"}),", который будем возвращать из функции, массив текущей перестановки ",e.jsx("code",{children:"permutation"})," и объект ",e.jsx("code",{children:"count"}),", в котором ключами будут числа, встречающиеся в ",e.jsx("code",{children:"nums"}),", а значениями — то, сколько раз встречается это число. Заполним ",e.jsx("code",{children:"count"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Создадим вспомогательную рекурсивную функцию ",e.jsx("code",{children:"backtrack"}),". Базовым случаем будет, когда длина текущей перестановки ",e.jsx("code",{children:"permutation"})," стала равна длине ",e.jsx("code",{children:"nums"}),", в таком случае добавляем её копию в"," ",e.jsx("code",{children:"result"})," и прекращаем работу функции."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклом по каждому числу в ",e.jsx("code",{children:"count"}),". Если число ещё не было использовано в перестановке столько раз, сколько оно встречается в"," ",e.jsx("code",{children:"nums"}),", то ",e.jsx("code",{children:"count[num]"})," будет больше ",e.jsx("code",{children:"0"}),". Если так, то добавим число в перестановку, уменьшим его значение в ",e.jsx("code",{children:"count"})," и рекурсивно вызовем ",e.jsx("code",{children:"backtrack"}),". После чего удалим это число из перестановки и вернём значение в ",e.jsx("code",{children:"count"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Вызовем ",e.jsx("code",{children:"backtrack"})," для нулевого индекса, после чего вернём"," ",e.jsx("code",{children:"result"}),"."]})]})}function Z8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим вспомогательную рекурсивную функцию ",e.jsx("code",{children:"helper"}),", которая будет возводить число ",e.jsx("code",{children:"x"})," в степень ",e.jsx("code",{children:"n"}),". В ней будет два базовых случая. Если ",e.jsx("code",{children:"x === 0"}),", то мы можем вернуть ",e.jsx("code",{children:"0"}),", потому что"," ",e.jsx("code",{children:"0"})," в любой степени равно ",e.jsx("code",{children:"0"}),". Если ",e.jsx("code",{children:"n === 0"}),", то мы можем вернуть ",e.jsx("code",{children:"1"}),", потому что любое число в степени ",e.jsx("code",{children:"0"})," ","равно ",e.jsx("code",{children:"1"}),". Создадим переменную ",e.jsx("code",{children:"result"}),", в которую сохраним"," ",e.jsx("code",{children:"helper(x * x, Math.floor(n / 2))"}),". Допустим, ",e.jsx("code",{children:"x = 2"}),", а"," ",e.jsx("code",{children:"n = 4"}),". Это работает, потому что"," ",e.jsxs("code",{children:["2",e.jsx("sup",{children:"4"})," === (2 * 2)",e.jsx("sup",{children:"2"})]}),". Если степень нечётная, то вернём из функции ",e.jsx("code",{children:"x * result"}),", иначе просто вернём ",e.jsx("code",{children:"result"}),"."]}),e.jsxs("p",{children:["В основной функции ",e.jsx("code",{children:"myPow"})," создадим переменную"," ",e.jsx("code",{children:"result = helper(x, Math.abs(n))"}),". Если степень была отрицательной, вернём из функции ",e.jsx("code",{children:"1 / result"}),", иначе вернём ",e.jsx("code",{children:"result"}),"."]})]})}function Q8(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Чтобы найти произведение всех элементов ",e.jsx("code",{children:"nums"}),", за исключением"," ",e.jsx("code",{children:"nums[i]"}),", можно рассчитать произведение всех элементов до"," ",e.jsx("code",{children:"nums[i]"})," и умножить его на произведение всех элементов после"," ",e.jsx("code",{children:"nums[i]"}),". Для этого можно использовать префиксное и постфиксное произведения."]}),e.jsxs("p",{className:"mb-2",children:["Создадим массив ",e.jsx("code",{children:"result"}),", который будем возвращать из функции, и переменную ",e.jsx("code",{children:"prefix"})," со значением ",e.jsx("code",{children:"1"}),", которая будет хранить в себе префиксное произведение. Пройдем циклом по массиву ",e.jsx("code",{children:"nums"}),", на каждой итерации будем добавлять в ",e.jsx("code",{children:"result"})," префиксное произведение элементов слева от ",e.jsx("code",{children:"nums[i]"}),", а затем будем умножать"," ",e.jsx("code",{children:"prefix"})," на текущий элемент. Таким образом, в ",e.jsx("code",{children:"result"})," по каждому индексу у нас будет храниться произведение всех элементов до"," ",e.jsx("code",{children:"nums[i]"}),", не включая сам элемент."]}),e.jsxs("p",{className:"mb-2",children:["Создадим переменную ",e.jsx("code",{children:"postfix"})," со значением ",e.jsx("code",{children:"1"})," и выполним цикл в обратном порядке. На каждой итерации умножаем префиксное произвдеение на постфиксное произведение и записываем получившееся значение в"," ",e.jsx("code",{children:"result[j]"}),", затем умножаем ",e.jsx("code",{children:"postfix"})," на текущий элемент. В результате в ",e.jsx("code",{children:"result[j]"})," будет храниться произведение всех элементов"," ",e.jsx("code",{children:"nums"}),", кроме ",e.jsx("code",{children:"nums[j]"}),"."]})]})}function J8(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Представим, что для каждого элемента матрицы мы знаем префиксную сумму. Тогда, чтобы рассчитать сумму подматрицы, нам необходимо взять префиксную сумму правого нижнего элемента подматрицы, отнять от неё сумму подматрицы, находящейся слева от рассчитываемой подматрицы, и сумму подматрицы, находящейся сверху от рассчитываемой подматрицы. Затем необходимо прибавить сумму подматрицы, которая находится слева сверху (правая нижняя точка этой матрицы выше на одну строку и левее на одну колонку) от рассчитываемой подматрицы, так как до этого мы отняли её дважды."}),e.jsx("p",{className:"mb-2",children:"Для решения этой задачи мы будем хранить префиксные суммы в матрице."}),e.jsxs("p",{className:"mb-2",children:["В конструкторе класса ",e.jsx("code",{children:"NumMatrix"})," сохраним количество строк и колонок в переменных ",e.jsx("code",{children:"rowsCount"})," и ",e.jsx("code",{children:"columnsCount"}),". Затем создадим матрицу ",e.jsx("code",{children:"this.sumMatrix"}),", заполненную нулями, в которой количество строк и колонок будет на 1 больше, чем в переданной матрице (в"," ",e.jsx("code",{children:"this.sumMatrix"})," будет храниться матрица префиксных сумм, но первые строка и колонка всегда будут заполнены нулями, чтобы избежать условий при расчётах)."]}),e.jsxs("p",{className:"mb-2",children:["Затем заполним матрицу ",e.jsx("code",{children:"this.sumMatrix"})," значениями префиксных сумм. Напишем цикл, в котором мы будем проходить по строкам. На каждой итерации создаем переменную ",e.jsx("code",{children:"prefix = 0"}),", хранящую префиксную сумму. Запускаем вложенный цикл, который проходит по колонкам. На каждой итерации вложенного цикла мы добавляем в ",e.jsx("code",{children:"prefix"})," значение из переданной в конструктор"," ",e.jsx("code",{children:"matrix"}),", затем находим значение по той же колонке, но на строку выше из ",e.jsx("code",{children:"this.sumMatrix"}),". Записываем сумму этих значений в"," ",e.jsx("code",{children:"this.sumMatrix"}),", не забывая добавить к индексам ",e.jsx("code",{children:"1"}),", так как мы не хотим заполнять первые строку и колонку."]}),e.jsxs("p",{className:"mb-2",children:["В методе ",e.jsx("code",{children:"sumRegion"})," добавим к каждой координате ",e.jsx("code",{children:"1"}),", потому что в нашей матрице префиксных сумм первые строка и колонка фиктивные. Затем найдём префиксную сумму правого нижнего элемента (",e.jsx("code",{children:"bottomRight"}),"), вычтем из него всё, что находится выше и левее (",e.jsx("code",{children:"above"})," и"," ",e.jsx("code",{children:"left"}),") искомого региона, и добавим пересечение вычитаемых частей (",e.jsx("code",{children:"topLeft"}),")."]})]})}function eD(){return e.jsxs("p",{children:["Создадим массив префиксных сумм ",e.jsx("code",{children:"prefix"})," и заполним его в конструкторе нашего класса. В методе ",e.jsx("code",{children:"sumRange"})," будем брать сумму всех чисел до индекса ",e.jsx("code",{children:"right"})," включительно: ",e.jsx("code",{children:"this.prefix[right]"})," и вычитать сумму всех чисел до индекса ",e.jsx("code",{children:"left"}),": ",e.jsx("code",{children:"this.prefix[left - 1]"}),", если ",e.jsx("code",{children:"left"})," больше нуля. Иначе вычитаем 0."]})}function tD(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{children:["Создадим переменную ",e.jsx("code",{children:"currentUniqueIndex"}),", в которой будет храниться индекс последнего уникального элемента. Затем в цикле сравним каждый элемент с последним уникальным элементом. Если элементы не равны, инкрементируем значение индекса и кладём текущий элемент по этому индексу."]}),e.jsx("p",{children:"После этого необходимо увеличить значение индекса на 1, чтобы получить количество уникальных элементов."})]})}function nD(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим два указателя ",e.jsx("code",{children:"l"})," и ",e.jsx("code",{children:"r"}),", которые будут указывать на первый элемент массива. Пройдём указателем ",e.jsx("code",{children:"r"})," по всему массиву. Создадим переменную ",e.jsx("code",{children:"count"})," со значением ",e.jsx("code",{children:"1"}),", в которой будем записывать, сколько раз число встречается в массиве. Для этого создадим вложенный цикл ",e.jsx("code",{children:"while"}),", который перемещает ",e.jsx("code",{children:"r"})," и увеличивает"," ",e.jsx("code",{children:"count"}),", если следующая цифра равна той, на которую указывает"," ",e.jsx("code",{children:"r"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Каждое число должно встречаться в массиве максимум два раза, поэтому запустим второй вложенный цикл от ",e.jsx("code",{children:"0"})," до ",e.jsx("code",{children:"Math.min(2, count)"}),". Таким образом, количество итераций всегда будет 1 или 2, в зависимости от того, сколько раз число, на который указывает ",e.jsx("code",{children:"r"}),", встречалось в массиве. На каждой итерации запишем в ",e.jsx("code",{children:"nums[l]"})," это число и переместим вправо указатель"," ",e.jsx("code",{children:"l"}),"."]}),e.jsxs("p",{className:"mb-2",children:["В конце каждой итерации внешнего цикла перемещаем указатель ",e.jsx("code",{children:"r"}),". После прохождения внешнего цикла указатель ",e.jsx("code",{children:"l"})," будет указывать на первый элемент, который мы не перезаписали (мы перезаписали все элементы до"," ",e.jsx("code",{children:"l"}),". Можно представить, что ",e.jsx("code",{children:"l"})," — длина перезаписанного массива). Это и будет результатом работы функции, возвращаем его значение."]})]})}function rD(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{children:["Создадим переменную ",e.jsx("code",{children:"index"}),", в которой будет храниться индекс, по которому мы будем вставлять элементы, которые не равны ",e.jsx("code",{children:"val"}),". Затем в цикле сравним каждый элемент с ",e.jsx("code",{children:"val"}),", и если условие верно, добавляем элемент по сохранённому индексу, после чего инкрементируем индекс."]}),e.jsxs("p",{children:["Так как мы каждый раз инкрементируем индекс после вставки элемента, его значение будет равно количеству элементов, которые не равны ",e.jsx("code",{children:"val"}),"."]})]})}function sD(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим фиктивный узел ",e.jsx("code",{children:"dummyNode"})," и поместим его в начало списка, чтобы не писать дополнительные условия для случая, когда необходимо удалить первый элемент в списке. Также создадим два указателя: ",e.jsx("code",{children:"left"}),", указывающий на фиктивный узел, и ",e.jsx("code",{children:"right"}),", указывающий на настоящее начало списка."]}),e.jsxs("p",{className:"mb-2",children:["Если наши указатели будут находиться на расстоянии ",e.jsx("code",{children:"n + 1"})," друг от друга, и правый будет указывать на ",e.jsx("code",{children:"null"}),", то это будет означать, что узел, который нам необходимо удалить, находится в ",e.jsx("code",{children:"left.next"}),". Поэтому в цикле ",e.jsx("code",{children:"while"})," передвинем указатель ",e.jsx("code",{children:"right"})," на"," ",e.jsx("code",{children:"n + 1"})," от указателя ",e.jsx("code",{children:"left"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Теперь, когда наши указатели находятся на нужном нам расстоянии друг от друга, в цикле ",e.jsx("code",{children:"while"})," будем передвигать их, пока ",e.jsx("code",{children:"right"})," не выйдет за пределы списка. После этого удалим ",e.jsx("code",{children:"left.next"})," и вернём из функции"," ",e.jsx("code",{children:"dummyNode.next"}),", чтобы фиктивный узел не попал в ответ."]})]})}function iD(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим два указателя: медленный ",e.jsx("code",{children:"slow"})," и быстрый ",e.jsx("code",{children:"fast"}),", которые будут указывать на первый и второй узлы в списке. Пройдём циклом"," ",e.jsx("code",{children:"while"})," по списку, передвигая указатели на каждой итерации. Быстрый будет двигаться в 2 раза быстрее, чем медленный. Таким образом, когда быстрый достигнет конца списка (будет указывать на последний элемент, либо выйдет за пределы списка), медленный будет находиться посередине."]}),e.jsxs("p",{className:"mb-2",children:["Для решения этой задачи нам необходимо развернуть вторую половину списка, чтобы потом объединить обе половины в правильном порядке. Создадим указатели"," ",e.jsx("code",{children:"second"}),", который будет указывать на начало второй половины, и"," ",e.jsx("code",{children:"prev"}),", указывающий на предыдущий узел. Также запишем в"," ",e.jsx("code",{children:"slow.next"})," ",e.jsx("code",{children:"null"}),", потому что это будет последний узел в нашем списке. Затем развернём вторую половину в цикле ",e.jsx("code",{children:"while"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Создадим указатель ",e.jsx("code",{children:"first"}),", который будет указывать на начало первой половины, и перенесём указатель ",e.jsx("code",{children:"second"})," на начало второй половины. Объединим оба списка в цикле ",e.jsx("code",{children:"while"}),"."]})]})}function aD(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Для того, чтобы развернуть связный список, нам необходимо переместить указатель"," ",e.jsx("code",{children:"next"})," каждого узла со следующего на предыдущий узел. Нам потребуется пройти по всему списку, сделаем это в цикле ",e.jsx("code",{children:"while"}),", предварительно создав для указателя ",e.jsx("code",{children:"prev"})," и ",e.jsx("code",{children:"cur"}),", которые на каждой итерации будут указывать на предыдущий и текущий узел. У первого узла нет предыдущего элемента, поэтому присвоим ",e.jsx("code",{children:"prev"})," значение"," ",e.jsx("code",{children:"null"}),"."]}),e.jsxs("p",{className:"mb-2",children:["На каждой итерации будем сохранять ссылку на следующий узел в переменную"," ",e.jsx("code",{children:"next"}),". Затем переместим указатель ",e.jsx("code",{children:"next"})," текущего узла на предыдущий узел. Осталось только переместить указатели ",e.jsx("code",{children:"prev"})," и"," ",e.jsx("code",{children:"cur"})," на текущий и следующий узел (на него больше не указывает указатель ",e.jsx("code",{children:"cur.next"}),", но мы заранее сохранили ссылку на него в переменной ",e.jsx("code",{children:"next"}),") соответственно."]}),e.jsxs("p",{className:"mb-2",children:["Цикл закончится, когда ",e.jsx("code",{children:"cur"})," будет указывать на ",e.jsx("code",{children:"null"}),". Это означает, что мы прошли весь список, и в указателе ",e.jsx("code",{children:"prev"})," теперь хранится последний узел переданного списка, который теперь является первым узлом возвращаемого списка, поэтому вернём его из функции."]})]})}function oD(){return e.jsxs("p",{className:"mb-2",children:["Создадим четыре указателя ",e.jsx("code",{children:"left"}),", ",e.jsx("code",{children:"top"}),", ",e.jsx("code",{children:"right"})," и"," ",e.jsx("code",{children:"bottom"}),", которые будут указывать на углы матрицы. Запустим цикл"," ",e.jsx("code",{children:"while"}),", который будет исполняться, пока указатели ",e.jsx("code",{children:"left"})," и"," ",e.jsx("code",{children:"right"})," не пересекутся. На каждой итерации будем запускать вложенный цикл"," ",e.jsx("code",{children:"for"}),", который будет проходить по всем ячейкам на текущем уровне (их количество равно ",e.jsx("code",{children:"right - left"}),"). Сохраним значение левой верхней ячейки в переменную ",e.jsx("code",{children:"topLeft"}),", после чего произведём перенос значений. После этого переместим наши указатели."]})}function lD(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Для решения этой задачи нам отлично подходит алгоритм поиска в ширину. Он реализуется с помощью структуры данных «очередь», которой нет в языке JavaScript. Напишем реализацию сами, но не будем заострять на ней внимание. Подробнее про очереди можно почитать"," ",e.jsx(it,{to:"/subjects/queues",className:"focus-visible:font-semibold focus-visible:outline-0 hover:font-semibold text-blue-500",children:"тут"}),". Создадим также массив ",e.jsx("code",{children:"DIRECTIONS"}),", который содержит в себе все направления, в которых мы можем двигаться из ячейки."]}),e.jsxs("p",{className:"mb-2",children:["Запишем размеры матрицы в ",e.jsx("code",{children:"rowsCount"})," и ",e.jsx("code",{children:"columnsCount"}),". Создадим очередь ",e.jsx("code",{children:"queue"}),", в которую будем помещать координаты гнилых апельсинов, переменные ",e.jsx("code",{children:"time"}),", которую будем возвращать из функции, и"," ",e.jsx("code",{children:"freshCount"}),", которая будет хранить количество свежих апельсинов."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём по всем ячейкам сетки. Если в ячейке находится свежий апельсин, увеличим"," ",e.jsx("code",{children:"freshCount"}),", а если в ней находится гнилой апельсин, то добавим его координаты в очередь."]}),e.jsxs("p",{className:"mb-2",children:["Запустим цикл ",e.jsx("code",{children:"while"})," до тех пор, пока в очереди есть гнилые апельсины, либо существуют свежие апельсины. На каждой итерации будем доставать координаты ячейки с гнилым апельсином из очереди. Пройдём по всем возможным направлениям для нашей ячейки, и, если координаты новой ячейки вышли за пределы сетки, либо по этим координатам в сетке не хранится свежий апельсин, то переходим к следующей итерации. В противном случае в ячейке находится свежий апельсин, который превращается в гнилой апельсин. Изменим значение в этой ячейке на ",e.jsx("code",{children:"2"})," и добавим её координаты в очередь, после чего уменьшим количество свежих апельсинов."]}),e.jsxs("p",{className:"mb-2",children:["В конце каждой итерации цикла ",e.jsx("code",{children:"while"})," увеличим ",e.jsx("code",{children:"time"})," на единицу."]}),e.jsxs("p",{className:"mb-2",children:["После завершения работы цикла ",e.jsx("code",{children:"while"}),", если в сетке остались свежие апельсины, до возратим ",e.jsx("code",{children:"-1"}),", иначе возратим ",e.jsx("code",{children:"time"}),"."]})]})}function cD(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Решим задачу с помощью рекурсии. У нас будет 2 базовых случая: если узел в обоих деревьях равен ",e.jsx("code",{children:"null"}),", то эти узлы равны, вернём ",e.jsx("code",{children:"true"}),"; если один из узлов равен ",e.jsx("code",{children:"null"}),", либо их значения не равны, вернём"," ",e.jsx("code",{children:"false"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Если ни один из базовых случаев не выполнился, это означает, что узлы равны. Необходимо сравнить их дочерние узлы. Возвращаем из функции"," ",e.jsx("code",{children:"isSameTree(p.left, q.left) && isSameTree(p.right, q.right)"}),"."]})]})}function dD(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Для решения этой задачи воспользуемся бинарным поиском. Создадим переменные"," ",e.jsx("code",{children:"rowsCount"})," и ",e.jsx("code",{children:"columnsCount"}),", в которых будем хранить количество строк и колонок переданной матрицы. Также создадим два указателя, которые будут указывать на нижнюю и верхнюю строки матрицы: ",e.jsx("code",{children:"top"})," со значением ",e.jsx("code",{children:"0"})," и ",e.jsx("code",{children:"bottom"})," со значением"," ",e.jsx("code",{children:"rowsCount - 1"}),", и переменную ",e.jsx("code",{children:"row"}),", в которой будем хранить индекс строки, по которой идёт поиск."]}),e.jsxs("p",{className:"mb-2",children:["Запустим цикл ",e.jsx("code",{children:"while"}),", который будет исполняться, пока указатели не пересекутся, либо пока не найдём строку, в которой нам нужно искать"," ",e.jsx("code",{children:"target"}),". Вычислим индекс строки ",e.jsx("code",{children:"row"}),", которая находится посередине между ",e.jsx("code",{children:"top"})," и ",e.jsx("code",{children:"bottom"}),". Если последний элемент в этой строке меньше, чем ",e.jsx("code",{children:"target"}),", то это означает, что во всех строках до этой строки включительно все числа меньше, чем ",e.jsx("code",{children:"target"}),", сдвинем указатель ",e.jsx("code",{children:"top"})," вниз на позицию ",e.jsx("code",{children:"row + 1"}),". Иначе, если первый элемент в этой строке больше, чем ",e.jsx("code",{children:"target"}),", то это означает, что во всех строках после этой строки включительно все числа больше, чем"," ",e.jsx("code",{children:"target"}),", сдвинем указатель ",e.jsx("code",{children:"bottom"})," вверх на позицию"," ",e.jsx("code",{children:"row - 1"}),". Если оба условия не верны, то это означает, что мы должны искать ",e.jsx("code",{children:"target"})," в этой строке, останавливаем цикл с помощью"," ",e.jsx("code",{children:"break"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Перед поиском числа по строке проверим, пересеклись ли указатели ",e.jsx("code",{children:"top"})," ","и ",e.jsx("code",{children:"bottom"}),". Если пересеклись, то в матрице нет ",e.jsx("code",{children:"target"}),", возвращаем ",e.jsx("code",{children:"false"}),"."]}),e.jsxs("p",{className:"mb-2",children:["После проведём аналогичный бинарный поиск по строке, индекс которой сохранён в"," ",e.jsx("code",{children:"row"}),"."]})]})}function uD(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Поиск в бинарном дереве поиска похож на бинарный поиск в массиве. Мы знаем, что все значения, которые меньше, чем значение текущего узла, находятся слева, а все значения, которые больше, чем значение текущего узла, находятся справа. Поэтому мы можем воспользоваться рекурсией и при каждом новом вызове функции отсекать половину дерева."}),e.jsxs("p",{className:"mb-2",children:["Если корня не существует, то будем возвращать ",e.jsx("code",{children:"null"})," — искомого значения не существует в дереве. Если значение корня больше, чем искомое значение — продолжаем поиск в левом поддереве, а если меньше, то в правом поддереве. Если значение не больше и не меньше, то это означает, что оно равно искомому значению, возвращаем текущий корень."]})]})}function hD(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим два указателя ",e.jsx("code",{children:"left"})," и ",e.jsx("code",{children:"right"}),", которые будут указывать на первое и последнее число в массиве. Пройдём бинарным поиском по массиву."]}),e.jsxs("p",{className:"mb-2",children:["На каждой итерации проверяем, нашли ли мы искомое значение"," ",e.jsx("code",{children:"target === nums[middle]"}),". Если нашли, то возвращаем из функции его индекс. Если ",e.jsx("code",{children:"nums[left] <= nums[middle]"}),", то слева находится отсортированная часть массива. Если ",e.jsx("code",{children:"target"})," больше, чем самое большое число в этой части ",e.jsx("code",{children:"nums[middle]"}),", или если ",e.jsx("code",{children:"target"})," меньше, чем самое маленькое число в этой части ",e.jsx("code",{children:"nums[left]"}),", то искать значение нам надо в правой части, перемещаем левый указатель вправо. Если оба условия не выполняются, это означет, что искомое число находится в левой части массива, и мы просто перемещаем правый указатель влево, как при обычном бинарном поиске."]}),e.jsxs("p",{className:"mb-2",children:["Если же левая часть не отсортирована, то это означает, что правая часть отсортирована. Если ",e.jsx("code",{children:"target"})," меньше, чем самое маленькое число в правой части ",e.jsx("code",{children:"nums[middle]"}),", или если ",e.jsx("code",{children:"target"})," больше, чем самое большое число в правой части ",e.jsx("code",{children:"nums[right]"}),", то искать значение нам надо в левой части, перемещаем правый указатель влево. Если оба условия не выполняются, это означет, что искомое число находится в правой части масса, и мы просто перемещаем левый указатель вправо, как при обычном бинарном поиске."]}),e.jsxs("p",{className:"mb-2",children:["Если цикл закончился, то это означает, что искомого числа нет в массиве, возвращаем ",e.jsx("code",{children:"-1"}),"."]})]})}function pD(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Для решения этой задачи нам отлично подходит алгоритм поиска в ширину. Он реализуется с помощью структуры данных «очередь», которой нет в языке JavaScript. Напишем реализацию сами, но не будем заострять на ней внимание. Подробнее про очереди можно почитать"," ",e.jsx(it,{to:"/subjects/queues",className:"focus-visible:font-semibold focus-visible:outline-0 hover:font-semibold text-blue-500",children:"тут"}),". Создадим также массив ",e.jsx("code",{children:"DIRECTIONS"}),", который содержит в себе все направления, в которых мы можем двигаться из ячейки."]}),e.jsxs("p",{className:"mb-2",children:["Запишем размер матрицы в ",e.jsx("code",{children:"n"})," (матрица квадратная, поэтому количество строк и столбцов одинаковое). Создадим очередь ",e.jsx("code",{children:"queue"}),", в которую будем помещать координаты ячеек и длину пути до них, и ",e.jsx("code",{children:"Set"})," ",e.jsx("code",{children:"visited"}),", который будет хранить координаты посещённых ячеек. Добавим в очередь и ",e.jsx("code",{children:"Set"})," первую ячейку."]}),e.jsxs("p",{className:"mb-2",children:["Запустим цикл ",e.jsx("code",{children:"while"})," до тех пор, пока в очереди есть ячейки. На каждой итерации будем доставать координаты ячейки и длину пути до неё из очереди. Если координаты вышли за пределы сетки, либо по этим координатам в сетке хранится единица, то переходим к следующей итерации. Если координаты указывают на последнюю ячейку, то вернём длину пути до этой ячейки. Если оба условия не выполнились, то пройдём по всем возможным направлениям для нашей ячейки, и, если новые координаты ещё не были посещены, то добавим их в очередь и пометим их посещёнными."]}),e.jsxs("p",{className:"mb-2",children:["Если цикл ",e.jsx("code",{children:"while"})," завершил свою работу, то это означает, что пути не существует, вернём ",e.jsx("code",{children:"-1"}),"."]})]})}function mD(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Для решения этой задачи будем использовать алгоритм быстрой сортировки со случайным опорным элементом. Функция быстрой сортировки должна принимать в себя индексы ",e.jsx("code",{children:"start"})," и ",e.jsx("code",{children:"end"}),", чтобы сортировать нужную часть массива, поэтому создадим функцию ",e.jsx("code",{children:"quickSort"})," с этими дополнительными аргументами. Из функции ",e.jsx("code",{children:"sortArray"})," будем возвращать"," ",e.jsx("code",{children:"quickSort(nums, 0, nums.length - 1)"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Добавим базовый случай: если длина массива меньше либо равна ",e.jsx("code",{children:"1"}),", тогда вернём ",e.jsx("code",{children:"nums"})," - нечего сортировать. Затем выберем случайный опорный элемент ",e.jsx("code",{children:"pivot"})," и создадим два указателя ",e.jsx("code",{children:"left"})," и"," ",e.jsx("code",{children:"right"})," с изначальными значениями ",e.jsx("code",{children:"start"})," и ",e.jsx("code",{children:"end"})," ","соответственно. Будем сдвигать их в цикле ",e.jsx("code",{children:"while"}),", пока они не пересекутся."]}),e.jsxs("p",{className:"mb-2",children:["На каждой итерации цикла во внутреннем цикле ",e.jsx("code",{children:"while"})," будем проверять, является ли элемент, на который указывает указать ",e.jsx("code",{children:"left"}),", меньшим, чем опорный элемент. Если является, то сдвигаем указатель ",e.jsx("code",{children:"left"}),". Аналогичным образом проверяем во внутреннем цикле ",e.jsx("code",{children:"while"}),", является ли элемент, на который указывает ",e.jsx("code",{children:"right"})," большим, чем опорный элемент."]}),e.jsxs("p",{className:"mb-2",children:["Когда оба внутренних цикла завершились, это означает, что ",e.jsx("code",{children:"nums[left]"})," ","больше опорного элемента, а ",e.jsx("code",{children:"nums[right]"})," — меньше. Нам необходимо сделать так, чтобы слева от опорного элемента были элементы, которые меньше, чем опорный, а справа — те, которые больше. Поэтому теперь, если ",e.jsx("code",{children:"left"})," до сих пор не пересёкся с ",e.jsx("code",{children:"right"}),", мы можем поменять местами элементы"," ",e.jsx("code",{children:"nums[left]"})," и ",e.jsx("code",{children:"nums[right]"})," и переместить указатели."]}),e.jsxs("p",{className:"mb-2",children:["Когда указатели ",e.jsx("code",{children:"left"})," и ",e.jsx("code",{children:"right"})," пересекутся, рекурсивно вызовим функцию сортировки ",e.jsx("code",{children:"quickSort"})," для правой и левой половины массива. Когда все вызовы функции закончат свою работу, мы получим отсортированный массив. Подробнее о быстрой сортировке можно почитать"," ",e.jsx(it,{to:"/subjects/quick-sort",className:"focus-visible:font-semibold focus-visible:outline-0 hover:font-semibold text-blue-500",children:"тут"}),"."]})]})}function fD(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Для решения этой задачи отлично подходит алгоритм блочной сортировки, но для такого решения понадобится два прохода по массиву. Мы рассмотрим решение, в котором мы обойдёмся одним проходом по массиву. Решение с помощью блочной сортировки можно посмотреть"," ",e.jsx(it,{to:"/subjects/bucket-sort",className:"focus-visible:font-semibold focus-visible:outline-0 hover:font-semibold text-blue-500",children:"тут"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Мы знаем, что в нашем массиве есть только 3 варианта значений: ",e.jsx("code",{children:"0"}),","," ",e.jsx("code",{children:"1"})," и ",e.jsx("code",{children:"2"}),". Это означает, что мы можем пройтись по массиву, и когда мы встречаем ",e.jsx("code",{children:"0"}),", то переставлять его в левую часть массива, а когда встречаем ",e.jsx("code",{children:"2"}),", то переставлять в правую часть массива. С"," ",e.jsx("code",{children:"1"})," можно ничего не делать, потому что они должны остаться между"," ",e.jsx("code",{children:"0"})," и ",e.jsx("code",{children:"2"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Создадим 3 указателя: ",e.jsx("code",{children:"left"}),", который будет указывать на первый элемент массива, ",e.jsx("code",{children:"right"}),", который будет указывать на последний элемент массива, и ",e.jsx("code",{children:"i"}),", указывающий на текущий элемент. Пройдём циклом по массиву, пока"," ",e.jsx("code",{children:"i"})," не пересечёт ",e.jsx("code",{children:"right"})," — это будет означать, что массив отсортирован. В конце каждой итерации будем перемещать указатель ",e.jsx("code",{children:"i"}),"."]}),e.jsxs("p",{className:"mb-2",children:["На каждой итерации проверяем, равен ли текущий элемент ",e.jsx("code",{children:"0"}),". Если так, то переставим местами элементы ",e.jsx("code",{children:"nums[left]"})," и ",e.jsx("code",{children:"nums[i]"}),", после чего передвинем указатель ",e.jsx("code",{children:"left"})," на одну позицию вправо. Это будет означать, что все элементы перед ",e.jsx("code",{children:"left"})," являются нулями."]}),e.jsxs("p",{className:"mb-2",children:["Если текущий элемент равен ",e.jsx("code",{children:"2"}),", то переставим местами элементы"," ",e.jsx("code",{children:"nums[i]"})," и ",e.jsx("code",{children:"nums[right]"}),", после чего передвинем указатель"," ",e.jsx("code",{children:"right"})," на одну позицию влево. Это будет означать, что все элементы после ",e.jsx("code",{children:"right"})," являются двойками. Однако в этом случае может получиться ситуация, когда мы переставили из ",e.jsx("code",{children:"right"})," в ",e.jsx("code",{children:"i"})," элемент, равный ",e.jsx("code",{children:"0"}),", поэтому мы не должны двигать указатель ",e.jsx("code",{children:"i"}),", чтобы не пропустить этот ",e.jsx("code",{children:"0"}),". Так как в конце каждой итерации мы увеличиваем ",e.jsx("code",{children:"i"}),", в нашем условии мы можем просто уменьшить"," ",e.jsx("code",{children:"i"}),", чтобы в конце итерации получилось так, что наш указатель никуда не переместился."]})]})}function gD(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим массив ",e.jsx("code",{children:"result"}),", который мы будем возвращать из функции, и четыре указателя ",e.jsx("code",{children:"left"}),", ",e.jsx("code",{children:"top"}),", ",e.jsx("code",{children:"right"})," и"," ",e.jsx("code",{children:"bottom"}),", которые будут указывать на углы матрицы. Запустим цикл"," ",e.jsx("code",{children:"while"}),", который будет исполняться, пока указатели ",e.jsx("code",{children:"left"})," и"," ",e.jsx("code",{children:"right"})," или ",e.jsx("code",{children:"top"})," и ",e.jsx("code",{children:"bottom"})," не пересекутся. На каждой итерации будем запускать четыре вложенных цикла ",e.jsx("code",{children:"for"}),"."]}),e.jsxs("p",{className:"mb-2",children:["В первом цикле ",e.jsx("code",{children:"for"})," мы будем проходить по верхней строке и добавлять все значения в ",e.jsx("code",{children:"result"}),", после чего передвинем указатель"," ",e.jsx("code",{children:"top"}),". Затем мы повторим то же самое с правой колонкой во втором цикле"," ",e.jsx("code",{children:"for"})," и перенесём указатель ",e.jsx("code",{children:"right"}),". Теперь надо проверить, пересекаются ли наши указатели, и если пересекаются, то из цикла"," ",e.jsx("code",{children:"while"})," необходимо выйти. Это возможно в том случае, если, например, наша матрица состоит из одной строки. Если указатели не пересекаются, запустим ещё два вложенных цикла ",e.jsx("code",{children:"for"})," для нижней строки и левой колонки. В этих циклах мы будем идти от конца к началу."]}),e.jsxs("p",{children:["Когда указатели пересекутся, вернём ",e.jsx("code",{children:"result"})," из функции."]})]})}function bD(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Для решения этой задачи будем использовать ",e.jsx("code",{children:"Map"}),", в которой ключами будут префиксные суммы, а значениями — то, сколько раз встречается префиксная сумма в переданном массиве ",e.jsx("code",{children:"nums"}),". Для базового случая сразу добавим пару ",e.jsx("code",{children:"[0, 1]"})," (префиксная сумма для первого элемента в массиве равна"," ",e.jsx("code",{children:"0"}),")."]}),e.jsxs("p",{className:"mb-2",children:["Создадим переменные ",e.jsx("code",{children:"prefixSum"})," (",e.jsx("code",{children:"Map"}),", о котором сказано выше), ",e.jsx("code",{children:"result"}),", который мы будем возвращать из функции, и"," ",e.jsx("code",{children:"currentSum"}),", в которой будет храниться префиксная сумма."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклом по ",e.jsx("code",{children:"nums"}),". На каждой итерации добавляем текущий элемент к префиксной сумме и вычисляем разницу между ней и ",e.jsx("code",{children:"k"}),". Если такая префиксная сумма ранее не встречалась в ",e.jsx("code",{children:"Map"}),", то добавляем"," ",e.jsx("code",{children:"0"}),". Иначе добавляем к результату значение этой префиксной суммы из"," ",e.jsx("code",{children:"Map"})," (значение равно количеству модмассивов, сумма которых равна"," ",e.jsx("code",{children:"k"}),". Попробуйте нарисовать решение, либо расставить логи, чтобы лучше понять работу функции). Затем инкрементируем значение этой префиксной суммы в"," ",e.jsx("code",{children:"Map"}),", либо задаём значение 1, если такого ключа не было."]})]})}function xD(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Эту задачу можно решить разными способами, но самый простой способ будет связан с использованием рекурсии."}),e.jsxs("p",{className:"mb-2",children:["Наша вспомогательная рекурсивная функция ",e.jsx("code",{children:"backtracking"})," будет принимать в себя индекс. Базовый случай, когда индекс больше либо равен длине массива"," ",e.jsx("code",{children:"nums"}),", будет добавлять в ",e.jsx("code",{children:"result"})," копию текущего подмножества."]}),e.jsxs("p",{className:"mb-2",children:["Для каждого числа у нас есть два пути развития: либо мы включаем его в подмножество, либо не включаем. После того, как мы добавили число в подмножество, мы рекурсивно вызываем ",e.jsx("code",{children:"backtracking"})," для следующего числа. Теперь, чтобы рассмотреть второй путь, нам нужно удалить текущее число из подмножества, которое мы добавили при рассмотрении первого пути, и повторить вызов для следующего числа."]}),e.jsxs("p",{className:"mb-2",children:["Таким образом, вызовем ",e.jsx("code",{children:"backtracking"})," для первого элемента, после чего мы можем вернуть ",e.jsx("code",{children:"result"}),"."]})]})}function ED(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Для каждого числа у нас есть два пути развития: либо мы включаем его в подмножество, либо не включаем. Однако, поскольку числа в множестве не уникальны, во втором пути нам надо будет не включать сразу несколько чисел (чтобы в итоге у нас не получились одинаковые подмножества). А так как эти одинаковые числа могут находиться в несмежных индексах, перед решением задачи будет удобно отсортировать"," ",e.jsx("code",{children:"nums"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Наша вспомогательная рекурсивная функция ",e.jsx("code",{children:"backtracking"})," будет принимать в себя индекс. Базовый случай, когда индекс больше либо равен длине массива"," ",e.jsx("code",{children:"nums"}),", будет добавлять в ",e.jsx("code",{children:"result"})," копию текущего подмножества."]}),e.jsxs("p",{className:"mb-2",children:["После того, как мы добавили число в подмножество, мы рекурсивно вызываем"," ",e.jsx("code",{children:"backtracking"})," для следующего числа. Теперь, чтобы рассмотреть второй путь, нам нужно удалить текущее число из подмножества, которое мы добавили при рассмотрении первого пути. Однако, прежде чем повторить вызов для следующего числа, нам необходимо пропустить все дубликаты текущего числа. Для этого в цикле"," ",e.jsx("code",{children:"while"})," будем передвигать указатель ",e.jsx("code",{children:"i"}),", если следующее число равно текущему числу и следующее число существует в массиве."]}),e.jsxs("p",{className:"mb-2",children:["Таким образом, вызовем ",e.jsx("code",{children:"backtracking"})," для первого элемента, после чего мы можем вернуть ",e.jsx("code",{children:"result"}),"."]})]})}function TD(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:[e.jsx("code",{children:"subRoot"})," является поддеревом ",e.jsx("code",{children:"root"}),", если какое-либо поддерево ",e.jsx("code",{children:"root"})," равно ",e.jsx("code",{children:"subRoot"}),". Напишем вспомогательную рекурсивную функцию ",e.jsx("code",{children:"isSameTree"}),", которая будет сравнивать два дерева и возвращать ",e.jsx("code",{children:"true"}),", если они равны, и ",e.jsx("code",{children:"false"}),", если они не равны. У нас будет 2 базовых случая: если узел в обоих деревьях равен"," ",e.jsx("code",{children:"null"}),", то эти узлы равны, вернём ",e.jsx("code",{children:"true"}),"; если один из узлов равен ",e.jsx("code",{children:"null"}),", либо их значения не равны, вернём ",e.jsx("code",{children:"false"}),". Если ни один из базовых случаев не выполнился, это означает, что узлы равны. Необходимо сравнить их дочерние узлы. Возвращаем из функции"," ",e.jsx("code",{children:"isSameTree(root.left, root2.left) && isSameTree(root.right, root2.right)"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Функция ",e.jsx("code",{children:"isSubtree"})," также будет рекурсивной. У неё также будет 2 базовых случая: если ",e.jsx("code",{children:"subRoot"})," равен ",e.jsx("code",{children:"null"}),", то он является поддеревом ",e.jsx("code",{children:"root"}),", вернём ",e.jsx("code",{children:"true"}),"; если ",e.jsx("code",{children:"root"})," ","равен ",e.jsx("code",{children:"null"}),", то это означает, что ",e.jsx("code",{children:"subRoot"})," (который точно не равен ",e.jsx("code",{children:"null"}),", раз первый случай не сработал) не является поддеревом, вернём ",e.jsx("code",{children:"false"}),". Если ни один из случаев не сработал, сравним"," ",e.jsx("code",{children:"root"})," и ",e.jsx("code",{children:"subRoot"}),", и если они равны, вернём"," ",e.jsx("code",{children:"true"}),". Иначе сравним ",e.jsx("code",{children:"subRoot"})," с левым и правым поддеревом"," ",e.jsx("code",{children:"root"}),". Если какое-либо из поддеревьев будет равно ",e.jsx("code",{children:"subRoot"}),", то вернём ",e.jsx("code",{children:"true"}),", иначе ",e.jsx("code",{children:"false"}),"."]})]})}function yD(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим переменные ",e.jsx("code",{children:"rowsCount"})," и ",e.jsx("code",{children:"columnsCount"}),", в которых будут записаны размеры матрицы. Также создадим вспомогательную рекурсивную функцию"," ",e.jsx("code",{children:"capture"}),", которая будет принимать в себя координаты ячейки"," ",e.jsx("code",{children:"row"})," и ",e.jsx("code",{children:"col"}),". Базовым случаем будет, когда ячейка находится за пределами матрицы, либо она не равна ",e.jsx("code",{children:"'O'"}),". Во всех этих случаях возвращаемся из функции. Иначе заменим значение ",e.jsx("code",{children:"'O'"})," ","на ",e.jsx("code",{children:"'T'"}),", и вызовем ",e.jsx("code",{children:"dfs"})," для всех соседей этой ячейки."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклом ",e.jsx("code",{children:"for"})," по всем ячейкам матрицы. На каждой итерации, если ячейка находится в первой строке, последней строке, первом столбце или последнем столбце и равна ",e.jsx("code",{children:"'O'"}),", вызываем для неё ",e.jsx("code",{children:"capture"}),". Таким образом, после прохождения цикла, все ",e.jsx("code",{children:"'O'"}),", которые не окружены со всех сторон ",e.jsx("code",{children:"'X'"}),", изменятся на"," ",e.jsx("code",{children:"'T'"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклом ",e.jsx("code",{children:"for"})," по всем ячейкам матрицы. На каждой итерации проверяем значение ячейки. Если ячейка равна ",e.jsx("code",{children:"'O'"}),", то заменяем её на ",e.jsx("code",{children:"'X'"}),", а если равна ",e.jsx("code",{children:"'T'"}),", то заменяем её на ",e.jsx("code",{children:"'O'"}),"."]})]})}function SD(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим массив ",e.jsx("code",{children:"result"}),", который мы будем возвращать из функции, и отсортируем ",e.jsx("code",{children:"nums"}),", чтобы избежать дубликатов в ",e.jsx("code",{children:"result"}),". Пройдём циклом по ",e.jsx("code",{children:"nums"}),"."]}),e.jsx("p",{className:"mb-2",children:"На каждой итерации проверяем, равен ли текущий элемент предыдущему. Если равен, то переходим к следующей итерации, чтобы избежать дубликатов."}),e.jsxs("p",{className:"mb-2",children:["Создадим указатели ",e.jsx("code",{children:"left"})," и ",e.jsx("code",{children:"right"}),", которые будут указывать на следующий и последний элемент соответственно. Запустим вложенный цикл"," ",e.jsx("code",{children:"while"}),", который будет исполняться, пока указатели не пересекутся. Рассчитаем сумму ",e.jsx("code",{children:"sum"})," текущего элемента и элементов, на которые указывают указатели. Если сумма больше нуля, то перемещаем правый указатель левее, а если меньше, то левый указатель правее."]}),e.jsxs("p",{className:"mb-2",children:["Если сумма равна нулю, то добавляем в ",e.jsx("code",{children:"result"})," эти три элемента, после чего сдвигаем указатель ",e.jsx("code",{children:"left"})," до тех пор, пока он не станет показывать на другое число, либо не пересечётся с ",e.jsx("code",{children:"right"}),"."]})]})}function ND(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Будем хранить в объекте ",e.jsx("code",{children:"store"})," по ключу ",e.jsx("code",{children:"key"})," массив пар"," ",e.jsx("code",{children:"[value, timestamp]"}),"."]}),e.jsxs("p",{className:"mb-2",children:["В методе ",e.jsx("code",{children:"set"}),", перед тем, как добавить значение, проверим, содержит ли"," ",e.jsx("code",{children:"store"})," переданный ключ. Если не содержит, то создадим в"," ",e.jsx("code",{children:"store"})," пустой массив по этому ключу. После чего просто добавляем по нашему ключу пару ",e.jsx("code",{children:"[value, timestamp]"}),"."]}),e.jsxs("p",{className:"mb-2",children:["В методе ",e.jsx("code",{children:"get"})," создадим переменную ",e.jsx("code",{children:"result = ''"}),", ссылку на массив по переданному ключу ",e.jsx("code",{children:"values"})," и указатели"," ",e.jsx("code",{children:"left"})," и ",e.jsx("code",{children:"right"}),", которые будут указывать на первое и последнее значение в массиве ",e.jsx("code",{children:"values"})," соответственно. Пройдём бинарным поиском по массиву."]}),e.jsxs("p",{className:"mb-2",children:["На каждой итерации проверяем, является ли ",e.jsx("code",{children:"timestamp"})," текущего элемента"," ",e.jsx("code",{children:"middle"})," меньше или равным переданному ",e.jsx("code",{children:"timestamp"}),". Если является, то это означает, что текущий элемент теоретически может подойти для ответа, так как он был добавлен в это время или ранее. Присваиваем его значение в"," ",e.jsx("code",{children:"result"})," и продолжаем поиск для правой части массива. Если не является, то это означает, что все элементы в правой части были добавлены позже, поэтому они не подходят для ответа, продолжаем поиск в левой части."]}),e.jsxs("p",{className:"mb-2",children:["После того, как указатели пересекутся, возвращаем из метода ",e.jsx("code",{children:"result"}),"."]})]})}function jD(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим ",e.jsx("code",{children:"Map"})," ",e.jsx("code",{children:"count"}),", в котором будем хранить частоту встречания в массиве каждого числа, массив ",e.jsx("code",{children:"frequencies"}),", в котором по каждому индексу ",e.jsx("code",{children:"i"})," будет храниться массив чисел, которые встречаются в"," ",e.jsx("code",{children:"nums"})," ",e.jsx("code",{children:"i"})," раз (числа могут встречаться в массиве максимум"," ",e.jsx("code",{children:"nums.length"})," раз, поэтому зададим ",e.jsx("code",{children:"frequencies"})," размер"," ",e.jsx("code",{children:"nums.length + 1"}),"), и ",e.jsx("code",{children:"result"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклом по массиву чисел и заполним ",e.jsx("code",{children:"count"}),". После этого пройдем циклом по ",e.jsx("code",{children:"count"})," и заполним массив ",e.jsx("code",{children:"frequencies"}),"."]}),e.jsxs("p",{className:"mb-2",children:["И наконец пройдём циклом по ",e.jsx("code",{children:"frequencies"}),". Так как чем чаще число встречается в массиве ",e.jsx("code",{children:"nums"}),", тем дальше оно будет находиться в"," ",e.jsx("code",{children:"frequencies"}),", мы будем идти от конца к началу. На каждой итерации проходим по всем числам в ",e.jsx("code",{children:"frequencies[i]"})," и добавляем их в"," ",e.jsx("code",{children:"result"}),". Как только ",e.jsx("code",{children:"result.length === k"}),", возвращаем его из функции."]})]})}function AD(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{children:["Создадим ",e.jsx("code",{children:"Map"}),", в котором будем хранить каждое число и индекс, по которому оно хранится в массиве ",e.jsx("code",{children:"nums"}),". Затем в цикле на каждой итерации необходимо вычислить разницу ",e.jsx("code",{children:"diff"})," между ",e.jsx("code",{children:"target"})," ","и текущим элементом."]}),e.jsxs("p",{children:["Если в ",e.jsx("code",{children:"prevMap"})," хранится индекс этой разницы, то возвращаем его и текущий индекс, иначе переходим к следующему элементу."]})]})}function _D(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим два указателя, которые будут указывать на начало и конец массива. Используя цикл ",e.jsx("code",{children:"while"}),", будем перемещать указатели, пока они не пересекутся. На каждой итерации проверяем сумму элементов, на которые указывают указатели. Если сумма больше, чем ",e.jsx("code",{children:"target"}),", тогда перемещаем"," ",e.jsx("code",{children:"r"})," влево, если меньше — перемещаем ",e.jsx("code",{children:"l"})," вправо. Причина, по которой мы можем уменьшить ",e.jsx("code",{children:"r"}),", чтобы сделать сумму меньше, заключается в том, что каждое число слева от ",e.jsx("code",{children:"numbers[r]"})," меньше, чем"," ",e.jsx("code",{children:"numbers[r]"}),", так как массив отсортирован. Аналогично каждое число справа от ",e.jsx("code",{children:"numbers[l]"})," больше, чем ",e.jsx("code",{children:"numbers[l]"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Если сумма равна ",e.jsx("code",{children:"target"}),", то возвращаем индексы указателей, увеличенные на 1."]})]})}function vD(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Сразу сравним длины строк, ведь если они не равны, то строки точно не являются анаграммой."}),e.jsxs("p",{className:"mb-2",children:["Создадим по объекту для строк ",e.jsx("code",{children:"s"})," и ",e.jsx("code",{children:"t"}),", в которых ключами будут буквы, а значениями — количество этих букв в строке. Заполним их в цикле (у строк одинаковая длина, поэтому мы можем использовать один цикл сразу для двух строк). На каждой итерации инкрементируем значение (если буква раньше не встречалась, задаём значение ",e.jsx("code",{children:"1"}),")."]}),e.jsxs("p",{className:"mb-2",children:["Затем пройдем циклом по ключам одного из объектов и сравним значения с другим объектом. Если по какой-либо букве значения не совпали, возвращаем"," ",e.jsx("code",{children:"false"}),". Если цикл завершился, то строки являются анаграммой, возвращаем ",e.jsx("code",{children:"true"}),"."]})]})}function RD(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Создадим вспомогательную рекурсивную функцию ",e.jsx("code",{children:"valid"})," для обхода дерева, которая будет принимать в себя узел ",e.jsx("code",{children:"node"}),", минимальное значение"," ",e.jsx("code",{children:"left"})," и максимальное значение ",e.jsx("code",{children:"right"}),", между которых должно находиться значение узла."]}),e.jsxs("p",{className:"mb-2",children:["Базовым случаем будет, когда ",e.jsx("code",{children:"node === null"}),". В таком случае будем возвращать ",e.jsx("code",{children:"true"}),". Если значение узла не находится между границами"," ",e.jsx("code",{children:"left"})," и ",e.jsx("code",{children:"right"}),", то будем возвращать ",e.jsx("code",{children:"false"}),". Если оба условия не выполнились, то рекурсивно проверим левое и правое поддерево. Если все узлы в дереве будут находиться в переданных границах, вернём"," ",e.jsx("code",{children:"true"}),", иначе ",e.jsx("code",{children:"false"}),"."]})]})}function wD(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"По условиям задачи мы должны учитывать только символы чисел и латинских букв. Мы могли бы с помощью регулярного выражения удалить все остальные символы из строки и сохранить получившуюся строку, используя её для проверки, но в данном решении будет описан способ без использования дополнительной памяти."}),e.jsxs("p",{className:"mb-2",children:["Создадим вспомогательную функцию ",e.jsx("code",{children:"isAlphaNum"}),", которая будет проверять, является ли символ числом или латинской буквой. Также создадим два указателя, которые будут указывать на начало и конец строки."]}),e.jsxs("p",{className:"mb-2",children:["Используя цикл ",e.jsx("code",{children:"while"}),", будем перемещать указатели, пока они не пересекутся. На каждой итерации с помощью вложенного ",e.jsx("code",{children:"while"})," и функции"," ",e.jsx("code",{children:"isAlphaNum"})," будем проверять, указывает ли указатель на нужный нам символ. Если нет, то перемещаем его."," ",e.jsxs("i",{children:["Вложенные циклы можно заменить на ",e.jsx("code",{children:"if"})," в связке с директивой"," ",e.jsx("code",{children:"continue"})," для упрощения кода"]}),". Если оба указателя указывают на нужные символы (вложенные циклы закончили работу), проверяем, являются ли эти символы, приведённые к нижнему регистру, одинаковыми. Если нет, то возвращаем ",e.jsx("code",{children:"false"})," — строка не является палиндромом. Иначе перемещаем оба указателя."]}),e.jsxs("p",{className:"mb-2",children:["Когда указатели пересекутся, это будет означать, что строка является палиндромом, возвращаем ",e.jsx("code",{children:"true"}),"."]})]})}function ID(){return e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Для решения этой задачи будем использовать стек, так как каждую закрывающую скобку необходимо сравнивать с последней открывающей скобкой. Поэтому будем хранить в стеке открывающие скобки."}),e.jsxs("p",{className:"mb-2",children:["Создадим объект ",e.jsx("code",{children:"CloseToOpenBracket"}),", в котором ключами будут закрывающие скобки, значениями — открывающие. Затем, в функции"," ",e.jsx("code",{children:"isValid"})," проверим длину переданной строки. Если в строке нечётное количество символов, то такая строка точно невалидна, вернём ",e.jsx("code",{children:"false"}),". Создадим стек, в котором будем хранить открывающие скобки."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклом по переданной строке. На каждой итерации проверяем, является ли скобка закрывающей. Если является, то смотрим на размер стека и последнюю открывающую скобку в нём. Если стек не пустой и последняя открывающая скобка в нём подходит для текущей закрывающей скобки, удаляем открывающую скобку из стека, иначе возвращаем ",e.jsx("code",{children:"false"}),", так как если стек пустой или скобки не подходят, то такая строка не является валидной. Если текущая скобка является открывающей, добавляем её в стек."]}),e.jsxs("p",{className:"mb-2",children:["Строка является валидной, если после прохождения цикла стек пустой. Возвращем"," ",e.jsx("code",{children:"!stack.length"}),"."]})]})}function CD(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Для решения этой задачи нам надо проверить, есть ли дубликаты в каждой строке, столбце и квадрате 3×3. Проверить наличие дубликатов проще всего с помощью"," ",e.jsx("code",{children:"Set"}),", поэтому создадим массивы ",e.jsx("code",{children:"rows"}),", ",e.jsx("code",{children:"columns"})," ","и ",e.jsx("code",{children:"squares"})," с длиной ",e.jsx("code",{children:"board.length"})," и заполним их"," ",e.jsx("code",{children:"new Set()"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклом по строкам. На каждой итерации запускаем вложенный цикл по колонкам. Если в текущей ячейке ",e.jsx("code",{children:"'.'"}),", то мы можем переходить к следующей итерации."]}),e.jsxs("p",{className:"mb-2",children:["С индексами строк и колонок всё просто, но индекс квадрата необходимо рассчитать. После чего проверяем, есть ли в текущей строке, колонке или квадрате текущее число. Если есть, то возвращаем ",e.jsx("code",{children:"false"}),". Иначе добавляем это число в"," ",e.jsx("code",{children:"rows"}),", ",e.jsx("code",{children:"columns"})," и ",e.jsx("code",{children:"squares"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Если цикл по строкам дошел до конца, это означает, что дубликатов нигде нет и судоку является валидным, возвращаем ",e.jsx("code",{children:"true"}),"."]})]})}function OD(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:"mb-2",children:["Для решения многих проблем с матрицами удобно вынести в переменные размеры матрицы. Создадим для этого переменные ",e.jsx("code",{children:"rowsCount"})," и"," ",e.jsx("code",{children:"columnsCount"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Напишем вспомогательную рекурсивную функцию ",e.jsx("code",{children:"backtrack"}),", которая будет принимать в себя строку ",e.jsx("code",{children:"row"}),", столбец ",e.jsx("code",{children:"col"})," и индекс"," ",e.jsx("code",{children:"i"}),", который будет указывать на то, какую букву в ",e.jsx("code",{children:"word"})," мы сейчас ищем."]}),e.jsxs("p",{className:"mb-2",children:["Первым базовым случаем будет, если ",e.jsx("code",{children:"i"})," равно длине ",e.jsx("code",{children:"word"}),". Это означает, что мы прошли по всем индексам в ",e.jsx("code",{children:"word"})," и нашли это слово в матрице, вернём ",e.jsx("code",{children:"true"}),". Если мы вышли за пределы строк или столбцов, либо текущая буква в ",e.jsx("code",{children:"word"})," не равна текущей букве в матрице, то это будет вторым базовым случаем, возвращаем ",e.jsx("code",{children:"false"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Если ни один из базовых случаев не сработал, это означает, что текущая буква в матрице сходится с буквой в ",e.jsx("code",{children:"word"}),", теперь мы можем искать следующую букву в соседних ячейках. Но перед этим затрём текущую букву, записав в матрицу вместо неё ",e.jsx("code",{children:"'.'"}),", потому что мы не можем использовать эту букву второй раз. Вызовем функцию ",e.jsx("code",{children:"backtrack"})," для каждой соседней клетки, записав результат вызова в ",e.jsx("code",{children:"result"}),", после чего запишем удалённую букву обратно в матрицу и вернём ",e.jsx("code",{children:"result"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Пройдём циклами ",e.jsx("code",{children:"for"})," по матрице. На каждой итерации будем вызывать функцию ",e.jsx("code",{children:"backtrack"})," с текущей строкой, столбцом и нулевым индексом. Если эта функция вернёт ",e.jsx("code",{children:"true"}),", то это означает, что мы нашли искомое слово в матрице, вернём ",e.jsx("code",{children:"true"}),"."]}),e.jsxs("p",{className:"mb-2",children:["Если цикл завершил свою работу, то это означает, что в матрице нет слова"," ",e.jsx("code",{children:"word"}),", вернём ",e.jsx("code",{children:"false"}),"."]})]})}function US({taskId:t}){switch(t){case"remove-element":return e.jsx(rD,{});case"remove-duplicates-from-sorted-array":return e.jsx(tD,{});case"concatenation-of-array":return e.jsx(ML,{});case"contains-duplicate":return e.jsx(UL,{});case"two-sum":return e.jsx(AD,{});case"lru-cache":return e.jsx(R8,{});case"design-hashset":return e.jsx(XL,{});case"design-hashmap":return e.jsx(qL,{});case"range-sum-query-immutable":return e.jsx(eD,{});case"range-sum-query-2d-immutable":return e.jsx(J8,{});case"find-pivot-index":return e.jsx(n8,{});case"product-of-array-except-self":return e.jsx(Q8,{});case"subarray-sum-equals-k":return e.jsx(bD,{});case"valid-anagram":return e.jsx(vD,{});case"group-anagrams":return e.jsx(a8,{});case"top-k-frequent-elements":return e.jsx(jD,{});case"valid-sudoku":return e.jsx(CD,{});case"longest-consecutive-sequence":return e.jsx(N8,{});case"baseball-game":return e.jsx(SL,{});case"valid-parentheses":return e.jsx(ID,{});case"min-stack":return e.jsx(P8,{});case"evaluate-reverse-polish-notation":return e.jsx(JL,{});case"daily-temperatures":return e.jsx(WL,{});case"car-fleet":return e.jsx(CL,{});case"valid-palindrome":return e.jsx(wD,{});case"two-sum-ii-input-array-is-sorted":return e.jsx(_D,{});case"remove-duplicates-from-sorted-array-ii":return e.jsx(nD,{});case"3sum":return e.jsx(SD,{});case"container-with-most-water":return e.jsx(PL,{});case"contains-duplicate-ii":return e.jsx(BL,{});case"number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold":return e.jsx(G8,{});case"minimum-size-subarray-sum":return e.jsx(F8,{});case"longest-substring-without-repeating-characters":return e.jsx(_8,{});case"best-time-to-buy-and-sell-stock":return e.jsx(NL,{});case"longest-repeating-character-replacement":return e.jsx(A8,{});case"permutation-in-string":return e.jsx(Y8,{});case"binary-search":return e.jsx(jL,{});case"search-a-2d-matrix":return e.jsx(dD,{});case"guess-number-higher-or-lower":return e.jsx(o8,{});case"first-bad-version":return e.jsx(s8,{});case"koko-eating-bananas":return e.jsx(x8,{});case"find-minimum-in-rotated-sorted-array":return e.jsx(t8,{});case"search-in-rotated-sorted-array":return e.jsx(hD,{});case"time-based-key-value-store":return e.jsx(ND,{});case"reverse-linked-list":return e.jsx(aD,{});case"merge-two-sorted-lists":return e.jsx(D8,{});case"design-linked-list":return e.jsx(ZL,{});case"design-browser-history":return e.jsx(YL,{});case"implement-stack-using-queues":return e.jsx(u8,{});case"middle-of-the-linked-list":return e.jsx(M8,{});case"maximum-twin-sum-of-a-linked-list":return e.jsx(k8,{});case"linked-list-cycle":return e.jsx(y8,{});case"linked-list-cycle-ii":return e.jsx(S8,{});case"find-the-duplicate-number":return e.jsx(r8,{});case"reorder-list":return e.jsx(iD,{});case"remove-nth-node-from-end-of-list":return e.jsx(sD,{});case"copy-list-with-random-pointer":return e.jsx(HL,{});case"add-two-numbers":return e.jsx(TL,{});case"fibonacci-number":return e.jsx(e8,{});case"sort-an-array":return e.jsx(mD,{});case"sort-colors":return e.jsx(fD,{});case"search-in-a-binary-search-tree":return e.jsx(uD,{});case"insert-into-a-binary-search-tree":return e.jsx(m8,{});case"delete-node-in-a-bst":return e.jsx(VL,{});case"binary-tree-inorder-traversal":return e.jsx(_L,{});case"kth-smallest-element-in-a-bst":return e.jsx(E8,{});case"construct-binary-tree-from-preorder-and-inorder-traversal":return e.jsx(FL,{});case"binary-search-tree-iterator":return e.jsx(AL,{});case"binary-tree-preorder-traversal":return e.jsx(wL,{});case"binary-tree-postorder-traversal":return e.jsx(RL,{});case"binary-tree-level-order-traversal":return e.jsx(vL,{});case"binary-tree-right-side-view":return e.jsx(IL,{});case"invert-binary-tree":return e.jsx(f8,{});case"maximum-depth-of-binary-tree":return e.jsx(I8,{});case"diameter-of-binary-tree":return e.jsx(QL,{});case"balanced-binary-tree":return e.jsx(yL,{});case"same-tree":return e.jsx(cD,{});case"subtree-of-another-tree":return e.jsx(TD,{});case"lowest-common-ancestor-of-a-binary-search-tree":return e.jsx(v8,{});case"count-good-nodes-in-binary-tree":return e.jsx(GL,{});case"validate-binary-search-tree":return e.jsx(RD,{});case"path-sum":return e.jsx(K8,{});case"generate-parentheses":return e.jsx(i8,{});case"subsets":return e.jsx(xD,{});case"subsets-ii":return e.jsx(ED,{});case"combinations":return e.jsx(kL,{});case"combination-sum":return e.jsx(LL,{});case"letter-combinations-of-a-phone-number":return e.jsx(T8,{});case"permutations":return e.jsx(q8,{});case"permutations-ii":return e.jsx(X8,{});case"combination-sum-ii":return e.jsx(DL,{});case"word-search":return e.jsx(OD,{});case"palindrome-partitioning":return e.jsx(z8,{});case"number-of-islands":return e.jsx(H8,{});case"max-area-of-island":return e.jsx(w8,{});case"pacific-atlantic-water-flow":return e.jsx($8,{});case"surrounded-regions":return e.jsx(yD,{});case"shortest-path-in-binary-matrix":return e.jsx(pD,{});case"rotting-oranges":return e.jsx(lD,{});case"clone-graph":return e.jsx(OL,{});case"course-schedule":return e.jsx($L,{});case"course-schedule-ii":return e.jsx(zL,{});case"house-robber":return e.jsx(c8,{});case"house-robber-ii":return e.jsx(d8,{});case"longest-palindromic-substring":return e.jsx(j8,{});case"palindromic-substrings":return e.jsx(W8,{});case"insert-interval":return e.jsx(p8,{});case"merge-intervals":return e.jsx(L8,{});case"non-overlapping-intervals":return e.jsx(U8,{});case"implement-trie-prefix-tree":return e.jsx(h8,{});case"design-add-and-search-words-data-structure":return e.jsx(KL,{});case"maximum-subarray":return e.jsx(C8,{});case"maximum-sum-circular-subarray":return e.jsx(O8,{});case"jump-game":return e.jsx(g8,{});case"jump-game-ii":return e.jsx(b8,{});case"partition-labels":return e.jsx(V8,{});case"number-of-1-bits":return e.jsx(B8,{});case"rotate-image":return e.jsx(oD,{});case"spiral-matrix":return e.jsx(gD,{});case"happy-number":return e.jsx(l8,{});case"powx-n":return e.jsx(Z8,{});default:return null}}function kD(){const t=yu("/");return e.jsxs(e.Fragment,{children:[e.jsx("header",{className:"bg-gray-700 text-gray-50",children:e.jsx("div",{className:"container mx-auto p-2",children:t?e.jsx("h1",{children:"Добро пожаловать в мой скромный справочник по алгоритмам"}):e.jsx(S_,{})})}),e.jsx("main",{className:"container mx-auto px-2 py-4",children:e.jsx(OA,{})})]})}const LD="Такой темы нет!";function DD(){const{subjectId:t}=k1(),n=Py(t),r=n?Bl[t]:LD,s=ba.filter(({subject:i})=>i===t);return e.jsxs("article",{children:[e.jsx("h1",{className:"font-bold mb-2",children:r}),n?e.jsxs(e.Fragment,{children:[e.jsx(EL,{subjectId:t}),s.length>0&&e.jsxs(e.Fragment,{children:[e.jsx("hr",{className:"mt-8 h-px border-0 bg-gray-300"}),e.jsx("p",{className:"mt-2",children:"Кликните по заголовку, чтобы перейти к задаче. Попробуйте решить задачу самостоятельно, затем можете сравнить с решением."}),e.jsx("h2",{className:"mb-2",children:"Задачи по теме:"}),e.jsx("ul",{children:s.map(({code:i,difficulty:a,id:o,name:l,link:c})=>e.jsxs("li",{children:[e.jsxs("h3",{className:"font-bold",children:[e.jsx("a",{className:"focus-visible:outline-0 focus-visible:text-blue-500 hover:text-blue-500 mr-2",href:c,rel:"noreferrer",target:"_blank",children:l}),e.jsx(fl,{type:a})]}),e.jsxs("details",{className:"px-2.5",children:[e.jsx("summary",{children:"Решение"}),e.jsx(US,{taskId:o}),e.jsx(k,{value:i})]})]},o))})]})]}):e.jsx(it,{to:"/subjects",className:"focus-visible:font-semibold focus-visible:outline-0 hover:font-semibold text-blue-500",children:"Перейти к списку тем"})]})}function MD(){return e.jsx("div",{children:e.jsx("ul",{className:"list-disc",children:Object.entries(Bl).map(([t,n])=>e.jsx("li",{children:e.jsx(it,{to:t,className:"focus-visible:font-semibold focus-visible:outline-0 hover:font-semibold text-blue-500",children:n})},t))})})}const FD="Такой задачи нет!";function PD(){const{taskId:t}=k1(),n=ba.find(({id:r})=>r===t);return e.jsxs("article",{children:[e.jsx("h1",{className:"font-bold",children:n!=null&&n.name?e.jsxs(e.Fragment,{children:[e.jsx("a",{className:"focus-visible:text-blue-500 focus-visible:outline-0 hover:text-blue-500 mr-2",href:n.link,rel:"noreferrer",target:"_blank",children:n.name}),e.jsx(fl,{type:n.difficulty})]}):FD}),n&&t?e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"mb-2",children:"Кликните по заголовку, чтобы перейти к задаче. Попробуйте решить задачу самостоятельно, затем можете сравнить с решением."}),e.jsxs("details",{children:[e.jsx("summary",{children:"Решение"}),e.jsx(US,{taskId:t}),e.jsx(k,{value:n.code})]})]}):e.jsx(it,{to:"/tasks",className:"focus-visible:font-semibold focus-visible:outline-0 hover:font-semibold text-blue-500",children:"Перейти к списку задач"})]})}const Nd="difficulty",l0="tag";function UD(){const[t,n]=M.useState(ba),[r,s]=M.useState(""),[i,a]=M.useState("");M.useEffect(()=>{n(ba.filter(({difficulty:c,tags:d})=>(!r||c===r)&&(!i||d.some(h=>h===i))))},[r,i]);const o=({target:{id:c,value:d}})=>{c===Nd?s(d):a(d)},l=()=>{s(""),a("")};return e.jsxs(e.Fragment,{children:[e.jsx("form",{onReset:l,children:e.jsxs("fieldset",{className:"border border-gray-700 border-solid mb-2 p-2 pt-0 rounded w-max",children:[e.jsx("legend",{className:"px-1",children:"Фильтры"}),e.jsxs("div",{className:"flex items-center gap-x-2",children:[e.jsx("label",{htmlFor:Nd,children:"Сложность:"}),e.jsxs("select",{className:"flex-grow",id:Nd,onChange:o,value:r,children:[e.jsx("option",{value:"",children:"Любая"}),e.jsx("option",{value:"easy",children:"Easy"}),e.jsx("option",{value:"medium",children:"Medium"}),e.jsx("option",{value:"hard",children:"Hard"})]})]}),e.jsxs("div",{className:"flex items-center gap-x-2",children:[e.jsx("label",{htmlFor:l0,children:"Тема:"}),e.jsxs("select",{className:"flex-grow",id:l0,onChange:o,value:i,children:[e.jsx("option",{value:"",children:"Любая"}),Object.values(p).map(c=>e.jsx("option",{value:c,children:c},c))]})]}),e.jsx("input",{className:"bg-white cursor-pointer focus-visible:outline focus-visible:outline-2 focus-visible:outline-black hover:outline hover:outline-2 hover:outline-black rounded text-sm w-full",type:"reset",value:"Очистить"})]})}),e.jsx("ol",{className:"list-decimal",children:t.map(({difficulty:c,id:d,name:h,tags:x})=>e.jsxs("li",{children:[e.jsxs("div",{children:[e.jsx(it,{to:d,className:"focus-visible:font-semibold focus-visible:outline-0 hover:font-semibold mr-2 text-blue-500",children:h}),e.jsx(fl,{type:c})]}),x.map(g=>e.jsx(fl,{type:g},g))]},d))})]})}const BD=UA([{path:"/",element:e.jsx(kD,{}),errorElement:e.jsx(t_,{}),children:[{index:!0,element:e.jsx(n_,{})},{path:"subjects",element:e.jsx(MD,{})},{path:"subjects/:subjectId",element:e.jsx(DD,{})},{path:"tasks",element:e.jsx(UD,{})},{path:"tasks/:taskId",element:e.jsx(PD,{})}]}],{basename:"/my-textbook/"});jd.createRoot(document.getElementById("root")).render(e.jsx(Fu.StrictMode,{children:e.jsx(KA,{router:BD})}));
